
Wiper_MultiTasking.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000dcdc  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000700  0800deb0  0800deb0  0000eeb0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800e5b0  0800e5b0  000101dc  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  0800e5b0  0800e5b0  0000f5b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800e5b8  0800e5b8  000101dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800e5b8  0800e5b8  0000f5b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800e5bc  0800e5bc  0000f5bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001dc  20000000  0800e5c0  00010000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00004e34  200001dc  0800e79c  000101dc  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20005010  0800e79c  00011010  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000101dc  2**0
                  CONTENTS, READONLY
 12 .debug_info   00025677  00000000  00000000  0001020c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000581c  00000000  00000000  00035883  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001e08  00000000  00000000  0003b0a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00001746  00000000  00000000  0003cea8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000299f9  00000000  00000000  0003e5ee  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000279ab  00000000  00000000  00067fe7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000efd63  00000000  00000000  0008f992  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0017f6f5  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00008fc0  00000000  00000000  0017f738  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000061  00000000  00000000  001886f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	200001dc 	.word	0x200001dc
 80001ec:	00000000 	.word	0x00000000
 80001f0:	0800de94 	.word	0x0800de94

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	200001e0 	.word	0x200001e0
 800020c:	0800de94 	.word	0x0800de94

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <strlen>:
 80002b0:	4603      	mov	r3, r0
 80002b2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80002b6:	2a00      	cmp	r2, #0
 80002b8:	d1fb      	bne.n	80002b2 <strlen+0x2>
 80002ba:	1a18      	subs	r0, r3, r0
 80002bc:	3801      	subs	r0, #1
 80002be:	4770      	bx	lr

080002c0 <__aeabi_drsub>:
 80002c0:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80002c4:	e002      	b.n	80002cc <__adddf3>
 80002c6:	bf00      	nop

080002c8 <__aeabi_dsub>:
 80002c8:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080002cc <__adddf3>:
 80002cc:	b530      	push	{r4, r5, lr}
 80002ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002d6:	ea94 0f05 	teq	r4, r5
 80002da:	bf08      	it	eq
 80002dc:	ea90 0f02 	teqeq	r0, r2
 80002e0:	bf1f      	itttt	ne
 80002e2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002e6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002f2:	f000 80e2 	beq.w	80004ba <__adddf3+0x1ee>
 80002f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002fe:	bfb8      	it	lt
 8000300:	426d      	neglt	r5, r5
 8000302:	dd0c      	ble.n	800031e <__adddf3+0x52>
 8000304:	442c      	add	r4, r5
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	ea82 0000 	eor.w	r0, r2, r0
 8000312:	ea83 0101 	eor.w	r1, r3, r1
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	2d36      	cmp	r5, #54	@ 0x36
 8000320:	bf88      	it	hi
 8000322:	bd30      	pophi	{r4, r5, pc}
 8000324:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000328:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800032c:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000330:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000334:	d002      	beq.n	800033c <__adddf3+0x70>
 8000336:	4240      	negs	r0, r0
 8000338:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800033c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000340:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000344:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x84>
 800034a:	4252      	negs	r2, r2
 800034c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000350:	ea94 0f05 	teq	r4, r5
 8000354:	f000 80a7 	beq.w	80004a6 <__adddf3+0x1da>
 8000358:	f1a4 0401 	sub.w	r4, r4, #1
 800035c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000360:	db0d      	blt.n	800037e <__adddf3+0xb2>
 8000362:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000366:	fa22 f205 	lsr.w	r2, r2, r5
 800036a:	1880      	adds	r0, r0, r2
 800036c:	f141 0100 	adc.w	r1, r1, #0
 8000370:	fa03 f20e 	lsl.w	r2, r3, lr
 8000374:	1880      	adds	r0, r0, r2
 8000376:	fa43 f305 	asr.w	r3, r3, r5
 800037a:	4159      	adcs	r1, r3
 800037c:	e00e      	b.n	800039c <__adddf3+0xd0>
 800037e:	f1a5 0520 	sub.w	r5, r5, #32
 8000382:	f10e 0e20 	add.w	lr, lr, #32
 8000386:	2a01      	cmp	r2, #1
 8000388:	fa03 fc0e 	lsl.w	ip, r3, lr
 800038c:	bf28      	it	cs
 800038e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000392:	fa43 f305 	asr.w	r3, r3, r5
 8000396:	18c0      	adds	r0, r0, r3
 8000398:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800039c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80003a0:	d507      	bpl.n	80003b2 <__adddf3+0xe6>
 80003a2:	f04f 0e00 	mov.w	lr, #0
 80003a6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003aa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003ae:	eb6e 0101 	sbc.w	r1, lr, r1
 80003b2:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80003b6:	d31b      	bcc.n	80003f0 <__adddf3+0x124>
 80003b8:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 80003bc:	d30c      	bcc.n	80003d8 <__adddf3+0x10c>
 80003be:	0849      	lsrs	r1, r1, #1
 80003c0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c8:	f104 0401 	add.w	r4, r4, #1
 80003cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003d0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003d4:	f080 809a 	bcs.w	800050c <__adddf3+0x240>
 80003d8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003dc:	bf08      	it	eq
 80003de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003e2:	f150 0000 	adcs.w	r0, r0, #0
 80003e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ea:	ea41 0105 	orr.w	r1, r1, r5
 80003ee:	bd30      	pop	{r4, r5, pc}
 80003f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003f4:	4140      	adcs	r0, r0
 80003f6:	eb41 0101 	adc.w	r1, r1, r1
 80003fa:	3c01      	subs	r4, #1
 80003fc:	bf28      	it	cs
 80003fe:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 8000402:	d2e9      	bcs.n	80003d8 <__adddf3+0x10c>
 8000404:	f091 0f00 	teq	r1, #0
 8000408:	bf04      	itt	eq
 800040a:	4601      	moveq	r1, r0
 800040c:	2000      	moveq	r0, #0
 800040e:	fab1 f381 	clz	r3, r1
 8000412:	bf08      	it	eq
 8000414:	3320      	addeq	r3, #32
 8000416:	f1a3 030b 	sub.w	r3, r3, #11
 800041a:	f1b3 0220 	subs.w	r2, r3, #32
 800041e:	da0c      	bge.n	800043a <__adddf3+0x16e>
 8000420:	320c      	adds	r2, #12
 8000422:	dd08      	ble.n	8000436 <__adddf3+0x16a>
 8000424:	f102 0c14 	add.w	ip, r2, #20
 8000428:	f1c2 020c 	rsb	r2, r2, #12
 800042c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000430:	fa21 f102 	lsr.w	r1, r1, r2
 8000434:	e00c      	b.n	8000450 <__adddf3+0x184>
 8000436:	f102 0214 	add.w	r2, r2, #20
 800043a:	bfd8      	it	le
 800043c:	f1c2 0c20 	rsble	ip, r2, #32
 8000440:	fa01 f102 	lsl.w	r1, r1, r2
 8000444:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000448:	bfdc      	itt	le
 800044a:	ea41 010c 	orrle.w	r1, r1, ip
 800044e:	4090      	lslle	r0, r2
 8000450:	1ae4      	subs	r4, r4, r3
 8000452:	bfa2      	ittt	ge
 8000454:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000458:	4329      	orrge	r1, r5
 800045a:	bd30      	popge	{r4, r5, pc}
 800045c:	ea6f 0404 	mvn.w	r4, r4
 8000460:	3c1f      	subs	r4, #31
 8000462:	da1c      	bge.n	800049e <__adddf3+0x1d2>
 8000464:	340c      	adds	r4, #12
 8000466:	dc0e      	bgt.n	8000486 <__adddf3+0x1ba>
 8000468:	f104 0414 	add.w	r4, r4, #20
 800046c:	f1c4 0220 	rsb	r2, r4, #32
 8000470:	fa20 f004 	lsr.w	r0, r0, r4
 8000474:	fa01 f302 	lsl.w	r3, r1, r2
 8000478:	ea40 0003 	orr.w	r0, r0, r3
 800047c:	fa21 f304 	lsr.w	r3, r1, r4
 8000480:	ea45 0103 	orr.w	r1, r5, r3
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f1c4 040c 	rsb	r4, r4, #12
 800048a:	f1c4 0220 	rsb	r2, r4, #32
 800048e:	fa20 f002 	lsr.w	r0, r0, r2
 8000492:	fa01 f304 	lsl.w	r3, r1, r4
 8000496:	ea40 0003 	orr.w	r0, r0, r3
 800049a:	4629      	mov	r1, r5
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	fa21 f004 	lsr.w	r0, r1, r4
 80004a2:	4629      	mov	r1, r5
 80004a4:	bd30      	pop	{r4, r5, pc}
 80004a6:	f094 0f00 	teq	r4, #0
 80004aa:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 80004ae:	bf06      	itte	eq
 80004b0:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80004b4:	3401      	addeq	r4, #1
 80004b6:	3d01      	subne	r5, #1
 80004b8:	e74e      	b.n	8000358 <__adddf3+0x8c>
 80004ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004be:	bf18      	it	ne
 80004c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004c4:	d029      	beq.n	800051a <__adddf3+0x24e>
 80004c6:	ea94 0f05 	teq	r4, r5
 80004ca:	bf08      	it	eq
 80004cc:	ea90 0f02 	teqeq	r0, r2
 80004d0:	d005      	beq.n	80004de <__adddf3+0x212>
 80004d2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004d6:	bf04      	itt	eq
 80004d8:	4619      	moveq	r1, r3
 80004da:	4610      	moveq	r0, r2
 80004dc:	bd30      	pop	{r4, r5, pc}
 80004de:	ea91 0f03 	teq	r1, r3
 80004e2:	bf1e      	ittt	ne
 80004e4:	2100      	movne	r1, #0
 80004e6:	2000      	movne	r0, #0
 80004e8:	bd30      	popne	{r4, r5, pc}
 80004ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ee:	d105      	bne.n	80004fc <__adddf3+0x230>
 80004f0:	0040      	lsls	r0, r0, #1
 80004f2:	4149      	adcs	r1, r1
 80004f4:	bf28      	it	cs
 80004f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004fa:	bd30      	pop	{r4, r5, pc}
 80004fc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000500:	bf3c      	itt	cc
 8000502:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 8000506:	bd30      	popcc	{r4, r5, pc}
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 800050c:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000510:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000514:	f04f 0000 	mov.w	r0, #0
 8000518:	bd30      	pop	{r4, r5, pc}
 800051a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800051e:	bf1a      	itte	ne
 8000520:	4619      	movne	r1, r3
 8000522:	4610      	movne	r0, r2
 8000524:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000528:	bf1c      	itt	ne
 800052a:	460b      	movne	r3, r1
 800052c:	4602      	movne	r2, r0
 800052e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000532:	bf06      	itte	eq
 8000534:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000538:	ea91 0f03 	teqeq	r1, r3
 800053c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000540:	bd30      	pop	{r4, r5, pc}
 8000542:	bf00      	nop

08000544 <__aeabi_ui2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000558:	f04f 0500 	mov.w	r5, #0
 800055c:	f04f 0100 	mov.w	r1, #0
 8000560:	e750      	b.n	8000404 <__adddf3+0x138>
 8000562:	bf00      	nop

08000564 <__aeabi_i2d>:
 8000564:	f090 0f00 	teq	r0, #0
 8000568:	bf04      	itt	eq
 800056a:	2100      	moveq	r1, #0
 800056c:	4770      	bxeq	lr
 800056e:	b530      	push	{r4, r5, lr}
 8000570:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000574:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000578:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800057c:	bf48      	it	mi
 800057e:	4240      	negmi	r0, r0
 8000580:	f04f 0100 	mov.w	r1, #0
 8000584:	e73e      	b.n	8000404 <__adddf3+0x138>
 8000586:	bf00      	nop

08000588 <__aeabi_f2d>:
 8000588:	0042      	lsls	r2, r0, #1
 800058a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800058e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000592:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000596:	bf1f      	itttt	ne
 8000598:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800059c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 80005a0:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 80005a4:	4770      	bxne	lr
 80005a6:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 80005aa:	bf08      	it	eq
 80005ac:	4770      	bxeq	lr
 80005ae:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80005b2:	bf04      	itt	eq
 80005b4:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 80005b8:	4770      	bxeq	lr
 80005ba:	b530      	push	{r4, r5, lr}
 80005bc:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80005c4:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005c8:	e71c      	b.n	8000404 <__adddf3+0x138>
 80005ca:	bf00      	nop

080005cc <__aeabi_ul2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f04f 0500 	mov.w	r5, #0
 80005da:	e00a      	b.n	80005f2 <__aeabi_l2d+0x16>

080005dc <__aeabi_l2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005ea:	d502      	bpl.n	80005f2 <__aeabi_l2d+0x16>
 80005ec:	4240      	negs	r0, r0
 80005ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005f2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005f6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005fe:	f43f aed8 	beq.w	80003b2 <__adddf3+0xe6>
 8000602:	f04f 0203 	mov.w	r2, #3
 8000606:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800060a:	bf18      	it	ne
 800060c:	3203      	addne	r2, #3
 800060e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000612:	bf18      	it	ne
 8000614:	3203      	addne	r2, #3
 8000616:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800061a:	f1c2 0320 	rsb	r3, r2, #32
 800061e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000622:	fa20 f002 	lsr.w	r0, r0, r2
 8000626:	fa01 fe03 	lsl.w	lr, r1, r3
 800062a:	ea40 000e 	orr.w	r0, r0, lr
 800062e:	fa21 f102 	lsr.w	r1, r1, r2
 8000632:	4414      	add	r4, r2
 8000634:	e6bd      	b.n	80003b2 <__adddf3+0xe6>
 8000636:	bf00      	nop

08000638 <__aeabi_dmul>:
 8000638:	b570      	push	{r4, r5, r6, lr}
 800063a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800063e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000642:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000646:	bf1d      	ittte	ne
 8000648:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800064c:	ea94 0f0c 	teqne	r4, ip
 8000650:	ea95 0f0c 	teqne	r5, ip
 8000654:	f000 f8de 	bleq	8000814 <__aeabi_dmul+0x1dc>
 8000658:	442c      	add	r4, r5
 800065a:	ea81 0603 	eor.w	r6, r1, r3
 800065e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000662:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000666:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800066a:	bf18      	it	ne
 800066c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000670:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000674:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000678:	d038      	beq.n	80006ec <__aeabi_dmul+0xb4>
 800067a:	fba0 ce02 	umull	ip, lr, r0, r2
 800067e:	f04f 0500 	mov.w	r5, #0
 8000682:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000686:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800068a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800068e:	f04f 0600 	mov.w	r6, #0
 8000692:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000696:	f09c 0f00 	teq	ip, #0
 800069a:	bf18      	it	ne
 800069c:	f04e 0e01 	orrne.w	lr, lr, #1
 80006a0:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 80006a4:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 80006a8:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 80006ac:	d204      	bcs.n	80006b8 <__aeabi_dmul+0x80>
 80006ae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006b2:	416d      	adcs	r5, r5
 80006b4:	eb46 0606 	adc.w	r6, r6, r6
 80006b8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006bc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006c0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006c4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006c8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006cc:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006d0:	bf88      	it	hi
 80006d2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006d6:	d81e      	bhi.n	8000716 <__aeabi_dmul+0xde>
 80006d8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006dc:	bf08      	it	eq
 80006de:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006e2:	f150 0000 	adcs.w	r0, r0, #0
 80006e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006f0:	ea46 0101 	orr.w	r1, r6, r1
 80006f4:	ea40 0002 	orr.w	r0, r0, r2
 80006f8:	ea81 0103 	eor.w	r1, r1, r3
 80006fc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000700:	bfc2      	ittt	gt
 8000702:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000706:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800070a:	bd70      	popgt	{r4, r5, r6, pc}
 800070c:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000710:	f04f 0e00 	mov.w	lr, #0
 8000714:	3c01      	subs	r4, #1
 8000716:	f300 80ab 	bgt.w	8000870 <__aeabi_dmul+0x238>
 800071a:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 800071e:	bfde      	ittt	le
 8000720:	2000      	movle	r0, #0
 8000722:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 8000726:	bd70      	pople	{r4, r5, r6, pc}
 8000728:	f1c4 0400 	rsb	r4, r4, #0
 800072c:	3c20      	subs	r4, #32
 800072e:	da35      	bge.n	800079c <__aeabi_dmul+0x164>
 8000730:	340c      	adds	r4, #12
 8000732:	dc1b      	bgt.n	800076c <__aeabi_dmul+0x134>
 8000734:	f104 0414 	add.w	r4, r4, #20
 8000738:	f1c4 0520 	rsb	r5, r4, #32
 800073c:	fa00 f305 	lsl.w	r3, r0, r5
 8000740:	fa20 f004 	lsr.w	r0, r0, r4
 8000744:	fa01 f205 	lsl.w	r2, r1, r5
 8000748:	ea40 0002 	orr.w	r0, r0, r2
 800074c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000750:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000754:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000758:	fa21 f604 	lsr.w	r6, r1, r4
 800075c:	eb42 0106 	adc.w	r1, r2, r6
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 040c 	rsb	r4, r4, #12
 8000770:	f1c4 0520 	rsb	r5, r4, #32
 8000774:	fa00 f304 	lsl.w	r3, r0, r4
 8000778:	fa20 f005 	lsr.w	r0, r0, r5
 800077c:	fa01 f204 	lsl.w	r2, r1, r4
 8000780:	ea40 0002 	orr.w	r0, r0, r2
 8000784:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000788:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800078c:	f141 0100 	adc.w	r1, r1, #0
 8000790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000794:	bf08      	it	eq
 8000796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f1c4 0520 	rsb	r5, r4, #32
 80007a0:	fa00 f205 	lsl.w	r2, r0, r5
 80007a4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007a8:	fa20 f304 	lsr.w	r3, r0, r4
 80007ac:	fa01 f205 	lsl.w	r2, r1, r5
 80007b0:	ea43 0302 	orr.w	r3, r3, r2
 80007b4:	fa21 f004 	lsr.w	r0, r1, r4
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007bc:	fa21 f204 	lsr.w	r2, r1, r4
 80007c0:	ea20 0002 	bic.w	r0, r0, r2
 80007c4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007cc:	bf08      	it	eq
 80007ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	f094 0f00 	teq	r4, #0
 80007d8:	d10f      	bne.n	80007fa <__aeabi_dmul+0x1c2>
 80007da:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007de:	0040      	lsls	r0, r0, #1
 80007e0:	eb41 0101 	adc.w	r1, r1, r1
 80007e4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3c01      	subeq	r4, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1a6>
 80007ee:	ea41 0106 	orr.w	r1, r1, r6
 80007f2:	f095 0f00 	teq	r5, #0
 80007f6:	bf18      	it	ne
 80007f8:	4770      	bxne	lr
 80007fa:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007fe:	0052      	lsls	r2, r2, #1
 8000800:	eb43 0303 	adc.w	r3, r3, r3
 8000804:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 8000808:	bf08      	it	eq
 800080a:	3d01      	subeq	r5, #1
 800080c:	d0f7      	beq.n	80007fe <__aeabi_dmul+0x1c6>
 800080e:	ea43 0306 	orr.w	r3, r3, r6
 8000812:	4770      	bx	lr
 8000814:	ea94 0f0c 	teq	r4, ip
 8000818:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800081c:	bf18      	it	ne
 800081e:	ea95 0f0c 	teqne	r5, ip
 8000822:	d00c      	beq.n	800083e <__aeabi_dmul+0x206>
 8000824:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000828:	bf18      	it	ne
 800082a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082e:	d1d1      	bne.n	80007d4 <__aeabi_dmul+0x19c>
 8000830:	ea81 0103 	eor.w	r1, r1, r3
 8000834:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000838:	f04f 0000 	mov.w	r0, #0
 800083c:	bd70      	pop	{r4, r5, r6, pc}
 800083e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000842:	bf06      	itte	eq
 8000844:	4610      	moveq	r0, r2
 8000846:	4619      	moveq	r1, r3
 8000848:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800084c:	d019      	beq.n	8000882 <__aeabi_dmul+0x24a>
 800084e:	ea94 0f0c 	teq	r4, ip
 8000852:	d102      	bne.n	800085a <__aeabi_dmul+0x222>
 8000854:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000858:	d113      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800085a:	ea95 0f0c 	teq	r5, ip
 800085e:	d105      	bne.n	800086c <__aeabi_dmul+0x234>
 8000860:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000864:	bf1c      	itt	ne
 8000866:	4610      	movne	r0, r2
 8000868:	4619      	movne	r1, r3
 800086a:	d10a      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800086c:	ea81 0103 	eor.w	r1, r1, r3
 8000870:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000874:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000878:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800087c:	f04f 0000 	mov.w	r0, #0
 8000880:	bd70      	pop	{r4, r5, r6, pc}
 8000882:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000886:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800088a:	bd70      	pop	{r4, r5, r6, pc}

0800088c <__aeabi_ddiv>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000892:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000896:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800089a:	bf1d      	ittte	ne
 800089c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008a0:	ea94 0f0c 	teqne	r4, ip
 80008a4:	ea95 0f0c 	teqne	r5, ip
 80008a8:	f000 f8a7 	bleq	80009fa <__aeabi_ddiv+0x16e>
 80008ac:	eba4 0405 	sub.w	r4, r4, r5
 80008b0:	ea81 0e03 	eor.w	lr, r1, r3
 80008b4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008bc:	f000 8088 	beq.w	80009d0 <__aeabi_ddiv+0x144>
 80008c0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008c4:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 80008c8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008cc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008d0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008d4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008d8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008dc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008e0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008e4:	429d      	cmp	r5, r3
 80008e6:	bf08      	it	eq
 80008e8:	4296      	cmpeq	r6, r2
 80008ea:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008ee:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008f2:	d202      	bcs.n	80008fa <__aeabi_ddiv+0x6e>
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	1ab6      	subs	r6, r6, r2
 80008fc:	eb65 0503 	sbc.w	r5, r5, r3
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 800090a:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000938:	085b      	lsrs	r3, r3, #1
 800093a:	ea4f 0232 	mov.w	r2, r2, rrx
 800093e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000942:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000946:	bf22      	ittt	cs
 8000948:	1ab6      	subcs	r6, r6, r2
 800094a:	4675      	movcs	r5, lr
 800094c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000950:	085b      	lsrs	r3, r3, #1
 8000952:	ea4f 0232 	mov.w	r2, r2, rrx
 8000956:	ebb6 0e02 	subs.w	lr, r6, r2
 800095a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095e:	bf22      	ittt	cs
 8000960:	1ab6      	subcs	r6, r6, r2
 8000962:	4675      	movcs	r5, lr
 8000964:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000968:	ea55 0e06 	orrs.w	lr, r5, r6
 800096c:	d018      	beq.n	80009a0 <__aeabi_ddiv+0x114>
 800096e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000972:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000976:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800097a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800097e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000982:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000986:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800098a:	d1c0      	bne.n	800090e <__aeabi_ddiv+0x82>
 800098c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000990:	d10b      	bne.n	80009aa <__aeabi_ddiv+0x11e>
 8000992:	ea41 0100 	orr.w	r1, r1, r0
 8000996:	f04f 0000 	mov.w	r0, #0
 800099a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800099e:	e7b6      	b.n	800090e <__aeabi_ddiv+0x82>
 80009a0:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80009a4:	bf04      	itt	eq
 80009a6:	4301      	orreq	r1, r0
 80009a8:	2000      	moveq	r0, #0
 80009aa:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80009ae:	bf88      	it	hi
 80009b0:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80009b4:	f63f aeaf 	bhi.w	8000716 <__aeabi_dmul+0xde>
 80009b8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009bc:	bf04      	itt	eq
 80009be:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009c6:	f150 0000 	adcs.w	r0, r0, #0
 80009ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ce:	bd70      	pop	{r4, r5, r6, pc}
 80009d0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009d4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009d8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009dc:	bfc2      	ittt	gt
 80009de:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009e2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009e6:	bd70      	popgt	{r4, r5, r6, pc}
 80009e8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009ec:	f04f 0e00 	mov.w	lr, #0
 80009f0:	3c01      	subs	r4, #1
 80009f2:	e690      	b.n	8000716 <__aeabi_dmul+0xde>
 80009f4:	ea45 0e06 	orr.w	lr, r5, r6
 80009f8:	e68d      	b.n	8000716 <__aeabi_dmul+0xde>
 80009fa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009fe:	ea94 0f0c 	teq	r4, ip
 8000a02:	bf08      	it	eq
 8000a04:	ea95 0f0c 	teqeq	r5, ip
 8000a08:	f43f af3b 	beq.w	8000882 <__aeabi_dmul+0x24a>
 8000a0c:	ea94 0f0c 	teq	r4, ip
 8000a10:	d10a      	bne.n	8000a28 <__aeabi_ddiv+0x19c>
 8000a12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a16:	f47f af34 	bne.w	8000882 <__aeabi_dmul+0x24a>
 8000a1a:	ea95 0f0c 	teq	r5, ip
 8000a1e:	f47f af25 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a22:	4610      	mov	r0, r2
 8000a24:	4619      	mov	r1, r3
 8000a26:	e72c      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a28:	ea95 0f0c 	teq	r5, ip
 8000a2c:	d106      	bne.n	8000a3c <__aeabi_ddiv+0x1b0>
 8000a2e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a32:	f43f aefd 	beq.w	8000830 <__aeabi_dmul+0x1f8>
 8000a36:	4610      	mov	r0, r2
 8000a38:	4619      	mov	r1, r3
 8000a3a:	e722      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a46:	f47f aec5 	bne.w	80007d4 <__aeabi_dmul+0x19c>
 8000a4a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a4e:	f47f af0d 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a52:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a56:	f47f aeeb 	bne.w	8000830 <__aeabi_dmul+0x1f8>
 8000a5a:	e712      	b.n	8000882 <__aeabi_dmul+0x24a>

08000a5c <__gedf2>:
 8000a5c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a60:	e006      	b.n	8000a70 <__cmpdf2+0x4>
 8000a62:	bf00      	nop

08000a64 <__ledf2>:
 8000a64:	f04f 0c01 	mov.w	ip, #1
 8000a68:	e002      	b.n	8000a70 <__cmpdf2+0x4>
 8000a6a:	bf00      	nop

08000a6c <__cmpdf2>:
 8000a6c:	f04f 0c01 	mov.w	ip, #1
 8000a70:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a74:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a78:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a80:	bf18      	it	ne
 8000a82:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a86:	d01b      	beq.n	8000ac0 <__cmpdf2+0x54>
 8000a88:	b001      	add	sp, #4
 8000a8a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a8e:	bf0c      	ite	eq
 8000a90:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a94:	ea91 0f03 	teqne	r1, r3
 8000a98:	bf02      	ittt	eq
 8000a9a:	ea90 0f02 	teqeq	r0, r2
 8000a9e:	2000      	moveq	r0, #0
 8000aa0:	4770      	bxeq	lr
 8000aa2:	f110 0f00 	cmn.w	r0, #0
 8000aa6:	ea91 0f03 	teq	r1, r3
 8000aaa:	bf58      	it	pl
 8000aac:	4299      	cmppl	r1, r3
 8000aae:	bf08      	it	eq
 8000ab0:	4290      	cmpeq	r0, r2
 8000ab2:	bf2c      	ite	cs
 8000ab4:	17d8      	asrcs	r0, r3, #31
 8000ab6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aba:	f040 0001 	orr.w	r0, r0, #1
 8000abe:	4770      	bx	lr
 8000ac0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d102      	bne.n	8000ad0 <__cmpdf2+0x64>
 8000aca:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ace:	d107      	bne.n	8000ae0 <__cmpdf2+0x74>
 8000ad0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ad4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ad8:	d1d6      	bne.n	8000a88 <__cmpdf2+0x1c>
 8000ada:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ade:	d0d3      	beq.n	8000a88 <__cmpdf2+0x1c>
 8000ae0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ae4:	4770      	bx	lr
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdrcmple>:
 8000ae8:	4684      	mov	ip, r0
 8000aea:	4610      	mov	r0, r2
 8000aec:	4662      	mov	r2, ip
 8000aee:	468c      	mov	ip, r1
 8000af0:	4619      	mov	r1, r3
 8000af2:	4663      	mov	r3, ip
 8000af4:	e000      	b.n	8000af8 <__aeabi_cdcmpeq>
 8000af6:	bf00      	nop

08000af8 <__aeabi_cdcmpeq>:
 8000af8:	b501      	push	{r0, lr}
 8000afa:	f7ff ffb7 	bl	8000a6c <__cmpdf2>
 8000afe:	2800      	cmp	r0, #0
 8000b00:	bf48      	it	mi
 8000b02:	f110 0f00 	cmnmi.w	r0, #0
 8000b06:	bd01      	pop	{r0, pc}

08000b08 <__aeabi_dcmpeq>:
 8000b08:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b0c:	f7ff fff4 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b10:	bf0c      	ite	eq
 8000b12:	2001      	moveq	r0, #1
 8000b14:	2000      	movne	r0, #0
 8000b16:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1a:	bf00      	nop

08000b1c <__aeabi_dcmplt>:
 8000b1c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b20:	f7ff ffea 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b24:	bf34      	ite	cc
 8000b26:	2001      	movcc	r0, #1
 8000b28:	2000      	movcs	r0, #0
 8000b2a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2e:	bf00      	nop

08000b30 <__aeabi_dcmple>:
 8000b30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b34:	f7ff ffe0 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b38:	bf94      	ite	ls
 8000b3a:	2001      	movls	r0, #1
 8000b3c:	2000      	movhi	r0, #0
 8000b3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b42:	bf00      	nop

08000b44 <__aeabi_dcmpge>:
 8000b44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b48:	f7ff ffce 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b4c:	bf94      	ite	ls
 8000b4e:	2001      	movls	r0, #1
 8000b50:	2000      	movhi	r0, #0
 8000b52:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b56:	bf00      	nop

08000b58 <__aeabi_dcmpgt>:
 8000b58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b5c:	f7ff ffc4 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b60:	bf34      	ite	cc
 8000b62:	2001      	movcc	r0, #1
 8000b64:	2000      	movcs	r0, #0
 8000b66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b6a:	bf00      	nop

08000b6c <__aeabi_dcmpun>:
 8000b6c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b70:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b74:	d102      	bne.n	8000b7c <__aeabi_dcmpun+0x10>
 8000b76:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b7a:	d10a      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b80:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b84:	d102      	bne.n	8000b8c <__aeabi_dcmpun+0x20>
 8000b86:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b8a:	d102      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b8c:	f04f 0000 	mov.w	r0, #0
 8000b90:	4770      	bx	lr
 8000b92:	f04f 0001 	mov.w	r0, #1
 8000b96:	4770      	bx	lr

08000b98 <__aeabi_d2iz>:
 8000b98:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b9c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000ba0:	d215      	bcs.n	8000bce <__aeabi_d2iz+0x36>
 8000ba2:	d511      	bpl.n	8000bc8 <__aeabi_d2iz+0x30>
 8000ba4:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000ba8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bac:	d912      	bls.n	8000bd4 <__aeabi_d2iz+0x3c>
 8000bae:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bb2:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000bb6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bba:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000bbe:	fa23 f002 	lsr.w	r0, r3, r2
 8000bc2:	bf18      	it	ne
 8000bc4:	4240      	negne	r0, r0
 8000bc6:	4770      	bx	lr
 8000bc8:	f04f 0000 	mov.w	r0, #0
 8000bcc:	4770      	bx	lr
 8000bce:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bd2:	d105      	bne.n	8000be0 <__aeabi_d2iz+0x48>
 8000bd4:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000bd8:	bf08      	it	eq
 8000bda:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000bde:	4770      	bx	lr
 8000be0:	f04f 0000 	mov.w	r0, #0
 8000be4:	4770      	bx	lr
 8000be6:	bf00      	nop

08000be8 <__aeabi_d2uiz>:
 8000be8:	004a      	lsls	r2, r1, #1
 8000bea:	d211      	bcs.n	8000c10 <__aeabi_d2uiz+0x28>
 8000bec:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000bf0:	d211      	bcs.n	8000c16 <__aeabi_d2uiz+0x2e>
 8000bf2:	d50d      	bpl.n	8000c10 <__aeabi_d2uiz+0x28>
 8000bf4:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000bf8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bfc:	d40e      	bmi.n	8000c1c <__aeabi_d2uiz+0x34>
 8000bfe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c02:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000c06:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000c0a:	fa23 f002 	lsr.w	r0, r3, r2
 8000c0e:	4770      	bx	lr
 8000c10:	f04f 0000 	mov.w	r0, #0
 8000c14:	4770      	bx	lr
 8000c16:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000c1a:	d102      	bne.n	8000c22 <__aeabi_d2uiz+0x3a>
 8000c1c:	f04f 30ff 	mov.w	r0, #4294967295
 8000c20:	4770      	bx	lr
 8000c22:	f04f 0000 	mov.w	r0, #0
 8000c26:	4770      	bx	lr

08000c28 <__aeabi_d2f>:
 8000c28:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000c2c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000c30:	bf24      	itt	cs
 8000c32:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000c36:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000c3a:	d90d      	bls.n	8000c58 <__aeabi_d2f+0x30>
 8000c3c:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000c40:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c44:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c48:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000c4c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c50:	bf08      	it	eq
 8000c52:	f020 0001 	biceq.w	r0, r0, #1
 8000c56:	4770      	bx	lr
 8000c58:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000c5c:	d121      	bne.n	8000ca2 <__aeabi_d2f+0x7a>
 8000c5e:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000c62:	bfbc      	itt	lt
 8000c64:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000c68:	4770      	bxlt	lr
 8000c6a:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000c6e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c72:	f1c2 0218 	rsb	r2, r2, #24
 8000c76:	f1c2 0c20 	rsb	ip, r2, #32
 8000c7a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c7e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c82:	bf18      	it	ne
 8000c84:	f040 0001 	orrne.w	r0, r0, #1
 8000c88:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c8c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c90:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c94:	ea40 000c 	orr.w	r0, r0, ip
 8000c98:	fa23 f302 	lsr.w	r3, r3, r2
 8000c9c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000ca0:	e7cc      	b.n	8000c3c <__aeabi_d2f+0x14>
 8000ca2:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000ca6:	d107      	bne.n	8000cb8 <__aeabi_d2f+0x90>
 8000ca8:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000cac:	bf1e      	ittt	ne
 8000cae:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000cb2:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000cb6:	4770      	bxne	lr
 8000cb8:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000cbc:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000cc0:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000cc4:	4770      	bx	lr
 8000cc6:	bf00      	nop

08000cc8 <__aeabi_uldivmod>:
 8000cc8:	b953      	cbnz	r3, 8000ce0 <__aeabi_uldivmod+0x18>
 8000cca:	b94a      	cbnz	r2, 8000ce0 <__aeabi_uldivmod+0x18>
 8000ccc:	2900      	cmp	r1, #0
 8000cce:	bf08      	it	eq
 8000cd0:	2800      	cmpeq	r0, #0
 8000cd2:	bf1c      	itt	ne
 8000cd4:	f04f 31ff 	movne.w	r1, #4294967295
 8000cd8:	f04f 30ff 	movne.w	r0, #4294967295
 8000cdc:	f000 b988 	b.w	8000ff0 <__aeabi_idiv0>
 8000ce0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000ce4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000ce8:	f000 f806 	bl	8000cf8 <__udivmoddi4>
 8000cec:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cf0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cf4:	b004      	add	sp, #16
 8000cf6:	4770      	bx	lr

08000cf8 <__udivmoddi4>:
 8000cf8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000cfc:	9d08      	ldr	r5, [sp, #32]
 8000cfe:	468e      	mov	lr, r1
 8000d00:	4604      	mov	r4, r0
 8000d02:	4688      	mov	r8, r1
 8000d04:	2b00      	cmp	r3, #0
 8000d06:	d14a      	bne.n	8000d9e <__udivmoddi4+0xa6>
 8000d08:	428a      	cmp	r2, r1
 8000d0a:	4617      	mov	r7, r2
 8000d0c:	d962      	bls.n	8000dd4 <__udivmoddi4+0xdc>
 8000d0e:	fab2 f682 	clz	r6, r2
 8000d12:	b14e      	cbz	r6, 8000d28 <__udivmoddi4+0x30>
 8000d14:	f1c6 0320 	rsb	r3, r6, #32
 8000d18:	fa01 f806 	lsl.w	r8, r1, r6
 8000d1c:	fa20 f303 	lsr.w	r3, r0, r3
 8000d20:	40b7      	lsls	r7, r6
 8000d22:	ea43 0808 	orr.w	r8, r3, r8
 8000d26:	40b4      	lsls	r4, r6
 8000d28:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000d2c:	fa1f fc87 	uxth.w	ip, r7
 8000d30:	fbb8 f1fe 	udiv	r1, r8, lr
 8000d34:	0c23      	lsrs	r3, r4, #16
 8000d36:	fb0e 8811 	mls	r8, lr, r1, r8
 8000d3a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000d3e:	fb01 f20c 	mul.w	r2, r1, ip
 8000d42:	429a      	cmp	r2, r3
 8000d44:	d909      	bls.n	8000d5a <__udivmoddi4+0x62>
 8000d46:	18fb      	adds	r3, r7, r3
 8000d48:	f101 30ff 	add.w	r0, r1, #4294967295
 8000d4c:	f080 80ea 	bcs.w	8000f24 <__udivmoddi4+0x22c>
 8000d50:	429a      	cmp	r2, r3
 8000d52:	f240 80e7 	bls.w	8000f24 <__udivmoddi4+0x22c>
 8000d56:	3902      	subs	r1, #2
 8000d58:	443b      	add	r3, r7
 8000d5a:	1a9a      	subs	r2, r3, r2
 8000d5c:	b2a3      	uxth	r3, r4
 8000d5e:	fbb2 f0fe 	udiv	r0, r2, lr
 8000d62:	fb0e 2210 	mls	r2, lr, r0, r2
 8000d66:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000d6a:	fb00 fc0c 	mul.w	ip, r0, ip
 8000d6e:	459c      	cmp	ip, r3
 8000d70:	d909      	bls.n	8000d86 <__udivmoddi4+0x8e>
 8000d72:	18fb      	adds	r3, r7, r3
 8000d74:	f100 32ff 	add.w	r2, r0, #4294967295
 8000d78:	f080 80d6 	bcs.w	8000f28 <__udivmoddi4+0x230>
 8000d7c:	459c      	cmp	ip, r3
 8000d7e:	f240 80d3 	bls.w	8000f28 <__udivmoddi4+0x230>
 8000d82:	443b      	add	r3, r7
 8000d84:	3802      	subs	r0, #2
 8000d86:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000d8a:	eba3 030c 	sub.w	r3, r3, ip
 8000d8e:	2100      	movs	r1, #0
 8000d90:	b11d      	cbz	r5, 8000d9a <__udivmoddi4+0xa2>
 8000d92:	40f3      	lsrs	r3, r6
 8000d94:	2200      	movs	r2, #0
 8000d96:	e9c5 3200 	strd	r3, r2, [r5]
 8000d9a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d9e:	428b      	cmp	r3, r1
 8000da0:	d905      	bls.n	8000dae <__udivmoddi4+0xb6>
 8000da2:	b10d      	cbz	r5, 8000da8 <__udivmoddi4+0xb0>
 8000da4:	e9c5 0100 	strd	r0, r1, [r5]
 8000da8:	2100      	movs	r1, #0
 8000daa:	4608      	mov	r0, r1
 8000dac:	e7f5      	b.n	8000d9a <__udivmoddi4+0xa2>
 8000dae:	fab3 f183 	clz	r1, r3
 8000db2:	2900      	cmp	r1, #0
 8000db4:	d146      	bne.n	8000e44 <__udivmoddi4+0x14c>
 8000db6:	4573      	cmp	r3, lr
 8000db8:	d302      	bcc.n	8000dc0 <__udivmoddi4+0xc8>
 8000dba:	4282      	cmp	r2, r0
 8000dbc:	f200 8105 	bhi.w	8000fca <__udivmoddi4+0x2d2>
 8000dc0:	1a84      	subs	r4, r0, r2
 8000dc2:	eb6e 0203 	sbc.w	r2, lr, r3
 8000dc6:	2001      	movs	r0, #1
 8000dc8:	4690      	mov	r8, r2
 8000dca:	2d00      	cmp	r5, #0
 8000dcc:	d0e5      	beq.n	8000d9a <__udivmoddi4+0xa2>
 8000dce:	e9c5 4800 	strd	r4, r8, [r5]
 8000dd2:	e7e2      	b.n	8000d9a <__udivmoddi4+0xa2>
 8000dd4:	2a00      	cmp	r2, #0
 8000dd6:	f000 8090 	beq.w	8000efa <__udivmoddi4+0x202>
 8000dda:	fab2 f682 	clz	r6, r2
 8000dde:	2e00      	cmp	r6, #0
 8000de0:	f040 80a4 	bne.w	8000f2c <__udivmoddi4+0x234>
 8000de4:	1a8a      	subs	r2, r1, r2
 8000de6:	0c03      	lsrs	r3, r0, #16
 8000de8:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000dec:	b280      	uxth	r0, r0
 8000dee:	b2bc      	uxth	r4, r7
 8000df0:	2101      	movs	r1, #1
 8000df2:	fbb2 fcfe 	udiv	ip, r2, lr
 8000df6:	fb0e 221c 	mls	r2, lr, ip, r2
 8000dfa:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000dfe:	fb04 f20c 	mul.w	r2, r4, ip
 8000e02:	429a      	cmp	r2, r3
 8000e04:	d907      	bls.n	8000e16 <__udivmoddi4+0x11e>
 8000e06:	18fb      	adds	r3, r7, r3
 8000e08:	f10c 38ff 	add.w	r8, ip, #4294967295
 8000e0c:	d202      	bcs.n	8000e14 <__udivmoddi4+0x11c>
 8000e0e:	429a      	cmp	r2, r3
 8000e10:	f200 80e0 	bhi.w	8000fd4 <__udivmoddi4+0x2dc>
 8000e14:	46c4      	mov	ip, r8
 8000e16:	1a9b      	subs	r3, r3, r2
 8000e18:	fbb3 f2fe 	udiv	r2, r3, lr
 8000e1c:	fb0e 3312 	mls	r3, lr, r2, r3
 8000e20:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 8000e24:	fb02 f404 	mul.w	r4, r2, r4
 8000e28:	429c      	cmp	r4, r3
 8000e2a:	d907      	bls.n	8000e3c <__udivmoddi4+0x144>
 8000e2c:	18fb      	adds	r3, r7, r3
 8000e2e:	f102 30ff 	add.w	r0, r2, #4294967295
 8000e32:	d202      	bcs.n	8000e3a <__udivmoddi4+0x142>
 8000e34:	429c      	cmp	r4, r3
 8000e36:	f200 80ca 	bhi.w	8000fce <__udivmoddi4+0x2d6>
 8000e3a:	4602      	mov	r2, r0
 8000e3c:	1b1b      	subs	r3, r3, r4
 8000e3e:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 8000e42:	e7a5      	b.n	8000d90 <__udivmoddi4+0x98>
 8000e44:	f1c1 0620 	rsb	r6, r1, #32
 8000e48:	408b      	lsls	r3, r1
 8000e4a:	fa22 f706 	lsr.w	r7, r2, r6
 8000e4e:	431f      	orrs	r7, r3
 8000e50:	fa0e f401 	lsl.w	r4, lr, r1
 8000e54:	fa20 f306 	lsr.w	r3, r0, r6
 8000e58:	fa2e fe06 	lsr.w	lr, lr, r6
 8000e5c:	ea4f 4917 	mov.w	r9, r7, lsr #16
 8000e60:	4323      	orrs	r3, r4
 8000e62:	fa00 f801 	lsl.w	r8, r0, r1
 8000e66:	fa1f fc87 	uxth.w	ip, r7
 8000e6a:	fbbe f0f9 	udiv	r0, lr, r9
 8000e6e:	0c1c      	lsrs	r4, r3, #16
 8000e70:	fb09 ee10 	mls	lr, r9, r0, lr
 8000e74:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 8000e78:	fb00 fe0c 	mul.w	lr, r0, ip
 8000e7c:	45a6      	cmp	lr, r4
 8000e7e:	fa02 f201 	lsl.w	r2, r2, r1
 8000e82:	d909      	bls.n	8000e98 <__udivmoddi4+0x1a0>
 8000e84:	193c      	adds	r4, r7, r4
 8000e86:	f100 3aff 	add.w	sl, r0, #4294967295
 8000e8a:	f080 809c 	bcs.w	8000fc6 <__udivmoddi4+0x2ce>
 8000e8e:	45a6      	cmp	lr, r4
 8000e90:	f240 8099 	bls.w	8000fc6 <__udivmoddi4+0x2ce>
 8000e94:	3802      	subs	r0, #2
 8000e96:	443c      	add	r4, r7
 8000e98:	eba4 040e 	sub.w	r4, r4, lr
 8000e9c:	fa1f fe83 	uxth.w	lr, r3
 8000ea0:	fbb4 f3f9 	udiv	r3, r4, r9
 8000ea4:	fb09 4413 	mls	r4, r9, r3, r4
 8000ea8:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000eac:	fb03 fc0c 	mul.w	ip, r3, ip
 8000eb0:	45a4      	cmp	ip, r4
 8000eb2:	d908      	bls.n	8000ec6 <__udivmoddi4+0x1ce>
 8000eb4:	193c      	adds	r4, r7, r4
 8000eb6:	f103 3eff 	add.w	lr, r3, #4294967295
 8000eba:	f080 8082 	bcs.w	8000fc2 <__udivmoddi4+0x2ca>
 8000ebe:	45a4      	cmp	ip, r4
 8000ec0:	d97f      	bls.n	8000fc2 <__udivmoddi4+0x2ca>
 8000ec2:	3b02      	subs	r3, #2
 8000ec4:	443c      	add	r4, r7
 8000ec6:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000eca:	eba4 040c 	sub.w	r4, r4, ip
 8000ece:	fba0 ec02 	umull	lr, ip, r0, r2
 8000ed2:	4564      	cmp	r4, ip
 8000ed4:	4673      	mov	r3, lr
 8000ed6:	46e1      	mov	r9, ip
 8000ed8:	d362      	bcc.n	8000fa0 <__udivmoddi4+0x2a8>
 8000eda:	d05f      	beq.n	8000f9c <__udivmoddi4+0x2a4>
 8000edc:	b15d      	cbz	r5, 8000ef6 <__udivmoddi4+0x1fe>
 8000ede:	ebb8 0203 	subs.w	r2, r8, r3
 8000ee2:	eb64 0409 	sbc.w	r4, r4, r9
 8000ee6:	fa04 f606 	lsl.w	r6, r4, r6
 8000eea:	fa22 f301 	lsr.w	r3, r2, r1
 8000eee:	431e      	orrs	r6, r3
 8000ef0:	40cc      	lsrs	r4, r1
 8000ef2:	e9c5 6400 	strd	r6, r4, [r5]
 8000ef6:	2100      	movs	r1, #0
 8000ef8:	e74f      	b.n	8000d9a <__udivmoddi4+0xa2>
 8000efa:	fbb1 fcf2 	udiv	ip, r1, r2
 8000efe:	0c01      	lsrs	r1, r0, #16
 8000f00:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 8000f04:	b280      	uxth	r0, r0
 8000f06:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 8000f0a:	463b      	mov	r3, r7
 8000f0c:	4638      	mov	r0, r7
 8000f0e:	463c      	mov	r4, r7
 8000f10:	46b8      	mov	r8, r7
 8000f12:	46be      	mov	lr, r7
 8000f14:	2620      	movs	r6, #32
 8000f16:	fbb1 f1f7 	udiv	r1, r1, r7
 8000f1a:	eba2 0208 	sub.w	r2, r2, r8
 8000f1e:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 8000f22:	e766      	b.n	8000df2 <__udivmoddi4+0xfa>
 8000f24:	4601      	mov	r1, r0
 8000f26:	e718      	b.n	8000d5a <__udivmoddi4+0x62>
 8000f28:	4610      	mov	r0, r2
 8000f2a:	e72c      	b.n	8000d86 <__udivmoddi4+0x8e>
 8000f2c:	f1c6 0220 	rsb	r2, r6, #32
 8000f30:	fa2e f302 	lsr.w	r3, lr, r2
 8000f34:	40b7      	lsls	r7, r6
 8000f36:	40b1      	lsls	r1, r6
 8000f38:	fa20 f202 	lsr.w	r2, r0, r2
 8000f3c:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000f40:	430a      	orrs	r2, r1
 8000f42:	fbb3 f8fe 	udiv	r8, r3, lr
 8000f46:	b2bc      	uxth	r4, r7
 8000f48:	fb0e 3318 	mls	r3, lr, r8, r3
 8000f4c:	0c11      	lsrs	r1, r2, #16
 8000f4e:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000f52:	fb08 f904 	mul.w	r9, r8, r4
 8000f56:	40b0      	lsls	r0, r6
 8000f58:	4589      	cmp	r9, r1
 8000f5a:	ea4f 4310 	mov.w	r3, r0, lsr #16
 8000f5e:	b280      	uxth	r0, r0
 8000f60:	d93e      	bls.n	8000fe0 <__udivmoddi4+0x2e8>
 8000f62:	1879      	adds	r1, r7, r1
 8000f64:	f108 3cff 	add.w	ip, r8, #4294967295
 8000f68:	d201      	bcs.n	8000f6e <__udivmoddi4+0x276>
 8000f6a:	4589      	cmp	r9, r1
 8000f6c:	d81f      	bhi.n	8000fae <__udivmoddi4+0x2b6>
 8000f6e:	eba1 0109 	sub.w	r1, r1, r9
 8000f72:	fbb1 f9fe 	udiv	r9, r1, lr
 8000f76:	fb09 f804 	mul.w	r8, r9, r4
 8000f7a:	fb0e 1119 	mls	r1, lr, r9, r1
 8000f7e:	b292      	uxth	r2, r2
 8000f80:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000f84:	4542      	cmp	r2, r8
 8000f86:	d229      	bcs.n	8000fdc <__udivmoddi4+0x2e4>
 8000f88:	18ba      	adds	r2, r7, r2
 8000f8a:	f109 31ff 	add.w	r1, r9, #4294967295
 8000f8e:	d2c4      	bcs.n	8000f1a <__udivmoddi4+0x222>
 8000f90:	4542      	cmp	r2, r8
 8000f92:	d2c2      	bcs.n	8000f1a <__udivmoddi4+0x222>
 8000f94:	f1a9 0102 	sub.w	r1, r9, #2
 8000f98:	443a      	add	r2, r7
 8000f9a:	e7be      	b.n	8000f1a <__udivmoddi4+0x222>
 8000f9c:	45f0      	cmp	r8, lr
 8000f9e:	d29d      	bcs.n	8000edc <__udivmoddi4+0x1e4>
 8000fa0:	ebbe 0302 	subs.w	r3, lr, r2
 8000fa4:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000fa8:	3801      	subs	r0, #1
 8000faa:	46e1      	mov	r9, ip
 8000fac:	e796      	b.n	8000edc <__udivmoddi4+0x1e4>
 8000fae:	eba7 0909 	sub.w	r9, r7, r9
 8000fb2:	4449      	add	r1, r9
 8000fb4:	f1a8 0c02 	sub.w	ip, r8, #2
 8000fb8:	fbb1 f9fe 	udiv	r9, r1, lr
 8000fbc:	fb09 f804 	mul.w	r8, r9, r4
 8000fc0:	e7db      	b.n	8000f7a <__udivmoddi4+0x282>
 8000fc2:	4673      	mov	r3, lr
 8000fc4:	e77f      	b.n	8000ec6 <__udivmoddi4+0x1ce>
 8000fc6:	4650      	mov	r0, sl
 8000fc8:	e766      	b.n	8000e98 <__udivmoddi4+0x1a0>
 8000fca:	4608      	mov	r0, r1
 8000fcc:	e6fd      	b.n	8000dca <__udivmoddi4+0xd2>
 8000fce:	443b      	add	r3, r7
 8000fd0:	3a02      	subs	r2, #2
 8000fd2:	e733      	b.n	8000e3c <__udivmoddi4+0x144>
 8000fd4:	f1ac 0c02 	sub.w	ip, ip, #2
 8000fd8:	443b      	add	r3, r7
 8000fda:	e71c      	b.n	8000e16 <__udivmoddi4+0x11e>
 8000fdc:	4649      	mov	r1, r9
 8000fde:	e79c      	b.n	8000f1a <__udivmoddi4+0x222>
 8000fe0:	eba1 0109 	sub.w	r1, r1, r9
 8000fe4:	46c4      	mov	ip, r8
 8000fe6:	fbb1 f9fe 	udiv	r9, r1, lr
 8000fea:	fb09 f804 	mul.w	r8, r9, r4
 8000fee:	e7c4      	b.n	8000f7a <__udivmoddi4+0x282>

08000ff0 <__aeabi_idiv0>:
 8000ff0:	4770      	bx	lr
 8000ff2:	bf00      	nop

08000ff4 <MX_ADC1_Init>:

ADC_HandleTypeDef hadc1;

/* ADC1 init function */
void MX_ADC1_Init(void)
{
 8000ff4:	b580      	push	{r7, lr}
 8000ff6:	b084      	sub	sp, #16
 8000ff8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8000ffa:	463b      	mov	r3, r7
 8000ffc:	2200      	movs	r2, #0
 8000ffe:	601a      	str	r2, [r3, #0]
 8001000:	605a      	str	r2, [r3, #4]
 8001002:	609a      	str	r2, [r3, #8]
 8001004:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC1_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 8001006:	4b21      	ldr	r3, [pc, #132]	@ (800108c <MX_ADC1_Init+0x98>)
 8001008:	4a21      	ldr	r2, [pc, #132]	@ (8001090 <MX_ADC1_Init+0x9c>)
 800100a:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 800100c:	4b1f      	ldr	r3, [pc, #124]	@ (800108c <MX_ADC1_Init+0x98>)
 800100e:	2200      	movs	r2, #0
 8001010:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8001012:	4b1e      	ldr	r3, [pc, #120]	@ (800108c <MX_ADC1_Init+0x98>)
 8001014:	2200      	movs	r2, #0
 8001016:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 8001018:	4b1c      	ldr	r3, [pc, #112]	@ (800108c <MX_ADC1_Init+0x98>)
 800101a:	2200      	movs	r2, #0
 800101c:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = ENABLE;
 800101e:	4b1b      	ldr	r3, [pc, #108]	@ (800108c <MX_ADC1_Init+0x98>)
 8001020:	2201      	movs	r2, #1
 8001022:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8001024:	4b19      	ldr	r3, [pc, #100]	@ (800108c <MX_ADC1_Init+0x98>)
 8001026:	2200      	movs	r2, #0
 8001028:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 800102c:	4b17      	ldr	r3, [pc, #92]	@ (800108c <MX_ADC1_Init+0x98>)
 800102e:	2200      	movs	r2, #0
 8001030:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8001032:	4b16      	ldr	r3, [pc, #88]	@ (800108c <MX_ADC1_Init+0x98>)
 8001034:	4a17      	ldr	r2, [pc, #92]	@ (8001094 <MX_ADC1_Init+0xa0>)
 8001036:	629a      	str	r2, [r3, #40]	@ 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8001038:	4b14      	ldr	r3, [pc, #80]	@ (800108c <MX_ADC1_Init+0x98>)
 800103a:	2200      	movs	r2, #0
 800103c:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 1;
 800103e:	4b13      	ldr	r3, [pc, #76]	@ (800108c <MX_ADC1_Init+0x98>)
 8001040:	2201      	movs	r2, #1
 8001042:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 8001044:	4b11      	ldr	r3, [pc, #68]	@ (800108c <MX_ADC1_Init+0x98>)
 8001046:	2200      	movs	r2, #0
 8001048:	f883 2030 	strb.w	r2, [r3, #48]	@ 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 800104c:	4b0f      	ldr	r3, [pc, #60]	@ (800108c <MX_ADC1_Init+0x98>)
 800104e:	2201      	movs	r2, #1
 8001050:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8001052:	480e      	ldr	r0, [pc, #56]	@ (800108c <MX_ADC1_Init+0x98>)
 8001054:	f002 f864 	bl	8003120 <HAL_ADC_Init>
 8001058:	4603      	mov	r3, r0
 800105a:	2b00      	cmp	r3, #0
 800105c:	d001      	beq.n	8001062 <MX_ADC1_Init+0x6e>
  {
    Error_Handler();
 800105e:	f000 fdeb 	bl	8001c38 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_10;
 8001062:	230a      	movs	r3, #10
 8001064:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 8001066:	2301      	movs	r3, #1
 8001068:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 800106a:	2300      	movs	r3, #0
 800106c:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 800106e:	463b      	mov	r3, r7
 8001070:	4619      	mov	r1, r3
 8001072:	4806      	ldr	r0, [pc, #24]	@ (800108c <MX_ADC1_Init+0x98>)
 8001074:	f002 fa36 	bl	80034e4 <HAL_ADC_ConfigChannel>
 8001078:	4603      	mov	r3, r0
 800107a:	2b00      	cmp	r3, #0
 800107c:	d001      	beq.n	8001082 <MX_ADC1_Init+0x8e>
  {
    Error_Handler();
 800107e:	f000 fddb 	bl	8001c38 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8001082:	bf00      	nop
 8001084:	3710      	adds	r7, #16
 8001086:	46bd      	mov	sp, r7
 8001088:	bd80      	pop	{r7, pc}
 800108a:	bf00      	nop
 800108c:	200001f8 	.word	0x200001f8
 8001090:	40012000 	.word	0x40012000
 8001094:	0f000001 	.word	0x0f000001

08001098 <HAL_ADC_MspInit>:

void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
{
 8001098:	b580      	push	{r7, lr}
 800109a:	b08a      	sub	sp, #40	@ 0x28
 800109c:	af00      	add	r7, sp, #0
 800109e:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80010a0:	f107 0314 	add.w	r3, r7, #20
 80010a4:	2200      	movs	r2, #0
 80010a6:	601a      	str	r2, [r3, #0]
 80010a8:	605a      	str	r2, [r3, #4]
 80010aa:	609a      	str	r2, [r3, #8]
 80010ac:	60da      	str	r2, [r3, #12]
 80010ae:	611a      	str	r2, [r3, #16]
  if(adcHandle->Instance==ADC1)
 80010b0:	687b      	ldr	r3, [r7, #4]
 80010b2:	681b      	ldr	r3, [r3, #0]
 80010b4:	4a17      	ldr	r2, [pc, #92]	@ (8001114 <HAL_ADC_MspInit+0x7c>)
 80010b6:	4293      	cmp	r3, r2
 80010b8:	d127      	bne.n	800110a <HAL_ADC_MspInit+0x72>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* ADC1 clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 80010ba:	2300      	movs	r3, #0
 80010bc:	613b      	str	r3, [r7, #16]
 80010be:	4b16      	ldr	r3, [pc, #88]	@ (8001118 <HAL_ADC_MspInit+0x80>)
 80010c0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80010c2:	4a15      	ldr	r2, [pc, #84]	@ (8001118 <HAL_ADC_MspInit+0x80>)
 80010c4:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80010c8:	6453      	str	r3, [r2, #68]	@ 0x44
 80010ca:	4b13      	ldr	r3, [pc, #76]	@ (8001118 <HAL_ADC_MspInit+0x80>)
 80010cc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80010ce:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80010d2:	613b      	str	r3, [r7, #16]
 80010d4:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 80010d6:	2300      	movs	r3, #0
 80010d8:	60fb      	str	r3, [r7, #12]
 80010da:	4b0f      	ldr	r3, [pc, #60]	@ (8001118 <HAL_ADC_MspInit+0x80>)
 80010dc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80010de:	4a0e      	ldr	r2, [pc, #56]	@ (8001118 <HAL_ADC_MspInit+0x80>)
 80010e0:	f043 0304 	orr.w	r3, r3, #4
 80010e4:	6313      	str	r3, [r2, #48]	@ 0x30
 80010e6:	4b0c      	ldr	r3, [pc, #48]	@ (8001118 <HAL_ADC_MspInit+0x80>)
 80010e8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80010ea:	f003 0304 	and.w	r3, r3, #4
 80010ee:	60fb      	str	r3, [r7, #12]
 80010f0:	68fb      	ldr	r3, [r7, #12]
    /**ADC1 GPIO Configuration
    PC0     ------> ADC1_IN10
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 80010f2:	2301      	movs	r3, #1
 80010f4:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80010f6:	2303      	movs	r3, #3
 80010f8:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80010fa:	2300      	movs	r3, #0
 80010fc:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80010fe:	f107 0314 	add.w	r3, r7, #20
 8001102:	4619      	mov	r1, r3
 8001104:	4805      	ldr	r0, [pc, #20]	@ (800111c <HAL_ADC_MspInit+0x84>)
 8001106:	f002 fdbf 	bl	8003c88 <HAL_GPIO_Init>

  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }
}
 800110a:	bf00      	nop
 800110c:	3728      	adds	r7, #40	@ 0x28
 800110e:	46bd      	mov	sp, r7
 8001110:	bd80      	pop	{r7, pc}
 8001112:	bf00      	nop
 8001114:	40012000 	.word	0x40012000
 8001118:	40023800 	.word	0x40023800
 800111c:	40020800 	.word	0x40020800

08001120 <Bluetooth_Init>:
static uint8_t rx_byte;

static uint16_t global_motor_speed = 450;  // 기본 속도

void Bluetooth_Init(void)
{
 8001120:	b580      	push	{r7, lr}
 8001122:	af00      	add	r7, sp, #0
    HAL_UART_Receive_IT(&huart1, &rx_byte, 1);
 8001124:	2201      	movs	r2, #1
 8001126:	4903      	ldr	r1, [pc, #12]	@ (8001134 <Bluetooth_Init+0x14>)
 8001128:	4803      	ldr	r0, [pc, #12]	@ (8001138 <Bluetooth_Init+0x18>)
 800112a:	f005 fee6 	bl	8006efa <HAL_UART_Receive_IT>
}
 800112e:	bf00      	nop
 8001130:	bd80      	pop	{r7, pc}
 8001132:	bf00      	nop
 8001134:	20000240 	.word	0x20000240
 8001138:	20000448 	.word	0x20000448

0800113c <Bluetooth_RxCallback>:

void Bluetooth_RxCallback(void)
{
 800113c:	b580      	push	{r7, lr}
 800113e:	b082      	sub	sp, #8
 8001140:	af00      	add	r7, sp, #0
    if (rx_byte >= 32 && rx_byte <= 126)  // 유효한 문자
 8001142:	4b14      	ldr	r3, [pc, #80]	@ (8001194 <Bluetooth_RxCallback+0x58>)
 8001144:	781b      	ldrb	r3, [r3, #0]
 8001146:	2b1f      	cmp	r3, #31
 8001148:	d91b      	bls.n	8001182 <Bluetooth_RxCallback+0x46>
 800114a:	4b12      	ldr	r3, [pc, #72]	@ (8001194 <Bluetooth_RxCallback+0x58>)
 800114c:	781b      	ldrb	r3, [r3, #0]
 800114e:	2b7e      	cmp	r3, #126	@ 0x7e
 8001150:	d817      	bhi.n	8001182 <Bluetooth_RxCallback+0x46>
    {
        char command[2] = {0};
 8001152:	2300      	movs	r3, #0
 8001154:	80bb      	strh	r3, [r7, #4]
        command[0] = tolower((char)rx_byte);
 8001156:	4b0f      	ldr	r3, [pc, #60]	@ (8001194 <Bluetooth_RxCallback+0x58>)
 8001158:	781b      	ldrb	r3, [r3, #0]
 800115a:	71fb      	strb	r3, [r7, #7]
 800115c:	79fb      	ldrb	r3, [r7, #7]
 800115e:	3301      	adds	r3, #1
 8001160:	4a0d      	ldr	r2, [pc, #52]	@ (8001198 <Bluetooth_RxCallback+0x5c>)
 8001162:	4413      	add	r3, r2
 8001164:	781b      	ldrb	r3, [r3, #0]
 8001166:	f003 0303 	and.w	r3, r3, #3
 800116a:	2b01      	cmp	r3, #1
 800116c:	d102      	bne.n	8001174 <Bluetooth_RxCallback+0x38>
 800116e:	79fb      	ldrb	r3, [r7, #7]
 8001170:	3320      	adds	r3, #32
 8001172:	e000      	b.n	8001176 <Bluetooth_RxCallback+0x3a>
 8001174:	79fb      	ldrb	r3, [r7, #7]
 8001176:	b2db      	uxtb	r3, r3
 8001178:	713b      	strb	r3, [r7, #4]
        Parse_Command(command);  // 단일 문자로 파싱
 800117a:	1d3b      	adds	r3, r7, #4
 800117c:	4618      	mov	r0, r3
 800117e:	f000 f80f 	bl	80011a0 <Parse_Command>
    }

    // 다음 수신 대기
    HAL_UART_Receive_IT(&huart1, &rx_byte, 1);
 8001182:	2201      	movs	r2, #1
 8001184:	4903      	ldr	r1, [pc, #12]	@ (8001194 <Bluetooth_RxCallback+0x58>)
 8001186:	4805      	ldr	r0, [pc, #20]	@ (800119c <Bluetooth_RxCallback+0x60>)
 8001188:	f005 feb7 	bl	8006efa <HAL_UART_Receive_IT>
}
 800118c:	bf00      	nop
 800118e:	3708      	adds	r7, #8
 8001190:	46bd      	mov	sp, r7
 8001192:	bd80      	pop	{r7, pc}
 8001194:	20000240 	.word	0x20000240
 8001198:	0800e208 	.word	0x0800e208
 800119c:	20000448 	.word	0x20000448

080011a0 <Parse_Command>:



void Parse_Command(const char* cmd)
{
 80011a0:	b580      	push	{r7, lr}
 80011a2:	b0a6      	sub	sp, #152	@ 0x98
 80011a4:	af02      	add	r7, sp, #8
 80011a6:	6078      	str	r0, [r7, #4]
	char msgs[64];
	snprintf(msgs, sizeof(msgs), "[DEBUG] Set speed: %d\r\n", global_motor_speed);
 80011a8:	4b9c      	ldr	r3, [pc, #624]	@ (800141c <Parse_Command+0x27c>)
 80011aa:	881b      	ldrh	r3, [r3, #0]
 80011ac:	f107 004c 	add.w	r0, r7, #76	@ 0x4c
 80011b0:	4a9b      	ldr	r2, [pc, #620]	@ (8001420 <Parse_Command+0x280>)
 80011b2:	2140      	movs	r1, #64	@ 0x40
 80011b4:	f00a fb08 	bl	800b7c8 <sniprintf>
	HAL_UART_Transmit(&huart2, (uint8_t*)msgs, strlen(msgs), HAL_MAX_DELAY);
 80011b8:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 80011bc:	4618      	mov	r0, r3
 80011be:	f7ff f877 	bl	80002b0 <strlen>
 80011c2:	4603      	mov	r3, r0
 80011c4:	b29a      	uxth	r2, r3
 80011c6:	f107 014c 	add.w	r1, r7, #76	@ 0x4c
 80011ca:	f04f 33ff 	mov.w	r3, #4294967295
 80011ce:	4895      	ldr	r0, [pc, #596]	@ (8001424 <Parse_Command+0x284>)
 80011d0:	f005 fe08 	bl	8006de4 <HAL_UART_Transmit>

    char c = cmd[0];
 80011d4:	687b      	ldr	r3, [r7, #4]
 80011d6:	781b      	ldrb	r3, [r3, #0]
 80011d8:	f887 308f 	strb.w	r3, [r7, #143]	@ 0x8f
    uint8_t msg;

    switch (c)
 80011dc:	f897 308f 	ldrb.w	r3, [r7, #143]	@ 0x8f
 80011e0:	3b61      	subs	r3, #97	@ 0x61
 80011e2:	2b12      	cmp	r3, #18
 80011e4:	f200 8097 	bhi.w	8001316 <Parse_Command+0x176>
 80011e8:	a201      	add	r2, pc, #4	@ (adr r2, 80011f0 <Parse_Command+0x50>)
 80011ea:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80011ee:	bf00      	nop
 80011f0:	080012fb 	.word	0x080012fb
 80011f4:	08001263 	.word	0x08001263
 80011f8:	08001317 	.word	0x08001317
 80011fc:	08001317 	.word	0x08001317
 8001200:	08001303 	.word	0x08001303
 8001204:	0800123d 	.word	0x0800123d
 8001208:	08001317 	.word	0x08001317
 800120c:	08001317 	.word	0x08001317
 8001210:	0800130d 	.word	0x0800130d
 8001214:	08001317 	.word	0x08001317
 8001218:	08001317 	.word	0x08001317
 800121c:	08001289 	.word	0x08001289
 8001220:	08001317 	.word	0x08001317
 8001224:	08001317 	.word	0x08001317
 8001228:	08001317 	.word	0x08001317
 800122c:	08001317 	.word	0x08001317
 8001230:	08001317 	.word	0x08001317
 8001234:	080012af 	.word	0x080012af
 8001238:	080012d5 	.word	0x080012d5
    {
    case 'f':
           msg = 'F';
 800123c:	2346      	movs	r3, #70	@ 0x46
 800123e:	f887 304b 	strb.w	r3, [r7, #75]	@ 0x4b
           xQueueSendFromISR(motorQueueHandle, &msg, NULL);
 8001242:	4b79      	ldr	r3, [pc, #484]	@ (8001428 <Parse_Command+0x288>)
 8001244:	6818      	ldr	r0, [r3, #0]
 8001246:	f107 014b 	add.w	r1, r7, #75	@ 0x4b
 800124a:	2300      	movs	r3, #0
 800124c:	2200      	movs	r2, #0
 800124e:	f007 fb5b 	bl	8008908 <xQueueGenericSendFromISR>
           HAL_UART_Transmit(&huart2, (uint8_t*)"[BLE_CMD]: Forward\r\n", 18, HAL_MAX_DELAY);
 8001252:	f04f 33ff 	mov.w	r3, #4294967295
 8001256:	2212      	movs	r2, #18
 8001258:	4974      	ldr	r1, [pc, #464]	@ (800142c <Parse_Command+0x28c>)
 800125a:	4872      	ldr	r0, [pc, #456]	@ (8001424 <Parse_Command+0x284>)
 800125c:	f005 fdc2 	bl	8006de4 <HAL_UART_Transmit>
           break;
 8001260:	e06f      	b.n	8001342 <Parse_Command+0x1a2>
       case 'b':
           msg = 'B';
 8001262:	2342      	movs	r3, #66	@ 0x42
 8001264:	f887 304b 	strb.w	r3, [r7, #75]	@ 0x4b
           xQueueSendFromISR(motorQueueHandle, &msg, NULL);
 8001268:	4b6f      	ldr	r3, [pc, #444]	@ (8001428 <Parse_Command+0x288>)
 800126a:	6818      	ldr	r0, [r3, #0]
 800126c:	f107 014b 	add.w	r1, r7, #75	@ 0x4b
 8001270:	2300      	movs	r3, #0
 8001272:	2200      	movs	r2, #0
 8001274:	f007 fb48 	bl	8008908 <xQueueGenericSendFromISR>
           HAL_UART_Transmit(&huart2, (uint8_t*)"[BLE_CMD]: Backward\r\n", 19, HAL_MAX_DELAY);
 8001278:	f04f 33ff 	mov.w	r3, #4294967295
 800127c:	2213      	movs	r2, #19
 800127e:	496c      	ldr	r1, [pc, #432]	@ (8001430 <Parse_Command+0x290>)
 8001280:	4868      	ldr	r0, [pc, #416]	@ (8001424 <Parse_Command+0x284>)
 8001282:	f005 fdaf 	bl	8006de4 <HAL_UART_Transmit>
           break;
 8001286:	e05c      	b.n	8001342 <Parse_Command+0x1a2>
       case 'l':
           msg = 'L';
 8001288:	234c      	movs	r3, #76	@ 0x4c
 800128a:	f887 304b 	strb.w	r3, [r7, #75]	@ 0x4b
           xQueueSendFromISR(motorQueueHandle, &msg, NULL);
 800128e:	4b66      	ldr	r3, [pc, #408]	@ (8001428 <Parse_Command+0x288>)
 8001290:	6818      	ldr	r0, [r3, #0]
 8001292:	f107 014b 	add.w	r1, r7, #75	@ 0x4b
 8001296:	2300      	movs	r3, #0
 8001298:	2200      	movs	r2, #0
 800129a:	f007 fb35 	bl	8008908 <xQueueGenericSendFromISR>
           HAL_UART_Transmit(&huart2, (uint8_t*)"[BLE_CMD]: Left\r\n", 16, HAL_MAX_DELAY);
 800129e:	f04f 33ff 	mov.w	r3, #4294967295
 80012a2:	2210      	movs	r2, #16
 80012a4:	4963      	ldr	r1, [pc, #396]	@ (8001434 <Parse_Command+0x294>)
 80012a6:	485f      	ldr	r0, [pc, #380]	@ (8001424 <Parse_Command+0x284>)
 80012a8:	f005 fd9c 	bl	8006de4 <HAL_UART_Transmit>
           break;
 80012ac:	e049      	b.n	8001342 <Parse_Command+0x1a2>
       case 'r':
           msg = 'R';
 80012ae:	2352      	movs	r3, #82	@ 0x52
 80012b0:	f887 304b 	strb.w	r3, [r7, #75]	@ 0x4b
           xQueueSendFromISR(motorQueueHandle, &msg, NULL);
 80012b4:	4b5c      	ldr	r3, [pc, #368]	@ (8001428 <Parse_Command+0x288>)
 80012b6:	6818      	ldr	r0, [r3, #0]
 80012b8:	f107 014b 	add.w	r1, r7, #75	@ 0x4b
 80012bc:	2300      	movs	r3, #0
 80012be:	2200      	movs	r2, #0
 80012c0:	f007 fb22 	bl	8008908 <xQueueGenericSendFromISR>
           HAL_UART_Transmit(&huart2, (uint8_t*)"[BLE_CMD]: Right\r\n", 17, HAL_MAX_DELAY);
 80012c4:	f04f 33ff 	mov.w	r3, #4294967295
 80012c8:	2211      	movs	r2, #17
 80012ca:	495b      	ldr	r1, [pc, #364]	@ (8001438 <Parse_Command+0x298>)
 80012cc:	4855      	ldr	r0, [pc, #340]	@ (8001424 <Parse_Command+0x284>)
 80012ce:	f005 fd89 	bl	8006de4 <HAL_UART_Transmit>
           break;
 80012d2:	e036      	b.n	8001342 <Parse_Command+0x1a2>
       case 's':
           msg = 'S';
 80012d4:	2353      	movs	r3, #83	@ 0x53
 80012d6:	f887 304b 	strb.w	r3, [r7, #75]	@ 0x4b
           xQueueSendFromISR(motorQueueHandle, &msg, NULL);
 80012da:	4b53      	ldr	r3, [pc, #332]	@ (8001428 <Parse_Command+0x288>)
 80012dc:	6818      	ldr	r0, [r3, #0]
 80012de:	f107 014b 	add.w	r1, r7, #75	@ 0x4b
 80012e2:	2300      	movs	r3, #0
 80012e4:	2200      	movs	r2, #0
 80012e6:	f007 fb0f 	bl	8008908 <xQueueGenericSendFromISR>
           HAL_UART_Transmit(&huart2, (uint8_t*)"[BLE_CMD]: Stop\r\n", 16, HAL_MAX_DELAY);
 80012ea:	f04f 33ff 	mov.w	r3, #4294967295
 80012ee:	2210      	movs	r2, #16
 80012f0:	4952      	ldr	r1, [pc, #328]	@ (800143c <Parse_Command+0x29c>)
 80012f2:	484c      	ldr	r0, [pc, #304]	@ (8001424 <Parse_Command+0x284>)
 80012f4:	f005 fd76 	bl	8006de4 <HAL_UART_Transmit>
           break;
 80012f8:	e023      	b.n	8001342 <Parse_Command+0x1a2>
        case 'a':
            global_motor_speed = 200;
 80012fa:	4b48      	ldr	r3, [pc, #288]	@ (800141c <Parse_Command+0x27c>)
 80012fc:	22c8      	movs	r2, #200	@ 0xc8
 80012fe:	801a      	strh	r2, [r3, #0]
            break;
 8001300:	e01f      	b.n	8001342 <Parse_Command+0x1a2>
        case 'e':
            global_motor_speed = 450;
 8001302:	4b46      	ldr	r3, [pc, #280]	@ (800141c <Parse_Command+0x27c>)
 8001304:	f44f 72e1 	mov.w	r2, #450	@ 0x1c2
 8001308:	801a      	strh	r2, [r3, #0]
            break;
 800130a:	e01a      	b.n	8001342 <Parse_Command+0x1a2>
        case 'i':
            global_motor_speed = 600;
 800130c:	4b43      	ldr	r3, [pc, #268]	@ (800141c <Parse_Command+0x27c>)
 800130e:	f44f 7216 	mov.w	r2, #600	@ 0x258
 8001312:	801a      	strh	r2, [r3, #0]
            break;
 8001314:	e015      	b.n	8001342 <Parse_Command+0x1a2>
        default:
        {
            char err_msg[64];
            snprintf(err_msg, sizeof(err_msg), "[BLE_ERROR] '%s' was not defined\r\n", cmd);
 8001316:	f107 0008 	add.w	r0, r7, #8
 800131a:	687b      	ldr	r3, [r7, #4]
 800131c:	4a48      	ldr	r2, [pc, #288]	@ (8001440 <Parse_Command+0x2a0>)
 800131e:	2140      	movs	r1, #64	@ 0x40
 8001320:	f00a fa52 	bl	800b7c8 <sniprintf>
            HAL_UART_Transmit(&huart2, (uint8_t*)err_msg, strlen(err_msg), HAL_MAX_DELAY);
 8001324:	f107 0308 	add.w	r3, r7, #8
 8001328:	4618      	mov	r0, r3
 800132a:	f7fe ffc1 	bl	80002b0 <strlen>
 800132e:	4603      	mov	r3, r0
 8001330:	b29a      	uxth	r2, r3
 8001332:	f107 0108 	add.w	r1, r7, #8
 8001336:	f04f 33ff 	mov.w	r3, #4294967295
 800133a:	483a      	ldr	r0, [pc, #232]	@ (8001424 <Parse_Command+0x284>)
 800133c:	f005 fd52 	bl	8006de4 <HAL_UART_Transmit>
            return;
 8001340:	e069      	b.n	8001416 <Parse_Command+0x276>
        }

    }

    // 속도 설정 메시지 출력 (속도 명령어일 때만)
    if (c == 'a' || c == 'e' || c == 'i')
 8001342:	f897 308f 	ldrb.w	r3, [r7, #143]	@ 0x8f
 8001346:	2b61      	cmp	r3, #97	@ 0x61
 8001348:	d007      	beq.n	800135a <Parse_Command+0x1ba>
 800134a:	f897 308f 	ldrb.w	r3, [r7, #143]	@ 0x8f
 800134e:	2b65      	cmp	r3, #101	@ 0x65
 8001350:	d003      	beq.n	800135a <Parse_Command+0x1ba>
 8001352:	f897 308f 	ldrb.w	r3, [r7, #143]	@ 0x8f
 8001356:	2b69      	cmp	r3, #105	@ 0x69
 8001358:	d15d      	bne.n	8001416 <Parse_Command+0x276>
    {
    	switch (current_motor_cmd)
 800135a:	4b3a      	ldr	r3, [pc, #232]	@ (8001444 <Parse_Command+0x2a4>)
 800135c:	781b      	ldrb	r3, [r3, #0]
 800135e:	3b42      	subs	r3, #66	@ 0x42
 8001360:	2b10      	cmp	r3, #16
 8001362:	d83d      	bhi.n	80013e0 <Parse_Command+0x240>
 8001364:	a201      	add	r2, pc, #4	@ (adr r2, 800136c <Parse_Command+0x1cc>)
 8001366:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800136a:	bf00      	nop
 800136c:	080013bd 	.word	0x080013bd
 8001370:	080013e1 	.word	0x080013e1
 8001374:	080013e1 	.word	0x080013e1
 8001378:	080013e1 	.word	0x080013e1
 800137c:	080013b1 	.word	0x080013b1
 8001380:	080013e1 	.word	0x080013e1
 8001384:	080013e1 	.word	0x080013e1
 8001388:	080013e1 	.word	0x080013e1
 800138c:	080013e1 	.word	0x080013e1
 8001390:	080013e1 	.word	0x080013e1
 8001394:	080013c9 	.word	0x080013c9
 8001398:	080013e1 	.word	0x080013e1
 800139c:	080013e1 	.word	0x080013e1
 80013a0:	080013e1 	.word	0x080013e1
 80013a4:	080013e1 	.word	0x080013e1
 80013a8:	080013e1 	.word	0x080013e1
 80013ac:	080013d5 	.word	0x080013d5
    	{
			case 'F': Motor_Forward(global_motor_speed); break;
 80013b0:	4b1a      	ldr	r3, [pc, #104]	@ (800141c <Parse_Command+0x27c>)
 80013b2:	881b      	ldrh	r3, [r3, #0]
 80013b4:	4618      	mov	r0, r3
 80013b6:	f000 fcbd 	bl	8001d34 <Motor_Forward>
 80013ba:	e011      	b.n	80013e0 <Parse_Command+0x240>
			case 'B': Motor_Backward(global_motor_speed); break;
 80013bc:	4b17      	ldr	r3, [pc, #92]	@ (800141c <Parse_Command+0x27c>)
 80013be:	881b      	ldrh	r3, [r3, #0]
 80013c0:	4618      	mov	r0, r3
 80013c2:	f000 fcd1 	bl	8001d68 <Motor_Backward>
 80013c6:	e00b      	b.n	80013e0 <Parse_Command+0x240>
			case 'L': Motor_Left(global_motor_speed); break;
 80013c8:	4b14      	ldr	r3, [pc, #80]	@ (800141c <Parse_Command+0x27c>)
 80013ca:	881b      	ldrh	r3, [r3, #0]
 80013cc:	4618      	mov	r0, r3
 80013ce:	f000 fce5 	bl	8001d9c <Motor_Left>
 80013d2:	e005      	b.n	80013e0 <Parse_Command+0x240>
			case 'R': Motor_Right(global_motor_speed); break;
 80013d4:	4b11      	ldr	r3, [pc, #68]	@ (800141c <Parse_Command+0x27c>)
 80013d6:	881b      	ldrh	r3, [r3, #0]
 80013d8:	4618      	mov	r0, r3
 80013da:	f000 fcf3 	bl	8001dc4 <Motor_Right>
 80013de:	bf00      	nop
    	}

        char ok_msg[64];
        snprintf(ok_msg, sizeof(ok_msg), "[BLE] Speed set: %d (CMD: %c)\r\n", global_motor_speed, c);
 80013e0:	4b0e      	ldr	r3, [pc, #56]	@ (800141c <Parse_Command+0x27c>)
 80013e2:	881b      	ldrh	r3, [r3, #0]
 80013e4:	461a      	mov	r2, r3
 80013e6:	f897 308f 	ldrb.w	r3, [r7, #143]	@ 0x8f
 80013ea:	f107 0008 	add.w	r0, r7, #8
 80013ee:	9300      	str	r3, [sp, #0]
 80013f0:	4613      	mov	r3, r2
 80013f2:	4a15      	ldr	r2, [pc, #84]	@ (8001448 <Parse_Command+0x2a8>)
 80013f4:	2140      	movs	r1, #64	@ 0x40
 80013f6:	f00a f9e7 	bl	800b7c8 <sniprintf>
        HAL_UART_Transmit(&huart2, (uint8_t*)ok_msg, strlen(ok_msg), HAL_MAX_DELAY);
 80013fa:	f107 0308 	add.w	r3, r7, #8
 80013fe:	4618      	mov	r0, r3
 8001400:	f7fe ff56 	bl	80002b0 <strlen>
 8001404:	4603      	mov	r3, r0
 8001406:	b29a      	uxth	r2, r3
 8001408:	f107 0108 	add.w	r1, r7, #8
 800140c:	f04f 33ff 	mov.w	r3, #4294967295
 8001410:	4804      	ldr	r0, [pc, #16]	@ (8001424 <Parse_Command+0x284>)
 8001412:	f005 fce7 	bl	8006de4 <HAL_UART_Transmit>
    }
}
 8001416:	3790      	adds	r7, #144	@ 0x90
 8001418:	46bd      	mov	sp, r7
 800141a:	bd80      	pop	{r7, pc}
 800141c:	20000000 	.word	0x20000000
 8001420:	0800deb0 	.word	0x0800deb0
 8001424:	20000490 	.word	0x20000490
 8001428:	20000250 	.word	0x20000250
 800142c:	0800dec8 	.word	0x0800dec8
 8001430:	0800dee0 	.word	0x0800dee0
 8001434:	0800def8 	.word	0x0800def8
 8001438:	0800df0c 	.word	0x0800df0c
 800143c:	0800df20 	.word	0x0800df20
 8001440:	0800df34 	.word	0x0800df34
 8001444:	20000002 	.word	0x20000002
 8001448:	0800df58 	.word	0x0800df58

0800144c <Bluetooth_GetSpeed>:


uint16_t Bluetooth_GetSpeed(void)
{
 800144c:	b480      	push	{r7}
 800144e:	af00      	add	r7, sp, #0
    return global_motor_speed;
 8001450:	4b03      	ldr	r3, [pc, #12]	@ (8001460 <Bluetooth_GetSpeed+0x14>)
 8001452:	881b      	ldrh	r3, [r3, #0]
}
 8001454:	4618      	mov	r0, r3
 8001456:	46bd      	mov	sp, r7
 8001458:	f85d 7b04 	ldr.w	r7, [sp], #4
 800145c:	4770      	bx	lr
 800145e:	bf00      	nop
 8001460:	20000000 	.word	0x20000000

08001464 <SensorLogPrinter>:
void StartUARTTask(void *argument);
void StartMotorTask(void *argument);

// 센서 로그 콜백 함수
void SensorLogPrinter(const char* msg)
{
 8001464:	b580      	push	{r7, lr}
 8001466:	b0a2      	sub	sp, #136	@ 0x88
 8001468:	af00      	add	r7, sp, #0
 800146a:	6078      	str	r0, [r7, #4]
    char buf[128];
    snprintf(buf, sizeof(buf), "[SENSOR LOG] %s\r\n", msg);
 800146c:	f107 0008 	add.w	r0, r7, #8
 8001470:	687b      	ldr	r3, [r7, #4]
 8001472:	4a0b      	ldr	r2, [pc, #44]	@ (80014a0 <SensorLogPrinter+0x3c>)
 8001474:	2180      	movs	r1, #128	@ 0x80
 8001476:	f00a f9a7 	bl	800b7c8 <sniprintf>
    HAL_UART_Transmit(&huart2, (uint8_t*)buf, strlen(buf), HAL_MAX_DELAY);
 800147a:	f107 0308 	add.w	r3, r7, #8
 800147e:	4618      	mov	r0, r3
 8001480:	f7fe ff16 	bl	80002b0 <strlen>
 8001484:	4603      	mov	r3, r0
 8001486:	b29a      	uxth	r2, r3
 8001488:	f107 0108 	add.w	r1, r7, #8
 800148c:	f04f 33ff 	mov.w	r3, #4294967295
 8001490:	4804      	ldr	r0, [pc, #16]	@ (80014a4 <SensorLogPrinter+0x40>)
 8001492:	f005 fca7 	bl	8006de4 <HAL_UART_Transmit>
}
 8001496:	bf00      	nop
 8001498:	3788      	adds	r7, #136	@ 0x88
 800149a:	46bd      	mov	sp, r7
 800149c:	bd80      	pop	{r7, pc}
 800149e:	bf00      	nop
 80014a0:	0800dfd0 	.word	0x0800dfd0
 80014a4:	20000490 	.word	0x20000490

080014a8 <MX_FREERTOS_Init>:
/**
  * @brief  FreeRTOS Initialization
  * @retval None
  */
void MX_FREERTOS_Init(void)
{
 80014a8:	b580      	push	{r7, lr}
 80014aa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN init */
  // ---- 센서 로그 콜백 설정 + 센서 초기화 ----
  SetSensorLogCallback(SensorLogPrinter);
 80014ac:	4831      	ldr	r0, [pc, #196]	@ (8001574 <MX_FREERTOS_Init+0xcc>)
 80014ae:	f000 feff 	bl	80022b0 <SetSensorLogCallback>
  Sensors_Init();
 80014b2:	f000 ff27 	bl	8002304 <Sensors_Init>

  // ---- MPU6050 초기화 ----
  if (MPU6050_Init())
 80014b6:	f000 fc99 	bl	8001dec <MPU6050_Init>
 80014ba:	4603      	mov	r3, r0
 80014bc:	2b00      	cmp	r3, #0
 80014be:	d007      	beq.n	80014d0 <MX_FREERTOS_Init+0x28>
    HAL_UART_Transmit(&huart2, (uint8_t*)"MPU6050 Init OK\r\n", 18, HAL_MAX_DELAY);
 80014c0:	f04f 33ff 	mov.w	r3, #4294967295
 80014c4:	2212      	movs	r2, #18
 80014c6:	492c      	ldr	r1, [pc, #176]	@ (8001578 <MX_FREERTOS_Init+0xd0>)
 80014c8:	482c      	ldr	r0, [pc, #176]	@ (800157c <MX_FREERTOS_Init+0xd4>)
 80014ca:	f005 fc8b 	bl	8006de4 <HAL_UART_Transmit>
 80014ce:	e006      	b.n	80014de <MX_FREERTOS_Init+0x36>
  else
    HAL_UART_Transmit(&huart2, (uint8_t*)"MPU6050 Init FAIL\r\n", 20, HAL_MAX_DELAY);
 80014d0:	f04f 33ff 	mov.w	r3, #4294967295
 80014d4:	2214      	movs	r2, #20
 80014d6:	492a      	ldr	r1, [pc, #168]	@ (8001580 <MX_FREERTOS_Init+0xd8>)
 80014d8:	4828      	ldr	r0, [pc, #160]	@ (800157c <MX_FREERTOS_Init+0xd4>)
 80014da:	f005 fc83 	bl	8006de4 <HAL_UART_Transmit>

  // ---- BLE UART 초기화 ----
  Bluetooth_Init();
 80014de:	f7ff fe1f 	bl	8001120 <Bluetooth_Init>

  // ---- 메시지 큐(센서 로그) 생성 ----
  uartQueueHandle = osMessageQueueNew(8, sizeof(SensorMessage_t), NULL);
 80014e2:	2200      	movs	r2, #0
 80014e4:	f44f 7100 	mov.w	r1, #512	@ 0x200
 80014e8:	2008      	movs	r0, #8
 80014ea:	f006 fdac 	bl	8008046 <osMessageQueueNew>
 80014ee:	4603      	mov	r3, r0
 80014f0:	4a24      	ldr	r2, [pc, #144]	@ (8001584 <MX_FREERTOS_Init+0xdc>)
 80014f2:	6013      	str	r3, [r2, #0]

  // ---- 모터 큐 생성 ----
  motorQueueHandle = xQueueCreate(8, sizeof(uint8_t));
 80014f4:	2200      	movs	r2, #0
 80014f6:	2101      	movs	r1, #1
 80014f8:	2008      	movs	r0, #8
 80014fa:	f007 f8a4 	bl	8008646 <xQueueGenericCreate>
 80014fe:	4603      	mov	r3, r0
 8001500:	4a21      	ldr	r2, [pc, #132]	@ (8001588 <MX_FREERTOS_Init+0xe0>)
 8001502:	6013      	str	r3, [r2, #0]

  // ---- 타이머 4 베이스 스타트 (초음파 측정용) ----
  // 모터 쪽에서는 TIM1/TIM4 등 PWM으로만 쓰고 있다면, 초음파 전용으로 TIM4를 이 형태(프리런)로 사용한다고 가정
  HAL_TIM_Base_Start(&htim4);
 8001504:	4821      	ldr	r0, [pc, #132]	@ (800158c <MX_FREERTOS_Init+0xe4>)
 8001506:	f004 fd03 	bl	8005f10 <HAL_TIM_Base_Start>

  // ---- 태스크 생성들 ----
  // MPU 태스크
  mpuTaskHandle = osThreadNew(StartMPUTask, NULL, &mpuTask_attributes);
 800150a:	4a21      	ldr	r2, [pc, #132]	@ (8001590 <MX_FREERTOS_Init+0xe8>)
 800150c:	2100      	movs	r1, #0
 800150e:	4821      	ldr	r0, [pc, #132]	@ (8001594 <MX_FREERTOS_Init+0xec>)
 8001510:	f006 fcec 	bl	8007eec <osThreadNew>
 8001514:	4603      	mov	r3, r0
 8001516:	4a20      	ldr	r2, [pc, #128]	@ (8001598 <MX_FREERTOS_Init+0xf0>)
 8001518:	6013      	str	r3, [r2, #0]

  // DHT11 태스크 (필요하면 주석 해제)
  // dht11TaskHandle = osThreadNew(StartDHT11Task, NULL, &dht11Task_attributes);

  // CDS 태스크
  cdsTaskHandle = osThreadNew(StartCDSTask, NULL, &cdsTask_attributes);
 800151a:	4a20      	ldr	r2, [pc, #128]	@ (800159c <MX_FREERTOS_Init+0xf4>)
 800151c:	2100      	movs	r1, #0
 800151e:	4820      	ldr	r0, [pc, #128]	@ (80015a0 <MX_FREERTOS_Init+0xf8>)
 8001520:	f006 fce4 	bl	8007eec <osThreadNew>
 8001524:	4603      	mov	r3, r0
 8001526:	4a1f      	ldr	r2, [pc, #124]	@ (80015a4 <MX_FREERTOS_Init+0xfc>)
 8001528:	6013      	str	r3, [r2, #0]

  // 센서 로그(UART) 출력 태스크
  osThreadNew(StartUARTTask, NULL, &uartTask_attributes);
 800152a:	4a1f      	ldr	r2, [pc, #124]	@ (80015a8 <MX_FREERTOS_Init+0x100>)
 800152c:	2100      	movs	r1, #0
 800152e:	481f      	ldr	r0, [pc, #124]	@ (80015ac <MX_FREERTOS_Init+0x104>)
 8001530:	f006 fcdc 	bl	8007eec <osThreadNew>

  // 모터 제어 태스크
  osThreadNew(StartMotorTask, NULL, &motorTask_attributes);
 8001534:	4a1e      	ldr	r2, [pc, #120]	@ (80015b0 <MX_FREERTOS_Init+0x108>)
 8001536:	2100      	movs	r1, #0
 8001538:	481e      	ldr	r0, [pc, #120]	@ (80015b4 <MX_FREERTOS_Init+0x10c>)
 800153a:	f006 fcd7 	bl	8007eec <osThreadNew>

  // ---- 초음파 태스크 3개 생성 ----
  ultrasonicTask1Handle = osThreadNew(UltrasonicTask1, NULL, &ultrasonicTask1_attributes);
 800153e:	4a1e      	ldr	r2, [pc, #120]	@ (80015b8 <MX_FREERTOS_Init+0x110>)
 8001540:	2100      	movs	r1, #0
 8001542:	481e      	ldr	r0, [pc, #120]	@ (80015bc <MX_FREERTOS_Init+0x114>)
 8001544:	f006 fcd2 	bl	8007eec <osThreadNew>
 8001548:	4603      	mov	r3, r0
 800154a:	4a1d      	ldr	r2, [pc, #116]	@ (80015c0 <MX_FREERTOS_Init+0x118>)
 800154c:	6013      	str	r3, [r2, #0]
  ultrasonicTask2Handle = osThreadNew(UltrasonicTask2, NULL, &ultrasonicTask2_attributes);
 800154e:	4a1d      	ldr	r2, [pc, #116]	@ (80015c4 <MX_FREERTOS_Init+0x11c>)
 8001550:	2100      	movs	r1, #0
 8001552:	481d      	ldr	r0, [pc, #116]	@ (80015c8 <MX_FREERTOS_Init+0x120>)
 8001554:	f006 fcca 	bl	8007eec <osThreadNew>
 8001558:	4603      	mov	r3, r0
 800155a:	4a1c      	ldr	r2, [pc, #112]	@ (80015cc <MX_FREERTOS_Init+0x124>)
 800155c:	6013      	str	r3, [r2, #0]
  ultrasonicTask3Handle = osThreadNew(UltrasonicTask3, NULL, &ultrasonicTask3_attributes);
 800155e:	4a1c      	ldr	r2, [pc, #112]	@ (80015d0 <MX_FREERTOS_Init+0x128>)
 8001560:	2100      	movs	r1, #0
 8001562:	481c      	ldr	r0, [pc, #112]	@ (80015d4 <MX_FREERTOS_Init+0x12c>)
 8001564:	f006 fcc2 	bl	8007eec <osThreadNew>
 8001568:	4603      	mov	r3, r0
 800156a:	4a1b      	ldr	r2, [pc, #108]	@ (80015d8 <MX_FREERTOS_Init+0x130>)
 800156c:	6013      	str	r3, [r2, #0]
  /* USER CODE END init */
}
 800156e:	bf00      	nop
 8001570:	bd80      	pop	{r7, pc}
 8001572:	bf00      	nop
 8001574:	08001465 	.word	0x08001465
 8001578:	0800dfe4 	.word	0x0800dfe4
 800157c:	20000490 	.word	0x20000490
 8001580:	0800dff8 	.word	0x0800dff8
 8001584:	2000024c 	.word	0x2000024c
 8001588:	20000250 	.word	0x20000250
 800158c:	20000400 	.word	0x20000400
 8001590:	0800e0f4 	.word	0x0800e0f4
 8001594:	080015dd 	.word	0x080015dd
 8001598:	20000244 	.word	0x20000244
 800159c:	0800e118 	.word	0x0800e118
 80015a0:	080016ed 	.word	0x080016ed
 80015a4:	20000248 	.word	0x20000248
 80015a8:	0800e13c 	.word	0x0800e13c
 80015ac:	08001741 	.word	0x08001741
 80015b0:	0800e160 	.word	0x0800e160
 80015b4:	08001791 	.word	0x08001791
 80015b8:	0800e184 	.word	0x0800e184
 80015bc:	08002cc9 	.word	0x08002cc9
 80015c0:	20000254 	.word	0x20000254
 80015c4:	0800e1a8 	.word	0x0800e1a8
 80015c8:	08002d21 	.word	0x08002d21
 80015cc:	20000258 	.word	0x20000258
 80015d0:	0800e1cc 	.word	0x0800e1cc
 80015d4:	08002d81 	.word	0x08002d81
 80015d8:	2000025c 	.word	0x2000025c

080015dc <StartMPUTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartMPUTask */
void StartMPUTask(void *argument)
{
 80015dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80015e0:	f5ad 7d18 	sub.w	sp, sp, #608	@ 0x260
 80015e4:	af0c      	add	r7, sp, #48	@ 0x30
 80015e6:	f507 730c 	add.w	r3, r7, #560	@ 0x230
 80015ea:	f5a3 7307 	sub.w	r3, r3, #540	@ 0x21c
 80015ee:	6018      	str	r0, [r3, #0]
  /* Infinite loop */
  for(;;)
  {
    MPU6050_Read_Accel();
 80015f0:	f000 fc26 	bl	8001e40 <MPU6050_Read_Accel>
    MPU6050_Read_Gyro();
 80015f4:	f000 fc6a 	bl	8001ecc <MPU6050_Read_Gyro>

    float pitch = MPU6050_CalcPitch();
 80015f8:	f000 fcf6 	bl	8001fe8 <MPU6050_CalcPitch>
 80015fc:	ed87 0a8b 	vstr	s0, [r7, #556]	@ 0x22c
    float roll  = MPU6050_CalcRoll();
 8001600:	f000 fd82 	bl	8002108 <MPU6050_CalcRoll>
 8001604:	ed87 0a8a 	vstr	s0, [r7, #552]	@ 0x228
    float yaw   = MPU6050_CalcYaw(0.02f);
 8001608:	ed9f 0a35 	vldr	s0, [pc, #212]	@ 80016e0 <StartMPUTask+0x104>
 800160c:	f000 fddc 	bl	80021c8 <MPU6050_CalcYaw>
 8001610:	ed87 0a89 	vstr	s0, [r7, #548]	@ 0x224

    int16_t ax = MPU6050_GetAccelX();
 8001614:	f000 fca0 	bl	8001f58 <MPU6050_GetAccelX>
 8001618:	4603      	mov	r3, r0
 800161a:	f8a7 3222 	strh.w	r3, [r7, #546]	@ 0x222
    int16_t ay = MPU6050_GetAccelY();
 800161e:	f000 fca7 	bl	8001f70 <MPU6050_GetAccelY>
 8001622:	4603      	mov	r3, r0
 8001624:	f8a7 3220 	strh.w	r3, [r7, #544]	@ 0x220
    int16_t az = MPU6050_GetAccelZ();
 8001628:	f000 fcae 	bl	8001f88 <MPU6050_GetAccelZ>
 800162c:	4603      	mov	r3, r0
 800162e:	f8a7 321e 	strh.w	r3, [r7, #542]	@ 0x21e
    int16_t gx = MPU6050_GetGyroX();
 8001632:	f000 fcb5 	bl	8001fa0 <MPU6050_GetGyroX>
 8001636:	4603      	mov	r3, r0
 8001638:	f8a7 321c 	strh.w	r3, [r7, #540]	@ 0x21c
    int16_t gy = MPU6050_GetGyroY();
 800163c:	f000 fcbc 	bl	8001fb8 <MPU6050_GetGyroY>
 8001640:	4603      	mov	r3, r0
 8001642:	f8a7 321a 	strh.w	r3, [r7, #538]	@ 0x21a
    int16_t gz = MPU6050_GetGyroZ();
 8001646:	f000 fcc3 	bl	8001fd0 <MPU6050_GetGyroZ>
 800164a:	4603      	mov	r3, r0
 800164c:	f8a7 3218 	strh.w	r3, [r7, #536]	@ 0x218

    SensorMessage_t msg_out;
    snprintf(msg_out.message, sizeof(msg_out.message),
 8001650:	f9b7 a222 	ldrsh.w	sl, [r7, #546]	@ 0x222
 8001654:	f9b7 6220 	ldrsh.w	r6, [r7, #544]	@ 0x220
 8001658:	f9b7 321e 	ldrsh.w	r3, [r7, #542]	@ 0x21e
 800165c:	613b      	str	r3, [r7, #16]
 800165e:	f9b7 221c 	ldrsh.w	r2, [r7, #540]	@ 0x21c
 8001662:	60fa      	str	r2, [r7, #12]
 8001664:	f9b7 121a 	ldrsh.w	r1, [r7, #538]	@ 0x21a
 8001668:	60b9      	str	r1, [r7, #8]
 800166a:	f9b7 0218 	ldrsh.w	r0, [r7, #536]	@ 0x218
 800166e:	6078      	str	r0, [r7, #4]
 8001670:	f8d7 022c 	ldr.w	r0, [r7, #556]	@ 0x22c
 8001674:	f7fe ff88 	bl	8000588 <__aeabi_f2d>
 8001678:	4604      	mov	r4, r0
 800167a:	460d      	mov	r5, r1
 800167c:	f8d7 0228 	ldr.w	r0, [r7, #552]	@ 0x228
 8001680:	f7fe ff82 	bl	8000588 <__aeabi_f2d>
 8001684:	4680      	mov	r8, r0
 8001686:	4689      	mov	r9, r1
 8001688:	f8d7 0224 	ldr.w	r0, [r7, #548]	@ 0x224
 800168c:	f7fe ff7c 	bl	8000588 <__aeabi_f2d>
 8001690:	4602      	mov	r2, r0
 8001692:	460b      	mov	r3, r1
 8001694:	f107 0018 	add.w	r0, r7, #24
 8001698:	e9cd 230a 	strd	r2, r3, [sp, #40]	@ 0x28
 800169c:	e9cd 8908 	strd	r8, r9, [sp, #32]
 80016a0:	e9cd 4506 	strd	r4, r5, [sp, #24]
 80016a4:	687c      	ldr	r4, [r7, #4]
 80016a6:	9404      	str	r4, [sp, #16]
 80016a8:	68b9      	ldr	r1, [r7, #8]
 80016aa:	9103      	str	r1, [sp, #12]
 80016ac:	68fa      	ldr	r2, [r7, #12]
 80016ae:	9202      	str	r2, [sp, #8]
 80016b0:	693b      	ldr	r3, [r7, #16]
 80016b2:	9301      	str	r3, [sp, #4]
 80016b4:	9600      	str	r6, [sp, #0]
 80016b6:	4653      	mov	r3, sl
 80016b8:	4a0a      	ldr	r2, [pc, #40]	@ (80016e4 <StartMPUTask+0x108>)
 80016ba:	f44f 7100 	mov.w	r1, #512	@ 0x200
 80016be:	f00a f883 	bl	800b7c8 <sniprintf>
             " Accel: X=%d Y=%d Z=%d\r\n"
             " Gyro:  X=%d Y=%d Z=%d\r\n"
             " Pitch=%.2f Roll=%.2f Yaw=%.2f\r\n",
             ax, ay, az, gx, gy, gz, pitch, roll, yaw);

    osMessageQueuePut(uartQueueHandle, &msg_out, 0, 0);
 80016c2:	4b09      	ldr	r3, [pc, #36]	@ (80016e8 <StartMPUTask+0x10c>)
 80016c4:	6818      	ldr	r0, [r3, #0]
 80016c6:	f107 0118 	add.w	r1, r7, #24
 80016ca:	2300      	movs	r3, #0
 80016cc:	2200      	movs	r2, #0
 80016ce:	f006 fd2d 	bl	800812c <osMessageQueuePut>

    osDelay(2000);
 80016d2:	f44f 60fa 	mov.w	r0, #2000	@ 0x7d0
 80016d6:	f006 fc9b 	bl	8008010 <osDelay>
  {
 80016da:	bf00      	nop
 80016dc:	e788      	b.n	80015f0 <StartMPUTask+0x14>
 80016de:	bf00      	nop
 80016e0:	3ca3d70a 	.word	0x3ca3d70a
 80016e4:	0800e00c 	.word	0x0800e00c
 80016e8:	2000024c 	.word	0x2000024c

080016ec <StartCDSTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartCDSTask */
void StartCDSTask(void *argument)
{
 80016ec:	b580      	push	{r7, lr}
 80016ee:	f5ad 7d04 	sub.w	sp, sp, #528	@ 0x210
 80016f2:	af00      	add	r7, sp, #0
 80016f4:	f507 7304 	add.w	r3, r7, #528	@ 0x210
 80016f8:	f5a3 7303 	sub.w	r3, r3, #524	@ 0x20c
 80016fc:	6018      	str	r0, [r3, #0]
  /* Infinite loop */
  for(;;)
  {
    SensorMessage_t msg_out;
    uint16_t light = ReadCDS();
 80016fe:	f000 fde7 	bl	80022d0 <ReadCDS>
 8001702:	4603      	mov	r3, r0
 8001704:	f8a7 320e 	strh.w	r3, [r7, #526]	@ 0x20e
    snprintf(msg_out.message, sizeof(msg_out.message),
 8001708:	f8b7 320e 	ldrh.w	r3, [r7, #526]	@ 0x20e
 800170c:	f107 000c 	add.w	r0, r7, #12
 8001710:	4a09      	ldr	r2, [pc, #36]	@ (8001738 <StartCDSTask+0x4c>)
 8001712:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8001716:	f00a f857 	bl	800b7c8 <sniprintf>
             "[CDS] Light Intensity: %d\r\n", light);

    osMessageQueuePut(uartQueueHandle, &msg_out, 0, 0);
 800171a:	4b08      	ldr	r3, [pc, #32]	@ (800173c <StartCDSTask+0x50>)
 800171c:	6818      	ldr	r0, [r3, #0]
 800171e:	f107 010c 	add.w	r1, r7, #12
 8001722:	2300      	movs	r3, #0
 8001724:	2200      	movs	r2, #0
 8001726:	f006 fd01 	bl	800812c <osMessageQueuePut>
    osDelay(2000);
 800172a:	f44f 60fa 	mov.w	r0, #2000	@ 0x7d0
 800172e:	f006 fc6f 	bl	8008010 <osDelay>
  {
 8001732:	bf00      	nop
 8001734:	e7e3      	b.n	80016fe <StartCDSTask+0x12>
 8001736:	bf00      	nop
 8001738:	0800e068 	.word	0x0800e068
 800173c:	2000024c 	.word	0x2000024c

08001740 <StartUARTTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartUARTTask */
void StartUARTTask(void *argument)
{
 8001740:	b580      	push	{r7, lr}
 8001742:	f5ad 7d02 	sub.w	sp, sp, #520	@ 0x208
 8001746:	af00      	add	r7, sp, #0
 8001748:	f507 7302 	add.w	r3, r7, #520	@ 0x208
 800174c:	f5a3 7301 	sub.w	r3, r3, #516	@ 0x204
 8001750:	6018      	str	r0, [r3, #0]
  SensorMessage_t recv_msg;
  for(;;)
  {
    if (osMessageQueueGet(uartQueueHandle, &recv_msg, NULL, osWaitForever) == osOK)
 8001752:	4b0d      	ldr	r3, [pc, #52]	@ (8001788 <StartUARTTask+0x48>)
 8001754:	6818      	ldr	r0, [r3, #0]
 8001756:	f107 0108 	add.w	r1, r7, #8
 800175a:	f04f 33ff 	mov.w	r3, #4294967295
 800175e:	2200      	movs	r2, #0
 8001760:	f006 fd44 	bl	80081ec <osMessageQueueGet>
 8001764:	4603      	mov	r3, r0
 8001766:	2b00      	cmp	r3, #0
 8001768:	d1f3      	bne.n	8001752 <StartUARTTask+0x12>
    {
      HAL_UART_Transmit(&huart2, (uint8_t*)recv_msg.message,
                        strlen(recv_msg.message), HAL_MAX_DELAY);
 800176a:	f107 0308 	add.w	r3, r7, #8
 800176e:	4618      	mov	r0, r3
 8001770:	f7fe fd9e 	bl	80002b0 <strlen>
 8001774:	4603      	mov	r3, r0
      HAL_UART_Transmit(&huart2, (uint8_t*)recv_msg.message,
 8001776:	b29a      	uxth	r2, r3
 8001778:	f107 0108 	add.w	r1, r7, #8
 800177c:	f04f 33ff 	mov.w	r3, #4294967295
 8001780:	4802      	ldr	r0, [pc, #8]	@ (800178c <StartUARTTask+0x4c>)
 8001782:	f005 fb2f 	bl	8006de4 <HAL_UART_Transmit>
    if (osMessageQueueGet(uartQueueHandle, &recv_msg, NULL, osWaitForever) == osOK)
 8001786:	e7e4      	b.n	8001752 <StartUARTTask+0x12>
 8001788:	2000024c 	.word	0x2000024c
 800178c:	20000490 	.word	0x20000490

08001790 <StartMotorTask>:
  */
/* USER CODE END Header_StartMotorTask */

uint8_t current_motor_cmd = 'S'; // 초기 정지 상태
void StartMotorTask(void *argument)
{
 8001790:	b580      	push	{r7, lr}
 8001792:	b084      	sub	sp, #16
 8001794:	af00      	add	r7, sp, #0
 8001796:	6078      	str	r0, [r7, #4]
  Motor_Init();
 8001798:	f000 fa54 	bl	8001c44 <Motor_Init>
  uint8_t cmd;
  for(;;)
  {
    if (xQueueReceive(motorQueueHandle, &cmd, portMAX_DELAY) == pdTRUE)
 800179c:	4b2c      	ldr	r3, [pc, #176]	@ (8001850 <StartMotorTask+0xc0>)
 800179e:	681b      	ldr	r3, [r3, #0]
 80017a0:	f107 010d 	add.w	r1, r7, #13
 80017a4:	f04f 32ff 	mov.w	r2, #4294967295
 80017a8:	4618      	mov	r0, r3
 80017aa:	f007 f94b 	bl	8008a44 <xQueueReceive>
 80017ae:	4603      	mov	r3, r0
 80017b0:	2b01      	cmp	r3, #1
 80017b2:	d1f3      	bne.n	800179c <StartMotorTask+0xc>
    {
      current_motor_cmd = cmd;
 80017b4:	7b7a      	ldrb	r2, [r7, #13]
 80017b6:	4b27      	ldr	r3, [pc, #156]	@ (8001854 <StartMotorTask+0xc4>)
 80017b8:	701a      	strb	r2, [r3, #0]
      uint16_t speed = Bluetooth_GetSpeed();
 80017ba:	f7ff fe47 	bl	800144c <Bluetooth_GetSpeed>
 80017be:	4603      	mov	r3, r0
 80017c0:	81fb      	strh	r3, [r7, #14]
      switch (current_motor_cmd)
 80017c2:	4b24      	ldr	r3, [pc, #144]	@ (8001854 <StartMotorTask+0xc4>)
 80017c4:	781b      	ldrb	r3, [r3, #0]
 80017c6:	3b42      	subs	r3, #66	@ 0x42
 80017c8:	2b11      	cmp	r3, #17
 80017ca:	d83e      	bhi.n	800184a <StartMotorTask+0xba>
 80017cc:	a201      	add	r2, pc, #4	@ (adr r2, 80017d4 <StartMotorTask+0x44>)
 80017ce:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80017d2:	bf00      	nop
 80017d4:	08001827 	.word	0x08001827
 80017d8:	0800184b 	.word	0x0800184b
 80017dc:	0800184b 	.word	0x0800184b
 80017e0:	0800184b 	.word	0x0800184b
 80017e4:	0800181d 	.word	0x0800181d
 80017e8:	0800184b 	.word	0x0800184b
 80017ec:	0800184b 	.word	0x0800184b
 80017f0:	0800184b 	.word	0x0800184b
 80017f4:	0800184b 	.word	0x0800184b
 80017f8:	0800184b 	.word	0x0800184b
 80017fc:	08001831 	.word	0x08001831
 8001800:	0800184b 	.word	0x0800184b
 8001804:	0800184b 	.word	0x0800184b
 8001808:	0800184b 	.word	0x0800184b
 800180c:	0800184b 	.word	0x0800184b
 8001810:	0800184b 	.word	0x0800184b
 8001814:	0800183b 	.word	0x0800183b
 8001818:	08001845 	.word	0x08001845
      {
        case 'F': Motor_Forward(speed); break;
 800181c:	89fb      	ldrh	r3, [r7, #14]
 800181e:	4618      	mov	r0, r3
 8001820:	f000 fa88 	bl	8001d34 <Motor_Forward>
 8001824:	e012      	b.n	800184c <StartMotorTask+0xbc>
        case 'B': Motor_Backward(speed); break;
 8001826:	89fb      	ldrh	r3, [r7, #14]
 8001828:	4618      	mov	r0, r3
 800182a:	f000 fa9d 	bl	8001d68 <Motor_Backward>
 800182e:	e00d      	b.n	800184c <StartMotorTask+0xbc>
        case 'L': Motor_Left(speed); break;
 8001830:	89fb      	ldrh	r3, [r7, #14]
 8001832:	4618      	mov	r0, r3
 8001834:	f000 fab2 	bl	8001d9c <Motor_Left>
 8001838:	e008      	b.n	800184c <StartMotorTask+0xbc>
        case 'R': Motor_Right(speed); break;
 800183a:	89fb      	ldrh	r3, [r7, #14]
 800183c:	4618      	mov	r0, r3
 800183e:	f000 fac1 	bl	8001dc4 <Motor_Right>
 8001842:	e003      	b.n	800184c <StartMotorTask+0xbc>
        case 'S': Motor_Stop(); break;
 8001844:	f000 fa62 	bl	8001d0c <Motor_Stop>
 8001848:	e000      	b.n	800184c <StartMotorTask+0xbc>
        default: break;
 800184a:	bf00      	nop
    if (xQueueReceive(motorQueueHandle, &cmd, portMAX_DELAY) == pdTRUE)
 800184c:	e7a6      	b.n	800179c <StartMotorTask+0xc>
 800184e:	bf00      	nop
 8001850:	20000250 	.word	0x20000250
 8001854:	20000002 	.word	0x20000002

08001858 <MX_GPIO_Init>:
/* USER CODE END 1 */

/** Configure pins
*/
void MX_GPIO_Init(void)
{
 8001858:	b580      	push	{r7, lr}
 800185a:	b088      	sub	sp, #32
 800185c:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800185e:	f107 030c 	add.w	r3, r7, #12
 8001862:	2200      	movs	r2, #0
 8001864:	601a      	str	r2, [r3, #0]
 8001866:	605a      	str	r2, [r3, #4]
 8001868:	609a      	str	r2, [r3, #8]
 800186a:	60da      	str	r2, [r3, #12]
 800186c:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800186e:	2300      	movs	r3, #0
 8001870:	60bb      	str	r3, [r7, #8]
 8001872:	4b41      	ldr	r3, [pc, #260]	@ (8001978 <MX_GPIO_Init+0x120>)
 8001874:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001876:	4a40      	ldr	r2, [pc, #256]	@ (8001978 <MX_GPIO_Init+0x120>)
 8001878:	f043 0304 	orr.w	r3, r3, #4
 800187c:	6313      	str	r3, [r2, #48]	@ 0x30
 800187e:	4b3e      	ldr	r3, [pc, #248]	@ (8001978 <MX_GPIO_Init+0x120>)
 8001880:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001882:	f003 0304 	and.w	r3, r3, #4
 8001886:	60bb      	str	r3, [r7, #8]
 8001888:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800188a:	2300      	movs	r3, #0
 800188c:	607b      	str	r3, [r7, #4]
 800188e:	4b3a      	ldr	r3, [pc, #232]	@ (8001978 <MX_GPIO_Init+0x120>)
 8001890:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001892:	4a39      	ldr	r2, [pc, #228]	@ (8001978 <MX_GPIO_Init+0x120>)
 8001894:	f043 0301 	orr.w	r3, r3, #1
 8001898:	6313      	str	r3, [r2, #48]	@ 0x30
 800189a:	4b37      	ldr	r3, [pc, #220]	@ (8001978 <MX_GPIO_Init+0x120>)
 800189c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800189e:	f003 0301 	and.w	r3, r3, #1
 80018a2:	607b      	str	r3, [r7, #4]
 80018a4:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80018a6:	2300      	movs	r3, #0
 80018a8:	603b      	str	r3, [r7, #0]
 80018aa:	4b33      	ldr	r3, [pc, #204]	@ (8001978 <MX_GPIO_Init+0x120>)
 80018ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80018ae:	4a32      	ldr	r2, [pc, #200]	@ (8001978 <MX_GPIO_Init+0x120>)
 80018b0:	f043 0302 	orr.w	r3, r3, #2
 80018b4:	6313      	str	r3, [r2, #48]	@ 0x30
 80018b6:	4b30      	ldr	r3, [pc, #192]	@ (8001978 <MX_GPIO_Init+0x120>)
 80018b8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80018ba:	f003 0302 	and.w	r3, r3, #2
 80018be:	603b      	str	r3, [r7, #0]
 80018c0:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4, GPIO_PIN_RESET);
 80018c2:	2200      	movs	r2, #0
 80018c4:	2113      	movs	r1, #19
 80018c6:	482d      	ldr	r0, [pc, #180]	@ (800197c <MX_GPIO_Init+0x124>)
 80018c8:	f002 fb8a 	bl	8003fe0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_12|GPIO_PIN_5, GPIO_PIN_RESET);
 80018cc:	2200      	movs	r2, #0
 80018ce:	f241 0121 	movw	r1, #4129	@ 0x1021
 80018d2:	482b      	ldr	r0, [pc, #172]	@ (8001980 <MX_GPIO_Init+0x128>)
 80018d4:	f002 fb84 	bl	8003fe0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_7|GPIO_PIN_9, GPIO_PIN_RESET);
 80018d8:	2200      	movs	r2, #0
 80018da:	f44f 7120 	mov.w	r1, #640	@ 0x280
 80018de:	4829      	ldr	r0, [pc, #164]	@ (8001984 <MX_GPIO_Init+0x12c>)
 80018e0:	f002 fb7e 	bl	8003fe0 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : PA0 PA1 PA4 */
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4;
 80018e4:	2313      	movs	r3, #19
 80018e6:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80018e8:	2301      	movs	r3, #1
 80018ea:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80018ec:	2300      	movs	r3, #0
 80018ee:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80018f0:	2300      	movs	r3, #0
 80018f2:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80018f4:	f107 030c 	add.w	r3, r7, #12
 80018f8:	4619      	mov	r1, r3
 80018fa:	4820      	ldr	r0, [pc, #128]	@ (800197c <MX_GPIO_Init+0x124>)
 80018fc:	f002 f9c4 	bl	8003c88 <HAL_GPIO_Init>

  /*Configure GPIO pins : PB0 PB12 PB5 */
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_12|GPIO_PIN_5;
 8001900:	f241 0321 	movw	r3, #4129	@ 0x1021
 8001904:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001906:	2301      	movs	r3, #1
 8001908:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800190a:	2300      	movs	r3, #0
 800190c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800190e:	2300      	movs	r3, #0
 8001910:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001912:	f107 030c 	add.w	r3, r7, #12
 8001916:	4619      	mov	r1, r3
 8001918:	4819      	ldr	r0, [pc, #100]	@ (8001980 <MX_GPIO_Init+0x128>)
 800191a:	f002 f9b5 	bl	8003c88 <HAL_GPIO_Init>

  /*Configure GPIO pins : PB2 PB3 */
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 800191e:	230c      	movs	r3, #12
 8001920:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001922:	2300      	movs	r3, #0
 8001924:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001926:	2300      	movs	r3, #0
 8001928:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800192a:	f107 030c 	add.w	r3, r7, #12
 800192e:	4619      	mov	r1, r3
 8001930:	4813      	ldr	r0, [pc, #76]	@ (8001980 <MX_GPIO_Init+0x128>)
 8001932:	f002 f9a9 	bl	8003c88 <HAL_GPIO_Init>

  /*Configure GPIO pins : PC6 PC8 */
  GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_8;
 8001936:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800193a:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800193c:	2300      	movs	r3, #0
 800193e:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001940:	2300      	movs	r3, #0
 8001942:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001944:	f107 030c 	add.w	r3, r7, #12
 8001948:	4619      	mov	r1, r3
 800194a:	480e      	ldr	r0, [pc, #56]	@ (8001984 <MX_GPIO_Init+0x12c>)
 800194c:	f002 f99c 	bl	8003c88 <HAL_GPIO_Init>

  /*Configure GPIO pins : PC7 PC9 */
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_9;
 8001950:	f44f 7320 	mov.w	r3, #640	@ 0x280
 8001954:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001956:	2301      	movs	r3, #1
 8001958:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800195a:	2300      	movs	r3, #0
 800195c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800195e:	2300      	movs	r3, #0
 8001960:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001962:	f107 030c 	add.w	r3, r7, #12
 8001966:	4619      	mov	r1, r3
 8001968:	4806      	ldr	r0, [pc, #24]	@ (8001984 <MX_GPIO_Init+0x12c>)
 800196a:	f002 f98d 	bl	8003c88 <HAL_GPIO_Init>

}
 800196e:	bf00      	nop
 8001970:	3720      	adds	r7, #32
 8001972:	46bd      	mov	sp, r7
 8001974:	bd80      	pop	{r7, pc}
 8001976:	bf00      	nop
 8001978:	40023800 	.word	0x40023800
 800197c:	40020000 	.word	0x40020000
 8001980:	40020400 	.word	0x40020400
 8001984:	40020800 	.word	0x40020800

08001988 <MX_I2C1_Init>:

I2C_HandleTypeDef hi2c1;

/* I2C1 init function */
void MX_I2C1_Init(void)
{
 8001988:	b580      	push	{r7, lr}
 800198a:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 800198c:	4b12      	ldr	r3, [pc, #72]	@ (80019d8 <MX_I2C1_Init+0x50>)
 800198e:	4a13      	ldr	r2, [pc, #76]	@ (80019dc <MX_I2C1_Init+0x54>)
 8001990:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 100000;
 8001992:	4b11      	ldr	r3, [pc, #68]	@ (80019d8 <MX_I2C1_Init+0x50>)
 8001994:	4a12      	ldr	r2, [pc, #72]	@ (80019e0 <MX_I2C1_Init+0x58>)
 8001996:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8001998:	4b0f      	ldr	r3, [pc, #60]	@ (80019d8 <MX_I2C1_Init+0x50>)
 800199a:	2200      	movs	r2, #0
 800199c:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 800199e:	4b0e      	ldr	r3, [pc, #56]	@ (80019d8 <MX_I2C1_Init+0x50>)
 80019a0:	2200      	movs	r2, #0
 80019a2:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80019a4:	4b0c      	ldr	r3, [pc, #48]	@ (80019d8 <MX_I2C1_Init+0x50>)
 80019a6:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 80019aa:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80019ac:	4b0a      	ldr	r3, [pc, #40]	@ (80019d8 <MX_I2C1_Init+0x50>)
 80019ae:	2200      	movs	r2, #0
 80019b0:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 80019b2:	4b09      	ldr	r3, [pc, #36]	@ (80019d8 <MX_I2C1_Init+0x50>)
 80019b4:	2200      	movs	r2, #0
 80019b6:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80019b8:	4b07      	ldr	r3, [pc, #28]	@ (80019d8 <MX_I2C1_Init+0x50>)
 80019ba:	2200      	movs	r2, #0
 80019bc:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80019be:	4b06      	ldr	r3, [pc, #24]	@ (80019d8 <MX_I2C1_Init+0x50>)
 80019c0:	2200      	movs	r2, #0
 80019c2:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 80019c4:	4804      	ldr	r0, [pc, #16]	@ (80019d8 <MX_I2C1_Init+0x50>)
 80019c6:	f002 fb25 	bl	8004014 <HAL_I2C_Init>
 80019ca:	4603      	mov	r3, r0
 80019cc:	2b00      	cmp	r3, #0
 80019ce:	d001      	beq.n	80019d4 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 80019d0:	f000 f932 	bl	8001c38 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 80019d4:	bf00      	nop
 80019d6:	bd80      	pop	{r7, pc}
 80019d8:	20000260 	.word	0x20000260
 80019dc:	40005400 	.word	0x40005400
 80019e0:	000186a0 	.word	0x000186a0

080019e4 <HAL_I2C_MspInit>:

void HAL_I2C_MspInit(I2C_HandleTypeDef* i2cHandle)
{
 80019e4:	b580      	push	{r7, lr}
 80019e6:	b08a      	sub	sp, #40	@ 0x28
 80019e8:	af00      	add	r7, sp, #0
 80019ea:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80019ec:	f107 0314 	add.w	r3, r7, #20
 80019f0:	2200      	movs	r2, #0
 80019f2:	601a      	str	r2, [r3, #0]
 80019f4:	605a      	str	r2, [r3, #4]
 80019f6:	609a      	str	r2, [r3, #8]
 80019f8:	60da      	str	r2, [r3, #12]
 80019fa:	611a      	str	r2, [r3, #16]
  if(i2cHandle->Instance==I2C1)
 80019fc:	687b      	ldr	r3, [r7, #4]
 80019fe:	681b      	ldr	r3, [r3, #0]
 8001a00:	4a19      	ldr	r2, [pc, #100]	@ (8001a68 <HAL_I2C_MspInit+0x84>)
 8001a02:	4293      	cmp	r3, r2
 8001a04:	d12b      	bne.n	8001a5e <HAL_I2C_MspInit+0x7a>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001a06:	2300      	movs	r3, #0
 8001a08:	613b      	str	r3, [r7, #16]
 8001a0a:	4b18      	ldr	r3, [pc, #96]	@ (8001a6c <HAL_I2C_MspInit+0x88>)
 8001a0c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001a0e:	4a17      	ldr	r2, [pc, #92]	@ (8001a6c <HAL_I2C_MspInit+0x88>)
 8001a10:	f043 0302 	orr.w	r3, r3, #2
 8001a14:	6313      	str	r3, [r2, #48]	@ 0x30
 8001a16:	4b15      	ldr	r3, [pc, #84]	@ (8001a6c <HAL_I2C_MspInit+0x88>)
 8001a18:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001a1a:	f003 0302 	and.w	r3, r3, #2
 8001a1e:	613b      	str	r3, [r7, #16]
 8001a20:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB6     ------> I2C1_SCL
    PB7     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001a22:	23c0      	movs	r3, #192	@ 0xc0
 8001a24:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001a26:	2312      	movs	r3, #18
 8001a28:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a2a:	2300      	movs	r3, #0
 8001a2c:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001a2e:	2303      	movs	r3, #3
 8001a30:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001a32:	2304      	movs	r3, #4
 8001a34:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a36:	f107 0314 	add.w	r3, r7, #20
 8001a3a:	4619      	mov	r1, r3
 8001a3c:	480c      	ldr	r0, [pc, #48]	@ (8001a70 <HAL_I2C_MspInit+0x8c>)
 8001a3e:	f002 f923 	bl	8003c88 <HAL_GPIO_Init>

    /* I2C1 clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8001a42:	2300      	movs	r3, #0
 8001a44:	60fb      	str	r3, [r7, #12]
 8001a46:	4b09      	ldr	r3, [pc, #36]	@ (8001a6c <HAL_I2C_MspInit+0x88>)
 8001a48:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001a4a:	4a08      	ldr	r2, [pc, #32]	@ (8001a6c <HAL_I2C_MspInit+0x88>)
 8001a4c:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8001a50:	6413      	str	r3, [r2, #64]	@ 0x40
 8001a52:	4b06      	ldr	r3, [pc, #24]	@ (8001a6c <HAL_I2C_MspInit+0x88>)
 8001a54:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001a56:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8001a5a:	60fb      	str	r3, [r7, #12]
 8001a5c:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }
}
 8001a5e:	bf00      	nop
 8001a60:	3728      	adds	r7, #40	@ 0x28
 8001a62:	46bd      	mov	sp, r7
 8001a64:	bd80      	pop	{r7, pc}
 8001a66:	bf00      	nop
 8001a68:	40005400 	.word	0x40005400
 8001a6c:	40023800 	.word	0x40023800
 8001a70:	40020400 	.word	0x40020400

08001a74 <Timer_Accuracy_Test>:
{
	HAL_SPI_Receive_IT(&hspi1, spi1_rx_buf, 1); // 1byte 먼저 수신 대기
}

void Timer_Accuracy_Test() // 타이머 정확도 테스트
{
 8001a74:	b580      	push	{r7, lr}
 8001a76:	b094      	sub	sp, #80	@ 0x50
 8001a78:	af00      	add	r7, sp, #0
    HAL_TIM_Base_Start(&htim2);
 8001a7a:	4819      	ldr	r0, [pc, #100]	@ (8001ae0 <Timer_Accuracy_Test+0x6c>)
 8001a7c:	f004 fa48 	bl	8005f10 <HAL_TIM_Base_Start>
    for (int i = 0; i < 5; i++)
 8001a80:	2300      	movs	r3, #0
 8001a82:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8001a84:	e022      	b.n	8001acc <Timer_Accuracy_Test+0x58>
    {
        uint32_t before = __HAL_TIM_GET_COUNTER(&htim2);
 8001a86:	4b16      	ldr	r3, [pc, #88]	@ (8001ae0 <Timer_Accuracy_Test+0x6c>)
 8001a88:	681b      	ldr	r3, [r3, #0]
 8001a8a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001a8c:	64bb      	str	r3, [r7, #72]	@ 0x48
        HAL_Delay(1000);  // 1초 대기
 8001a8e:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8001a92:	f001 fb21 	bl	80030d8 <HAL_Delay>
        uint32_t after = __HAL_TIM_GET_COUNTER(&htim2);
 8001a96:	4b12      	ldr	r3, [pc, #72]	@ (8001ae0 <Timer_Accuracy_Test+0x6c>)
 8001a98:	681b      	ldr	r3, [r3, #0]
 8001a9a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001a9c:	647b      	str	r3, [r7, #68]	@ 0x44

        char buf[64];
        sprintf(buf, "Timer count in 1s: %lu us\r\n", (after - before));
 8001a9e:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8001aa0:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8001aa2:	1ad2      	subs	r2, r2, r3
 8001aa4:	1d3b      	adds	r3, r7, #4
 8001aa6:	490f      	ldr	r1, [pc, #60]	@ (8001ae4 <Timer_Accuracy_Test+0x70>)
 8001aa8:	4618      	mov	r0, r3
 8001aaa:	f009 fec3 	bl	800b834 <siprintf>
        HAL_UART_Transmit(&huart2, (uint8_t*)buf, strlen(buf), HAL_MAX_DELAY);
 8001aae:	1d3b      	adds	r3, r7, #4
 8001ab0:	4618      	mov	r0, r3
 8001ab2:	f7fe fbfd 	bl	80002b0 <strlen>
 8001ab6:	4603      	mov	r3, r0
 8001ab8:	b29a      	uxth	r2, r3
 8001aba:	1d39      	adds	r1, r7, #4
 8001abc:	f04f 33ff 	mov.w	r3, #4294967295
 8001ac0:	4809      	ldr	r0, [pc, #36]	@ (8001ae8 <Timer_Accuracy_Test+0x74>)
 8001ac2:	f005 f98f 	bl	8006de4 <HAL_UART_Transmit>
    for (int i = 0; i < 5; i++)
 8001ac6:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8001ac8:	3301      	adds	r3, #1
 8001aca:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8001acc:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8001ace:	2b04      	cmp	r3, #4
 8001ad0:	ddd9      	ble.n	8001a86 <Timer_Accuracy_Test+0x12>
    }
    HAL_TIM_Base_Stop(&htim2);
 8001ad2:	4803      	ldr	r0, [pc, #12]	@ (8001ae0 <Timer_Accuracy_Test+0x6c>)
 8001ad4:	f004 fa84 	bl	8005fe0 <HAL_TIM_Base_Stop>
}
 8001ad8:	bf00      	nop
 8001ada:	3750      	adds	r7, #80	@ 0x50
 8001adc:	46bd      	mov	sp, r7
 8001ade:	bd80      	pop	{r7, pc}
 8001ae0:	20000370 	.word	0x20000370
 8001ae4:	0800e084 	.word	0x0800e084
 8001ae8:	20000490 	.word	0x20000490

08001aec <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001aec:	b580      	push	{r7, lr}
 8001aee:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001af0:	f001 fa80 	bl	8002ff4 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001af4:	f000 f81e 	bl	8001b34 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001af8:	f7ff feae 	bl	8001858 <MX_GPIO_Init>
  MX_SPI1_Init();
 8001afc:	f000 fc0c 	bl	8002318 <MX_SPI1_Init>
  MX_TIM1_Init();
 8001b00:	f000 fdd6 	bl	80026b0 <MX_TIM1_Init>
  MX_USART2_UART_Init();
 8001b04:	f001 f996 	bl	8002e34 <MX_USART2_UART_Init>
  MX_TIM2_Init();
 8001b08:	f000 fe72 	bl	80027f0 <MX_TIM2_Init>
  MX_ADC1_Init();
 8001b0c:	f7ff fa72 	bl	8000ff4 <MX_ADC1_Init>
  MX_USART1_UART_Init();
 8001b10:	f001 f966 	bl	8002de0 <MX_USART1_UART_Init>
  MX_I2C1_Init();
 8001b14:	f7ff ff38 	bl	8001988 <MX_I2C1_Init>
  MX_TIM3_Init();
 8001b18:	f000 feb6 	bl	8002888 <MX_TIM3_Init>
  MX_TIM4_Init();
 8001b1c:	f000 ff0e 	bl	800293c <MX_TIM4_Init>
  /* USER CODE BEGIN 2 */

  // 타이머 정확도 테스트 실행
  Timer_Accuracy_Test();
 8001b20:	f7ff ffa8 	bl	8001a74 <Timer_Accuracy_Test>

  /* USER CODE END 2 */

  /* Init scheduler */
  osKernelInitialize();
 8001b24:	f006 f998 	bl	8007e58 <osKernelInitialize>

  /* Call init function for freertos objects (in cmsis_os2.c) */
  MX_FREERTOS_Init();
 8001b28:	f7ff fcbe 	bl	80014a8 <MX_FREERTOS_Init>

  /* Start scheduler */
  osKernelStart();
 8001b2c:	f006 f9b8 	bl	8007ea0 <osKernelStart>

  /* We should never get here as control is now taken by the scheduler */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 8001b30:	bf00      	nop
 8001b32:	e7fd      	b.n	8001b30 <main+0x44>

08001b34 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001b34:	b580      	push	{r7, lr}
 8001b36:	b094      	sub	sp, #80	@ 0x50
 8001b38:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001b3a:	f107 031c 	add.w	r3, r7, #28
 8001b3e:	2234      	movs	r2, #52	@ 0x34
 8001b40:	2100      	movs	r1, #0
 8001b42:	4618      	mov	r0, r3
 8001b44:	f009 fedb 	bl	800b8fe <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001b48:	f107 0308 	add.w	r3, r7, #8
 8001b4c:	2200      	movs	r2, #0
 8001b4e:	601a      	str	r2, [r3, #0]
 8001b50:	605a      	str	r2, [r3, #4]
 8001b52:	609a      	str	r2, [r3, #8]
 8001b54:	60da      	str	r2, [r3, #12]
 8001b56:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8001b58:	2300      	movs	r3, #0
 8001b5a:	607b      	str	r3, [r7, #4]
 8001b5c:	4b23      	ldr	r3, [pc, #140]	@ (8001bec <SystemClock_Config+0xb8>)
 8001b5e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001b60:	4a22      	ldr	r2, [pc, #136]	@ (8001bec <SystemClock_Config+0xb8>)
 8001b62:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001b66:	6413      	str	r3, [r2, #64]	@ 0x40
 8001b68:	4b20      	ldr	r3, [pc, #128]	@ (8001bec <SystemClock_Config+0xb8>)
 8001b6a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001b6c:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001b70:	607b      	str	r3, [r7, #4]
 8001b72:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 8001b74:	2300      	movs	r3, #0
 8001b76:	603b      	str	r3, [r7, #0]
 8001b78:	4b1d      	ldr	r3, [pc, #116]	@ (8001bf0 <SystemClock_Config+0xbc>)
 8001b7a:	681b      	ldr	r3, [r3, #0]
 8001b7c:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 8001b80:	4a1b      	ldr	r2, [pc, #108]	@ (8001bf0 <SystemClock_Config+0xbc>)
 8001b82:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001b86:	6013      	str	r3, [r2, #0]
 8001b88:	4b19      	ldr	r3, [pc, #100]	@ (8001bf0 <SystemClock_Config+0xbc>)
 8001b8a:	681b      	ldr	r3, [r3, #0]
 8001b8c:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8001b90:	603b      	str	r3, [r7, #0]
 8001b92:	683b      	ldr	r3, [r7, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8001b94:	2302      	movs	r3, #2
 8001b96:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001b98:	2301      	movs	r3, #1
 8001b9a:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8001b9c:	2310      	movs	r3, #16
 8001b9e:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 8001ba0:	2300      	movs	r3, #0
 8001ba2:	637b      	str	r3, [r7, #52]	@ 0x34
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001ba4:	f107 031c 	add.w	r3, r7, #28
 8001ba8:	4618      	mov	r0, r3
 8001baa:	f003 fd1b 	bl	80055e4 <HAL_RCC_OscConfig>
 8001bae:	4603      	mov	r3, r0
 8001bb0:	2b00      	cmp	r3, #0
 8001bb2:	d001      	beq.n	8001bb8 <SystemClock_Config+0x84>
  {
    Error_Handler();
 8001bb4:	f000 f840 	bl	8001c38 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001bb8:	230f      	movs	r3, #15
 8001bba:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 8001bbc:	2300      	movs	r3, #0
 8001bbe:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001bc0:	2300      	movs	r3, #0
 8001bc2:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8001bc4:	2300      	movs	r3, #0
 8001bc6:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8001bc8:	2300      	movs	r3, #0
 8001bca:	61bb      	str	r3, [r7, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8001bcc:	f107 0308 	add.w	r3, r7, #8
 8001bd0:	2100      	movs	r1, #0
 8001bd2:	4618      	mov	r0, r3
 8001bd4:	f003 fa42 	bl	800505c <HAL_RCC_ClockConfig>
 8001bd8:	4603      	mov	r3, r0
 8001bda:	2b00      	cmp	r3, #0
 8001bdc:	d001      	beq.n	8001be2 <SystemClock_Config+0xae>
  {
    Error_Handler();
 8001bde:	f000 f82b 	bl	8001c38 <Error_Handler>
  }
}
 8001be2:	bf00      	nop
 8001be4:	3750      	adds	r7, #80	@ 0x50
 8001be6:	46bd      	mov	sp, r7
 8001be8:	bd80      	pop	{r7, pc}
 8001bea:	bf00      	nop
 8001bec:	40023800 	.word	0x40023800
 8001bf0:	40007000 	.word	0x40007000

08001bf4 <HAL_UART_RxCpltCallback>:

/* USER CODE BEGIN 4 */
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 8001bf4:	b580      	push	{r7, lr}
 8001bf6:	b082      	sub	sp, #8
 8001bf8:	af00      	add	r7, sp, #0
 8001bfa:	6078      	str	r0, [r7, #4]
	if (huart->Instance == USART1)  // 블루투스(UART1) 수신일 때만 콜백 호출
 8001bfc:	687b      	ldr	r3, [r7, #4]
 8001bfe:	681b      	ldr	r3, [r3, #0]
 8001c00:	4a09      	ldr	r2, [pc, #36]	@ (8001c28 <HAL_UART_RxCpltCallback+0x34>)
 8001c02:	4293      	cmp	r3, r2
 8001c04:	d102      	bne.n	8001c0c <HAL_UART_RxCpltCallback+0x18>
	{
		Bluetooth_RxCallback();  // BLE 명령 처리
 8001c06:	f7ff fa99 	bl	800113c <Bluetooth_RxCallback>
	}
	else if (huart->Instance == USART2)
	{
		HAL_UART_Receive_IT(&huart2, &rx_data, 1);  // PC 로그용 UART2 다시 수신 대기
	}
}
 8001c0a:	e009      	b.n	8001c20 <HAL_UART_RxCpltCallback+0x2c>
	else if (huart->Instance == USART2)
 8001c0c:	687b      	ldr	r3, [r7, #4]
 8001c0e:	681b      	ldr	r3, [r3, #0]
 8001c10:	4a06      	ldr	r2, [pc, #24]	@ (8001c2c <HAL_UART_RxCpltCallback+0x38>)
 8001c12:	4293      	cmp	r3, r2
 8001c14:	d104      	bne.n	8001c20 <HAL_UART_RxCpltCallback+0x2c>
		HAL_UART_Receive_IT(&huart2, &rx_data, 1);  // PC 로그용 UART2 다시 수신 대기
 8001c16:	2201      	movs	r2, #1
 8001c18:	4905      	ldr	r1, [pc, #20]	@ (8001c30 <HAL_UART_RxCpltCallback+0x3c>)
 8001c1a:	4806      	ldr	r0, [pc, #24]	@ (8001c34 <HAL_UART_RxCpltCallback+0x40>)
 8001c1c:	f005 f96d 	bl	8006efa <HAL_UART_Receive_IT>
}
 8001c20:	bf00      	nop
 8001c22:	3708      	adds	r7, #8
 8001c24:	46bd      	mov	sp, r7
 8001c26:	bd80      	pop	{r7, pc}
 8001c28:	40011000 	.word	0x40011000
 8001c2c:	40004400 	.word	0x40004400
 8001c30:	200002b4 	.word	0x200002b4
 8001c34:	20000490 	.word	0x20000490

08001c38 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001c38:	b480      	push	{r7}
 8001c3a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001c3c:	b672      	cpsid	i
}
 8001c3e:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001c40:	bf00      	nop
 8001c42:	e7fd      	b.n	8001c40 <Error_Handler+0x8>

08001c44 <Motor_Init>:
#define RIGHT_PWM_CHANNEL TIM_CHANNEL_4

static uint16_t current_speed = 0;  // 가속 제어용

void Motor_Init(void)
{
 8001c44:	b580      	push	{r7, lr}
 8001c46:	af00      	add	r7, sp, #0
    HAL_TIM_PWM_Start(&LEFT_PWM_TIMER, LEFT_PWM_CHANNEL);
 8001c48:	2100      	movs	r1, #0
 8001c4a:	4809      	ldr	r0, [pc, #36]	@ (8001c70 <Motor_Init+0x2c>)
 8001c4c:	f004 fa3e 	bl	80060cc <HAL_TIM_PWM_Start>
    HAL_TIM_PWM_Start(&RIGHT_PWM_TIMER, RIGHT_PWM_CHANNEL);
 8001c50:	210c      	movs	r1, #12
 8001c52:	4808      	ldr	r0, [pc, #32]	@ (8001c74 <Motor_Init+0x30>)
 8001c54:	f004 fa3a 	bl	80060cc <HAL_TIM_PWM_Start>

    __HAL_TIM_MOE_ENABLE(&htim1);
 8001c58:	4b05      	ldr	r3, [pc, #20]	@ (8001c70 <Motor_Init+0x2c>)
 8001c5a:	681b      	ldr	r3, [r3, #0]
 8001c5c:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8001c5e:	4b04      	ldr	r3, [pc, #16]	@ (8001c70 <Motor_Init+0x2c>)
 8001c60:	681b      	ldr	r3, [r3, #0]
 8001c62:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8001c66:	645a      	str	r2, [r3, #68]	@ 0x44
    Motor_Stop();
 8001c68:	f000 f850 	bl	8001d0c <Motor_Stop>
}
 8001c6c:	bf00      	nop
 8001c6e:	bd80      	pop	{r7, pc}
 8001c70:	20000328 	.word	0x20000328
 8001c74:	200003b8 	.word	0x200003b8

08001c78 <SetMotorDirection>:

// 내부 함수: 방향 설정
static void SetMotorDirection
(GPIO_PinState in1, GPIO_PinState in2, GPIO_PinState in3, GPIO_PinState in4)
{
 8001c78:	b590      	push	{r4, r7, lr}
 8001c7a:	b083      	sub	sp, #12
 8001c7c:	af00      	add	r7, sp, #0
 8001c7e:	4604      	mov	r4, r0
 8001c80:	4608      	mov	r0, r1
 8001c82:	4611      	mov	r1, r2
 8001c84:	461a      	mov	r2, r3
 8001c86:	4623      	mov	r3, r4
 8001c88:	71fb      	strb	r3, [r7, #7]
 8001c8a:	4603      	mov	r3, r0
 8001c8c:	71bb      	strb	r3, [r7, #6]
 8001c8e:	460b      	mov	r3, r1
 8001c90:	717b      	strb	r3, [r7, #5]
 8001c92:	4613      	mov	r3, r2
 8001c94:	713b      	strb	r3, [r7, #4]
    HAL_GPIO_WritePin(IN1_PORT, IN1_PIN, in1);
 8001c96:	79fb      	ldrb	r3, [r7, #7]
 8001c98:	461a      	mov	r2, r3
 8001c9a:	2101      	movs	r1, #1
 8001c9c:	480c      	ldr	r0, [pc, #48]	@ (8001cd0 <SetMotorDirection+0x58>)
 8001c9e:	f002 f99f 	bl	8003fe0 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(IN2_PORT, IN2_PIN, in2);
 8001ca2:	79bb      	ldrb	r3, [r7, #6]
 8001ca4:	461a      	mov	r2, r3
 8001ca6:	2102      	movs	r1, #2
 8001ca8:	4809      	ldr	r0, [pc, #36]	@ (8001cd0 <SetMotorDirection+0x58>)
 8001caa:	f002 f999 	bl	8003fe0 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(IN3_PORT, IN3_PIN, in3);
 8001cae:	797b      	ldrb	r3, [r7, #5]
 8001cb0:	461a      	mov	r2, r3
 8001cb2:	2110      	movs	r1, #16
 8001cb4:	4806      	ldr	r0, [pc, #24]	@ (8001cd0 <SetMotorDirection+0x58>)
 8001cb6:	f002 f993 	bl	8003fe0 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(IN4_PORT, IN4_PIN, in4);
 8001cba:	793b      	ldrb	r3, [r7, #4]
 8001cbc:	461a      	mov	r2, r3
 8001cbe:	2120      	movs	r1, #32
 8001cc0:	4804      	ldr	r0, [pc, #16]	@ (8001cd4 <SetMotorDirection+0x5c>)
 8001cc2:	f002 f98d 	bl	8003fe0 <HAL_GPIO_WritePin>
}
 8001cc6:	bf00      	nop
 8001cc8:	370c      	adds	r7, #12
 8001cca:	46bd      	mov	sp, r7
 8001ccc:	bd90      	pop	{r4, r7, pc}
 8001cce:	bf00      	nop
 8001cd0:	40020000 	.word	0x40020000
 8001cd4:	40020400 	.word	0x40020400

08001cd8 <SetMotorSpeed>:

// 내부 함수: PWM 출력
static void SetMotorSpeed(uint16_t left_speed, uint16_t right_speed)
{
 8001cd8:	b480      	push	{r7}
 8001cda:	b083      	sub	sp, #12
 8001cdc:	af00      	add	r7, sp, #0
 8001cde:	4603      	mov	r3, r0
 8001ce0:	460a      	mov	r2, r1
 8001ce2:	80fb      	strh	r3, [r7, #6]
 8001ce4:	4613      	mov	r3, r2
 8001ce6:	80bb      	strh	r3, [r7, #4]
    __HAL_TIM_SET_COMPARE(&LEFT_PWM_TIMER, LEFT_PWM_CHANNEL, left_speed);
 8001ce8:	4b06      	ldr	r3, [pc, #24]	@ (8001d04 <SetMotorSpeed+0x2c>)
 8001cea:	681b      	ldr	r3, [r3, #0]
 8001cec:	88fa      	ldrh	r2, [r7, #6]
 8001cee:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_TIM_SET_COMPARE(&RIGHT_PWM_TIMER, RIGHT_PWM_CHANNEL, right_speed);
 8001cf0:	4b05      	ldr	r3, [pc, #20]	@ (8001d08 <SetMotorSpeed+0x30>)
 8001cf2:	681b      	ldr	r3, [r3, #0]
 8001cf4:	88ba      	ldrh	r2, [r7, #4]
 8001cf6:	641a      	str	r2, [r3, #64]	@ 0x40
}
 8001cf8:	bf00      	nop
 8001cfa:	370c      	adds	r7, #12
 8001cfc:	46bd      	mov	sp, r7
 8001cfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d02:	4770      	bx	lr
 8001d04:	20000328 	.word	0x20000328
 8001d08:	200003b8 	.word	0x200003b8

08001d0c <Motor_Stop>:

// 정지
void Motor_Stop(void)
{
 8001d0c:	b580      	push	{r7, lr}
 8001d0e:	af00      	add	r7, sp, #0
    SetMotorDirection(GPIO_PIN_RESET, GPIO_PIN_RESET, GPIO_PIN_RESET, GPIO_PIN_RESET);
 8001d10:	2300      	movs	r3, #0
 8001d12:	2200      	movs	r2, #0
 8001d14:	2100      	movs	r1, #0
 8001d16:	2000      	movs	r0, #0
 8001d18:	f7ff ffae 	bl	8001c78 <SetMotorDirection>
    SetMotorSpeed(0, 0);
 8001d1c:	2100      	movs	r1, #0
 8001d1e:	2000      	movs	r0, #0
 8001d20:	f7ff ffda 	bl	8001cd8 <SetMotorSpeed>
    current_speed = 0;
 8001d24:	4b02      	ldr	r3, [pc, #8]	@ (8001d30 <Motor_Stop+0x24>)
 8001d26:	2200      	movs	r2, #0
 8001d28:	801a      	strh	r2, [r3, #0]
}
 8001d2a:	bf00      	nop
 8001d2c:	bd80      	pop	{r7, pc}
 8001d2e:	bf00      	nop
 8001d30:	200002b6 	.word	0x200002b6

08001d34 <Motor_Forward>:

// 전진
void Motor_Forward(uint16_t speed)
{
 8001d34:	b580      	push	{r7, lr}
 8001d36:	b082      	sub	sp, #8
 8001d38:	af00      	add	r7, sp, #0
 8001d3a:	4603      	mov	r3, r0
 8001d3c:	80fb      	strh	r3, [r7, #6]
    SetMotorDirection(GPIO_PIN_SET, GPIO_PIN_RESET, GPIO_PIN_SET, GPIO_PIN_RESET);
 8001d3e:	2300      	movs	r3, #0
 8001d40:	2201      	movs	r2, #1
 8001d42:	2100      	movs	r1, #0
 8001d44:	2001      	movs	r0, #1
 8001d46:	f7ff ff97 	bl	8001c78 <SetMotorDirection>
    SetMotorSpeed(speed, speed);
 8001d4a:	88fa      	ldrh	r2, [r7, #6]
 8001d4c:	88fb      	ldrh	r3, [r7, #6]
 8001d4e:	4611      	mov	r1, r2
 8001d50:	4618      	mov	r0, r3
 8001d52:	f7ff ffc1 	bl	8001cd8 <SetMotorSpeed>
    current_speed = speed;
 8001d56:	4a03      	ldr	r2, [pc, #12]	@ (8001d64 <Motor_Forward+0x30>)
 8001d58:	88fb      	ldrh	r3, [r7, #6]
 8001d5a:	8013      	strh	r3, [r2, #0]
}
 8001d5c:	bf00      	nop
 8001d5e:	3708      	adds	r7, #8
 8001d60:	46bd      	mov	sp, r7
 8001d62:	bd80      	pop	{r7, pc}
 8001d64:	200002b6 	.word	0x200002b6

08001d68 <Motor_Backward>:

// 후진
void Motor_Backward(uint16_t speed)
{
 8001d68:	b580      	push	{r7, lr}
 8001d6a:	b082      	sub	sp, #8
 8001d6c:	af00      	add	r7, sp, #0
 8001d6e:	4603      	mov	r3, r0
 8001d70:	80fb      	strh	r3, [r7, #6]
    SetMotorDirection(GPIO_PIN_RESET, GPIO_PIN_SET, GPIO_PIN_RESET, GPIO_PIN_SET);
 8001d72:	2301      	movs	r3, #1
 8001d74:	2200      	movs	r2, #0
 8001d76:	2101      	movs	r1, #1
 8001d78:	2000      	movs	r0, #0
 8001d7a:	f7ff ff7d 	bl	8001c78 <SetMotorDirection>
    SetMotorSpeed(speed, speed);
 8001d7e:	88fa      	ldrh	r2, [r7, #6]
 8001d80:	88fb      	ldrh	r3, [r7, #6]
 8001d82:	4611      	mov	r1, r2
 8001d84:	4618      	mov	r0, r3
 8001d86:	f7ff ffa7 	bl	8001cd8 <SetMotorSpeed>
    current_speed = speed;
 8001d8a:	4a03      	ldr	r2, [pc, #12]	@ (8001d98 <Motor_Backward+0x30>)
 8001d8c:	88fb      	ldrh	r3, [r7, #6]
 8001d8e:	8013      	strh	r3, [r2, #0]
}
 8001d90:	bf00      	nop
 8001d92:	3708      	adds	r7, #8
 8001d94:	46bd      	mov	sp, r7
 8001d96:	bd80      	pop	{r7, pc}
 8001d98:	200002b6 	.word	0x200002b6

08001d9c <Motor_Left>:

// 좌회전 (좌측 정지, 우측 전진)
void Motor_Left(uint16_t speed)
{
 8001d9c:	b580      	push	{r7, lr}
 8001d9e:	b082      	sub	sp, #8
 8001da0:	af00      	add	r7, sp, #0
 8001da2:	4603      	mov	r3, r0
 8001da4:	80fb      	strh	r3, [r7, #6]
    SetMotorDirection(GPIO_PIN_RESET, GPIO_PIN_RESET, GPIO_PIN_SET, GPIO_PIN_RESET);
 8001da6:	2300      	movs	r3, #0
 8001da8:	2201      	movs	r2, #1
 8001daa:	2100      	movs	r1, #0
 8001dac:	2000      	movs	r0, #0
 8001dae:	f7ff ff63 	bl	8001c78 <SetMotorDirection>
    SetMotorSpeed(0, speed);
 8001db2:	88fb      	ldrh	r3, [r7, #6]
 8001db4:	4619      	mov	r1, r3
 8001db6:	2000      	movs	r0, #0
 8001db8:	f7ff ff8e 	bl	8001cd8 <SetMotorSpeed>
}
 8001dbc:	bf00      	nop
 8001dbe:	3708      	adds	r7, #8
 8001dc0:	46bd      	mov	sp, r7
 8001dc2:	bd80      	pop	{r7, pc}

08001dc4 <Motor_Right>:

// 우회전 (우측 정지, 좌측 전진)
void Motor_Right(uint16_t speed)
{
 8001dc4:	b580      	push	{r7, lr}
 8001dc6:	b082      	sub	sp, #8
 8001dc8:	af00      	add	r7, sp, #0
 8001dca:	4603      	mov	r3, r0
 8001dcc:	80fb      	strh	r3, [r7, #6]
    SetMotorDirection(GPIO_PIN_SET, GPIO_PIN_RESET, GPIO_PIN_RESET, GPIO_PIN_RESET);
 8001dce:	2300      	movs	r3, #0
 8001dd0:	2200      	movs	r2, #0
 8001dd2:	2100      	movs	r1, #0
 8001dd4:	2001      	movs	r0, #1
 8001dd6:	f7ff ff4f 	bl	8001c78 <SetMotorDirection>
    SetMotorSpeed(speed, 0);
 8001dda:	88fb      	ldrh	r3, [r7, #6]
 8001ddc:	2100      	movs	r1, #0
 8001dde:	4618      	mov	r0, r3
 8001de0:	f7ff ff7a 	bl	8001cd8 <SetMotorSpeed>
}
 8001de4:	bf00      	nop
 8001de6:	3708      	adds	r7, #8
 8001de8:	46bd      	mov	sp, r7
 8001dea:	bd80      	pop	{r7, pc}

08001dec <MPU6050_Init>:
static int16_t gyro_y_raw = 0;
static int16_t gyro_z_raw = 0;
static float yaw_angle = 0.0f;

uint8_t MPU6050_Init()
{
 8001dec:	b580      	push	{r7, lr}
 8001dee:	b086      	sub	sp, #24
 8001df0:	af04      	add	r7, sp, #16
    uint8_t check, data = 0;
 8001df2:	2300      	movs	r3, #0
 8001df4:	71bb      	strb	r3, [r7, #6]
    HAL_I2C_Mem_Read(&hi2c1, MPU6050_ADDR, WHO_AM_I_REG, 1, &check, 1, 100);
 8001df6:	2364      	movs	r3, #100	@ 0x64
 8001df8:	9302      	str	r3, [sp, #8]
 8001dfa:	2301      	movs	r3, #1
 8001dfc:	9301      	str	r3, [sp, #4]
 8001dfe:	1dfb      	adds	r3, r7, #7
 8001e00:	9300      	str	r3, [sp, #0]
 8001e02:	2301      	movs	r3, #1
 8001e04:	2275      	movs	r2, #117	@ 0x75
 8001e06:	21d0      	movs	r1, #208	@ 0xd0
 8001e08:	480c      	ldr	r0, [pc, #48]	@ (8001e3c <MPU6050_Init+0x50>)
 8001e0a:	f002 fb41 	bl	8004490 <HAL_I2C_Mem_Read>
    if (check != 0x68) return 0;
 8001e0e:	79fb      	ldrb	r3, [r7, #7]
 8001e10:	2b68      	cmp	r3, #104	@ 0x68
 8001e12:	d001      	beq.n	8001e18 <MPU6050_Init+0x2c>
 8001e14:	2300      	movs	r3, #0
 8001e16:	e00c      	b.n	8001e32 <MPU6050_Init+0x46>
    HAL_I2C_Mem_Write(&hi2c1, MPU6050_ADDR, PWR_MGMT_1, 1, &data, 1, 100);
 8001e18:	2364      	movs	r3, #100	@ 0x64
 8001e1a:	9302      	str	r3, [sp, #8]
 8001e1c:	2301      	movs	r3, #1
 8001e1e:	9301      	str	r3, [sp, #4]
 8001e20:	1dbb      	adds	r3, r7, #6
 8001e22:	9300      	str	r3, [sp, #0]
 8001e24:	2301      	movs	r3, #1
 8001e26:	226b      	movs	r2, #107	@ 0x6b
 8001e28:	21d0      	movs	r1, #208	@ 0xd0
 8001e2a:	4804      	ldr	r0, [pc, #16]	@ (8001e3c <MPU6050_Init+0x50>)
 8001e2c:	f002 fa36 	bl	800429c <HAL_I2C_Mem_Write>
    return 1;
 8001e30:	2301      	movs	r3, #1
}
 8001e32:	4618      	mov	r0, r3
 8001e34:	3708      	adds	r7, #8
 8001e36:	46bd      	mov	sp, r7
 8001e38:	bd80      	pop	{r7, pc}
 8001e3a:	bf00      	nop
 8001e3c:	20000260 	.word	0x20000260

08001e40 <MPU6050_Read_Accel>:

void MPU6050_Read_Accel()
{
 8001e40:	b580      	push	{r7, lr}
 8001e42:	b086      	sub	sp, #24
 8001e44:	af04      	add	r7, sp, #16
    uint8_t accel_data[6];
    if (HAL_I2C_Mem_Read(&hi2c1, MPU6050_ADDR, ACCEL_XOUT_H, 1, accel_data, 6, 100) != HAL_OK)
 8001e46:	2364      	movs	r3, #100	@ 0x64
 8001e48:	9302      	str	r3, [sp, #8]
 8001e4a:	2306      	movs	r3, #6
 8001e4c:	9301      	str	r3, [sp, #4]
 8001e4e:	463b      	mov	r3, r7
 8001e50:	9300      	str	r3, [sp, #0]
 8001e52:	2301      	movs	r3, #1
 8001e54:	223b      	movs	r2, #59	@ 0x3b
 8001e56:	21d0      	movs	r1, #208	@ 0xd0
 8001e58:	4818      	ldr	r0, [pc, #96]	@ (8001ebc <MPU6050_Read_Accel+0x7c>)
 8001e5a:	f002 fb19 	bl	8004490 <HAL_I2C_Mem_Read>
 8001e5e:	4603      	mov	r3, r0
 8001e60:	2b00      	cmp	r3, #0
 8001e62:	d009      	beq.n	8001e78 <MPU6050_Read_Accel+0x38>
    {
        accel_x_raw = 0;
 8001e64:	4b16      	ldr	r3, [pc, #88]	@ (8001ec0 <MPU6050_Read_Accel+0x80>)
 8001e66:	2200      	movs	r2, #0
 8001e68:	801a      	strh	r2, [r3, #0]
        accel_y_raw = 0;
 8001e6a:	4b16      	ldr	r3, [pc, #88]	@ (8001ec4 <MPU6050_Read_Accel+0x84>)
 8001e6c:	2200      	movs	r2, #0
 8001e6e:	801a      	strh	r2, [r3, #0]
        accel_z_raw = 0;
 8001e70:	4b15      	ldr	r3, [pc, #84]	@ (8001ec8 <MPU6050_Read_Accel+0x88>)
 8001e72:	2200      	movs	r2, #0
 8001e74:	801a      	strh	r2, [r3, #0]
 8001e76:	e01d      	b.n	8001eb4 <MPU6050_Read_Accel+0x74>
        return;
    }
    accel_x_raw = (int16_t)(accel_data[0] << 8 | accel_data[1]);
 8001e78:	783b      	ldrb	r3, [r7, #0]
 8001e7a:	b21b      	sxth	r3, r3
 8001e7c:	021b      	lsls	r3, r3, #8
 8001e7e:	b21a      	sxth	r2, r3
 8001e80:	787b      	ldrb	r3, [r7, #1]
 8001e82:	b21b      	sxth	r3, r3
 8001e84:	4313      	orrs	r3, r2
 8001e86:	b21a      	sxth	r2, r3
 8001e88:	4b0d      	ldr	r3, [pc, #52]	@ (8001ec0 <MPU6050_Read_Accel+0x80>)
 8001e8a:	801a      	strh	r2, [r3, #0]
    accel_y_raw = (int16_t)(accel_data[2] << 8 | accel_data[3]);
 8001e8c:	78bb      	ldrb	r3, [r7, #2]
 8001e8e:	b21b      	sxth	r3, r3
 8001e90:	021b      	lsls	r3, r3, #8
 8001e92:	b21a      	sxth	r2, r3
 8001e94:	78fb      	ldrb	r3, [r7, #3]
 8001e96:	b21b      	sxth	r3, r3
 8001e98:	4313      	orrs	r3, r2
 8001e9a:	b21a      	sxth	r2, r3
 8001e9c:	4b09      	ldr	r3, [pc, #36]	@ (8001ec4 <MPU6050_Read_Accel+0x84>)
 8001e9e:	801a      	strh	r2, [r3, #0]
    accel_z_raw = (int16_t)(accel_data[4] << 8 | accel_data[5]);
 8001ea0:	793b      	ldrb	r3, [r7, #4]
 8001ea2:	b21b      	sxth	r3, r3
 8001ea4:	021b      	lsls	r3, r3, #8
 8001ea6:	b21a      	sxth	r2, r3
 8001ea8:	797b      	ldrb	r3, [r7, #5]
 8001eaa:	b21b      	sxth	r3, r3
 8001eac:	4313      	orrs	r3, r2
 8001eae:	b21a      	sxth	r2, r3
 8001eb0:	4b05      	ldr	r3, [pc, #20]	@ (8001ec8 <MPU6050_Read_Accel+0x88>)
 8001eb2:	801a      	strh	r2, [r3, #0]
}
 8001eb4:	3708      	adds	r7, #8
 8001eb6:	46bd      	mov	sp, r7
 8001eb8:	bd80      	pop	{r7, pc}
 8001eba:	bf00      	nop
 8001ebc:	20000260 	.word	0x20000260
 8001ec0:	200002b8 	.word	0x200002b8
 8001ec4:	200002ba 	.word	0x200002ba
 8001ec8:	200002bc 	.word	0x200002bc

08001ecc <MPU6050_Read_Gyro>:

void MPU6050_Read_Gyro()
{
 8001ecc:	b580      	push	{r7, lr}
 8001ece:	b086      	sub	sp, #24
 8001ed0:	af04      	add	r7, sp, #16
    uint8_t gyro_data[6];
    if (HAL_I2C_Mem_Read(&hi2c1, MPU6050_ADDR, GYRO_XOUT_H, 1, gyro_data, 6, 100) != HAL_OK)
 8001ed2:	2364      	movs	r3, #100	@ 0x64
 8001ed4:	9302      	str	r3, [sp, #8]
 8001ed6:	2306      	movs	r3, #6
 8001ed8:	9301      	str	r3, [sp, #4]
 8001eda:	463b      	mov	r3, r7
 8001edc:	9300      	str	r3, [sp, #0]
 8001ede:	2301      	movs	r3, #1
 8001ee0:	2243      	movs	r2, #67	@ 0x43
 8001ee2:	21d0      	movs	r1, #208	@ 0xd0
 8001ee4:	4818      	ldr	r0, [pc, #96]	@ (8001f48 <MPU6050_Read_Gyro+0x7c>)
 8001ee6:	f002 fad3 	bl	8004490 <HAL_I2C_Mem_Read>
 8001eea:	4603      	mov	r3, r0
 8001eec:	2b00      	cmp	r3, #0
 8001eee:	d009      	beq.n	8001f04 <MPU6050_Read_Gyro+0x38>
    {
        gyro_x_raw = 0;
 8001ef0:	4b16      	ldr	r3, [pc, #88]	@ (8001f4c <MPU6050_Read_Gyro+0x80>)
 8001ef2:	2200      	movs	r2, #0
 8001ef4:	801a      	strh	r2, [r3, #0]
        gyro_y_raw = 0;
 8001ef6:	4b16      	ldr	r3, [pc, #88]	@ (8001f50 <MPU6050_Read_Gyro+0x84>)
 8001ef8:	2200      	movs	r2, #0
 8001efa:	801a      	strh	r2, [r3, #0]
        gyro_z_raw = 0;
 8001efc:	4b15      	ldr	r3, [pc, #84]	@ (8001f54 <MPU6050_Read_Gyro+0x88>)
 8001efe:	2200      	movs	r2, #0
 8001f00:	801a      	strh	r2, [r3, #0]
 8001f02:	e01d      	b.n	8001f40 <MPU6050_Read_Gyro+0x74>
        return;
    }
    gyro_x_raw = (int16_t)(gyro_data[0] << 8 | gyro_data[1]);
 8001f04:	783b      	ldrb	r3, [r7, #0]
 8001f06:	b21b      	sxth	r3, r3
 8001f08:	021b      	lsls	r3, r3, #8
 8001f0a:	b21a      	sxth	r2, r3
 8001f0c:	787b      	ldrb	r3, [r7, #1]
 8001f0e:	b21b      	sxth	r3, r3
 8001f10:	4313      	orrs	r3, r2
 8001f12:	b21a      	sxth	r2, r3
 8001f14:	4b0d      	ldr	r3, [pc, #52]	@ (8001f4c <MPU6050_Read_Gyro+0x80>)
 8001f16:	801a      	strh	r2, [r3, #0]
    gyro_y_raw = (int16_t)(gyro_data[2] << 8 | gyro_data[3]);
 8001f18:	78bb      	ldrb	r3, [r7, #2]
 8001f1a:	b21b      	sxth	r3, r3
 8001f1c:	021b      	lsls	r3, r3, #8
 8001f1e:	b21a      	sxth	r2, r3
 8001f20:	78fb      	ldrb	r3, [r7, #3]
 8001f22:	b21b      	sxth	r3, r3
 8001f24:	4313      	orrs	r3, r2
 8001f26:	b21a      	sxth	r2, r3
 8001f28:	4b09      	ldr	r3, [pc, #36]	@ (8001f50 <MPU6050_Read_Gyro+0x84>)
 8001f2a:	801a      	strh	r2, [r3, #0]
    gyro_z_raw = (int16_t)(gyro_data[4] << 8 | gyro_data[5]);
 8001f2c:	793b      	ldrb	r3, [r7, #4]
 8001f2e:	b21b      	sxth	r3, r3
 8001f30:	021b      	lsls	r3, r3, #8
 8001f32:	b21a      	sxth	r2, r3
 8001f34:	797b      	ldrb	r3, [r7, #5]
 8001f36:	b21b      	sxth	r3, r3
 8001f38:	4313      	orrs	r3, r2
 8001f3a:	b21a      	sxth	r2, r3
 8001f3c:	4b05      	ldr	r3, [pc, #20]	@ (8001f54 <MPU6050_Read_Gyro+0x88>)
 8001f3e:	801a      	strh	r2, [r3, #0]
}
 8001f40:	3708      	adds	r7, #8
 8001f42:	46bd      	mov	sp, r7
 8001f44:	bd80      	pop	{r7, pc}
 8001f46:	bf00      	nop
 8001f48:	20000260 	.word	0x20000260
 8001f4c:	200002be 	.word	0x200002be
 8001f50:	200002c0 	.word	0x200002c0
 8001f54:	200002c2 	.word	0x200002c2

08001f58 <MPU6050_GetAccelX>:

int16_t MPU6050_GetAccelX() { return accel_x_raw; }
 8001f58:	b480      	push	{r7}
 8001f5a:	af00      	add	r7, sp, #0
 8001f5c:	4b03      	ldr	r3, [pc, #12]	@ (8001f6c <MPU6050_GetAccelX+0x14>)
 8001f5e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001f62:	4618      	mov	r0, r3
 8001f64:	46bd      	mov	sp, r7
 8001f66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f6a:	4770      	bx	lr
 8001f6c:	200002b8 	.word	0x200002b8

08001f70 <MPU6050_GetAccelY>:
int16_t MPU6050_GetAccelY() { return accel_y_raw; }
 8001f70:	b480      	push	{r7}
 8001f72:	af00      	add	r7, sp, #0
 8001f74:	4b03      	ldr	r3, [pc, #12]	@ (8001f84 <MPU6050_GetAccelY+0x14>)
 8001f76:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001f7a:	4618      	mov	r0, r3
 8001f7c:	46bd      	mov	sp, r7
 8001f7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f82:	4770      	bx	lr
 8001f84:	200002ba 	.word	0x200002ba

08001f88 <MPU6050_GetAccelZ>:
int16_t MPU6050_GetAccelZ() { return accel_z_raw; }
 8001f88:	b480      	push	{r7}
 8001f8a:	af00      	add	r7, sp, #0
 8001f8c:	4b03      	ldr	r3, [pc, #12]	@ (8001f9c <MPU6050_GetAccelZ+0x14>)
 8001f8e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001f92:	4618      	mov	r0, r3
 8001f94:	46bd      	mov	sp, r7
 8001f96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f9a:	4770      	bx	lr
 8001f9c:	200002bc 	.word	0x200002bc

08001fa0 <MPU6050_GetGyroX>:

int16_t MPU6050_GetGyroX() { return gyro_x_raw; }
 8001fa0:	b480      	push	{r7}
 8001fa2:	af00      	add	r7, sp, #0
 8001fa4:	4b03      	ldr	r3, [pc, #12]	@ (8001fb4 <MPU6050_GetGyroX+0x14>)
 8001fa6:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001faa:	4618      	mov	r0, r3
 8001fac:	46bd      	mov	sp, r7
 8001fae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fb2:	4770      	bx	lr
 8001fb4:	200002be 	.word	0x200002be

08001fb8 <MPU6050_GetGyroY>:
int16_t MPU6050_GetGyroY() { return gyro_y_raw; }
 8001fb8:	b480      	push	{r7}
 8001fba:	af00      	add	r7, sp, #0
 8001fbc:	4b03      	ldr	r3, [pc, #12]	@ (8001fcc <MPU6050_GetGyroY+0x14>)
 8001fbe:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001fc2:	4618      	mov	r0, r3
 8001fc4:	46bd      	mov	sp, r7
 8001fc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fca:	4770      	bx	lr
 8001fcc:	200002c0 	.word	0x200002c0

08001fd0 <MPU6050_GetGyroZ>:
int16_t MPU6050_GetGyroZ() { return gyro_z_raw; }
 8001fd0:	b480      	push	{r7}
 8001fd2:	af00      	add	r7, sp, #0
 8001fd4:	4b03      	ldr	r3, [pc, #12]	@ (8001fe4 <MPU6050_GetGyroZ+0x14>)
 8001fd6:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001fda:	4618      	mov	r0, r3
 8001fdc:	46bd      	mov	sp, r7
 8001fde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fe2:	4770      	bx	lr
 8001fe4:	200002c2 	.word	0x200002c2

08001fe8 <MPU6050_CalcPitch>:

float MPU6050_CalcPitch()
{
 8001fe8:	b580      	push	{r7, lr}
 8001fea:	b084      	sub	sp, #16
 8001fec:	af00      	add	r7, sp, #0
    float ax = accel_x_raw / 16384.0f;
 8001fee:	4b40      	ldr	r3, [pc, #256]	@ (80020f0 <MPU6050_CalcPitch+0x108>)
 8001ff0:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001ff4:	ee07 3a90 	vmov	s15, r3
 8001ff8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001ffc:	eddf 6a3d 	vldr	s13, [pc, #244]	@ 80020f4 <MPU6050_CalcPitch+0x10c>
 8002000:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8002004:	edc7 7a03 	vstr	s15, [r7, #12]
    float ay = accel_y_raw / 16384.0f;
 8002008:	4b3b      	ldr	r3, [pc, #236]	@ (80020f8 <MPU6050_CalcPitch+0x110>)
 800200a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800200e:	ee07 3a90 	vmov	s15, r3
 8002012:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8002016:	eddf 6a37 	vldr	s13, [pc, #220]	@ 80020f4 <MPU6050_CalcPitch+0x10c>
 800201a:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800201e:	edc7 7a02 	vstr	s15, [r7, #8]
    float az = accel_z_raw / 16384.0f;
 8002022:	4b36      	ldr	r3, [pc, #216]	@ (80020fc <MPU6050_CalcPitch+0x114>)
 8002024:	f9b3 3000 	ldrsh.w	r3, [r3]
 8002028:	ee07 3a90 	vmov	s15, r3
 800202c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8002030:	eddf 6a30 	vldr	s13, [pc, #192]	@ 80020f4 <MPU6050_CalcPitch+0x10c>
 8002034:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8002038:	edc7 7a01 	vstr	s15, [r7, #4]

    float denom = sqrtf(ay * ay + az * az);
 800203c:	edd7 7a02 	vldr	s15, [r7, #8]
 8002040:	ee27 7aa7 	vmul.f32	s14, s15, s15
 8002044:	edd7 7a01 	vldr	s15, [r7, #4]
 8002048:	ee67 7aa7 	vmul.f32	s15, s15, s15
 800204c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002050:	eeb0 0a67 	vmov.f32	s0, s15
 8002054:	f00b fd80 	bl	800db58 <sqrtf>
 8002058:	ed87 0a00 	vstr	s0, [r7]
    if (isnan(denom) || denom == 0 || isnan(ax)) return 0.0f;
 800205c:	ed97 7a00 	vldr	s14, [r7]
 8002060:	edd7 7a00 	vldr	s15, [r7]
 8002064:	eeb4 7a67 	vcmp.f32	s14, s15
 8002068:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800206c:	d60f      	bvs.n	800208e <MPU6050_CalcPitch+0xa6>
 800206e:	edd7 7a00 	vldr	s15, [r7]
 8002072:	eef5 7a40 	vcmp.f32	s15, #0.0
 8002076:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800207a:	d008      	beq.n	800208e <MPU6050_CalcPitch+0xa6>
 800207c:	ed97 7a03 	vldr	s14, [r7, #12]
 8002080:	edd7 7a03 	vldr	s15, [r7, #12]
 8002084:	eeb4 7a67 	vcmp.f32	s14, s15
 8002088:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800208c:	d702      	bvc.n	8002094 <MPU6050_CalcPitch+0xac>
 800208e:	f04f 0300 	mov.w	r3, #0
 8002092:	e01f      	b.n	80020d4 <MPU6050_CalcPitch+0xec>

    return atan2f(-ax, denom) * 180.0f / M_PI;
 8002094:	edd7 7a03 	vldr	s15, [r7, #12]
 8002098:	eef1 7a67 	vneg.f32	s15, s15
 800209c:	edd7 0a00 	vldr	s1, [r7]
 80020a0:	eeb0 0a67 	vmov.f32	s0, s15
 80020a4:	f00b fd56 	bl	800db54 <atan2f>
 80020a8:	eef0 7a40 	vmov.f32	s15, s0
 80020ac:	ed9f 7a14 	vldr	s14, [pc, #80]	@ 8002100 <MPU6050_CalcPitch+0x118>
 80020b0:	ee67 7a87 	vmul.f32	s15, s15, s14
 80020b4:	ee17 0a90 	vmov	r0, s15
 80020b8:	f7fe fa66 	bl	8000588 <__aeabi_f2d>
 80020bc:	a30a      	add	r3, pc, #40	@ (adr r3, 80020e8 <MPU6050_CalcPitch+0x100>)
 80020be:	e9d3 2300 	ldrd	r2, r3, [r3]
 80020c2:	f7fe fbe3 	bl	800088c <__aeabi_ddiv>
 80020c6:	4602      	mov	r2, r0
 80020c8:	460b      	mov	r3, r1
 80020ca:	4610      	mov	r0, r2
 80020cc:	4619      	mov	r1, r3
 80020ce:	f7fe fdab 	bl	8000c28 <__aeabi_d2f>
 80020d2:	4603      	mov	r3, r0
}
 80020d4:	ee07 3a90 	vmov	s15, r3
 80020d8:	eeb0 0a67 	vmov.f32	s0, s15
 80020dc:	3710      	adds	r7, #16
 80020de:	46bd      	mov	sp, r7
 80020e0:	bd80      	pop	{r7, pc}
 80020e2:	bf00      	nop
 80020e4:	f3af 8000 	nop.w
 80020e8:	54442d18 	.word	0x54442d18
 80020ec:	400921fb 	.word	0x400921fb
 80020f0:	200002b8 	.word	0x200002b8
 80020f4:	46800000 	.word	0x46800000
 80020f8:	200002ba 	.word	0x200002ba
 80020fc:	200002bc 	.word	0x200002bc
 8002100:	43340000 	.word	0x43340000
 8002104:	00000000 	.word	0x00000000

08002108 <MPU6050_CalcRoll>:

float MPU6050_CalcRoll()
{
 8002108:	b580      	push	{r7, lr}
 800210a:	b082      	sub	sp, #8
 800210c:	af00      	add	r7, sp, #0
    float ay = accel_y_raw / 16384.0f;
 800210e:	4b2a      	ldr	r3, [pc, #168]	@ (80021b8 <MPU6050_CalcRoll+0xb0>)
 8002110:	f9b3 3000 	ldrsh.w	r3, [r3]
 8002114:	ee07 3a90 	vmov	s15, r3
 8002118:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800211c:	eddf 6a27 	vldr	s13, [pc, #156]	@ 80021bc <MPU6050_CalcRoll+0xb4>
 8002120:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8002124:	edc7 7a01 	vstr	s15, [r7, #4]
    float az = accel_z_raw / 16384.0f;
 8002128:	4b25      	ldr	r3, [pc, #148]	@ (80021c0 <MPU6050_CalcRoll+0xb8>)
 800212a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800212e:	ee07 3a90 	vmov	s15, r3
 8002132:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8002136:	eddf 6a21 	vldr	s13, [pc, #132]	@ 80021bc <MPU6050_CalcRoll+0xb4>
 800213a:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800213e:	edc7 7a00 	vstr	s15, [r7]

    if (isnan(az) || az == 0) return 0.0f;
 8002142:	ed97 7a00 	vldr	s14, [r7]
 8002146:	edd7 7a00 	vldr	s15, [r7]
 800214a:	eeb4 7a67 	vcmp.f32	s14, s15
 800214e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002152:	d606      	bvs.n	8002162 <MPU6050_CalcRoll+0x5a>
 8002154:	edd7 7a00 	vldr	s15, [r7]
 8002158:	eef5 7a40 	vcmp.f32	s15, #0.0
 800215c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002160:	d102      	bne.n	8002168 <MPU6050_CalcRoll+0x60>
 8002162:	f04f 0300 	mov.w	r3, #0
 8002166:	e01b      	b.n	80021a0 <MPU6050_CalcRoll+0x98>

    return atan2f(ay, az) * 180.0f / M_PI;
 8002168:	edd7 0a00 	vldr	s1, [r7]
 800216c:	ed97 0a01 	vldr	s0, [r7, #4]
 8002170:	f00b fcf0 	bl	800db54 <atan2f>
 8002174:	eef0 7a40 	vmov.f32	s15, s0
 8002178:	ed9f 7a12 	vldr	s14, [pc, #72]	@ 80021c4 <MPU6050_CalcRoll+0xbc>
 800217c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002180:	ee17 0a90 	vmov	r0, s15
 8002184:	f7fe fa00 	bl	8000588 <__aeabi_f2d>
 8002188:	a309      	add	r3, pc, #36	@ (adr r3, 80021b0 <MPU6050_CalcRoll+0xa8>)
 800218a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800218e:	f7fe fb7d 	bl	800088c <__aeabi_ddiv>
 8002192:	4602      	mov	r2, r0
 8002194:	460b      	mov	r3, r1
 8002196:	4610      	mov	r0, r2
 8002198:	4619      	mov	r1, r3
 800219a:	f7fe fd45 	bl	8000c28 <__aeabi_d2f>
 800219e:	4603      	mov	r3, r0
}
 80021a0:	ee07 3a90 	vmov	s15, r3
 80021a4:	eeb0 0a67 	vmov.f32	s0, s15
 80021a8:	3708      	adds	r7, #8
 80021aa:	46bd      	mov	sp, r7
 80021ac:	bd80      	pop	{r7, pc}
 80021ae:	bf00      	nop
 80021b0:	54442d18 	.word	0x54442d18
 80021b4:	400921fb 	.word	0x400921fb
 80021b8:	200002ba 	.word	0x200002ba
 80021bc:	46800000 	.word	0x46800000
 80021c0:	200002bc 	.word	0x200002bc
 80021c4:	43340000 	.word	0x43340000

080021c8 <MPU6050_CalcYaw>:

float MPU6050_CalcYaw(float dt)
{
 80021c8:	b480      	push	{r7}
 80021ca:	b085      	sub	sp, #20
 80021cc:	af00      	add	r7, sp, #0
 80021ce:	ed87 0a01 	vstr	s0, [r7, #4]
	const float GYRO_SENS = 131.0f; // +- 250dps 범위라면 131
 80021d2:	4b28      	ldr	r3, [pc, #160]	@ (8002274 <MPU6050_CalcYaw+0xac>)
 80021d4:	60fb      	str	r3, [r7, #12]
	// 각속도를 degree/s 단위로 변환
	float gyro_z = gyro_z_raw / GYRO_SENS;
 80021d6:	4b28      	ldr	r3, [pc, #160]	@ (8002278 <MPU6050_CalcYaw+0xb0>)
 80021d8:	f9b3 3000 	ldrsh.w	r3, [r3]
 80021dc:	ee07 3a90 	vmov	s15, r3
 80021e0:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 80021e4:	ed97 7a03 	vldr	s14, [r7, #12]
 80021e8:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80021ec:	edc7 7a02 	vstr	s15, [r7, #8]

	// 시간(dt) 단위로 적분 -> yaw 각도 누적
	yaw_angle += gyro_z * dt;
 80021f0:	ed97 7a02 	vldr	s14, [r7, #8]
 80021f4:	edd7 7a01 	vldr	s15, [r7, #4]
 80021f8:	ee27 7a27 	vmul.f32	s14, s14, s15
 80021fc:	4b1f      	ldr	r3, [pc, #124]	@ (800227c <MPU6050_CalcYaw+0xb4>)
 80021fe:	edd3 7a00 	vldr	s15, [r3]
 8002202:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002206:	4b1d      	ldr	r3, [pc, #116]	@ (800227c <MPU6050_CalcYaw+0xb4>)
 8002208:	edc3 7a00 	vstr	s15, [r3]

	// 필요 시 -180 ~ +180 범위로 고정
	if (yaw_angle > 180.0f) yaw_angle -= 360.0f;
 800220c:	4b1b      	ldr	r3, [pc, #108]	@ (800227c <MPU6050_CalcYaw+0xb4>)
 800220e:	edd3 7a00 	vldr	s15, [r3]
 8002212:	ed9f 7a1b 	vldr	s14, [pc, #108]	@ 8002280 <MPU6050_CalcYaw+0xb8>
 8002216:	eef4 7ac7 	vcmpe.f32	s15, s14
 800221a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800221e:	dd09      	ble.n	8002234 <MPU6050_CalcYaw+0x6c>
 8002220:	4b16      	ldr	r3, [pc, #88]	@ (800227c <MPU6050_CalcYaw+0xb4>)
 8002222:	edd3 7a00 	vldr	s15, [r3]
 8002226:	ed9f 7a17 	vldr	s14, [pc, #92]	@ 8002284 <MPU6050_CalcYaw+0xbc>
 800222a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800222e:	4b13      	ldr	r3, [pc, #76]	@ (800227c <MPU6050_CalcYaw+0xb4>)
 8002230:	edc3 7a00 	vstr	s15, [r3]
	if (yaw_angle < -180.0f) yaw_angle += 360.0f;
 8002234:	4b11      	ldr	r3, [pc, #68]	@ (800227c <MPU6050_CalcYaw+0xb4>)
 8002236:	edd3 7a00 	vldr	s15, [r3]
 800223a:	ed9f 7a13 	vldr	s14, [pc, #76]	@ 8002288 <MPU6050_CalcYaw+0xc0>
 800223e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002242:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002246:	d509      	bpl.n	800225c <MPU6050_CalcYaw+0x94>
 8002248:	4b0c      	ldr	r3, [pc, #48]	@ (800227c <MPU6050_CalcYaw+0xb4>)
 800224a:	edd3 7a00 	vldr	s15, [r3]
 800224e:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 8002284 <MPU6050_CalcYaw+0xbc>
 8002252:	ee77 7a87 	vadd.f32	s15, s15, s14
 8002256:	4b09      	ldr	r3, [pc, #36]	@ (800227c <MPU6050_CalcYaw+0xb4>)
 8002258:	edc3 7a00 	vstr	s15, [r3]

	return yaw_angle;
 800225c:	4b07      	ldr	r3, [pc, #28]	@ (800227c <MPU6050_CalcYaw+0xb4>)
 800225e:	681b      	ldr	r3, [r3, #0]
 8002260:	ee07 3a90 	vmov	s15, r3
}
 8002264:	eeb0 0a67 	vmov.f32	s0, s15
 8002268:	3714      	adds	r7, #20
 800226a:	46bd      	mov	sp, r7
 800226c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002270:	4770      	bx	lr
 8002272:	bf00      	nop
 8002274:	43030000 	.word	0x43030000
 8002278:	200002c2 	.word	0x200002c2
 800227c:	200002c4 	.word	0x200002c4
 8002280:	43340000 	.word	0x43340000
 8002284:	43b40000 	.word	0x43b40000
 8002288:	c3340000 	.word	0xc3340000

0800228c <__io_putchar>:
#include "stm32f4xx_hal.h"
#include "usart.h"
#include <stdio.h>

int __io_putchar(int ch) {
 800228c:	b580      	push	{r7, lr}
 800228e:	b082      	sub	sp, #8
 8002290:	af00      	add	r7, sp, #0
 8002292:	6078      	str	r0, [r7, #4]
    HAL_UART_Transmit(&huart2, (uint8_t *)&ch, 1, HAL_MAX_DELAY);
 8002294:	1d39      	adds	r1, r7, #4
 8002296:	f04f 33ff 	mov.w	r3, #4294967295
 800229a:	2201      	movs	r2, #1
 800229c:	4803      	ldr	r0, [pc, #12]	@ (80022ac <__io_putchar+0x20>)
 800229e:	f004 fda1 	bl	8006de4 <HAL_UART_Transmit>
    return ch;
 80022a2:	687b      	ldr	r3, [r7, #4]
}
 80022a4:	4618      	mov	r0, r3
 80022a6:	3708      	adds	r7, #8
 80022a8:	46bd      	mov	sp, r7
 80022aa:	bd80      	pop	{r7, pc}
 80022ac:	20000490 	.word	0x20000490

080022b0 <SetSensorLogCallback>:

// ==== 로그 콜백 포인터 ====
static void (*SensorLogCallback)(const char* msg) = NULL;

void SetSensorLogCallback(void (*callback)(const char* msg))
{
 80022b0:	b480      	push	{r7}
 80022b2:	b083      	sub	sp, #12
 80022b4:	af00      	add	r7, sp, #0
 80022b6:	6078      	str	r0, [r7, #4]
    SensorLogCallback = callback;
 80022b8:	4a04      	ldr	r2, [pc, #16]	@ (80022cc <SetSensorLogCallback+0x1c>)
 80022ba:	687b      	ldr	r3, [r7, #4]
 80022bc:	6013      	str	r3, [r2, #0]
}
 80022be:	bf00      	nop
 80022c0:	370c      	adds	r7, #12
 80022c2:	46bd      	mov	sp, r7
 80022c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022c8:	4770      	bx	lr
 80022ca:	bf00      	nop
 80022cc:	200002c8 	.word	0x200002c8

080022d0 <ReadCDS>:
}


// ==== CDS 조도 센서 ====
uint16_t ReadCDS(void)
{
 80022d0:	b580      	push	{r7, lr}
 80022d2:	b082      	sub	sp, #8
 80022d4:	af00      	add	r7, sp, #0
    HAL_ADC_Start(&hadc1);
 80022d6:	480a      	ldr	r0, [pc, #40]	@ (8002300 <ReadCDS+0x30>)
 80022d8:	f000 ff66 	bl	80031a8 <HAL_ADC_Start>
    HAL_ADC_PollForConversion(&hadc1, 10);
 80022dc:	210a      	movs	r1, #10
 80022de:	4808      	ldr	r0, [pc, #32]	@ (8002300 <ReadCDS+0x30>)
 80022e0:	f001 f867 	bl	80033b2 <HAL_ADC_PollForConversion>
    uint16_t val = HAL_ADC_GetValue(&hadc1);
 80022e4:	4806      	ldr	r0, [pc, #24]	@ (8002300 <ReadCDS+0x30>)
 80022e6:	f001 f8ef 	bl	80034c8 <HAL_ADC_GetValue>
 80022ea:	4603      	mov	r3, r0
 80022ec:	80fb      	strh	r3, [r7, #6]
    HAL_ADC_Stop(&hadc1);
 80022ee:	4804      	ldr	r0, [pc, #16]	@ (8002300 <ReadCDS+0x30>)
 80022f0:	f001 f82c 	bl	800334c <HAL_ADC_Stop>
    return val;
 80022f4:	88fb      	ldrh	r3, [r7, #6]
}
 80022f6:	4618      	mov	r0, r3
 80022f8:	3708      	adds	r7, #8
 80022fa:	46bd      	mov	sp, r7
 80022fc:	bd80      	pop	{r7, pc}
 80022fe:	bf00      	nop
 8002300:	200001f8 	.word	0x200001f8

08002304 <Sensors_Init>:

// ==== 센서 시스템 초기화 ====
void Sensors_Init(void)
{
 8002304:	b580      	push	{r7, lr}
 8002306:	af00      	add	r7, sp, #0
    HAL_TIM_Base_Start(&htim2);  // DHT11용 타이머 시작
 8002308:	4802      	ldr	r0, [pc, #8]	@ (8002314 <Sensors_Init+0x10>)
 800230a:	f003 fe01 	bl	8005f10 <HAL_TIM_Base_Start>
}
 800230e:	bf00      	nop
 8002310:	bd80      	pop	{r7, pc}
 8002312:	bf00      	nop
 8002314:	20000370 	.word	0x20000370

08002318 <MX_SPI1_Init>:

SPI_HandleTypeDef hspi1;

/* SPI1 init function */
void MX_SPI1_Init(void)
{
 8002318:	b580      	push	{r7, lr}
 800231a:	af00      	add	r7, sp, #0
  /* USER CODE END SPI1_Init 0 */

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  hspi1.Instance = SPI1;
 800231c:	4b15      	ldr	r3, [pc, #84]	@ (8002374 <MX_SPI1_Init+0x5c>)
 800231e:	4a16      	ldr	r2, [pc, #88]	@ (8002378 <MX_SPI1_Init+0x60>)
 8002320:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_SLAVE;
 8002322:	4b14      	ldr	r3, [pc, #80]	@ (8002374 <MX_SPI1_Init+0x5c>)
 8002324:	2200      	movs	r2, #0
 8002326:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 8002328:	4b12      	ldr	r3, [pc, #72]	@ (8002374 <MX_SPI1_Init+0x5c>)
 800232a:	2200      	movs	r2, #0
 800232c:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 800232e:	4b11      	ldr	r3, [pc, #68]	@ (8002374 <MX_SPI1_Init+0x5c>)
 8002330:	2200      	movs	r2, #0
 8002332:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 8002334:	4b0f      	ldr	r3, [pc, #60]	@ (8002374 <MX_SPI1_Init+0x5c>)
 8002336:	2200      	movs	r2, #0
 8002338:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 800233a:	4b0e      	ldr	r3, [pc, #56]	@ (8002374 <MX_SPI1_Init+0x5c>)
 800233c:	2200      	movs	r2, #0
 800233e:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 8002340:	4b0c      	ldr	r3, [pc, #48]	@ (8002374 <MX_SPI1_Init+0x5c>)
 8002342:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002346:	619a      	str	r2, [r3, #24]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8002348:	4b0a      	ldr	r3, [pc, #40]	@ (8002374 <MX_SPI1_Init+0x5c>)
 800234a:	2200      	movs	r2, #0
 800234c:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 800234e:	4b09      	ldr	r3, [pc, #36]	@ (8002374 <MX_SPI1_Init+0x5c>)
 8002350:	2200      	movs	r2, #0
 8002352:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8002354:	4b07      	ldr	r3, [pc, #28]	@ (8002374 <MX_SPI1_Init+0x5c>)
 8002356:	2200      	movs	r2, #0
 8002358:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi1.Init.CRCPolynomial = 10;
 800235a:	4b06      	ldr	r3, [pc, #24]	@ (8002374 <MX_SPI1_Init+0x5c>)
 800235c:	220a      	movs	r2, #10
 800235e:	62da      	str	r2, [r3, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8002360:	4804      	ldr	r0, [pc, #16]	@ (8002374 <MX_SPI1_Init+0x5c>)
 8002362:	f003 fbdd 	bl	8005b20 <HAL_SPI_Init>
 8002366:	4603      	mov	r3, r0
 8002368:	2b00      	cmp	r3, #0
 800236a:	d001      	beq.n	8002370 <MX_SPI1_Init+0x58>
  {
    Error_Handler();
 800236c:	f7ff fc64 	bl	8001c38 <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 8002370:	bf00      	nop
 8002372:	bd80      	pop	{r7, pc}
 8002374:	200002cc 	.word	0x200002cc
 8002378:	40013000 	.word	0x40013000

0800237c <HAL_SPI_MspInit>:

void HAL_SPI_MspInit(SPI_HandleTypeDef* spiHandle)
{
 800237c:	b580      	push	{r7, lr}
 800237e:	b08a      	sub	sp, #40	@ 0x28
 8002380:	af00      	add	r7, sp, #0
 8002382:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002384:	f107 0314 	add.w	r3, r7, #20
 8002388:	2200      	movs	r2, #0
 800238a:	601a      	str	r2, [r3, #0]
 800238c:	605a      	str	r2, [r3, #4]
 800238e:	609a      	str	r2, [r3, #8]
 8002390:	60da      	str	r2, [r3, #12]
 8002392:	611a      	str	r2, [r3, #16]
  if(spiHandle->Instance==SPI1)
 8002394:	687b      	ldr	r3, [r7, #4]
 8002396:	681b      	ldr	r3, [r3, #0]
 8002398:	4a1d      	ldr	r2, [pc, #116]	@ (8002410 <HAL_SPI_MspInit+0x94>)
 800239a:	4293      	cmp	r3, r2
 800239c:	d134      	bne.n	8002408 <HAL_SPI_MspInit+0x8c>
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* SPI1 clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 800239e:	2300      	movs	r3, #0
 80023a0:	613b      	str	r3, [r7, #16]
 80023a2:	4b1c      	ldr	r3, [pc, #112]	@ (8002414 <HAL_SPI_MspInit+0x98>)
 80023a4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80023a6:	4a1b      	ldr	r2, [pc, #108]	@ (8002414 <HAL_SPI_MspInit+0x98>)
 80023a8:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 80023ac:	6453      	str	r3, [r2, #68]	@ 0x44
 80023ae:	4b19      	ldr	r3, [pc, #100]	@ (8002414 <HAL_SPI_MspInit+0x98>)
 80023b0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80023b2:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80023b6:	613b      	str	r3, [r7, #16]
 80023b8:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80023ba:	2300      	movs	r3, #0
 80023bc:	60fb      	str	r3, [r7, #12]
 80023be:	4b15      	ldr	r3, [pc, #84]	@ (8002414 <HAL_SPI_MspInit+0x98>)
 80023c0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80023c2:	4a14      	ldr	r2, [pc, #80]	@ (8002414 <HAL_SPI_MspInit+0x98>)
 80023c4:	f043 0301 	orr.w	r3, r3, #1
 80023c8:	6313      	str	r3, [r2, #48]	@ 0x30
 80023ca:	4b12      	ldr	r3, [pc, #72]	@ (8002414 <HAL_SPI_MspInit+0x98>)
 80023cc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80023ce:	f003 0301 	and.w	r3, r3, #1
 80023d2:	60fb      	str	r3, [r7, #12]
 80023d4:	68fb      	ldr	r3, [r7, #12]
    PA5     ------> SPI1_SCK
    PA6     ------> SPI1_MISO
    PA7     ------> SPI1_MOSI
    PA15     ------> SPI1_NSS
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_15;
 80023d6:	f248 03e0 	movw	r3, #32992	@ 0x80e0
 80023da:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023dc:	2302      	movs	r3, #2
 80023de:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80023e0:	2300      	movs	r3, #0
 80023e2:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80023e4:	2303      	movs	r3, #3
 80023e6:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 80023e8:	2305      	movs	r3, #5
 80023ea:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80023ec:	f107 0314 	add.w	r3, r7, #20
 80023f0:	4619      	mov	r1, r3
 80023f2:	4809      	ldr	r0, [pc, #36]	@ (8002418 <HAL_SPI_MspInit+0x9c>)
 80023f4:	f001 fc48 	bl	8003c88 <HAL_GPIO_Init>

    /* SPI1 interrupt Init */
    HAL_NVIC_SetPriority(SPI1_IRQn, 5, 0);
 80023f8:	2200      	movs	r2, #0
 80023fa:	2105      	movs	r1, #5
 80023fc:	2023      	movs	r0, #35	@ 0x23
 80023fe:	f001 fb7a 	bl	8003af6 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI1_IRQn);
 8002402:	2023      	movs	r0, #35	@ 0x23
 8002404:	f001 fb93 	bl	8003b2e <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN SPI1_MspInit 1 */

  /* USER CODE END SPI1_MspInit 1 */
  }
}
 8002408:	bf00      	nop
 800240a:	3728      	adds	r7, #40	@ 0x28
 800240c:	46bd      	mov	sp, r7
 800240e:	bd80      	pop	{r7, pc}
 8002410:	40013000 	.word	0x40013000
 8002414:	40023800 	.word	0x40023800
 8002418:	40020000 	.word	0x40020000

0800241c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 800241c:	b580      	push	{r7, lr}
 800241e:	b082      	sub	sp, #8
 8002420:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002422:	2300      	movs	r3, #0
 8002424:	607b      	str	r3, [r7, #4]
 8002426:	4b12      	ldr	r3, [pc, #72]	@ (8002470 <HAL_MspInit+0x54>)
 8002428:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800242a:	4a11      	ldr	r2, [pc, #68]	@ (8002470 <HAL_MspInit+0x54>)
 800242c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8002430:	6453      	str	r3, [r2, #68]	@ 0x44
 8002432:	4b0f      	ldr	r3, [pc, #60]	@ (8002470 <HAL_MspInit+0x54>)
 8002434:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002436:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800243a:	607b      	str	r3, [r7, #4]
 800243c:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 800243e:	2300      	movs	r3, #0
 8002440:	603b      	str	r3, [r7, #0]
 8002442:	4b0b      	ldr	r3, [pc, #44]	@ (8002470 <HAL_MspInit+0x54>)
 8002444:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002446:	4a0a      	ldr	r2, [pc, #40]	@ (8002470 <HAL_MspInit+0x54>)
 8002448:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800244c:	6413      	str	r3, [r2, #64]	@ 0x40
 800244e:	4b08      	ldr	r3, [pc, #32]	@ (8002470 <HAL_MspInit+0x54>)
 8002450:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002452:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002456:	603b      	str	r3, [r7, #0]
 8002458:	683b      	ldr	r3, [r7, #0]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800245a:	2200      	movs	r2, #0
 800245c:	210f      	movs	r1, #15
 800245e:	f06f 0001 	mvn.w	r0, #1
 8002462:	f001 fb48 	bl	8003af6 <HAL_NVIC_SetPriority>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002466:	bf00      	nop
 8002468:	3708      	adds	r7, #8
 800246a:	46bd      	mov	sp, r7
 800246c:	bd80      	pop	{r7, pc}
 800246e:	bf00      	nop
 8002470:	40023800 	.word	0x40023800

08002474 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8002474:	b480      	push	{r7}
 8002476:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8002478:	bf00      	nop
 800247a:	e7fd      	b.n	8002478 <NMI_Handler+0x4>

0800247c <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 800247c:	b480      	push	{r7}
 800247e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002480:	bf00      	nop
 8002482:	e7fd      	b.n	8002480 <HardFault_Handler+0x4>

08002484 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8002484:	b480      	push	{r7}
 8002486:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002488:	bf00      	nop
 800248a:	e7fd      	b.n	8002488 <MemManage_Handler+0x4>

0800248c <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 800248c:	b480      	push	{r7}
 800248e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002490:	bf00      	nop
 8002492:	e7fd      	b.n	8002490 <BusFault_Handler+0x4>

08002494 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8002494:	b480      	push	{r7}
 8002496:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002498:	bf00      	nop
 800249a:	e7fd      	b.n	8002498 <UsageFault_Handler+0x4>

0800249c <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 800249c:	b480      	push	{r7}
 800249e:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80024a0:	bf00      	nop
 80024a2:	46bd      	mov	sp, r7
 80024a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024a8:	4770      	bx	lr

080024aa <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80024aa:	b580      	push	{r7, lr}
 80024ac:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80024ae:	f000 fdf3 	bl	8003098 <HAL_IncTick>
#if (INCLUDE_xTaskGetSchedulerState == 1 )
  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED)
 80024b2:	f007 fbf1 	bl	8009c98 <xTaskGetSchedulerState>
 80024b6:	4603      	mov	r3, r0
 80024b8:	2b01      	cmp	r3, #1
 80024ba:	d001      	beq.n	80024c0 <SysTick_Handler+0x16>
  {
#endif /* INCLUDE_xTaskGetSchedulerState */
  xPortSysTickHandler();
 80024bc:	f008 f9ec 	bl	800a898 <xPortSysTickHandler>
  }
#endif /* INCLUDE_xTaskGetSchedulerState */
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80024c0:	bf00      	nop
 80024c2:	bd80      	pop	{r7, pc}

080024c4 <SPI1_IRQHandler>:

/**
  * @brief This function handles SPI1 global interrupt.
  */
void SPI1_IRQHandler(void)
{
 80024c4:	b580      	push	{r7, lr}
 80024c6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SPI1_IRQn 0 */

  /* USER CODE END SPI1_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi1);
 80024c8:	4802      	ldr	r0, [pc, #8]	@ (80024d4 <SPI1_IRQHandler+0x10>)
 80024ca:	f003 fbb3 	bl	8005c34 <HAL_SPI_IRQHandler>
  /* USER CODE BEGIN SPI1_IRQn 1 */

  /* USER CODE END SPI1_IRQn 1 */
}
 80024ce:	bf00      	nop
 80024d0:	bd80      	pop	{r7, pc}
 80024d2:	bf00      	nop
 80024d4:	200002cc 	.word	0x200002cc

080024d8 <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
 80024d8:	b580      	push	{r7, lr}
 80024da:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 80024dc:	4802      	ldr	r0, [pc, #8]	@ (80024e8 <USART1_IRQHandler+0x10>)
 80024de:	f004 fd31 	bl	8006f44 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 80024e2:	bf00      	nop
 80024e4:	bd80      	pop	{r7, pc}
 80024e6:	bf00      	nop
 80024e8:	20000448 	.word	0x20000448

080024ec <USART2_IRQHandler>:

/**
  * @brief This function handles USART2 global interrupt.
  */
void USART2_IRQHandler(void)
{
 80024ec:	b580      	push	{r7, lr}
 80024ee:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
 80024f0:	4802      	ldr	r0, [pc, #8]	@ (80024fc <USART2_IRQHandler+0x10>)
 80024f2:	f004 fd27 	bl	8006f44 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART2_IRQn 1 */

  /* USER CODE END USART2_IRQn 1 */
}
 80024f6:	bf00      	nop
 80024f8:	bd80      	pop	{r7, pc}
 80024fa:	bf00      	nop
 80024fc:	20000490 	.word	0x20000490

08002500 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8002500:	b480      	push	{r7}
 8002502:	af00      	add	r7, sp, #0
  return 1;
 8002504:	2301      	movs	r3, #1
}
 8002506:	4618      	mov	r0, r3
 8002508:	46bd      	mov	sp, r7
 800250a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800250e:	4770      	bx	lr

08002510 <_kill>:

int _kill(int pid, int sig)
{
 8002510:	b580      	push	{r7, lr}
 8002512:	b082      	sub	sp, #8
 8002514:	af00      	add	r7, sp, #0
 8002516:	6078      	str	r0, [r7, #4]
 8002518:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 800251a:	f009 faa1 	bl	800ba60 <__errno>
 800251e:	4603      	mov	r3, r0
 8002520:	2216      	movs	r2, #22
 8002522:	601a      	str	r2, [r3, #0]
  return -1;
 8002524:	f04f 33ff 	mov.w	r3, #4294967295
}
 8002528:	4618      	mov	r0, r3
 800252a:	3708      	adds	r7, #8
 800252c:	46bd      	mov	sp, r7
 800252e:	bd80      	pop	{r7, pc}

08002530 <_exit>:

void _exit (int status)
{
 8002530:	b580      	push	{r7, lr}
 8002532:	b082      	sub	sp, #8
 8002534:	af00      	add	r7, sp, #0
 8002536:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8002538:	f04f 31ff 	mov.w	r1, #4294967295
 800253c:	6878      	ldr	r0, [r7, #4]
 800253e:	f7ff ffe7 	bl	8002510 <_kill>
  while (1) {}    /* Make sure we hang here */
 8002542:	bf00      	nop
 8002544:	e7fd      	b.n	8002542 <_exit+0x12>

08002546 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002546:	b580      	push	{r7, lr}
 8002548:	b086      	sub	sp, #24
 800254a:	af00      	add	r7, sp, #0
 800254c:	60f8      	str	r0, [r7, #12]
 800254e:	60b9      	str	r1, [r7, #8]
 8002550:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002552:	2300      	movs	r3, #0
 8002554:	617b      	str	r3, [r7, #20]
 8002556:	e00a      	b.n	800256e <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8002558:	f3af 8000 	nop.w
 800255c:	4601      	mov	r1, r0
 800255e:	68bb      	ldr	r3, [r7, #8]
 8002560:	1c5a      	adds	r2, r3, #1
 8002562:	60ba      	str	r2, [r7, #8]
 8002564:	b2ca      	uxtb	r2, r1
 8002566:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002568:	697b      	ldr	r3, [r7, #20]
 800256a:	3301      	adds	r3, #1
 800256c:	617b      	str	r3, [r7, #20]
 800256e:	697a      	ldr	r2, [r7, #20]
 8002570:	687b      	ldr	r3, [r7, #4]
 8002572:	429a      	cmp	r2, r3
 8002574:	dbf0      	blt.n	8002558 <_read+0x12>
  }

  return len;
 8002576:	687b      	ldr	r3, [r7, #4]
}
 8002578:	4618      	mov	r0, r3
 800257a:	3718      	adds	r7, #24
 800257c:	46bd      	mov	sp, r7
 800257e:	bd80      	pop	{r7, pc}

08002580 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002580:	b580      	push	{r7, lr}
 8002582:	b086      	sub	sp, #24
 8002584:	af00      	add	r7, sp, #0
 8002586:	60f8      	str	r0, [r7, #12]
 8002588:	60b9      	str	r1, [r7, #8]
 800258a:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800258c:	2300      	movs	r3, #0
 800258e:	617b      	str	r3, [r7, #20]
 8002590:	e009      	b.n	80025a6 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8002592:	68bb      	ldr	r3, [r7, #8]
 8002594:	1c5a      	adds	r2, r3, #1
 8002596:	60ba      	str	r2, [r7, #8]
 8002598:	781b      	ldrb	r3, [r3, #0]
 800259a:	4618      	mov	r0, r3
 800259c:	f7ff fe76 	bl	800228c <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80025a0:	697b      	ldr	r3, [r7, #20]
 80025a2:	3301      	adds	r3, #1
 80025a4:	617b      	str	r3, [r7, #20]
 80025a6:	697a      	ldr	r2, [r7, #20]
 80025a8:	687b      	ldr	r3, [r7, #4]
 80025aa:	429a      	cmp	r2, r3
 80025ac:	dbf1      	blt.n	8002592 <_write+0x12>
  }
  return len;
 80025ae:	687b      	ldr	r3, [r7, #4]
}
 80025b0:	4618      	mov	r0, r3
 80025b2:	3718      	adds	r7, #24
 80025b4:	46bd      	mov	sp, r7
 80025b6:	bd80      	pop	{r7, pc}

080025b8 <_close>:

int _close(int file)
{
 80025b8:	b480      	push	{r7}
 80025ba:	b083      	sub	sp, #12
 80025bc:	af00      	add	r7, sp, #0
 80025be:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80025c0:	f04f 33ff 	mov.w	r3, #4294967295
}
 80025c4:	4618      	mov	r0, r3
 80025c6:	370c      	adds	r7, #12
 80025c8:	46bd      	mov	sp, r7
 80025ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025ce:	4770      	bx	lr

080025d0 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80025d0:	b480      	push	{r7}
 80025d2:	b083      	sub	sp, #12
 80025d4:	af00      	add	r7, sp, #0
 80025d6:	6078      	str	r0, [r7, #4]
 80025d8:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80025da:	683b      	ldr	r3, [r7, #0]
 80025dc:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80025e0:	605a      	str	r2, [r3, #4]
  return 0;
 80025e2:	2300      	movs	r3, #0
}
 80025e4:	4618      	mov	r0, r3
 80025e6:	370c      	adds	r7, #12
 80025e8:	46bd      	mov	sp, r7
 80025ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025ee:	4770      	bx	lr

080025f0 <_isatty>:

int _isatty(int file)
{
 80025f0:	b480      	push	{r7}
 80025f2:	b083      	sub	sp, #12
 80025f4:	af00      	add	r7, sp, #0
 80025f6:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80025f8:	2301      	movs	r3, #1
}
 80025fa:	4618      	mov	r0, r3
 80025fc:	370c      	adds	r7, #12
 80025fe:	46bd      	mov	sp, r7
 8002600:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002604:	4770      	bx	lr

08002606 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8002606:	b480      	push	{r7}
 8002608:	b085      	sub	sp, #20
 800260a:	af00      	add	r7, sp, #0
 800260c:	60f8      	str	r0, [r7, #12]
 800260e:	60b9      	str	r1, [r7, #8]
 8002610:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8002612:	2300      	movs	r3, #0
}
 8002614:	4618      	mov	r0, r3
 8002616:	3714      	adds	r7, #20
 8002618:	46bd      	mov	sp, r7
 800261a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800261e:	4770      	bx	lr

08002620 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8002620:	b580      	push	{r7, lr}
 8002622:	b086      	sub	sp, #24
 8002624:	af00      	add	r7, sp, #0
 8002626:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8002628:	4a14      	ldr	r2, [pc, #80]	@ (800267c <_sbrk+0x5c>)
 800262a:	4b15      	ldr	r3, [pc, #84]	@ (8002680 <_sbrk+0x60>)
 800262c:	1ad3      	subs	r3, r2, r3
 800262e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8002630:	697b      	ldr	r3, [r7, #20]
 8002632:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8002634:	4b13      	ldr	r3, [pc, #76]	@ (8002684 <_sbrk+0x64>)
 8002636:	681b      	ldr	r3, [r3, #0]
 8002638:	2b00      	cmp	r3, #0
 800263a:	d102      	bne.n	8002642 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800263c:	4b11      	ldr	r3, [pc, #68]	@ (8002684 <_sbrk+0x64>)
 800263e:	4a12      	ldr	r2, [pc, #72]	@ (8002688 <_sbrk+0x68>)
 8002640:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8002642:	4b10      	ldr	r3, [pc, #64]	@ (8002684 <_sbrk+0x64>)
 8002644:	681a      	ldr	r2, [r3, #0]
 8002646:	687b      	ldr	r3, [r7, #4]
 8002648:	4413      	add	r3, r2
 800264a:	693a      	ldr	r2, [r7, #16]
 800264c:	429a      	cmp	r2, r3
 800264e:	d207      	bcs.n	8002660 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8002650:	f009 fa06 	bl	800ba60 <__errno>
 8002654:	4603      	mov	r3, r0
 8002656:	220c      	movs	r2, #12
 8002658:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800265a:	f04f 33ff 	mov.w	r3, #4294967295
 800265e:	e009      	b.n	8002674 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8002660:	4b08      	ldr	r3, [pc, #32]	@ (8002684 <_sbrk+0x64>)
 8002662:	681b      	ldr	r3, [r3, #0]
 8002664:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8002666:	4b07      	ldr	r3, [pc, #28]	@ (8002684 <_sbrk+0x64>)
 8002668:	681a      	ldr	r2, [r3, #0]
 800266a:	687b      	ldr	r3, [r7, #4]
 800266c:	4413      	add	r3, r2
 800266e:	4a05      	ldr	r2, [pc, #20]	@ (8002684 <_sbrk+0x64>)
 8002670:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8002672:	68fb      	ldr	r3, [r7, #12]
}
 8002674:	4618      	mov	r0, r3
 8002676:	3718      	adds	r7, #24
 8002678:	46bd      	mov	sp, r7
 800267a:	bd80      	pop	{r7, pc}
 800267c:	20020000 	.word	0x20020000
 8002680:	00000400 	.word	0x00000400
 8002684:	20000324 	.word	0x20000324
 8002688:	20005010 	.word	0x20005010

0800268c <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 800268c:	b480      	push	{r7}
 800268e:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8002690:	4b06      	ldr	r3, [pc, #24]	@ (80026ac <SystemInit+0x20>)
 8002692:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8002696:	4a05      	ldr	r2, [pc, #20]	@ (80026ac <SystemInit+0x20>)
 8002698:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 800269c:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80026a0:	bf00      	nop
 80026a2:	46bd      	mov	sp, r7
 80026a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026a8:	4770      	bx	lr
 80026aa:	bf00      	nop
 80026ac:	e000ed00 	.word	0xe000ed00

080026b0 <MX_TIM1_Init>:
TIM_HandleTypeDef htim3;
TIM_HandleTypeDef htim4;

/* TIM1 init function */
void MX_TIM1_Init(void)
{
 80026b0:	b580      	push	{r7, lr}
 80026b2:	b096      	sub	sp, #88	@ 0x58
 80026b4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80026b6:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 80026ba:	2200      	movs	r2, #0
 80026bc:	601a      	str	r2, [r3, #0]
 80026be:	605a      	str	r2, [r3, #4]
 80026c0:	609a      	str	r2, [r3, #8]
 80026c2:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80026c4:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 80026c8:	2200      	movs	r2, #0
 80026ca:	601a      	str	r2, [r3, #0]
 80026cc:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80026ce:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80026d2:	2200      	movs	r2, #0
 80026d4:	601a      	str	r2, [r3, #0]
 80026d6:	605a      	str	r2, [r3, #4]
 80026d8:	609a      	str	r2, [r3, #8]
 80026da:	60da      	str	r2, [r3, #12]
 80026dc:	611a      	str	r2, [r3, #16]
 80026de:	615a      	str	r2, [r3, #20]
 80026e0:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 80026e2:	1d3b      	adds	r3, r7, #4
 80026e4:	2220      	movs	r2, #32
 80026e6:	2100      	movs	r1, #0
 80026e8:	4618      	mov	r0, r3
 80026ea:	f009 f908 	bl	800b8fe <memset>

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 80026ee:	4b3e      	ldr	r3, [pc, #248]	@ (80027e8 <MX_TIM1_Init+0x138>)
 80026f0:	4a3e      	ldr	r2, [pc, #248]	@ (80027ec <MX_TIM1_Init+0x13c>)
 80026f2:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 83;
 80026f4:	4b3c      	ldr	r3, [pc, #240]	@ (80027e8 <MX_TIM1_Init+0x138>)
 80026f6:	2253      	movs	r2, #83	@ 0x53
 80026f8:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 80026fa:	4b3b      	ldr	r3, [pc, #236]	@ (80027e8 <MX_TIM1_Init+0x138>)
 80026fc:	2200      	movs	r2, #0
 80026fe:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 999;
 8002700:	4b39      	ldr	r3, [pc, #228]	@ (80027e8 <MX_TIM1_Init+0x138>)
 8002702:	f240 32e7 	movw	r2, #999	@ 0x3e7
 8002706:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002708:	4b37      	ldr	r3, [pc, #220]	@ (80027e8 <MX_TIM1_Init+0x138>)
 800270a:	2200      	movs	r2, #0
 800270c:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 800270e:	4b36      	ldr	r3, [pc, #216]	@ (80027e8 <MX_TIM1_Init+0x138>)
 8002710:	2200      	movs	r2, #0
 8002712:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8002714:	4b34      	ldr	r3, [pc, #208]	@ (80027e8 <MX_TIM1_Init+0x138>)
 8002716:	2280      	movs	r2, #128	@ 0x80
 8002718:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 800271a:	4833      	ldr	r0, [pc, #204]	@ (80027e8 <MX_TIM1_Init+0x138>)
 800271c:	f003 fba8 	bl	8005e70 <HAL_TIM_Base_Init>
 8002720:	4603      	mov	r3, r0
 8002722:	2b00      	cmp	r3, #0
 8002724:	d001      	beq.n	800272a <MX_TIM1_Init+0x7a>
  {
    Error_Handler();
 8002726:	f7ff fa87 	bl	8001c38 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800272a:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800272e:	64bb      	str	r3, [r7, #72]	@ 0x48
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 8002730:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 8002734:	4619      	mov	r1, r3
 8002736:	482c      	ldr	r0, [pc, #176]	@ (80027e8 <MX_TIM1_Init+0x138>)
 8002738:	f003 fe52 	bl	80063e0 <HAL_TIM_ConfigClockSource>
 800273c:	4603      	mov	r3, r0
 800273e:	2b00      	cmp	r3, #0
 8002740:	d001      	beq.n	8002746 <MX_TIM1_Init+0x96>
  {
    Error_Handler();
 8002742:	f7ff fa79 	bl	8001c38 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 8002746:	4828      	ldr	r0, [pc, #160]	@ (80027e8 <MX_TIM1_Init+0x138>)
 8002748:	f003 fc71 	bl	800602e <HAL_TIM_PWM_Init>
 800274c:	4603      	mov	r3, r0
 800274e:	2b00      	cmp	r3, #0
 8002750:	d001      	beq.n	8002756 <MX_TIM1_Init+0xa6>
  {
    Error_Handler();
 8002752:	f7ff fa71 	bl	8001c38 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002756:	2300      	movs	r3, #0
 8002758:	643b      	str	r3, [r7, #64]	@ 0x40
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800275a:	2300      	movs	r3, #0
 800275c:	647b      	str	r3, [r7, #68]	@ 0x44
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 800275e:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 8002762:	4619      	mov	r1, r3
 8002764:	4820      	ldr	r0, [pc, #128]	@ (80027e8 <MX_TIM1_Init+0x138>)
 8002766:	f004 fa1f 	bl	8006ba8 <HAL_TIMEx_MasterConfigSynchronization>
 800276a:	4603      	mov	r3, r0
 800276c:	2b00      	cmp	r3, #0
 800276e:	d001      	beq.n	8002774 <MX_TIM1_Init+0xc4>
  {
    Error_Handler();
 8002770:	f7ff fa62 	bl	8001c38 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8002774:	2360      	movs	r3, #96	@ 0x60
 8002776:	627b      	str	r3, [r7, #36]	@ 0x24
  sConfigOC.Pulse = 0;
 8002778:	2300      	movs	r3, #0
 800277a:	62bb      	str	r3, [r7, #40]	@ 0x28
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 800277c:	2300      	movs	r3, #0
 800277e:	62fb      	str	r3, [r7, #44]	@ 0x2c
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 8002780:	2300      	movs	r3, #0
 8002782:	633b      	str	r3, [r7, #48]	@ 0x30
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8002784:	2300      	movs	r3, #0
 8002786:	637b      	str	r3, [r7, #52]	@ 0x34
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 8002788:	2300      	movs	r3, #0
 800278a:	63bb      	str	r3, [r7, #56]	@ 0x38
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 800278c:	2300      	movs	r3, #0
 800278e:	63fb      	str	r3, [r7, #60]	@ 0x3c
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8002790:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8002794:	2200      	movs	r2, #0
 8002796:	4619      	mov	r1, r3
 8002798:	4813      	ldr	r0, [pc, #76]	@ (80027e8 <MX_TIM1_Init+0x138>)
 800279a:	f003 fd5f 	bl	800625c <HAL_TIM_PWM_ConfigChannel>
 800279e:	4603      	mov	r3, r0
 80027a0:	2b00      	cmp	r3, #0
 80027a2:	d001      	beq.n	80027a8 <MX_TIM1_Init+0xf8>
  {
    Error_Handler();
 80027a4:	f7ff fa48 	bl	8001c38 <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 80027a8:	2300      	movs	r3, #0
 80027aa:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 80027ac:	2300      	movs	r3, #0
 80027ae:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 80027b0:	2300      	movs	r3, #0
 80027b2:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 80027b4:	2300      	movs	r3, #0
 80027b6:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 80027b8:	2300      	movs	r3, #0
 80027ba:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 80027bc:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80027c0:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 80027c2:	2300      	movs	r3, #0
 80027c4:	623b      	str	r3, [r7, #32]
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 80027c6:	1d3b      	adds	r3, r7, #4
 80027c8:	4619      	mov	r1, r3
 80027ca:	4807      	ldr	r0, [pc, #28]	@ (80027e8 <MX_TIM1_Init+0x138>)
 80027cc:	f004 fa68 	bl	8006ca0 <HAL_TIMEx_ConfigBreakDeadTime>
 80027d0:	4603      	mov	r3, r0
 80027d2:	2b00      	cmp	r3, #0
 80027d4:	d001      	beq.n	80027da <MX_TIM1_Init+0x12a>
  {
    Error_Handler();
 80027d6:	f7ff fa2f 	bl	8001c38 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */
  HAL_TIM_MspPostInit(&htim1);
 80027da:	4803      	ldr	r0, [pc, #12]	@ (80027e8 <MX_TIM1_Init+0x138>)
 80027dc:	f000 f96a 	bl	8002ab4 <HAL_TIM_MspPostInit>

}
 80027e0:	bf00      	nop
 80027e2:	3758      	adds	r7, #88	@ 0x58
 80027e4:	46bd      	mov	sp, r7
 80027e6:	bd80      	pop	{r7, pc}
 80027e8:	20000328 	.word	0x20000328
 80027ec:	40010000 	.word	0x40010000

080027f0 <MX_TIM2_Init>:
/* TIM2 init function */
void MX_TIM2_Init(void)
{
 80027f0:	b580      	push	{r7, lr}
 80027f2:	b086      	sub	sp, #24
 80027f4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80027f6:	f107 0308 	add.w	r3, r7, #8
 80027fa:	2200      	movs	r2, #0
 80027fc:	601a      	str	r2, [r3, #0]
 80027fe:	605a      	str	r2, [r3, #4]
 8002800:	609a      	str	r2, [r3, #8]
 8002802:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002804:	463b      	mov	r3, r7
 8002806:	2200      	movs	r2, #0
 8002808:	601a      	str	r2, [r3, #0]
 800280a:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 800280c:	4b1d      	ldr	r3, [pc, #116]	@ (8002884 <MX_TIM2_Init+0x94>)
 800280e:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8002812:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 15;
 8002814:	4b1b      	ldr	r3, [pc, #108]	@ (8002884 <MX_TIM2_Init+0x94>)
 8002816:	220f      	movs	r2, #15
 8002818:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 800281a:	4b1a      	ldr	r3, [pc, #104]	@ (8002884 <MX_TIM2_Init+0x94>)
 800281c:	2200      	movs	r2, #0
 800281e:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 0xFFFFFFFF ;
 8002820:	4b18      	ldr	r3, [pc, #96]	@ (8002884 <MX_TIM2_Init+0x94>)
 8002822:	f04f 32ff 	mov.w	r2, #4294967295
 8002826:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002828:	4b16      	ldr	r3, [pc, #88]	@ (8002884 <MX_TIM2_Init+0x94>)
 800282a:	2200      	movs	r2, #0
 800282c:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800282e:	4b15      	ldr	r3, [pc, #84]	@ (8002884 <MX_TIM2_Init+0x94>)
 8002830:	2200      	movs	r2, #0
 8002832:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8002834:	4813      	ldr	r0, [pc, #76]	@ (8002884 <MX_TIM2_Init+0x94>)
 8002836:	f003 fb1b 	bl	8005e70 <HAL_TIM_Base_Init>
 800283a:	4603      	mov	r3, r0
 800283c:	2b00      	cmp	r3, #0
 800283e:	d001      	beq.n	8002844 <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 8002840:	f7ff f9fa 	bl	8001c38 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8002844:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8002848:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 800284a:	f107 0308 	add.w	r3, r7, #8
 800284e:	4619      	mov	r1, r3
 8002850:	480c      	ldr	r0, [pc, #48]	@ (8002884 <MX_TIM2_Init+0x94>)
 8002852:	f003 fdc5 	bl	80063e0 <HAL_TIM_ConfigClockSource>
 8002856:	4603      	mov	r3, r0
 8002858:	2b00      	cmp	r3, #0
 800285a:	d001      	beq.n	8002860 <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 800285c:	f7ff f9ec 	bl	8001c38 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002860:	2300      	movs	r3, #0
 8002862:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002864:	2300      	movs	r3, #0
 8002866:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8002868:	463b      	mov	r3, r7
 800286a:	4619      	mov	r1, r3
 800286c:	4805      	ldr	r0, [pc, #20]	@ (8002884 <MX_TIM2_Init+0x94>)
 800286e:	f004 f99b 	bl	8006ba8 <HAL_TIMEx_MasterConfigSynchronization>
 8002872:	4603      	mov	r3, r0
 8002874:	2b00      	cmp	r3, #0
 8002876:	d001      	beq.n	800287c <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 8002878:	f7ff f9de 	bl	8001c38 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 800287c:	bf00      	nop
 800287e:	3718      	adds	r7, #24
 8002880:	46bd      	mov	sp, r7
 8002882:	bd80      	pop	{r7, pc}
 8002884:	20000370 	.word	0x20000370

08002888 <MX_TIM3_Init>:
/* TIM3 init function */
void MX_TIM3_Init(void)
{
 8002888:	b580      	push	{r7, lr}
 800288a:	b08a      	sub	sp, #40	@ 0x28
 800288c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800288e:	f107 0320 	add.w	r3, r7, #32
 8002892:	2200      	movs	r2, #0
 8002894:	601a      	str	r2, [r3, #0]
 8002896:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8002898:	1d3b      	adds	r3, r7, #4
 800289a:	2200      	movs	r2, #0
 800289c:	601a      	str	r2, [r3, #0]
 800289e:	605a      	str	r2, [r3, #4]
 80028a0:	609a      	str	r2, [r3, #8]
 80028a2:	60da      	str	r2, [r3, #12]
 80028a4:	611a      	str	r2, [r3, #16]
 80028a6:	615a      	str	r2, [r3, #20]
 80028a8:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 80028aa:	4b22      	ldr	r3, [pc, #136]	@ (8002934 <MX_TIM3_Init+0xac>)
 80028ac:	4a22      	ldr	r2, [pc, #136]	@ (8002938 <MX_TIM3_Init+0xb0>)
 80028ae:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 83;
 80028b0:	4b20      	ldr	r3, [pc, #128]	@ (8002934 <MX_TIM3_Init+0xac>)
 80028b2:	2253      	movs	r2, #83	@ 0x53
 80028b4:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 80028b6:	4b1f      	ldr	r3, [pc, #124]	@ (8002934 <MX_TIM3_Init+0xac>)
 80028b8:	2200      	movs	r2, #0
 80028ba:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 999;
 80028bc:	4b1d      	ldr	r3, [pc, #116]	@ (8002934 <MX_TIM3_Init+0xac>)
 80028be:	f240 32e7 	movw	r2, #999	@ 0x3e7
 80028c2:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80028c4:	4b1b      	ldr	r3, [pc, #108]	@ (8002934 <MX_TIM3_Init+0xac>)
 80028c6:	2200      	movs	r2, #0
 80028c8:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80028ca:	4b1a      	ldr	r3, [pc, #104]	@ (8002934 <MX_TIM3_Init+0xac>)
 80028cc:	2280      	movs	r2, #128	@ 0x80
 80028ce:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 80028d0:	4818      	ldr	r0, [pc, #96]	@ (8002934 <MX_TIM3_Init+0xac>)
 80028d2:	f003 fbac 	bl	800602e <HAL_TIM_PWM_Init>
 80028d6:	4603      	mov	r3, r0
 80028d8:	2b00      	cmp	r3, #0
 80028da:	d001      	beq.n	80028e0 <MX_TIM3_Init+0x58>
  {
    Error_Handler();
 80028dc:	f7ff f9ac 	bl	8001c38 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80028e0:	2300      	movs	r3, #0
 80028e2:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80028e4:	2300      	movs	r3, #0
 80028e6:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80028e8:	f107 0320 	add.w	r3, r7, #32
 80028ec:	4619      	mov	r1, r3
 80028ee:	4811      	ldr	r0, [pc, #68]	@ (8002934 <MX_TIM3_Init+0xac>)
 80028f0:	f004 f95a 	bl	8006ba8 <HAL_TIMEx_MasterConfigSynchronization>
 80028f4:	4603      	mov	r3, r0
 80028f6:	2b00      	cmp	r3, #0
 80028f8:	d001      	beq.n	80028fe <MX_TIM3_Init+0x76>
  {
    Error_Handler();
 80028fa:	f7ff f99d 	bl	8001c38 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80028fe:	2360      	movs	r3, #96	@ 0x60
 8002900:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8002902:	2300      	movs	r3, #0
 8002904:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8002906:	2300      	movs	r3, #0
 8002908:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800290a:	2300      	movs	r3, #0
 800290c:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 800290e:	1d3b      	adds	r3, r7, #4
 8002910:	220c      	movs	r2, #12
 8002912:	4619      	mov	r1, r3
 8002914:	4807      	ldr	r0, [pc, #28]	@ (8002934 <MX_TIM3_Init+0xac>)
 8002916:	f003 fca1 	bl	800625c <HAL_TIM_PWM_ConfigChannel>
 800291a:	4603      	mov	r3, r0
 800291c:	2b00      	cmp	r3, #0
 800291e:	d001      	beq.n	8002924 <MX_TIM3_Init+0x9c>
  {
    Error_Handler();
 8002920:	f7ff f98a 	bl	8001c38 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 8002924:	4803      	ldr	r0, [pc, #12]	@ (8002934 <MX_TIM3_Init+0xac>)
 8002926:	f000 f8c5 	bl	8002ab4 <HAL_TIM_MspPostInit>

}
 800292a:	bf00      	nop
 800292c:	3728      	adds	r7, #40	@ 0x28
 800292e:	46bd      	mov	sp, r7
 8002930:	bd80      	pop	{r7, pc}
 8002932:	bf00      	nop
 8002934:	200003b8 	.word	0x200003b8
 8002938:	40000400 	.word	0x40000400

0800293c <MX_TIM4_Init>:
/* TIM4 init function */
void MX_TIM4_Init(void)
{
 800293c:	b580      	push	{r7, lr}
 800293e:	b086      	sub	sp, #24
 8002940:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8002942:	f107 0308 	add.w	r3, r7, #8
 8002946:	2200      	movs	r2, #0
 8002948:	601a      	str	r2, [r3, #0]
 800294a:	605a      	str	r2, [r3, #4]
 800294c:	609a      	str	r2, [r3, #8]
 800294e:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002950:	463b      	mov	r3, r7
 8002952:	2200      	movs	r2, #0
 8002954:	601a      	str	r2, [r3, #0]
 8002956:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 8002958:	4b1d      	ldr	r3, [pc, #116]	@ (80029d0 <MX_TIM4_Init+0x94>)
 800295a:	4a1e      	ldr	r2, [pc, #120]	@ (80029d4 <MX_TIM4_Init+0x98>)
 800295c:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 83;
 800295e:	4b1c      	ldr	r3, [pc, #112]	@ (80029d0 <MX_TIM4_Init+0x94>)
 8002960:	2253      	movs	r2, #83	@ 0x53
 8002962:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002964:	4b1a      	ldr	r3, [pc, #104]	@ (80029d0 <MX_TIM4_Init+0x94>)
 8002966:	2200      	movs	r2, #0
 8002968:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 65535;
 800296a:	4b19      	ldr	r3, [pc, #100]	@ (80029d0 <MX_TIM4_Init+0x94>)
 800296c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8002970:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002972:	4b17      	ldr	r3, [pc, #92]	@ (80029d0 <MX_TIM4_Init+0x94>)
 8002974:	2200      	movs	r2, #0
 8002976:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002978:	4b15      	ldr	r3, [pc, #84]	@ (80029d0 <MX_TIM4_Init+0x94>)
 800297a:	2200      	movs	r2, #0
 800297c:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 800297e:	4814      	ldr	r0, [pc, #80]	@ (80029d0 <MX_TIM4_Init+0x94>)
 8002980:	f003 fa76 	bl	8005e70 <HAL_TIM_Base_Init>
 8002984:	4603      	mov	r3, r0
 8002986:	2b00      	cmp	r3, #0
 8002988:	d001      	beq.n	800298e <MX_TIM4_Init+0x52>
  {
    Error_Handler();
 800298a:	f7ff f955 	bl	8001c38 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800298e:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8002992:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 8002994:	f107 0308 	add.w	r3, r7, #8
 8002998:	4619      	mov	r1, r3
 800299a:	480d      	ldr	r0, [pc, #52]	@ (80029d0 <MX_TIM4_Init+0x94>)
 800299c:	f003 fd20 	bl	80063e0 <HAL_TIM_ConfigClockSource>
 80029a0:	4603      	mov	r3, r0
 80029a2:	2b00      	cmp	r3, #0
 80029a4:	d001      	beq.n	80029aa <MX_TIM4_Init+0x6e>
  {
    Error_Handler();
 80029a6:	f7ff f947 	bl	8001c38 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80029aa:	2300      	movs	r3, #0
 80029ac:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80029ae:	2300      	movs	r3, #0
 80029b0:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 80029b2:	463b      	mov	r3, r7
 80029b4:	4619      	mov	r1, r3
 80029b6:	4806      	ldr	r0, [pc, #24]	@ (80029d0 <MX_TIM4_Init+0x94>)
 80029b8:	f004 f8f6 	bl	8006ba8 <HAL_TIMEx_MasterConfigSynchronization>
 80029bc:	4603      	mov	r3, r0
 80029be:	2b00      	cmp	r3, #0
 80029c0:	d001      	beq.n	80029c6 <MX_TIM4_Init+0x8a>
  {
    Error_Handler();
 80029c2:	f7ff f939 	bl	8001c38 <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */

}
 80029c6:	bf00      	nop
 80029c8:	3718      	adds	r7, #24
 80029ca:	46bd      	mov	sp, r7
 80029cc:	bd80      	pop	{r7, pc}
 80029ce:	bf00      	nop
 80029d0:	20000400 	.word	0x20000400
 80029d4:	40000800 	.word	0x40000800

080029d8 <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 80029d8:	b480      	push	{r7}
 80029da:	b087      	sub	sp, #28
 80029dc:	af00      	add	r7, sp, #0
 80029de:	6078      	str	r0, [r7, #4]

  if(tim_baseHandle->Instance==TIM1)
 80029e0:	687b      	ldr	r3, [r7, #4]
 80029e2:	681b      	ldr	r3, [r3, #0]
 80029e4:	4a1f      	ldr	r2, [pc, #124]	@ (8002a64 <HAL_TIM_Base_MspInit+0x8c>)
 80029e6:	4293      	cmp	r3, r2
 80029e8:	d10e      	bne.n	8002a08 <HAL_TIM_Base_MspInit+0x30>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* TIM1 clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 80029ea:	2300      	movs	r3, #0
 80029ec:	617b      	str	r3, [r7, #20]
 80029ee:	4b1e      	ldr	r3, [pc, #120]	@ (8002a68 <HAL_TIM_Base_MspInit+0x90>)
 80029f0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80029f2:	4a1d      	ldr	r2, [pc, #116]	@ (8002a68 <HAL_TIM_Base_MspInit+0x90>)
 80029f4:	f043 0301 	orr.w	r3, r3, #1
 80029f8:	6453      	str	r3, [r2, #68]	@ 0x44
 80029fa:	4b1b      	ldr	r3, [pc, #108]	@ (8002a68 <HAL_TIM_Base_MspInit+0x90>)
 80029fc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80029fe:	f003 0301 	and.w	r3, r3, #1
 8002a02:	617b      	str	r3, [r7, #20]
 8002a04:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_TIM4_CLK_ENABLE();
  /* USER CODE BEGIN TIM4_MspInit 1 */

  /* USER CODE END TIM4_MspInit 1 */
  }
}
 8002a06:	e026      	b.n	8002a56 <HAL_TIM_Base_MspInit+0x7e>
  else if(tim_baseHandle->Instance==TIM2)
 8002a08:	687b      	ldr	r3, [r7, #4]
 8002a0a:	681b      	ldr	r3, [r3, #0]
 8002a0c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8002a10:	d10e      	bne.n	8002a30 <HAL_TIM_Base_MspInit+0x58>
    __HAL_RCC_TIM2_CLK_ENABLE();
 8002a12:	2300      	movs	r3, #0
 8002a14:	613b      	str	r3, [r7, #16]
 8002a16:	4b14      	ldr	r3, [pc, #80]	@ (8002a68 <HAL_TIM_Base_MspInit+0x90>)
 8002a18:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002a1a:	4a13      	ldr	r2, [pc, #76]	@ (8002a68 <HAL_TIM_Base_MspInit+0x90>)
 8002a1c:	f043 0301 	orr.w	r3, r3, #1
 8002a20:	6413      	str	r3, [r2, #64]	@ 0x40
 8002a22:	4b11      	ldr	r3, [pc, #68]	@ (8002a68 <HAL_TIM_Base_MspInit+0x90>)
 8002a24:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002a26:	f003 0301 	and.w	r3, r3, #1
 8002a2a:	613b      	str	r3, [r7, #16]
 8002a2c:	693b      	ldr	r3, [r7, #16]
}
 8002a2e:	e012      	b.n	8002a56 <HAL_TIM_Base_MspInit+0x7e>
  else if(tim_baseHandle->Instance==TIM4)
 8002a30:	687b      	ldr	r3, [r7, #4]
 8002a32:	681b      	ldr	r3, [r3, #0]
 8002a34:	4a0d      	ldr	r2, [pc, #52]	@ (8002a6c <HAL_TIM_Base_MspInit+0x94>)
 8002a36:	4293      	cmp	r3, r2
 8002a38:	d10d      	bne.n	8002a56 <HAL_TIM_Base_MspInit+0x7e>
    __HAL_RCC_TIM4_CLK_ENABLE();
 8002a3a:	2300      	movs	r3, #0
 8002a3c:	60fb      	str	r3, [r7, #12]
 8002a3e:	4b0a      	ldr	r3, [pc, #40]	@ (8002a68 <HAL_TIM_Base_MspInit+0x90>)
 8002a40:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002a42:	4a09      	ldr	r2, [pc, #36]	@ (8002a68 <HAL_TIM_Base_MspInit+0x90>)
 8002a44:	f043 0304 	orr.w	r3, r3, #4
 8002a48:	6413      	str	r3, [r2, #64]	@ 0x40
 8002a4a:	4b07      	ldr	r3, [pc, #28]	@ (8002a68 <HAL_TIM_Base_MspInit+0x90>)
 8002a4c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002a4e:	f003 0304 	and.w	r3, r3, #4
 8002a52:	60fb      	str	r3, [r7, #12]
 8002a54:	68fb      	ldr	r3, [r7, #12]
}
 8002a56:	bf00      	nop
 8002a58:	371c      	adds	r7, #28
 8002a5a:	46bd      	mov	sp, r7
 8002a5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a60:	4770      	bx	lr
 8002a62:	bf00      	nop
 8002a64:	40010000 	.word	0x40010000
 8002a68:	40023800 	.word	0x40023800
 8002a6c:	40000800 	.word	0x40000800

08002a70 <HAL_TIM_PWM_MspInit>:

void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* tim_pwmHandle)
{
 8002a70:	b480      	push	{r7}
 8002a72:	b085      	sub	sp, #20
 8002a74:	af00      	add	r7, sp, #0
 8002a76:	6078      	str	r0, [r7, #4]

  if(tim_pwmHandle->Instance==TIM3)
 8002a78:	687b      	ldr	r3, [r7, #4]
 8002a7a:	681b      	ldr	r3, [r3, #0]
 8002a7c:	4a0b      	ldr	r2, [pc, #44]	@ (8002aac <HAL_TIM_PWM_MspInit+0x3c>)
 8002a7e:	4293      	cmp	r3, r2
 8002a80:	d10d      	bne.n	8002a9e <HAL_TIM_PWM_MspInit+0x2e>
  {
  /* USER CODE BEGIN TIM3_MspInit 0 */

  /* USER CODE END TIM3_MspInit 0 */
    /* TIM3 clock enable */
    __HAL_RCC_TIM3_CLK_ENABLE();
 8002a82:	2300      	movs	r3, #0
 8002a84:	60fb      	str	r3, [r7, #12]
 8002a86:	4b0a      	ldr	r3, [pc, #40]	@ (8002ab0 <HAL_TIM_PWM_MspInit+0x40>)
 8002a88:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002a8a:	4a09      	ldr	r2, [pc, #36]	@ (8002ab0 <HAL_TIM_PWM_MspInit+0x40>)
 8002a8c:	f043 0302 	orr.w	r3, r3, #2
 8002a90:	6413      	str	r3, [r2, #64]	@ 0x40
 8002a92:	4b07      	ldr	r3, [pc, #28]	@ (8002ab0 <HAL_TIM_PWM_MspInit+0x40>)
 8002a94:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002a96:	f003 0302 	and.w	r3, r3, #2
 8002a9a:	60fb      	str	r3, [r7, #12]
 8002a9c:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }
}
 8002a9e:	bf00      	nop
 8002aa0:	3714      	adds	r7, #20
 8002aa2:	46bd      	mov	sp, r7
 8002aa4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002aa8:	4770      	bx	lr
 8002aaa:	bf00      	nop
 8002aac:	40000400 	.word	0x40000400
 8002ab0:	40023800 	.word	0x40023800

08002ab4 <HAL_TIM_MspPostInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
{
 8002ab4:	b580      	push	{r7, lr}
 8002ab6:	b08a      	sub	sp, #40	@ 0x28
 8002ab8:	af00      	add	r7, sp, #0
 8002aba:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002abc:	f107 0314 	add.w	r3, r7, #20
 8002ac0:	2200      	movs	r2, #0
 8002ac2:	601a      	str	r2, [r3, #0]
 8002ac4:	605a      	str	r2, [r3, #4]
 8002ac6:	609a      	str	r2, [r3, #8]
 8002ac8:	60da      	str	r2, [r3, #12]
 8002aca:	611a      	str	r2, [r3, #16]
  if(timHandle->Instance==TIM1)
 8002acc:	687b      	ldr	r3, [r7, #4]
 8002ace:	681b      	ldr	r3, [r3, #0]
 8002ad0:	4a24      	ldr	r2, [pc, #144]	@ (8002b64 <HAL_TIM_MspPostInit+0xb0>)
 8002ad2:	4293      	cmp	r3, r2
 8002ad4:	d11f      	bne.n	8002b16 <HAL_TIM_MspPostInit+0x62>
  {
  /* USER CODE BEGIN TIM1_MspPostInit 0 */

  /* USER CODE END TIM1_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002ad6:	2300      	movs	r3, #0
 8002ad8:	613b      	str	r3, [r7, #16]
 8002ada:	4b23      	ldr	r3, [pc, #140]	@ (8002b68 <HAL_TIM_MspPostInit+0xb4>)
 8002adc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002ade:	4a22      	ldr	r2, [pc, #136]	@ (8002b68 <HAL_TIM_MspPostInit+0xb4>)
 8002ae0:	f043 0301 	orr.w	r3, r3, #1
 8002ae4:	6313      	str	r3, [r2, #48]	@ 0x30
 8002ae6:	4b20      	ldr	r3, [pc, #128]	@ (8002b68 <HAL_TIM_MspPostInit+0xb4>)
 8002ae8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002aea:	f003 0301 	and.w	r3, r3, #1
 8002aee:	613b      	str	r3, [r7, #16]
 8002af0:	693b      	ldr	r3, [r7, #16]
    /**TIM1 GPIO Configuration
    PA8     ------> TIM1_CH1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8002af2:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8002af6:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002af8:	2302      	movs	r3, #2
 8002afa:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002afc:	2300      	movs	r3, #0
 8002afe:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002b00:	2300      	movs	r3, #0
 8002b02:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 8002b04:	2301      	movs	r3, #1
 8002b06:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002b08:	f107 0314 	add.w	r3, r7, #20
 8002b0c:	4619      	mov	r1, r3
 8002b0e:	4817      	ldr	r0, [pc, #92]	@ (8002b6c <HAL_TIM_MspPostInit+0xb8>)
 8002b10:	f001 f8ba 	bl	8003c88 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM3_MspPostInit 1 */

  /* USER CODE END TIM3_MspPostInit 1 */
  }

}
 8002b14:	e022      	b.n	8002b5c <HAL_TIM_MspPostInit+0xa8>
  else if(timHandle->Instance==TIM3)
 8002b16:	687b      	ldr	r3, [r7, #4]
 8002b18:	681b      	ldr	r3, [r3, #0]
 8002b1a:	4a15      	ldr	r2, [pc, #84]	@ (8002b70 <HAL_TIM_MspPostInit+0xbc>)
 8002b1c:	4293      	cmp	r3, r2
 8002b1e:	d11d      	bne.n	8002b5c <HAL_TIM_MspPostInit+0xa8>
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002b20:	2300      	movs	r3, #0
 8002b22:	60fb      	str	r3, [r7, #12]
 8002b24:	4b10      	ldr	r3, [pc, #64]	@ (8002b68 <HAL_TIM_MspPostInit+0xb4>)
 8002b26:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002b28:	4a0f      	ldr	r2, [pc, #60]	@ (8002b68 <HAL_TIM_MspPostInit+0xb4>)
 8002b2a:	f043 0302 	orr.w	r3, r3, #2
 8002b2e:	6313      	str	r3, [r2, #48]	@ 0x30
 8002b30:	4b0d      	ldr	r3, [pc, #52]	@ (8002b68 <HAL_TIM_MspPostInit+0xb4>)
 8002b32:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002b34:	f003 0302 	and.w	r3, r3, #2
 8002b38:	60fb      	str	r3, [r7, #12]
 8002b3a:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_1;
 8002b3c:	2302      	movs	r3, #2
 8002b3e:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002b40:	2302      	movs	r3, #2
 8002b42:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002b44:	2300      	movs	r3, #0
 8002b46:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002b48:	2300      	movs	r3, #0
 8002b4a:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 8002b4c:	2302      	movs	r3, #2
 8002b4e:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002b50:	f107 0314 	add.w	r3, r7, #20
 8002b54:	4619      	mov	r1, r3
 8002b56:	4807      	ldr	r0, [pc, #28]	@ (8002b74 <HAL_TIM_MspPostInit+0xc0>)
 8002b58:	f001 f896 	bl	8003c88 <HAL_GPIO_Init>
}
 8002b5c:	bf00      	nop
 8002b5e:	3728      	adds	r7, #40	@ 0x28
 8002b60:	46bd      	mov	sp, r7
 8002b62:	bd80      	pop	{r7, pc}
 8002b64:	40010000 	.word	0x40010000
 8002b68:	40023800 	.word	0x40023800
 8002b6c:	40020000 	.word	0x40020000
 8002b70:	40000400 	.word	0x40000400
 8002b74:	40020400 	.word	0x40020400

08002b78 <USdelay_us>:

extern TIM_HandleTypeDef htim4;
extern UART_HandleTypeDef huart2;

void USdelay_us(uint32_t us)
{
 8002b78:	b480      	push	{r7}
 8002b7a:	b085      	sub	sp, #20
 8002b7c:	af00      	add	r7, sp, #0
 8002b7e:	6078      	str	r0, [r7, #4]
    uint32_t start = __HAL_TIM_GET_COUNTER(&htim4);
 8002b80:	4b09      	ldr	r3, [pc, #36]	@ (8002ba8 <USdelay_us+0x30>)
 8002b82:	681b      	ldr	r3, [r3, #0]
 8002b84:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002b86:	60fb      	str	r3, [r7, #12]
    while ((uint32_t)(__HAL_TIM_GET_COUNTER(&htim4) - start) < us);
 8002b88:	bf00      	nop
 8002b8a:	4b07      	ldr	r3, [pc, #28]	@ (8002ba8 <USdelay_us+0x30>)
 8002b8c:	681b      	ldr	r3, [r3, #0]
 8002b8e:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8002b90:	68fb      	ldr	r3, [r7, #12]
 8002b92:	1ad3      	subs	r3, r2, r3
 8002b94:	687a      	ldr	r2, [r7, #4]
 8002b96:	429a      	cmp	r2, r3
 8002b98:	d8f7      	bhi.n	8002b8a <USdelay_us+0x12>
}
 8002b9a:	bf00      	nop
 8002b9c:	bf00      	nop
 8002b9e:	3714      	adds	r7, #20
 8002ba0:	46bd      	mov	sp, r7
 8002ba2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ba6:	4770      	bx	lr
 8002ba8:	20000400 	.word	0x20000400
 8002bac:	00000000 	.word	0x00000000

08002bb0 <read_ultrasonic_distance_cm>:


uint32_t read_ultrasonic_distance_cm(GPIO_TypeDef* trigPort, uint16_t trigPin,
                                     GPIO_TypeDef* echoPort, uint16_t echoPin)
{
 8002bb0:	b580      	push	{r7, lr}
 8002bb2:	b08a      	sub	sp, #40	@ 0x28
 8002bb4:	af00      	add	r7, sp, #0
 8002bb6:	60f8      	str	r0, [r7, #12]
 8002bb8:	607a      	str	r2, [r7, #4]
 8002bba:	461a      	mov	r2, r3
 8002bbc:	460b      	mov	r3, r1
 8002bbe:	817b      	strh	r3, [r7, #10]
 8002bc0:	4613      	mov	r3, r2
 8002bc2:	813b      	strh	r3, [r7, #8]
    HAL_GPIO_WritePin(trigPort, trigPin, GPIO_PIN_RESET);
 8002bc4:	897b      	ldrh	r3, [r7, #10]
 8002bc6:	2200      	movs	r2, #0
 8002bc8:	4619      	mov	r1, r3
 8002bca:	68f8      	ldr	r0, [r7, #12]
 8002bcc:	f001 fa08 	bl	8003fe0 <HAL_GPIO_WritePin>
    USdelay_us(2);
 8002bd0:	2002      	movs	r0, #2
 8002bd2:	f7ff ffd1 	bl	8002b78 <USdelay_us>
    HAL_GPIO_WritePin(trigPort, trigPin, GPIO_PIN_SET);
 8002bd6:	897b      	ldrh	r3, [r7, #10]
 8002bd8:	2201      	movs	r2, #1
 8002bda:	4619      	mov	r1, r3
 8002bdc:	68f8      	ldr	r0, [r7, #12]
 8002bde:	f001 f9ff 	bl	8003fe0 <HAL_GPIO_WritePin>
    USdelay_us(10);
 8002be2:	200a      	movs	r0, #10
 8002be4:	f7ff ffc8 	bl	8002b78 <USdelay_us>
    HAL_GPIO_WritePin(trigPort, trigPin, GPIO_PIN_RESET);
 8002be8:	897b      	ldrh	r3, [r7, #10]
 8002bea:	2200      	movs	r2, #0
 8002bec:	4619      	mov	r1, r3
 8002bee:	68f8      	ldr	r0, [r7, #12]
 8002bf0:	f001 f9f6 	bl	8003fe0 <HAL_GPIO_WritePin>

    uint32_t timeout = 100000;
 8002bf4:	4b32      	ldr	r3, [pc, #200]	@ (8002cc0 <read_ultrasonic_distance_cm+0x110>)
 8002bf6:	627b      	str	r3, [r7, #36]	@ 0x24
    while (HAL_GPIO_ReadPin(echoPort, echoPin) == GPIO_PIN_RESET && timeout--);
 8002bf8:	bf00      	nop
 8002bfa:	893b      	ldrh	r3, [r7, #8]
 8002bfc:	4619      	mov	r1, r3
 8002bfe:	6878      	ldr	r0, [r7, #4]
 8002c00:	f001 f9d6 	bl	8003fb0 <HAL_GPIO_ReadPin>
 8002c04:	4603      	mov	r3, r0
 8002c06:	2b00      	cmp	r3, #0
 8002c08:	d104      	bne.n	8002c14 <read_ultrasonic_distance_cm+0x64>
 8002c0a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002c0c:	1e5a      	subs	r2, r3, #1
 8002c0e:	627a      	str	r2, [r7, #36]	@ 0x24
 8002c10:	2b00      	cmp	r3, #0
 8002c12:	d1f2      	bne.n	8002bfa <read_ultrasonic_distance_cm+0x4a>
    if (timeout == 0) return 0;
 8002c14:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002c16:	2b00      	cmp	r3, #0
 8002c18:	d101      	bne.n	8002c1e <read_ultrasonic_distance_cm+0x6e>
 8002c1a:	2300      	movs	r3, #0
 8002c1c:	e046      	b.n	8002cac <read_ultrasonic_distance_cm+0xfc>

    uint32_t start = __HAL_TIM_GET_COUNTER(&htim4);
 8002c1e:	4b29      	ldr	r3, [pc, #164]	@ (8002cc4 <read_ultrasonic_distance_cm+0x114>)
 8002c20:	681b      	ldr	r3, [r3, #0]
 8002c22:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002c24:	623b      	str	r3, [r7, #32]

    timeout = 100000;
 8002c26:	4b26      	ldr	r3, [pc, #152]	@ (8002cc0 <read_ultrasonic_distance_cm+0x110>)
 8002c28:	627b      	str	r3, [r7, #36]	@ 0x24
    while (HAL_GPIO_ReadPin(echoPort, echoPin) == GPIO_PIN_SET && timeout--);
 8002c2a:	bf00      	nop
 8002c2c:	893b      	ldrh	r3, [r7, #8]
 8002c2e:	4619      	mov	r1, r3
 8002c30:	6878      	ldr	r0, [r7, #4]
 8002c32:	f001 f9bd 	bl	8003fb0 <HAL_GPIO_ReadPin>
 8002c36:	4603      	mov	r3, r0
 8002c38:	2b01      	cmp	r3, #1
 8002c3a:	d104      	bne.n	8002c46 <read_ultrasonic_distance_cm+0x96>
 8002c3c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002c3e:	1e5a      	subs	r2, r3, #1
 8002c40:	627a      	str	r2, [r7, #36]	@ 0x24
 8002c42:	2b00      	cmp	r3, #0
 8002c44:	d1f2      	bne.n	8002c2c <read_ultrasonic_distance_cm+0x7c>
    if (timeout == 0) return 0;
 8002c46:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002c48:	2b00      	cmp	r3, #0
 8002c4a:	d101      	bne.n	8002c50 <read_ultrasonic_distance_cm+0xa0>
 8002c4c:	2300      	movs	r3, #0
 8002c4e:	e02d      	b.n	8002cac <read_ultrasonic_distance_cm+0xfc>

    uint32_t end = __HAL_TIM_GET_COUNTER(&htim4);
 8002c50:	4b1c      	ldr	r3, [pc, #112]	@ (8002cc4 <read_ultrasonic_distance_cm+0x114>)
 8002c52:	681b      	ldr	r3, [r3, #0]
 8002c54:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002c56:	61fb      	str	r3, [r7, #28]
    uint32_t duration = (end >= start) ? (end - start) : (0xFFFF - start + end);
 8002c58:	69fa      	ldr	r2, [r7, #28]
 8002c5a:	6a3b      	ldr	r3, [r7, #32]
 8002c5c:	429a      	cmp	r2, r3
 8002c5e:	d303      	bcc.n	8002c68 <read_ultrasonic_distance_cm+0xb8>
 8002c60:	69fa      	ldr	r2, [r7, #28]
 8002c62:	6a3b      	ldr	r3, [r7, #32]
 8002c64:	1ad3      	subs	r3, r2, r3
 8002c66:	e005      	b.n	8002c74 <read_ultrasonic_distance_cm+0xc4>
 8002c68:	69fa      	ldr	r2, [r7, #28]
 8002c6a:	6a3b      	ldr	r3, [r7, #32]
 8002c6c:	1ad3      	subs	r3, r2, r3
 8002c6e:	f503 437f 	add.w	r3, r3, #65280	@ 0xff00
 8002c72:	33ff      	adds	r3, #255	@ 0xff
 8002c74:	61bb      	str	r3, [r7, #24]
    uint32_t distance_cm = duration * 0.034 / 2;
 8002c76:	69b8      	ldr	r0, [r7, #24]
 8002c78:	f7fd fc64 	bl	8000544 <__aeabi_ui2d>
 8002c7c:	a30e      	add	r3, pc, #56	@ (adr r3, 8002cb8 <read_ultrasonic_distance_cm+0x108>)
 8002c7e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002c82:	f7fd fcd9 	bl	8000638 <__aeabi_dmul>
 8002c86:	4602      	mov	r2, r0
 8002c88:	460b      	mov	r3, r1
 8002c8a:	4610      	mov	r0, r2
 8002c8c:	4619      	mov	r1, r3
 8002c8e:	f04f 0200 	mov.w	r2, #0
 8002c92:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8002c96:	f7fd fdf9 	bl	800088c <__aeabi_ddiv>
 8002c9a:	4602      	mov	r2, r0
 8002c9c:	460b      	mov	r3, r1
 8002c9e:	4610      	mov	r0, r2
 8002ca0:	4619      	mov	r1, r3
 8002ca2:	f7fd ffa1 	bl	8000be8 <__aeabi_d2uiz>
 8002ca6:	4603      	mov	r3, r0
 8002ca8:	617b      	str	r3, [r7, #20]

    return distance_cm;
 8002caa:	697b      	ldr	r3, [r7, #20]
}
 8002cac:	4618      	mov	r0, r3
 8002cae:	3728      	adds	r7, #40	@ 0x28
 8002cb0:	46bd      	mov	sp, r7
 8002cb2:	bd80      	pop	{r7, pc}
 8002cb4:	f3af 8000 	nop.w
 8002cb8:	b020c49c 	.word	0xb020c49c
 8002cbc:	3fa16872 	.word	0x3fa16872
 8002cc0:	000186a0 	.word	0x000186a0
 8002cc4:	20000400 	.word	0x20000400

08002cc8 <UltrasonicTask1>:

/* FreeRTOS Tasks */
void UltrasonicTask1(void *argument)
{
 8002cc8:	b580      	push	{r7, lr}
 8002cca:	b094      	sub	sp, #80	@ 0x50
 8002ccc:	af00      	add	r7, sp, #0
 8002cce:	6078      	str	r0, [r7, #4]
    char msg[64];
    for (;;) {
        uint32_t d = read_ultrasonic_distance_cm(GPIOC, GPIO_PIN_7, GPIOC, GPIO_PIN_6);
 8002cd0:	2340      	movs	r3, #64	@ 0x40
 8002cd2:	4a10      	ldr	r2, [pc, #64]	@ (8002d14 <UltrasonicTask1+0x4c>)
 8002cd4:	2180      	movs	r1, #128	@ 0x80
 8002cd6:	480f      	ldr	r0, [pc, #60]	@ (8002d14 <UltrasonicTask1+0x4c>)
 8002cd8:	f7ff ff6a 	bl	8002bb0 <read_ultrasonic_distance_cm>
 8002cdc:	64f8      	str	r0, [r7, #76]	@ 0x4c
        snprintf(msg, sizeof(msg), "Sensor1: %lu cm\r\n", d);
 8002cde:	f107 000c 	add.w	r0, r7, #12
 8002ce2:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8002ce4:	4a0c      	ldr	r2, [pc, #48]	@ (8002d18 <UltrasonicTask1+0x50>)
 8002ce6:	2140      	movs	r1, #64	@ 0x40
 8002ce8:	f008 fd6e 	bl	800b7c8 <sniprintf>
        HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 8002cec:	f107 030c 	add.w	r3, r7, #12
 8002cf0:	4618      	mov	r0, r3
 8002cf2:	f7fd fadd 	bl	80002b0 <strlen>
 8002cf6:	4603      	mov	r3, r0
 8002cf8:	b29a      	uxth	r2, r3
 8002cfa:	f107 010c 	add.w	r1, r7, #12
 8002cfe:	f04f 33ff 	mov.w	r3, #4294967295
 8002d02:	4806      	ldr	r0, [pc, #24]	@ (8002d1c <UltrasonicTask1+0x54>)
 8002d04:	f004 f86e 	bl	8006de4 <HAL_UART_Transmit>
        vTaskDelay(pdMS_TO_TICKS(1000));
 8002d08:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8002d0c:	f006 fb2a 	bl	8009364 <vTaskDelay>
    for (;;) {
 8002d10:	bf00      	nop
 8002d12:	e7dd      	b.n	8002cd0 <UltrasonicTask1+0x8>
 8002d14:	40020800 	.word	0x40020800
 8002d18:	0800e0a0 	.word	0x0800e0a0
 8002d1c:	20000490 	.word	0x20000490

08002d20 <UltrasonicTask2>:
    }
}

void UltrasonicTask2(void *argument)
{
 8002d20:	b580      	push	{r7, lr}
 8002d22:	b094      	sub	sp, #80	@ 0x50
 8002d24:	af00      	add	r7, sp, #0
 8002d26:	6078      	str	r0, [r7, #4]
    char msg[64];
    for (;;) {
        uint32_t d = read_ultrasonic_distance_cm(GPIOB, GPIO_PIN_0, GPIOC, GPIO_PIN_8);
 8002d28:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8002d2c:	4a10      	ldr	r2, [pc, #64]	@ (8002d70 <UltrasonicTask2+0x50>)
 8002d2e:	2101      	movs	r1, #1
 8002d30:	4810      	ldr	r0, [pc, #64]	@ (8002d74 <UltrasonicTask2+0x54>)
 8002d32:	f7ff ff3d 	bl	8002bb0 <read_ultrasonic_distance_cm>
 8002d36:	64f8      	str	r0, [r7, #76]	@ 0x4c
        snprintf(msg, sizeof(msg), "Sensor2: %lu cm\r\n", d);
 8002d38:	f107 000c 	add.w	r0, r7, #12
 8002d3c:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8002d3e:	4a0e      	ldr	r2, [pc, #56]	@ (8002d78 <UltrasonicTask2+0x58>)
 8002d40:	2140      	movs	r1, #64	@ 0x40
 8002d42:	f008 fd41 	bl	800b7c8 <sniprintf>
        HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 8002d46:	f107 030c 	add.w	r3, r7, #12
 8002d4a:	4618      	mov	r0, r3
 8002d4c:	f7fd fab0 	bl	80002b0 <strlen>
 8002d50:	4603      	mov	r3, r0
 8002d52:	b29a      	uxth	r2, r3
 8002d54:	f107 010c 	add.w	r1, r7, #12
 8002d58:	f04f 33ff 	mov.w	r3, #4294967295
 8002d5c:	4807      	ldr	r0, [pc, #28]	@ (8002d7c <UltrasonicTask2+0x5c>)
 8002d5e:	f004 f841 	bl	8006de4 <HAL_UART_Transmit>
        vTaskDelay(pdMS_TO_TICKS(1000));
 8002d62:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8002d66:	f006 fafd 	bl	8009364 <vTaskDelay>
    for (;;) {
 8002d6a:	bf00      	nop
 8002d6c:	e7dc      	b.n	8002d28 <UltrasonicTask2+0x8>
 8002d6e:	bf00      	nop
 8002d70:	40020800 	.word	0x40020800
 8002d74:	40020400 	.word	0x40020400
 8002d78:	0800e0b4 	.word	0x0800e0b4
 8002d7c:	20000490 	.word	0x20000490

08002d80 <UltrasonicTask3>:
    }
}

void UltrasonicTask3(void *argument)
{
 8002d80:	b580      	push	{r7, lr}
 8002d82:	b094      	sub	sp, #80	@ 0x50
 8002d84:	af00      	add	r7, sp, #0
 8002d86:	6078      	str	r0, [r7, #4]
    char msg[64];
    for (;;) {
        uint32_t d = read_ultrasonic_distance_cm(GPIOC, GPIO_PIN_9, GPIOB, GPIO_PIN_2);
 8002d88:	2304      	movs	r3, #4
 8002d8a:	4a11      	ldr	r2, [pc, #68]	@ (8002dd0 <UltrasonicTask3+0x50>)
 8002d8c:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8002d90:	4810      	ldr	r0, [pc, #64]	@ (8002dd4 <UltrasonicTask3+0x54>)
 8002d92:	f7ff ff0d 	bl	8002bb0 <read_ultrasonic_distance_cm>
 8002d96:	64f8      	str	r0, [r7, #76]	@ 0x4c
        snprintf(msg, sizeof(msg), "Sensor3: %lu cm\r\n", d);
 8002d98:	f107 000c 	add.w	r0, r7, #12
 8002d9c:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8002d9e:	4a0e      	ldr	r2, [pc, #56]	@ (8002dd8 <UltrasonicTask3+0x58>)
 8002da0:	2140      	movs	r1, #64	@ 0x40
 8002da2:	f008 fd11 	bl	800b7c8 <sniprintf>
        HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 8002da6:	f107 030c 	add.w	r3, r7, #12
 8002daa:	4618      	mov	r0, r3
 8002dac:	f7fd fa80 	bl	80002b0 <strlen>
 8002db0:	4603      	mov	r3, r0
 8002db2:	b29a      	uxth	r2, r3
 8002db4:	f107 010c 	add.w	r1, r7, #12
 8002db8:	f04f 33ff 	mov.w	r3, #4294967295
 8002dbc:	4807      	ldr	r0, [pc, #28]	@ (8002ddc <UltrasonicTask3+0x5c>)
 8002dbe:	f004 f811 	bl	8006de4 <HAL_UART_Transmit>
        vTaskDelay(pdMS_TO_TICKS(1000));
 8002dc2:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8002dc6:	f006 facd 	bl	8009364 <vTaskDelay>
    for (;;) {
 8002dca:	bf00      	nop
 8002dcc:	e7dc      	b.n	8002d88 <UltrasonicTask3+0x8>
 8002dce:	bf00      	nop
 8002dd0:	40020400 	.word	0x40020400
 8002dd4:	40020800 	.word	0x40020800
 8002dd8:	0800e0c8 	.word	0x0800e0c8
 8002ddc:	20000490 	.word	0x20000490

08002de0 <MX_USART1_UART_Init>:
UART_HandleTypeDef huart2;

/* USART1 init function */

void MX_USART1_UART_Init(void)
{
 8002de0:	b580      	push	{r7, lr}
 8002de2:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8002de4:	4b11      	ldr	r3, [pc, #68]	@ (8002e2c <MX_USART1_UART_Init+0x4c>)
 8002de6:	4a12      	ldr	r2, [pc, #72]	@ (8002e30 <MX_USART1_UART_Init+0x50>)
 8002de8:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 9600;
 8002dea:	4b10      	ldr	r3, [pc, #64]	@ (8002e2c <MX_USART1_UART_Init+0x4c>)
 8002dec:	f44f 5216 	mov.w	r2, #9600	@ 0x2580
 8002df0:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8002df2:	4b0e      	ldr	r3, [pc, #56]	@ (8002e2c <MX_USART1_UART_Init+0x4c>)
 8002df4:	2200      	movs	r2, #0
 8002df6:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8002df8:	4b0c      	ldr	r3, [pc, #48]	@ (8002e2c <MX_USART1_UART_Init+0x4c>)
 8002dfa:	2200      	movs	r2, #0
 8002dfc:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8002dfe:	4b0b      	ldr	r3, [pc, #44]	@ (8002e2c <MX_USART1_UART_Init+0x4c>)
 8002e00:	2200      	movs	r2, #0
 8002e02:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8002e04:	4b09      	ldr	r3, [pc, #36]	@ (8002e2c <MX_USART1_UART_Init+0x4c>)
 8002e06:	220c      	movs	r2, #12
 8002e08:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8002e0a:	4b08      	ldr	r3, [pc, #32]	@ (8002e2c <MX_USART1_UART_Init+0x4c>)
 8002e0c:	2200      	movs	r2, #0
 8002e0e:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8002e10:	4b06      	ldr	r3, [pc, #24]	@ (8002e2c <MX_USART1_UART_Init+0x4c>)
 8002e12:	2200      	movs	r2, #0
 8002e14:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8002e16:	4805      	ldr	r0, [pc, #20]	@ (8002e2c <MX_USART1_UART_Init+0x4c>)
 8002e18:	f003 ff94 	bl	8006d44 <HAL_UART_Init>
 8002e1c:	4603      	mov	r3, r0
 8002e1e:	2b00      	cmp	r3, #0
 8002e20:	d001      	beq.n	8002e26 <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 8002e22:	f7fe ff09 	bl	8001c38 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8002e26:	bf00      	nop
 8002e28:	bd80      	pop	{r7, pc}
 8002e2a:	bf00      	nop
 8002e2c:	20000448 	.word	0x20000448
 8002e30:	40011000 	.word	0x40011000

08002e34 <MX_USART2_UART_Init>:
/* USART2 init function */

void MX_USART2_UART_Init(void)
{
 8002e34:	b580      	push	{r7, lr}
 8002e36:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8002e38:	4b11      	ldr	r3, [pc, #68]	@ (8002e80 <MX_USART2_UART_Init+0x4c>)
 8002e3a:	4a12      	ldr	r2, [pc, #72]	@ (8002e84 <MX_USART2_UART_Init+0x50>)
 8002e3c:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 8002e3e:	4b10      	ldr	r3, [pc, #64]	@ (8002e80 <MX_USART2_UART_Init+0x4c>)
 8002e40:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8002e44:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8002e46:	4b0e      	ldr	r3, [pc, #56]	@ (8002e80 <MX_USART2_UART_Init+0x4c>)
 8002e48:	2200      	movs	r2, #0
 8002e4a:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8002e4c:	4b0c      	ldr	r3, [pc, #48]	@ (8002e80 <MX_USART2_UART_Init+0x4c>)
 8002e4e:	2200      	movs	r2, #0
 8002e50:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8002e52:	4b0b      	ldr	r3, [pc, #44]	@ (8002e80 <MX_USART2_UART_Init+0x4c>)
 8002e54:	2200      	movs	r2, #0
 8002e56:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8002e58:	4b09      	ldr	r3, [pc, #36]	@ (8002e80 <MX_USART2_UART_Init+0x4c>)
 8002e5a:	220c      	movs	r2, #12
 8002e5c:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8002e5e:	4b08      	ldr	r3, [pc, #32]	@ (8002e80 <MX_USART2_UART_Init+0x4c>)
 8002e60:	2200      	movs	r2, #0
 8002e62:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8002e64:	4b06      	ldr	r3, [pc, #24]	@ (8002e80 <MX_USART2_UART_Init+0x4c>)
 8002e66:	2200      	movs	r2, #0
 8002e68:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8002e6a:	4805      	ldr	r0, [pc, #20]	@ (8002e80 <MX_USART2_UART_Init+0x4c>)
 8002e6c:	f003 ff6a 	bl	8006d44 <HAL_UART_Init>
 8002e70:	4603      	mov	r3, r0
 8002e72:	2b00      	cmp	r3, #0
 8002e74:	d001      	beq.n	8002e7a <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 8002e76:	f7fe fedf 	bl	8001c38 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8002e7a:	bf00      	nop
 8002e7c:	bd80      	pop	{r7, pc}
 8002e7e:	bf00      	nop
 8002e80:	20000490 	.word	0x20000490
 8002e84:	40004400 	.word	0x40004400

08002e88 <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 8002e88:	b580      	push	{r7, lr}
 8002e8a:	b08c      	sub	sp, #48	@ 0x30
 8002e8c:	af00      	add	r7, sp, #0
 8002e8e:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002e90:	f107 031c 	add.w	r3, r7, #28
 8002e94:	2200      	movs	r2, #0
 8002e96:	601a      	str	r2, [r3, #0]
 8002e98:	605a      	str	r2, [r3, #4]
 8002e9a:	609a      	str	r2, [r3, #8]
 8002e9c:	60da      	str	r2, [r3, #12]
 8002e9e:	611a      	str	r2, [r3, #16]
  if(uartHandle->Instance==USART1)
 8002ea0:	687b      	ldr	r3, [r7, #4]
 8002ea2:	681b      	ldr	r3, [r3, #0]
 8002ea4:	4a3a      	ldr	r2, [pc, #232]	@ (8002f90 <HAL_UART_MspInit+0x108>)
 8002ea6:	4293      	cmp	r3, r2
 8002ea8:	d135      	bne.n	8002f16 <HAL_UART_MspInit+0x8e>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* USART1 clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8002eaa:	2300      	movs	r3, #0
 8002eac:	61bb      	str	r3, [r7, #24]
 8002eae:	4b39      	ldr	r3, [pc, #228]	@ (8002f94 <HAL_UART_MspInit+0x10c>)
 8002eb0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002eb2:	4a38      	ldr	r2, [pc, #224]	@ (8002f94 <HAL_UART_MspInit+0x10c>)
 8002eb4:	f043 0310 	orr.w	r3, r3, #16
 8002eb8:	6453      	str	r3, [r2, #68]	@ 0x44
 8002eba:	4b36      	ldr	r3, [pc, #216]	@ (8002f94 <HAL_UART_MspInit+0x10c>)
 8002ebc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002ebe:	f003 0310 	and.w	r3, r3, #16
 8002ec2:	61bb      	str	r3, [r7, #24]
 8002ec4:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002ec6:	2300      	movs	r3, #0
 8002ec8:	617b      	str	r3, [r7, #20]
 8002eca:	4b32      	ldr	r3, [pc, #200]	@ (8002f94 <HAL_UART_MspInit+0x10c>)
 8002ecc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002ece:	4a31      	ldr	r2, [pc, #196]	@ (8002f94 <HAL_UART_MspInit+0x10c>)
 8002ed0:	f043 0301 	orr.w	r3, r3, #1
 8002ed4:	6313      	str	r3, [r2, #48]	@ 0x30
 8002ed6:	4b2f      	ldr	r3, [pc, #188]	@ (8002f94 <HAL_UART_MspInit+0x10c>)
 8002ed8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002eda:	f003 0301 	and.w	r3, r3, #1
 8002ede:	617b      	str	r3, [r7, #20]
 8002ee0:	697b      	ldr	r3, [r7, #20]
    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 8002ee2:	f44f 63c0 	mov.w	r3, #1536	@ 0x600
 8002ee6:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002ee8:	2302      	movs	r3, #2
 8002eea:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002eec:	2300      	movs	r3, #0
 8002eee:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002ef0:	2303      	movs	r3, #3
 8002ef2:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8002ef4:	2307      	movs	r3, #7
 8002ef6:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002ef8:	f107 031c 	add.w	r3, r7, #28
 8002efc:	4619      	mov	r1, r3
 8002efe:	4826      	ldr	r0, [pc, #152]	@ (8002f98 <HAL_UART_MspInit+0x110>)
 8002f00:	f000 fec2 	bl	8003c88 <HAL_GPIO_Init>

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 5, 0);
 8002f04:	2200      	movs	r2, #0
 8002f06:	2105      	movs	r1, #5
 8002f08:	2025      	movs	r0, #37	@ 0x25
 8002f0a:	f000 fdf4 	bl	8003af6 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 8002f0e:	2025      	movs	r0, #37	@ 0x25
 8002f10:	f000 fe0d 	bl	8003b2e <HAL_NVIC_EnableIRQ>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }
}
 8002f14:	e038      	b.n	8002f88 <HAL_UART_MspInit+0x100>
  else if(uartHandle->Instance==USART2)
 8002f16:	687b      	ldr	r3, [r7, #4]
 8002f18:	681b      	ldr	r3, [r3, #0]
 8002f1a:	4a20      	ldr	r2, [pc, #128]	@ (8002f9c <HAL_UART_MspInit+0x114>)
 8002f1c:	4293      	cmp	r3, r2
 8002f1e:	d133      	bne.n	8002f88 <HAL_UART_MspInit+0x100>
    __HAL_RCC_USART2_CLK_ENABLE();
 8002f20:	2300      	movs	r3, #0
 8002f22:	613b      	str	r3, [r7, #16]
 8002f24:	4b1b      	ldr	r3, [pc, #108]	@ (8002f94 <HAL_UART_MspInit+0x10c>)
 8002f26:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002f28:	4a1a      	ldr	r2, [pc, #104]	@ (8002f94 <HAL_UART_MspInit+0x10c>)
 8002f2a:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8002f2e:	6413      	str	r3, [r2, #64]	@ 0x40
 8002f30:	4b18      	ldr	r3, [pc, #96]	@ (8002f94 <HAL_UART_MspInit+0x10c>)
 8002f32:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002f34:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002f38:	613b      	str	r3, [r7, #16]
 8002f3a:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002f3c:	2300      	movs	r3, #0
 8002f3e:	60fb      	str	r3, [r7, #12]
 8002f40:	4b14      	ldr	r3, [pc, #80]	@ (8002f94 <HAL_UART_MspInit+0x10c>)
 8002f42:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002f44:	4a13      	ldr	r2, [pc, #76]	@ (8002f94 <HAL_UART_MspInit+0x10c>)
 8002f46:	f043 0301 	orr.w	r3, r3, #1
 8002f4a:	6313      	str	r3, [r2, #48]	@ 0x30
 8002f4c:	4b11      	ldr	r3, [pc, #68]	@ (8002f94 <HAL_UART_MspInit+0x10c>)
 8002f4e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002f50:	f003 0301 	and.w	r3, r3, #1
 8002f54:	60fb      	str	r3, [r7, #12]
 8002f56:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 8002f58:	230c      	movs	r3, #12
 8002f5a:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002f5c:	2302      	movs	r3, #2
 8002f5e:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002f60:	2300      	movs	r3, #0
 8002f62:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002f64:	2303      	movs	r3, #3
 8002f66:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8002f68:	2307      	movs	r3, #7
 8002f6a:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002f6c:	f107 031c 	add.w	r3, r7, #28
 8002f70:	4619      	mov	r1, r3
 8002f72:	4809      	ldr	r0, [pc, #36]	@ (8002f98 <HAL_UART_MspInit+0x110>)
 8002f74:	f000 fe88 	bl	8003c88 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART2_IRQn, 5, 0);
 8002f78:	2200      	movs	r2, #0
 8002f7a:	2105      	movs	r1, #5
 8002f7c:	2026      	movs	r0, #38	@ 0x26
 8002f7e:	f000 fdba 	bl	8003af6 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
 8002f82:	2026      	movs	r0, #38	@ 0x26
 8002f84:	f000 fdd3 	bl	8003b2e <HAL_NVIC_EnableIRQ>
}
 8002f88:	bf00      	nop
 8002f8a:	3730      	adds	r7, #48	@ 0x30
 8002f8c:	46bd      	mov	sp, r7
 8002f8e:	bd80      	pop	{r7, pc}
 8002f90:	40011000 	.word	0x40011000
 8002f94:	40023800 	.word	0x40023800
 8002f98:	40020000 	.word	0x40020000
 8002f9c:	40004400 	.word	0x40004400

08002fa0 <Reset_Handler>:
 8002fa0:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8002fd8 <LoopFillZerobss+0xe>
 8002fa4:	f7ff fb72 	bl	800268c <SystemInit>
 8002fa8:	480c      	ldr	r0, [pc, #48]	@ (8002fdc <LoopFillZerobss+0x12>)
 8002faa:	490d      	ldr	r1, [pc, #52]	@ (8002fe0 <LoopFillZerobss+0x16>)
 8002fac:	4a0d      	ldr	r2, [pc, #52]	@ (8002fe4 <LoopFillZerobss+0x1a>)
 8002fae:	2300      	movs	r3, #0
 8002fb0:	e002      	b.n	8002fb8 <LoopCopyDataInit>

08002fb2 <CopyDataInit>:
 8002fb2:	58d4      	ldr	r4, [r2, r3]
 8002fb4:	50c4      	str	r4, [r0, r3]
 8002fb6:	3304      	adds	r3, #4

08002fb8 <LoopCopyDataInit>:
 8002fb8:	18c4      	adds	r4, r0, r3
 8002fba:	428c      	cmp	r4, r1
 8002fbc:	d3f9      	bcc.n	8002fb2 <CopyDataInit>
 8002fbe:	4a0a      	ldr	r2, [pc, #40]	@ (8002fe8 <LoopFillZerobss+0x1e>)
 8002fc0:	4c0a      	ldr	r4, [pc, #40]	@ (8002fec <LoopFillZerobss+0x22>)
 8002fc2:	2300      	movs	r3, #0
 8002fc4:	e001      	b.n	8002fca <LoopFillZerobss>

08002fc6 <FillZerobss>:
 8002fc6:	6013      	str	r3, [r2, #0]
 8002fc8:	3204      	adds	r2, #4

08002fca <LoopFillZerobss>:
 8002fca:	42a2      	cmp	r2, r4
 8002fcc:	d3fb      	bcc.n	8002fc6 <FillZerobss>
 8002fce:	f008 fd4d 	bl	800ba6c <__libc_init_array>
 8002fd2:	f7fe fd8b 	bl	8001aec <main>
 8002fd6:	4770      	bx	lr
 8002fd8:	20020000 	.word	0x20020000
 8002fdc:	20000000 	.word	0x20000000
 8002fe0:	200001dc 	.word	0x200001dc
 8002fe4:	0800e5c0 	.word	0x0800e5c0
 8002fe8:	200001dc 	.word	0x200001dc
 8002fec:	20005010 	.word	0x20005010

08002ff0 <ADC_IRQHandler>:
 8002ff0:	e7fe      	b.n	8002ff0 <ADC_IRQHandler>
	...

08002ff4 <HAL_Init>:
 8002ff4:	b580      	push	{r7, lr}
 8002ff6:	af00      	add	r7, sp, #0
 8002ff8:	4b0e      	ldr	r3, [pc, #56]	@ (8003034 <HAL_Init+0x40>)
 8002ffa:	681b      	ldr	r3, [r3, #0]
 8002ffc:	4a0d      	ldr	r2, [pc, #52]	@ (8003034 <HAL_Init+0x40>)
 8002ffe:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8003002:	6013      	str	r3, [r2, #0]
 8003004:	4b0b      	ldr	r3, [pc, #44]	@ (8003034 <HAL_Init+0x40>)
 8003006:	681b      	ldr	r3, [r3, #0]
 8003008:	4a0a      	ldr	r2, [pc, #40]	@ (8003034 <HAL_Init+0x40>)
 800300a:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800300e:	6013      	str	r3, [r2, #0]
 8003010:	4b08      	ldr	r3, [pc, #32]	@ (8003034 <HAL_Init+0x40>)
 8003012:	681b      	ldr	r3, [r3, #0]
 8003014:	4a07      	ldr	r2, [pc, #28]	@ (8003034 <HAL_Init+0x40>)
 8003016:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800301a:	6013      	str	r3, [r2, #0]
 800301c:	2003      	movs	r0, #3
 800301e:	f000 fd5f 	bl	8003ae0 <HAL_NVIC_SetPriorityGrouping>
 8003022:	200f      	movs	r0, #15
 8003024:	f000 f808 	bl	8003038 <HAL_InitTick>
 8003028:	f7ff f9f8 	bl	800241c <HAL_MspInit>
 800302c:	2300      	movs	r3, #0
 800302e:	4618      	mov	r0, r3
 8003030:	bd80      	pop	{r7, pc}
 8003032:	bf00      	nop
 8003034:	40023c00 	.word	0x40023c00

08003038 <HAL_InitTick>:
 8003038:	b580      	push	{r7, lr}
 800303a:	b082      	sub	sp, #8
 800303c:	af00      	add	r7, sp, #0
 800303e:	6078      	str	r0, [r7, #4]
 8003040:	4b12      	ldr	r3, [pc, #72]	@ (800308c <HAL_InitTick+0x54>)
 8003042:	681a      	ldr	r2, [r3, #0]
 8003044:	4b12      	ldr	r3, [pc, #72]	@ (8003090 <HAL_InitTick+0x58>)
 8003046:	781b      	ldrb	r3, [r3, #0]
 8003048:	4619      	mov	r1, r3
 800304a:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800304e:	fbb3 f3f1 	udiv	r3, r3, r1
 8003052:	fbb2 f3f3 	udiv	r3, r2, r3
 8003056:	4618      	mov	r0, r3
 8003058:	f000 fd77 	bl	8003b4a <HAL_SYSTICK_Config>
 800305c:	4603      	mov	r3, r0
 800305e:	2b00      	cmp	r3, #0
 8003060:	d001      	beq.n	8003066 <HAL_InitTick+0x2e>
 8003062:	2301      	movs	r3, #1
 8003064:	e00e      	b.n	8003084 <HAL_InitTick+0x4c>
 8003066:	687b      	ldr	r3, [r7, #4]
 8003068:	2b0f      	cmp	r3, #15
 800306a:	d80a      	bhi.n	8003082 <HAL_InitTick+0x4a>
 800306c:	2200      	movs	r2, #0
 800306e:	6879      	ldr	r1, [r7, #4]
 8003070:	f04f 30ff 	mov.w	r0, #4294967295
 8003074:	f000 fd3f 	bl	8003af6 <HAL_NVIC_SetPriority>
 8003078:	4a06      	ldr	r2, [pc, #24]	@ (8003094 <HAL_InitTick+0x5c>)
 800307a:	687b      	ldr	r3, [r7, #4]
 800307c:	6013      	str	r3, [r2, #0]
 800307e:	2300      	movs	r3, #0
 8003080:	e000      	b.n	8003084 <HAL_InitTick+0x4c>
 8003082:	2301      	movs	r3, #1
 8003084:	4618      	mov	r0, r3
 8003086:	3708      	adds	r7, #8
 8003088:	46bd      	mov	sp, r7
 800308a:	bd80      	pop	{r7, pc}
 800308c:	20000004 	.word	0x20000004
 8003090:	2000000c 	.word	0x2000000c
 8003094:	20000008 	.word	0x20000008

08003098 <HAL_IncTick>:
 8003098:	b480      	push	{r7}
 800309a:	af00      	add	r7, sp, #0
 800309c:	4b06      	ldr	r3, [pc, #24]	@ (80030b8 <HAL_IncTick+0x20>)
 800309e:	781b      	ldrb	r3, [r3, #0]
 80030a0:	461a      	mov	r2, r3
 80030a2:	4b06      	ldr	r3, [pc, #24]	@ (80030bc <HAL_IncTick+0x24>)
 80030a4:	681b      	ldr	r3, [r3, #0]
 80030a6:	4413      	add	r3, r2
 80030a8:	4a04      	ldr	r2, [pc, #16]	@ (80030bc <HAL_IncTick+0x24>)
 80030aa:	6013      	str	r3, [r2, #0]
 80030ac:	bf00      	nop
 80030ae:	46bd      	mov	sp, r7
 80030b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030b4:	4770      	bx	lr
 80030b6:	bf00      	nop
 80030b8:	2000000c 	.word	0x2000000c
 80030bc:	200004d8 	.word	0x200004d8

080030c0 <HAL_GetTick>:
 80030c0:	b480      	push	{r7}
 80030c2:	af00      	add	r7, sp, #0
 80030c4:	4b03      	ldr	r3, [pc, #12]	@ (80030d4 <HAL_GetTick+0x14>)
 80030c6:	681b      	ldr	r3, [r3, #0]
 80030c8:	4618      	mov	r0, r3
 80030ca:	46bd      	mov	sp, r7
 80030cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030d0:	4770      	bx	lr
 80030d2:	bf00      	nop
 80030d4:	200004d8 	.word	0x200004d8

080030d8 <HAL_Delay>:
 80030d8:	b580      	push	{r7, lr}
 80030da:	b084      	sub	sp, #16
 80030dc:	af00      	add	r7, sp, #0
 80030de:	6078      	str	r0, [r7, #4]
 80030e0:	f7ff ffee 	bl	80030c0 <HAL_GetTick>
 80030e4:	60b8      	str	r0, [r7, #8]
 80030e6:	687b      	ldr	r3, [r7, #4]
 80030e8:	60fb      	str	r3, [r7, #12]
 80030ea:	68fb      	ldr	r3, [r7, #12]
 80030ec:	f1b3 3fff 	cmp.w	r3, #4294967295
 80030f0:	d005      	beq.n	80030fe <HAL_Delay+0x26>
 80030f2:	4b0a      	ldr	r3, [pc, #40]	@ (800311c <HAL_Delay+0x44>)
 80030f4:	781b      	ldrb	r3, [r3, #0]
 80030f6:	461a      	mov	r2, r3
 80030f8:	68fb      	ldr	r3, [r7, #12]
 80030fa:	4413      	add	r3, r2
 80030fc:	60fb      	str	r3, [r7, #12]
 80030fe:	bf00      	nop
 8003100:	f7ff ffde 	bl	80030c0 <HAL_GetTick>
 8003104:	4602      	mov	r2, r0
 8003106:	68bb      	ldr	r3, [r7, #8]
 8003108:	1ad3      	subs	r3, r2, r3
 800310a:	68fa      	ldr	r2, [r7, #12]
 800310c:	429a      	cmp	r2, r3
 800310e:	d8f7      	bhi.n	8003100 <HAL_Delay+0x28>
 8003110:	bf00      	nop
 8003112:	bf00      	nop
 8003114:	3710      	adds	r7, #16
 8003116:	46bd      	mov	sp, r7
 8003118:	bd80      	pop	{r7, pc}
 800311a:	bf00      	nop
 800311c:	2000000c 	.word	0x2000000c

08003120 <HAL_ADC_Init>:
 8003120:	b580      	push	{r7, lr}
 8003122:	b084      	sub	sp, #16
 8003124:	af00      	add	r7, sp, #0
 8003126:	6078      	str	r0, [r7, #4]
 8003128:	2300      	movs	r3, #0
 800312a:	73fb      	strb	r3, [r7, #15]
 800312c:	687b      	ldr	r3, [r7, #4]
 800312e:	2b00      	cmp	r3, #0
 8003130:	d101      	bne.n	8003136 <HAL_ADC_Init+0x16>
 8003132:	2301      	movs	r3, #1
 8003134:	e033      	b.n	800319e <HAL_ADC_Init+0x7e>
 8003136:	687b      	ldr	r3, [r7, #4]
 8003138:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800313a:	2b00      	cmp	r3, #0
 800313c:	d109      	bne.n	8003152 <HAL_ADC_Init+0x32>
 800313e:	6878      	ldr	r0, [r7, #4]
 8003140:	f7fd ffaa 	bl	8001098 <HAL_ADC_MspInit>
 8003144:	687b      	ldr	r3, [r7, #4]
 8003146:	2200      	movs	r2, #0
 8003148:	645a      	str	r2, [r3, #68]	@ 0x44
 800314a:	687b      	ldr	r3, [r7, #4]
 800314c:	2200      	movs	r2, #0
 800314e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003152:	687b      	ldr	r3, [r7, #4]
 8003154:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003156:	f003 0310 	and.w	r3, r3, #16
 800315a:	2b00      	cmp	r3, #0
 800315c:	d118      	bne.n	8003190 <HAL_ADC_Init+0x70>
 800315e:	687b      	ldr	r3, [r7, #4]
 8003160:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003162:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8003166:	f023 0302 	bic.w	r3, r3, #2
 800316a:	f043 0202 	orr.w	r2, r3, #2
 800316e:	687b      	ldr	r3, [r7, #4]
 8003170:	641a      	str	r2, [r3, #64]	@ 0x40
 8003172:	6878      	ldr	r0, [r7, #4]
 8003174:	f000 fae8 	bl	8003748 <ADC_Init>
 8003178:	687b      	ldr	r3, [r7, #4]
 800317a:	2200      	movs	r2, #0
 800317c:	645a      	str	r2, [r3, #68]	@ 0x44
 800317e:	687b      	ldr	r3, [r7, #4]
 8003180:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003182:	f023 0303 	bic.w	r3, r3, #3
 8003186:	f043 0201 	orr.w	r2, r3, #1
 800318a:	687b      	ldr	r3, [r7, #4]
 800318c:	641a      	str	r2, [r3, #64]	@ 0x40
 800318e:	e001      	b.n	8003194 <HAL_ADC_Init+0x74>
 8003190:	2301      	movs	r3, #1
 8003192:	73fb      	strb	r3, [r7, #15]
 8003194:	687b      	ldr	r3, [r7, #4]
 8003196:	2200      	movs	r2, #0
 8003198:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800319c:	7bfb      	ldrb	r3, [r7, #15]
 800319e:	4618      	mov	r0, r3
 80031a0:	3710      	adds	r7, #16
 80031a2:	46bd      	mov	sp, r7
 80031a4:	bd80      	pop	{r7, pc}
	...

080031a8 <HAL_ADC_Start>:
 80031a8:	b480      	push	{r7}
 80031aa:	b085      	sub	sp, #20
 80031ac:	af00      	add	r7, sp, #0
 80031ae:	6078      	str	r0, [r7, #4]
 80031b0:	2300      	movs	r3, #0
 80031b2:	60bb      	str	r3, [r7, #8]
 80031b4:	687b      	ldr	r3, [r7, #4]
 80031b6:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80031ba:	2b01      	cmp	r3, #1
 80031bc:	d101      	bne.n	80031c2 <HAL_ADC_Start+0x1a>
 80031be:	2302      	movs	r3, #2
 80031c0:	e0b2      	b.n	8003328 <HAL_ADC_Start+0x180>
 80031c2:	687b      	ldr	r3, [r7, #4]
 80031c4:	2201      	movs	r2, #1
 80031c6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80031ca:	687b      	ldr	r3, [r7, #4]
 80031cc:	681b      	ldr	r3, [r3, #0]
 80031ce:	689b      	ldr	r3, [r3, #8]
 80031d0:	f003 0301 	and.w	r3, r3, #1
 80031d4:	2b01      	cmp	r3, #1
 80031d6:	d018      	beq.n	800320a <HAL_ADC_Start+0x62>
 80031d8:	687b      	ldr	r3, [r7, #4]
 80031da:	681b      	ldr	r3, [r3, #0]
 80031dc:	689a      	ldr	r2, [r3, #8]
 80031de:	687b      	ldr	r3, [r7, #4]
 80031e0:	681b      	ldr	r3, [r3, #0]
 80031e2:	f042 0201 	orr.w	r2, r2, #1
 80031e6:	609a      	str	r2, [r3, #8]
 80031e8:	4b52      	ldr	r3, [pc, #328]	@ (8003334 <HAL_ADC_Start+0x18c>)
 80031ea:	681b      	ldr	r3, [r3, #0]
 80031ec:	4a52      	ldr	r2, [pc, #328]	@ (8003338 <HAL_ADC_Start+0x190>)
 80031ee:	fba2 2303 	umull	r2, r3, r2, r3
 80031f2:	0c9a      	lsrs	r2, r3, #18
 80031f4:	4613      	mov	r3, r2
 80031f6:	005b      	lsls	r3, r3, #1
 80031f8:	4413      	add	r3, r2
 80031fa:	60bb      	str	r3, [r7, #8]
 80031fc:	e002      	b.n	8003204 <HAL_ADC_Start+0x5c>
 80031fe:	68bb      	ldr	r3, [r7, #8]
 8003200:	3b01      	subs	r3, #1
 8003202:	60bb      	str	r3, [r7, #8]
 8003204:	68bb      	ldr	r3, [r7, #8]
 8003206:	2b00      	cmp	r3, #0
 8003208:	d1f9      	bne.n	80031fe <HAL_ADC_Start+0x56>
 800320a:	687b      	ldr	r3, [r7, #4]
 800320c:	681b      	ldr	r3, [r3, #0]
 800320e:	689b      	ldr	r3, [r3, #8]
 8003210:	f003 0301 	and.w	r3, r3, #1
 8003214:	2b01      	cmp	r3, #1
 8003216:	d17a      	bne.n	800330e <HAL_ADC_Start+0x166>
 8003218:	687b      	ldr	r3, [r7, #4]
 800321a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800321c:	f423 63e0 	bic.w	r3, r3, #1792	@ 0x700
 8003220:	f023 0301 	bic.w	r3, r3, #1
 8003224:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8003228:	687b      	ldr	r3, [r7, #4]
 800322a:	641a      	str	r2, [r3, #64]	@ 0x40
 800322c:	687b      	ldr	r3, [r7, #4]
 800322e:	681b      	ldr	r3, [r3, #0]
 8003230:	685b      	ldr	r3, [r3, #4]
 8003232:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8003236:	2b00      	cmp	r3, #0
 8003238:	d007      	beq.n	800324a <HAL_ADC_Start+0xa2>
 800323a:	687b      	ldr	r3, [r7, #4]
 800323c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800323e:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8003242:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 8003246:	687b      	ldr	r3, [r7, #4]
 8003248:	641a      	str	r2, [r3, #64]	@ 0x40
 800324a:	687b      	ldr	r3, [r7, #4]
 800324c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800324e:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8003252:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8003256:	d106      	bne.n	8003266 <HAL_ADC_Start+0xbe>
 8003258:	687b      	ldr	r3, [r7, #4]
 800325a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800325c:	f023 0206 	bic.w	r2, r3, #6
 8003260:	687b      	ldr	r3, [r7, #4]
 8003262:	645a      	str	r2, [r3, #68]	@ 0x44
 8003264:	e002      	b.n	800326c <HAL_ADC_Start+0xc4>
 8003266:	687b      	ldr	r3, [r7, #4]
 8003268:	2200      	movs	r2, #0
 800326a:	645a      	str	r2, [r3, #68]	@ 0x44
 800326c:	687b      	ldr	r3, [r7, #4]
 800326e:	2200      	movs	r2, #0
 8003270:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003274:	4b31      	ldr	r3, [pc, #196]	@ (800333c <HAL_ADC_Start+0x194>)
 8003276:	60fb      	str	r3, [r7, #12]
 8003278:	687b      	ldr	r3, [r7, #4]
 800327a:	681b      	ldr	r3, [r3, #0]
 800327c:	f06f 0222 	mvn.w	r2, #34	@ 0x22
 8003280:	601a      	str	r2, [r3, #0]
 8003282:	68fb      	ldr	r3, [r7, #12]
 8003284:	685b      	ldr	r3, [r3, #4]
 8003286:	f003 031f 	and.w	r3, r3, #31
 800328a:	2b00      	cmp	r3, #0
 800328c:	d12a      	bne.n	80032e4 <HAL_ADC_Start+0x13c>
 800328e:	687b      	ldr	r3, [r7, #4]
 8003290:	681b      	ldr	r3, [r3, #0]
 8003292:	4a2b      	ldr	r2, [pc, #172]	@ (8003340 <HAL_ADC_Start+0x198>)
 8003294:	4293      	cmp	r3, r2
 8003296:	d015      	beq.n	80032c4 <HAL_ADC_Start+0x11c>
 8003298:	687b      	ldr	r3, [r7, #4]
 800329a:	681b      	ldr	r3, [r3, #0]
 800329c:	4a29      	ldr	r2, [pc, #164]	@ (8003344 <HAL_ADC_Start+0x19c>)
 800329e:	4293      	cmp	r3, r2
 80032a0:	d105      	bne.n	80032ae <HAL_ADC_Start+0x106>
 80032a2:	4b26      	ldr	r3, [pc, #152]	@ (800333c <HAL_ADC_Start+0x194>)
 80032a4:	685b      	ldr	r3, [r3, #4]
 80032a6:	f003 031f 	and.w	r3, r3, #31
 80032aa:	2b00      	cmp	r3, #0
 80032ac:	d00a      	beq.n	80032c4 <HAL_ADC_Start+0x11c>
 80032ae:	687b      	ldr	r3, [r7, #4]
 80032b0:	681b      	ldr	r3, [r3, #0]
 80032b2:	4a25      	ldr	r2, [pc, #148]	@ (8003348 <HAL_ADC_Start+0x1a0>)
 80032b4:	4293      	cmp	r3, r2
 80032b6:	d136      	bne.n	8003326 <HAL_ADC_Start+0x17e>
 80032b8:	4b20      	ldr	r3, [pc, #128]	@ (800333c <HAL_ADC_Start+0x194>)
 80032ba:	685b      	ldr	r3, [r3, #4]
 80032bc:	f003 0310 	and.w	r3, r3, #16
 80032c0:	2b00      	cmp	r3, #0
 80032c2:	d130      	bne.n	8003326 <HAL_ADC_Start+0x17e>
 80032c4:	687b      	ldr	r3, [r7, #4]
 80032c6:	681b      	ldr	r3, [r3, #0]
 80032c8:	689b      	ldr	r3, [r3, #8]
 80032ca:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 80032ce:	2b00      	cmp	r3, #0
 80032d0:	d129      	bne.n	8003326 <HAL_ADC_Start+0x17e>
 80032d2:	687b      	ldr	r3, [r7, #4]
 80032d4:	681b      	ldr	r3, [r3, #0]
 80032d6:	689a      	ldr	r2, [r3, #8]
 80032d8:	687b      	ldr	r3, [r7, #4]
 80032da:	681b      	ldr	r3, [r3, #0]
 80032dc:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 80032e0:	609a      	str	r2, [r3, #8]
 80032e2:	e020      	b.n	8003326 <HAL_ADC_Start+0x17e>
 80032e4:	687b      	ldr	r3, [r7, #4]
 80032e6:	681b      	ldr	r3, [r3, #0]
 80032e8:	4a15      	ldr	r2, [pc, #84]	@ (8003340 <HAL_ADC_Start+0x198>)
 80032ea:	4293      	cmp	r3, r2
 80032ec:	d11b      	bne.n	8003326 <HAL_ADC_Start+0x17e>
 80032ee:	687b      	ldr	r3, [r7, #4]
 80032f0:	681b      	ldr	r3, [r3, #0]
 80032f2:	689b      	ldr	r3, [r3, #8]
 80032f4:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 80032f8:	2b00      	cmp	r3, #0
 80032fa:	d114      	bne.n	8003326 <HAL_ADC_Start+0x17e>
 80032fc:	687b      	ldr	r3, [r7, #4]
 80032fe:	681b      	ldr	r3, [r3, #0]
 8003300:	689a      	ldr	r2, [r3, #8]
 8003302:	687b      	ldr	r3, [r7, #4]
 8003304:	681b      	ldr	r3, [r3, #0]
 8003306:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 800330a:	609a      	str	r2, [r3, #8]
 800330c:	e00b      	b.n	8003326 <HAL_ADC_Start+0x17e>
 800330e:	687b      	ldr	r3, [r7, #4]
 8003310:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003312:	f043 0210 	orr.w	r2, r3, #16
 8003316:	687b      	ldr	r3, [r7, #4]
 8003318:	641a      	str	r2, [r3, #64]	@ 0x40
 800331a:	687b      	ldr	r3, [r7, #4]
 800331c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800331e:	f043 0201 	orr.w	r2, r3, #1
 8003322:	687b      	ldr	r3, [r7, #4]
 8003324:	645a      	str	r2, [r3, #68]	@ 0x44
 8003326:	2300      	movs	r3, #0
 8003328:	4618      	mov	r0, r3
 800332a:	3714      	adds	r7, #20
 800332c:	46bd      	mov	sp, r7
 800332e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003332:	4770      	bx	lr
 8003334:	20000004 	.word	0x20000004
 8003338:	431bde83 	.word	0x431bde83
 800333c:	40012300 	.word	0x40012300
 8003340:	40012000 	.word	0x40012000
 8003344:	40012100 	.word	0x40012100
 8003348:	40012200 	.word	0x40012200

0800334c <HAL_ADC_Stop>:
 800334c:	b480      	push	{r7}
 800334e:	b083      	sub	sp, #12
 8003350:	af00      	add	r7, sp, #0
 8003352:	6078      	str	r0, [r7, #4]
 8003354:	687b      	ldr	r3, [r7, #4]
 8003356:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800335a:	2b01      	cmp	r3, #1
 800335c:	d101      	bne.n	8003362 <HAL_ADC_Stop+0x16>
 800335e:	2302      	movs	r3, #2
 8003360:	e021      	b.n	80033a6 <HAL_ADC_Stop+0x5a>
 8003362:	687b      	ldr	r3, [r7, #4]
 8003364:	2201      	movs	r2, #1
 8003366:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800336a:	687b      	ldr	r3, [r7, #4]
 800336c:	681b      	ldr	r3, [r3, #0]
 800336e:	689a      	ldr	r2, [r3, #8]
 8003370:	687b      	ldr	r3, [r7, #4]
 8003372:	681b      	ldr	r3, [r3, #0]
 8003374:	f022 0201 	bic.w	r2, r2, #1
 8003378:	609a      	str	r2, [r3, #8]
 800337a:	687b      	ldr	r3, [r7, #4]
 800337c:	681b      	ldr	r3, [r3, #0]
 800337e:	689b      	ldr	r3, [r3, #8]
 8003380:	f003 0301 	and.w	r3, r3, #1
 8003384:	2b00      	cmp	r3, #0
 8003386:	d109      	bne.n	800339c <HAL_ADC_Stop+0x50>
 8003388:	687b      	ldr	r3, [r7, #4]
 800338a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800338c:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8003390:	f023 0301 	bic.w	r3, r3, #1
 8003394:	f043 0201 	orr.w	r2, r3, #1
 8003398:	687b      	ldr	r3, [r7, #4]
 800339a:	641a      	str	r2, [r3, #64]	@ 0x40
 800339c:	687b      	ldr	r3, [r7, #4]
 800339e:	2200      	movs	r2, #0
 80033a0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80033a4:	2300      	movs	r3, #0
 80033a6:	4618      	mov	r0, r3
 80033a8:	370c      	adds	r7, #12
 80033aa:	46bd      	mov	sp, r7
 80033ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033b0:	4770      	bx	lr

080033b2 <HAL_ADC_PollForConversion>:
 80033b2:	b580      	push	{r7, lr}
 80033b4:	b084      	sub	sp, #16
 80033b6:	af00      	add	r7, sp, #0
 80033b8:	6078      	str	r0, [r7, #4]
 80033ba:	6039      	str	r1, [r7, #0]
 80033bc:	2300      	movs	r3, #0
 80033be:	60fb      	str	r3, [r7, #12]
 80033c0:	687b      	ldr	r3, [r7, #4]
 80033c2:	681b      	ldr	r3, [r3, #0]
 80033c4:	689b      	ldr	r3, [r3, #8]
 80033c6:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80033ca:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80033ce:	d113      	bne.n	80033f8 <HAL_ADC_PollForConversion+0x46>
 80033d0:	687b      	ldr	r3, [r7, #4]
 80033d2:	681b      	ldr	r3, [r3, #0]
 80033d4:	689b      	ldr	r3, [r3, #8]
 80033d6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80033da:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80033de:	d10b      	bne.n	80033f8 <HAL_ADC_PollForConversion+0x46>
 80033e0:	687b      	ldr	r3, [r7, #4]
 80033e2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80033e4:	f043 0220 	orr.w	r2, r3, #32
 80033e8:	687b      	ldr	r3, [r7, #4]
 80033ea:	641a      	str	r2, [r3, #64]	@ 0x40
 80033ec:	687b      	ldr	r3, [r7, #4]
 80033ee:	2200      	movs	r2, #0
 80033f0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80033f4:	2301      	movs	r3, #1
 80033f6:	e063      	b.n	80034c0 <HAL_ADC_PollForConversion+0x10e>
 80033f8:	f7ff fe62 	bl	80030c0 <HAL_GetTick>
 80033fc:	60f8      	str	r0, [r7, #12]
 80033fe:	e021      	b.n	8003444 <HAL_ADC_PollForConversion+0x92>
 8003400:	683b      	ldr	r3, [r7, #0]
 8003402:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003406:	d01d      	beq.n	8003444 <HAL_ADC_PollForConversion+0x92>
 8003408:	683b      	ldr	r3, [r7, #0]
 800340a:	2b00      	cmp	r3, #0
 800340c:	d007      	beq.n	800341e <HAL_ADC_PollForConversion+0x6c>
 800340e:	f7ff fe57 	bl	80030c0 <HAL_GetTick>
 8003412:	4602      	mov	r2, r0
 8003414:	68fb      	ldr	r3, [r7, #12]
 8003416:	1ad3      	subs	r3, r2, r3
 8003418:	683a      	ldr	r2, [r7, #0]
 800341a:	429a      	cmp	r2, r3
 800341c:	d212      	bcs.n	8003444 <HAL_ADC_PollForConversion+0x92>
 800341e:	687b      	ldr	r3, [r7, #4]
 8003420:	681b      	ldr	r3, [r3, #0]
 8003422:	681b      	ldr	r3, [r3, #0]
 8003424:	f003 0302 	and.w	r3, r3, #2
 8003428:	2b02      	cmp	r3, #2
 800342a:	d00b      	beq.n	8003444 <HAL_ADC_PollForConversion+0x92>
 800342c:	687b      	ldr	r3, [r7, #4]
 800342e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003430:	f043 0204 	orr.w	r2, r3, #4
 8003434:	687b      	ldr	r3, [r7, #4]
 8003436:	641a      	str	r2, [r3, #64]	@ 0x40
 8003438:	687b      	ldr	r3, [r7, #4]
 800343a:	2200      	movs	r2, #0
 800343c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003440:	2303      	movs	r3, #3
 8003442:	e03d      	b.n	80034c0 <HAL_ADC_PollForConversion+0x10e>
 8003444:	687b      	ldr	r3, [r7, #4]
 8003446:	681b      	ldr	r3, [r3, #0]
 8003448:	681b      	ldr	r3, [r3, #0]
 800344a:	f003 0302 	and.w	r3, r3, #2
 800344e:	2b02      	cmp	r3, #2
 8003450:	d1d6      	bne.n	8003400 <HAL_ADC_PollForConversion+0x4e>
 8003452:	687b      	ldr	r3, [r7, #4]
 8003454:	681b      	ldr	r3, [r3, #0]
 8003456:	f06f 0212 	mvn.w	r2, #18
 800345a:	601a      	str	r2, [r3, #0]
 800345c:	687b      	ldr	r3, [r7, #4]
 800345e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003460:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 8003464:	687b      	ldr	r3, [r7, #4]
 8003466:	641a      	str	r2, [r3, #64]	@ 0x40
 8003468:	687b      	ldr	r3, [r7, #4]
 800346a:	681b      	ldr	r3, [r3, #0]
 800346c:	689b      	ldr	r3, [r3, #8]
 800346e:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8003472:	2b00      	cmp	r3, #0
 8003474:	d123      	bne.n	80034be <HAL_ADC_PollForConversion+0x10c>
 8003476:	687b      	ldr	r3, [r7, #4]
 8003478:	7e1b      	ldrb	r3, [r3, #24]
 800347a:	2b00      	cmp	r3, #0
 800347c:	d11f      	bne.n	80034be <HAL_ADC_PollForConversion+0x10c>
 800347e:	687b      	ldr	r3, [r7, #4]
 8003480:	681b      	ldr	r3, [r3, #0]
 8003482:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003484:	f403 0370 	and.w	r3, r3, #15728640	@ 0xf00000
 8003488:	2b00      	cmp	r3, #0
 800348a:	d006      	beq.n	800349a <HAL_ADC_PollForConversion+0xe8>
 800348c:	687b      	ldr	r3, [r7, #4]
 800348e:	681b      	ldr	r3, [r3, #0]
 8003490:	689b      	ldr	r3, [r3, #8]
 8003492:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8003496:	2b00      	cmp	r3, #0
 8003498:	d111      	bne.n	80034be <HAL_ADC_PollForConversion+0x10c>
 800349a:	687b      	ldr	r3, [r7, #4]
 800349c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800349e:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 80034a2:	687b      	ldr	r3, [r7, #4]
 80034a4:	641a      	str	r2, [r3, #64]	@ 0x40
 80034a6:	687b      	ldr	r3, [r7, #4]
 80034a8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80034aa:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80034ae:	2b00      	cmp	r3, #0
 80034b0:	d105      	bne.n	80034be <HAL_ADC_PollForConversion+0x10c>
 80034b2:	687b      	ldr	r3, [r7, #4]
 80034b4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80034b6:	f043 0201 	orr.w	r2, r3, #1
 80034ba:	687b      	ldr	r3, [r7, #4]
 80034bc:	641a      	str	r2, [r3, #64]	@ 0x40
 80034be:	2300      	movs	r3, #0
 80034c0:	4618      	mov	r0, r3
 80034c2:	3710      	adds	r7, #16
 80034c4:	46bd      	mov	sp, r7
 80034c6:	bd80      	pop	{r7, pc}

080034c8 <HAL_ADC_GetValue>:
 80034c8:	b480      	push	{r7}
 80034ca:	b083      	sub	sp, #12
 80034cc:	af00      	add	r7, sp, #0
 80034ce:	6078      	str	r0, [r7, #4]
 80034d0:	687b      	ldr	r3, [r7, #4]
 80034d2:	681b      	ldr	r3, [r3, #0]
 80034d4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80034d6:	4618      	mov	r0, r3
 80034d8:	370c      	adds	r7, #12
 80034da:	46bd      	mov	sp, r7
 80034dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034e0:	4770      	bx	lr
	...

080034e4 <HAL_ADC_ConfigChannel>:
 80034e4:	b480      	push	{r7}
 80034e6:	b085      	sub	sp, #20
 80034e8:	af00      	add	r7, sp, #0
 80034ea:	6078      	str	r0, [r7, #4]
 80034ec:	6039      	str	r1, [r7, #0]
 80034ee:	2300      	movs	r3, #0
 80034f0:	60bb      	str	r3, [r7, #8]
 80034f2:	687b      	ldr	r3, [r7, #4]
 80034f4:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80034f8:	2b01      	cmp	r3, #1
 80034fa:	d101      	bne.n	8003500 <HAL_ADC_ConfigChannel+0x1c>
 80034fc:	2302      	movs	r3, #2
 80034fe:	e113      	b.n	8003728 <HAL_ADC_ConfigChannel+0x244>
 8003500:	687b      	ldr	r3, [r7, #4]
 8003502:	2201      	movs	r2, #1
 8003504:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003508:	683b      	ldr	r3, [r7, #0]
 800350a:	681b      	ldr	r3, [r3, #0]
 800350c:	2b09      	cmp	r3, #9
 800350e:	d925      	bls.n	800355c <HAL_ADC_ConfigChannel+0x78>
 8003510:	687b      	ldr	r3, [r7, #4]
 8003512:	681b      	ldr	r3, [r3, #0]
 8003514:	68d9      	ldr	r1, [r3, #12]
 8003516:	683b      	ldr	r3, [r7, #0]
 8003518:	681b      	ldr	r3, [r3, #0]
 800351a:	b29b      	uxth	r3, r3
 800351c:	461a      	mov	r2, r3
 800351e:	4613      	mov	r3, r2
 8003520:	005b      	lsls	r3, r3, #1
 8003522:	4413      	add	r3, r2
 8003524:	3b1e      	subs	r3, #30
 8003526:	2207      	movs	r2, #7
 8003528:	fa02 f303 	lsl.w	r3, r2, r3
 800352c:	43da      	mvns	r2, r3
 800352e:	687b      	ldr	r3, [r7, #4]
 8003530:	681b      	ldr	r3, [r3, #0]
 8003532:	400a      	ands	r2, r1
 8003534:	60da      	str	r2, [r3, #12]
 8003536:	687b      	ldr	r3, [r7, #4]
 8003538:	681b      	ldr	r3, [r3, #0]
 800353a:	68d9      	ldr	r1, [r3, #12]
 800353c:	683b      	ldr	r3, [r7, #0]
 800353e:	689a      	ldr	r2, [r3, #8]
 8003540:	683b      	ldr	r3, [r7, #0]
 8003542:	681b      	ldr	r3, [r3, #0]
 8003544:	b29b      	uxth	r3, r3
 8003546:	4618      	mov	r0, r3
 8003548:	4603      	mov	r3, r0
 800354a:	005b      	lsls	r3, r3, #1
 800354c:	4403      	add	r3, r0
 800354e:	3b1e      	subs	r3, #30
 8003550:	409a      	lsls	r2, r3
 8003552:	687b      	ldr	r3, [r7, #4]
 8003554:	681b      	ldr	r3, [r3, #0]
 8003556:	430a      	orrs	r2, r1
 8003558:	60da      	str	r2, [r3, #12]
 800355a:	e022      	b.n	80035a2 <HAL_ADC_ConfigChannel+0xbe>
 800355c:	687b      	ldr	r3, [r7, #4]
 800355e:	681b      	ldr	r3, [r3, #0]
 8003560:	6919      	ldr	r1, [r3, #16]
 8003562:	683b      	ldr	r3, [r7, #0]
 8003564:	681b      	ldr	r3, [r3, #0]
 8003566:	b29b      	uxth	r3, r3
 8003568:	461a      	mov	r2, r3
 800356a:	4613      	mov	r3, r2
 800356c:	005b      	lsls	r3, r3, #1
 800356e:	4413      	add	r3, r2
 8003570:	2207      	movs	r2, #7
 8003572:	fa02 f303 	lsl.w	r3, r2, r3
 8003576:	43da      	mvns	r2, r3
 8003578:	687b      	ldr	r3, [r7, #4]
 800357a:	681b      	ldr	r3, [r3, #0]
 800357c:	400a      	ands	r2, r1
 800357e:	611a      	str	r2, [r3, #16]
 8003580:	687b      	ldr	r3, [r7, #4]
 8003582:	681b      	ldr	r3, [r3, #0]
 8003584:	6919      	ldr	r1, [r3, #16]
 8003586:	683b      	ldr	r3, [r7, #0]
 8003588:	689a      	ldr	r2, [r3, #8]
 800358a:	683b      	ldr	r3, [r7, #0]
 800358c:	681b      	ldr	r3, [r3, #0]
 800358e:	b29b      	uxth	r3, r3
 8003590:	4618      	mov	r0, r3
 8003592:	4603      	mov	r3, r0
 8003594:	005b      	lsls	r3, r3, #1
 8003596:	4403      	add	r3, r0
 8003598:	409a      	lsls	r2, r3
 800359a:	687b      	ldr	r3, [r7, #4]
 800359c:	681b      	ldr	r3, [r3, #0]
 800359e:	430a      	orrs	r2, r1
 80035a0:	611a      	str	r2, [r3, #16]
 80035a2:	683b      	ldr	r3, [r7, #0]
 80035a4:	685b      	ldr	r3, [r3, #4]
 80035a6:	2b06      	cmp	r3, #6
 80035a8:	d824      	bhi.n	80035f4 <HAL_ADC_ConfigChannel+0x110>
 80035aa:	687b      	ldr	r3, [r7, #4]
 80035ac:	681b      	ldr	r3, [r3, #0]
 80035ae:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 80035b0:	683b      	ldr	r3, [r7, #0]
 80035b2:	685a      	ldr	r2, [r3, #4]
 80035b4:	4613      	mov	r3, r2
 80035b6:	009b      	lsls	r3, r3, #2
 80035b8:	4413      	add	r3, r2
 80035ba:	3b05      	subs	r3, #5
 80035bc:	221f      	movs	r2, #31
 80035be:	fa02 f303 	lsl.w	r3, r2, r3
 80035c2:	43da      	mvns	r2, r3
 80035c4:	687b      	ldr	r3, [r7, #4]
 80035c6:	681b      	ldr	r3, [r3, #0]
 80035c8:	400a      	ands	r2, r1
 80035ca:	635a      	str	r2, [r3, #52]	@ 0x34
 80035cc:	687b      	ldr	r3, [r7, #4]
 80035ce:	681b      	ldr	r3, [r3, #0]
 80035d0:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 80035d2:	683b      	ldr	r3, [r7, #0]
 80035d4:	681b      	ldr	r3, [r3, #0]
 80035d6:	b29b      	uxth	r3, r3
 80035d8:	4618      	mov	r0, r3
 80035da:	683b      	ldr	r3, [r7, #0]
 80035dc:	685a      	ldr	r2, [r3, #4]
 80035de:	4613      	mov	r3, r2
 80035e0:	009b      	lsls	r3, r3, #2
 80035e2:	4413      	add	r3, r2
 80035e4:	3b05      	subs	r3, #5
 80035e6:	fa00 f203 	lsl.w	r2, r0, r3
 80035ea:	687b      	ldr	r3, [r7, #4]
 80035ec:	681b      	ldr	r3, [r3, #0]
 80035ee:	430a      	orrs	r2, r1
 80035f0:	635a      	str	r2, [r3, #52]	@ 0x34
 80035f2:	e04c      	b.n	800368e <HAL_ADC_ConfigChannel+0x1aa>
 80035f4:	683b      	ldr	r3, [r7, #0]
 80035f6:	685b      	ldr	r3, [r3, #4]
 80035f8:	2b0c      	cmp	r3, #12
 80035fa:	d824      	bhi.n	8003646 <HAL_ADC_ConfigChannel+0x162>
 80035fc:	687b      	ldr	r3, [r7, #4]
 80035fe:	681b      	ldr	r3, [r3, #0]
 8003600:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8003602:	683b      	ldr	r3, [r7, #0]
 8003604:	685a      	ldr	r2, [r3, #4]
 8003606:	4613      	mov	r3, r2
 8003608:	009b      	lsls	r3, r3, #2
 800360a:	4413      	add	r3, r2
 800360c:	3b23      	subs	r3, #35	@ 0x23
 800360e:	221f      	movs	r2, #31
 8003610:	fa02 f303 	lsl.w	r3, r2, r3
 8003614:	43da      	mvns	r2, r3
 8003616:	687b      	ldr	r3, [r7, #4]
 8003618:	681b      	ldr	r3, [r3, #0]
 800361a:	400a      	ands	r2, r1
 800361c:	631a      	str	r2, [r3, #48]	@ 0x30
 800361e:	687b      	ldr	r3, [r7, #4]
 8003620:	681b      	ldr	r3, [r3, #0]
 8003622:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8003624:	683b      	ldr	r3, [r7, #0]
 8003626:	681b      	ldr	r3, [r3, #0]
 8003628:	b29b      	uxth	r3, r3
 800362a:	4618      	mov	r0, r3
 800362c:	683b      	ldr	r3, [r7, #0]
 800362e:	685a      	ldr	r2, [r3, #4]
 8003630:	4613      	mov	r3, r2
 8003632:	009b      	lsls	r3, r3, #2
 8003634:	4413      	add	r3, r2
 8003636:	3b23      	subs	r3, #35	@ 0x23
 8003638:	fa00 f203 	lsl.w	r2, r0, r3
 800363c:	687b      	ldr	r3, [r7, #4]
 800363e:	681b      	ldr	r3, [r3, #0]
 8003640:	430a      	orrs	r2, r1
 8003642:	631a      	str	r2, [r3, #48]	@ 0x30
 8003644:	e023      	b.n	800368e <HAL_ADC_ConfigChannel+0x1aa>
 8003646:	687b      	ldr	r3, [r7, #4]
 8003648:	681b      	ldr	r3, [r3, #0]
 800364a:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 800364c:	683b      	ldr	r3, [r7, #0]
 800364e:	685a      	ldr	r2, [r3, #4]
 8003650:	4613      	mov	r3, r2
 8003652:	009b      	lsls	r3, r3, #2
 8003654:	4413      	add	r3, r2
 8003656:	3b41      	subs	r3, #65	@ 0x41
 8003658:	221f      	movs	r2, #31
 800365a:	fa02 f303 	lsl.w	r3, r2, r3
 800365e:	43da      	mvns	r2, r3
 8003660:	687b      	ldr	r3, [r7, #4]
 8003662:	681b      	ldr	r3, [r3, #0]
 8003664:	400a      	ands	r2, r1
 8003666:	62da      	str	r2, [r3, #44]	@ 0x2c
 8003668:	687b      	ldr	r3, [r7, #4]
 800366a:	681b      	ldr	r3, [r3, #0]
 800366c:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 800366e:	683b      	ldr	r3, [r7, #0]
 8003670:	681b      	ldr	r3, [r3, #0]
 8003672:	b29b      	uxth	r3, r3
 8003674:	4618      	mov	r0, r3
 8003676:	683b      	ldr	r3, [r7, #0]
 8003678:	685a      	ldr	r2, [r3, #4]
 800367a:	4613      	mov	r3, r2
 800367c:	009b      	lsls	r3, r3, #2
 800367e:	4413      	add	r3, r2
 8003680:	3b41      	subs	r3, #65	@ 0x41
 8003682:	fa00 f203 	lsl.w	r2, r0, r3
 8003686:	687b      	ldr	r3, [r7, #4]
 8003688:	681b      	ldr	r3, [r3, #0]
 800368a:	430a      	orrs	r2, r1
 800368c:	62da      	str	r2, [r3, #44]	@ 0x2c
 800368e:	4b29      	ldr	r3, [pc, #164]	@ (8003734 <HAL_ADC_ConfigChannel+0x250>)
 8003690:	60fb      	str	r3, [r7, #12]
 8003692:	687b      	ldr	r3, [r7, #4]
 8003694:	681b      	ldr	r3, [r3, #0]
 8003696:	4a28      	ldr	r2, [pc, #160]	@ (8003738 <HAL_ADC_ConfigChannel+0x254>)
 8003698:	4293      	cmp	r3, r2
 800369a:	d10f      	bne.n	80036bc <HAL_ADC_ConfigChannel+0x1d8>
 800369c:	683b      	ldr	r3, [r7, #0]
 800369e:	681b      	ldr	r3, [r3, #0]
 80036a0:	2b12      	cmp	r3, #18
 80036a2:	d10b      	bne.n	80036bc <HAL_ADC_ConfigChannel+0x1d8>
 80036a4:	68fb      	ldr	r3, [r7, #12]
 80036a6:	685b      	ldr	r3, [r3, #4]
 80036a8:	f423 0200 	bic.w	r2, r3, #8388608	@ 0x800000
 80036ac:	68fb      	ldr	r3, [r7, #12]
 80036ae:	605a      	str	r2, [r3, #4]
 80036b0:	68fb      	ldr	r3, [r7, #12]
 80036b2:	685b      	ldr	r3, [r3, #4]
 80036b4:	f443 0280 	orr.w	r2, r3, #4194304	@ 0x400000
 80036b8:	68fb      	ldr	r3, [r7, #12]
 80036ba:	605a      	str	r2, [r3, #4]
 80036bc:	687b      	ldr	r3, [r7, #4]
 80036be:	681b      	ldr	r3, [r3, #0]
 80036c0:	4a1d      	ldr	r2, [pc, #116]	@ (8003738 <HAL_ADC_ConfigChannel+0x254>)
 80036c2:	4293      	cmp	r3, r2
 80036c4:	d12b      	bne.n	800371e <HAL_ADC_ConfigChannel+0x23a>
 80036c6:	683b      	ldr	r3, [r7, #0]
 80036c8:	681b      	ldr	r3, [r3, #0]
 80036ca:	4a1c      	ldr	r2, [pc, #112]	@ (800373c <HAL_ADC_ConfigChannel+0x258>)
 80036cc:	4293      	cmp	r3, r2
 80036ce:	d003      	beq.n	80036d8 <HAL_ADC_ConfigChannel+0x1f4>
 80036d0:	683b      	ldr	r3, [r7, #0]
 80036d2:	681b      	ldr	r3, [r3, #0]
 80036d4:	2b11      	cmp	r3, #17
 80036d6:	d122      	bne.n	800371e <HAL_ADC_ConfigChannel+0x23a>
 80036d8:	68fb      	ldr	r3, [r7, #12]
 80036da:	685b      	ldr	r3, [r3, #4]
 80036dc:	f423 0280 	bic.w	r2, r3, #4194304	@ 0x400000
 80036e0:	68fb      	ldr	r3, [r7, #12]
 80036e2:	605a      	str	r2, [r3, #4]
 80036e4:	68fb      	ldr	r3, [r7, #12]
 80036e6:	685b      	ldr	r3, [r3, #4]
 80036e8:	f443 0200 	orr.w	r2, r3, #8388608	@ 0x800000
 80036ec:	68fb      	ldr	r3, [r7, #12]
 80036ee:	605a      	str	r2, [r3, #4]
 80036f0:	683b      	ldr	r3, [r7, #0]
 80036f2:	681b      	ldr	r3, [r3, #0]
 80036f4:	4a11      	ldr	r2, [pc, #68]	@ (800373c <HAL_ADC_ConfigChannel+0x258>)
 80036f6:	4293      	cmp	r3, r2
 80036f8:	d111      	bne.n	800371e <HAL_ADC_ConfigChannel+0x23a>
 80036fa:	4b11      	ldr	r3, [pc, #68]	@ (8003740 <HAL_ADC_ConfigChannel+0x25c>)
 80036fc:	681b      	ldr	r3, [r3, #0]
 80036fe:	4a11      	ldr	r2, [pc, #68]	@ (8003744 <HAL_ADC_ConfigChannel+0x260>)
 8003700:	fba2 2303 	umull	r2, r3, r2, r3
 8003704:	0c9a      	lsrs	r2, r3, #18
 8003706:	4613      	mov	r3, r2
 8003708:	009b      	lsls	r3, r3, #2
 800370a:	4413      	add	r3, r2
 800370c:	005b      	lsls	r3, r3, #1
 800370e:	60bb      	str	r3, [r7, #8]
 8003710:	e002      	b.n	8003718 <HAL_ADC_ConfigChannel+0x234>
 8003712:	68bb      	ldr	r3, [r7, #8]
 8003714:	3b01      	subs	r3, #1
 8003716:	60bb      	str	r3, [r7, #8]
 8003718:	68bb      	ldr	r3, [r7, #8]
 800371a:	2b00      	cmp	r3, #0
 800371c:	d1f9      	bne.n	8003712 <HAL_ADC_ConfigChannel+0x22e>
 800371e:	687b      	ldr	r3, [r7, #4]
 8003720:	2200      	movs	r2, #0
 8003722:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003726:	2300      	movs	r3, #0
 8003728:	4618      	mov	r0, r3
 800372a:	3714      	adds	r7, #20
 800372c:	46bd      	mov	sp, r7
 800372e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003732:	4770      	bx	lr
 8003734:	40012300 	.word	0x40012300
 8003738:	40012000 	.word	0x40012000
 800373c:	10000012 	.word	0x10000012
 8003740:	20000004 	.word	0x20000004
 8003744:	431bde83 	.word	0x431bde83

08003748 <ADC_Init>:
 8003748:	b480      	push	{r7}
 800374a:	b085      	sub	sp, #20
 800374c:	af00      	add	r7, sp, #0
 800374e:	6078      	str	r0, [r7, #4]
 8003750:	4b79      	ldr	r3, [pc, #484]	@ (8003938 <ADC_Init+0x1f0>)
 8003752:	60fb      	str	r3, [r7, #12]
 8003754:	68fb      	ldr	r3, [r7, #12]
 8003756:	685b      	ldr	r3, [r3, #4]
 8003758:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 800375c:	68fb      	ldr	r3, [r7, #12]
 800375e:	605a      	str	r2, [r3, #4]
 8003760:	68fb      	ldr	r3, [r7, #12]
 8003762:	685a      	ldr	r2, [r3, #4]
 8003764:	687b      	ldr	r3, [r7, #4]
 8003766:	685b      	ldr	r3, [r3, #4]
 8003768:	431a      	orrs	r2, r3
 800376a:	68fb      	ldr	r3, [r7, #12]
 800376c:	605a      	str	r2, [r3, #4]
 800376e:	687b      	ldr	r3, [r7, #4]
 8003770:	681b      	ldr	r3, [r3, #0]
 8003772:	685a      	ldr	r2, [r3, #4]
 8003774:	687b      	ldr	r3, [r7, #4]
 8003776:	681b      	ldr	r3, [r3, #0]
 8003778:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 800377c:	605a      	str	r2, [r3, #4]
 800377e:	687b      	ldr	r3, [r7, #4]
 8003780:	681b      	ldr	r3, [r3, #0]
 8003782:	6859      	ldr	r1, [r3, #4]
 8003784:	687b      	ldr	r3, [r7, #4]
 8003786:	691b      	ldr	r3, [r3, #16]
 8003788:	021a      	lsls	r2, r3, #8
 800378a:	687b      	ldr	r3, [r7, #4]
 800378c:	681b      	ldr	r3, [r3, #0]
 800378e:	430a      	orrs	r2, r1
 8003790:	605a      	str	r2, [r3, #4]
 8003792:	687b      	ldr	r3, [r7, #4]
 8003794:	681b      	ldr	r3, [r3, #0]
 8003796:	685a      	ldr	r2, [r3, #4]
 8003798:	687b      	ldr	r3, [r7, #4]
 800379a:	681b      	ldr	r3, [r3, #0]
 800379c:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 80037a0:	605a      	str	r2, [r3, #4]
 80037a2:	687b      	ldr	r3, [r7, #4]
 80037a4:	681b      	ldr	r3, [r3, #0]
 80037a6:	6859      	ldr	r1, [r3, #4]
 80037a8:	687b      	ldr	r3, [r7, #4]
 80037aa:	689a      	ldr	r2, [r3, #8]
 80037ac:	687b      	ldr	r3, [r7, #4]
 80037ae:	681b      	ldr	r3, [r3, #0]
 80037b0:	430a      	orrs	r2, r1
 80037b2:	605a      	str	r2, [r3, #4]
 80037b4:	687b      	ldr	r3, [r7, #4]
 80037b6:	681b      	ldr	r3, [r3, #0]
 80037b8:	689a      	ldr	r2, [r3, #8]
 80037ba:	687b      	ldr	r3, [r7, #4]
 80037bc:	681b      	ldr	r3, [r3, #0]
 80037be:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80037c2:	609a      	str	r2, [r3, #8]
 80037c4:	687b      	ldr	r3, [r7, #4]
 80037c6:	681b      	ldr	r3, [r3, #0]
 80037c8:	6899      	ldr	r1, [r3, #8]
 80037ca:	687b      	ldr	r3, [r7, #4]
 80037cc:	68da      	ldr	r2, [r3, #12]
 80037ce:	687b      	ldr	r3, [r7, #4]
 80037d0:	681b      	ldr	r3, [r3, #0]
 80037d2:	430a      	orrs	r2, r1
 80037d4:	609a      	str	r2, [r3, #8]
 80037d6:	687b      	ldr	r3, [r7, #4]
 80037d8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80037da:	4a58      	ldr	r2, [pc, #352]	@ (800393c <ADC_Init+0x1f4>)
 80037dc:	4293      	cmp	r3, r2
 80037de:	d022      	beq.n	8003826 <ADC_Init+0xde>
 80037e0:	687b      	ldr	r3, [r7, #4]
 80037e2:	681b      	ldr	r3, [r3, #0]
 80037e4:	689a      	ldr	r2, [r3, #8]
 80037e6:	687b      	ldr	r3, [r7, #4]
 80037e8:	681b      	ldr	r3, [r3, #0]
 80037ea:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 80037ee:	609a      	str	r2, [r3, #8]
 80037f0:	687b      	ldr	r3, [r7, #4]
 80037f2:	681b      	ldr	r3, [r3, #0]
 80037f4:	6899      	ldr	r1, [r3, #8]
 80037f6:	687b      	ldr	r3, [r7, #4]
 80037f8:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 80037fa:	687b      	ldr	r3, [r7, #4]
 80037fc:	681b      	ldr	r3, [r3, #0]
 80037fe:	430a      	orrs	r2, r1
 8003800:	609a      	str	r2, [r3, #8]
 8003802:	687b      	ldr	r3, [r7, #4]
 8003804:	681b      	ldr	r3, [r3, #0]
 8003806:	689a      	ldr	r2, [r3, #8]
 8003808:	687b      	ldr	r3, [r7, #4]
 800380a:	681b      	ldr	r3, [r3, #0]
 800380c:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8003810:	609a      	str	r2, [r3, #8]
 8003812:	687b      	ldr	r3, [r7, #4]
 8003814:	681b      	ldr	r3, [r3, #0]
 8003816:	6899      	ldr	r1, [r3, #8]
 8003818:	687b      	ldr	r3, [r7, #4]
 800381a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800381c:	687b      	ldr	r3, [r7, #4]
 800381e:	681b      	ldr	r3, [r3, #0]
 8003820:	430a      	orrs	r2, r1
 8003822:	609a      	str	r2, [r3, #8]
 8003824:	e00f      	b.n	8003846 <ADC_Init+0xfe>
 8003826:	687b      	ldr	r3, [r7, #4]
 8003828:	681b      	ldr	r3, [r3, #0]
 800382a:	689a      	ldr	r2, [r3, #8]
 800382c:	687b      	ldr	r3, [r7, #4]
 800382e:	681b      	ldr	r3, [r3, #0]
 8003830:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8003834:	609a      	str	r2, [r3, #8]
 8003836:	687b      	ldr	r3, [r7, #4]
 8003838:	681b      	ldr	r3, [r3, #0]
 800383a:	689a      	ldr	r2, [r3, #8]
 800383c:	687b      	ldr	r3, [r7, #4]
 800383e:	681b      	ldr	r3, [r3, #0]
 8003840:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8003844:	609a      	str	r2, [r3, #8]
 8003846:	687b      	ldr	r3, [r7, #4]
 8003848:	681b      	ldr	r3, [r3, #0]
 800384a:	689a      	ldr	r2, [r3, #8]
 800384c:	687b      	ldr	r3, [r7, #4]
 800384e:	681b      	ldr	r3, [r3, #0]
 8003850:	f022 0202 	bic.w	r2, r2, #2
 8003854:	609a      	str	r2, [r3, #8]
 8003856:	687b      	ldr	r3, [r7, #4]
 8003858:	681b      	ldr	r3, [r3, #0]
 800385a:	6899      	ldr	r1, [r3, #8]
 800385c:	687b      	ldr	r3, [r7, #4]
 800385e:	7e1b      	ldrb	r3, [r3, #24]
 8003860:	005a      	lsls	r2, r3, #1
 8003862:	687b      	ldr	r3, [r7, #4]
 8003864:	681b      	ldr	r3, [r3, #0]
 8003866:	430a      	orrs	r2, r1
 8003868:	609a      	str	r2, [r3, #8]
 800386a:	687b      	ldr	r3, [r7, #4]
 800386c:	f893 3020 	ldrb.w	r3, [r3, #32]
 8003870:	2b00      	cmp	r3, #0
 8003872:	d01b      	beq.n	80038ac <ADC_Init+0x164>
 8003874:	687b      	ldr	r3, [r7, #4]
 8003876:	681b      	ldr	r3, [r3, #0]
 8003878:	685a      	ldr	r2, [r3, #4]
 800387a:	687b      	ldr	r3, [r7, #4]
 800387c:	681b      	ldr	r3, [r3, #0]
 800387e:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8003882:	605a      	str	r2, [r3, #4]
 8003884:	687b      	ldr	r3, [r7, #4]
 8003886:	681b      	ldr	r3, [r3, #0]
 8003888:	685a      	ldr	r2, [r3, #4]
 800388a:	687b      	ldr	r3, [r7, #4]
 800388c:	681b      	ldr	r3, [r3, #0]
 800388e:	f422 4260 	bic.w	r2, r2, #57344	@ 0xe000
 8003892:	605a      	str	r2, [r3, #4]
 8003894:	687b      	ldr	r3, [r7, #4]
 8003896:	681b      	ldr	r3, [r3, #0]
 8003898:	6859      	ldr	r1, [r3, #4]
 800389a:	687b      	ldr	r3, [r7, #4]
 800389c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800389e:	3b01      	subs	r3, #1
 80038a0:	035a      	lsls	r2, r3, #13
 80038a2:	687b      	ldr	r3, [r7, #4]
 80038a4:	681b      	ldr	r3, [r3, #0]
 80038a6:	430a      	orrs	r2, r1
 80038a8:	605a      	str	r2, [r3, #4]
 80038aa:	e007      	b.n	80038bc <ADC_Init+0x174>
 80038ac:	687b      	ldr	r3, [r7, #4]
 80038ae:	681b      	ldr	r3, [r3, #0]
 80038b0:	685a      	ldr	r2, [r3, #4]
 80038b2:	687b      	ldr	r3, [r7, #4]
 80038b4:	681b      	ldr	r3, [r3, #0]
 80038b6:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80038ba:	605a      	str	r2, [r3, #4]
 80038bc:	687b      	ldr	r3, [r7, #4]
 80038be:	681b      	ldr	r3, [r3, #0]
 80038c0:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80038c2:	687b      	ldr	r3, [r7, #4]
 80038c4:	681b      	ldr	r3, [r3, #0]
 80038c6:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 80038ca:	62da      	str	r2, [r3, #44]	@ 0x2c
 80038cc:	687b      	ldr	r3, [r7, #4]
 80038ce:	681b      	ldr	r3, [r3, #0]
 80038d0:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 80038d2:	687b      	ldr	r3, [r7, #4]
 80038d4:	69db      	ldr	r3, [r3, #28]
 80038d6:	3b01      	subs	r3, #1
 80038d8:	051a      	lsls	r2, r3, #20
 80038da:	687b      	ldr	r3, [r7, #4]
 80038dc:	681b      	ldr	r3, [r3, #0]
 80038de:	430a      	orrs	r2, r1
 80038e0:	62da      	str	r2, [r3, #44]	@ 0x2c
 80038e2:	687b      	ldr	r3, [r7, #4]
 80038e4:	681b      	ldr	r3, [r3, #0]
 80038e6:	689a      	ldr	r2, [r3, #8]
 80038e8:	687b      	ldr	r3, [r7, #4]
 80038ea:	681b      	ldr	r3, [r3, #0]
 80038ec:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 80038f0:	609a      	str	r2, [r3, #8]
 80038f2:	687b      	ldr	r3, [r7, #4]
 80038f4:	681b      	ldr	r3, [r3, #0]
 80038f6:	6899      	ldr	r1, [r3, #8]
 80038f8:	687b      	ldr	r3, [r7, #4]
 80038fa:	f893 3030 	ldrb.w	r3, [r3, #48]	@ 0x30
 80038fe:	025a      	lsls	r2, r3, #9
 8003900:	687b      	ldr	r3, [r7, #4]
 8003902:	681b      	ldr	r3, [r3, #0]
 8003904:	430a      	orrs	r2, r1
 8003906:	609a      	str	r2, [r3, #8]
 8003908:	687b      	ldr	r3, [r7, #4]
 800390a:	681b      	ldr	r3, [r3, #0]
 800390c:	689a      	ldr	r2, [r3, #8]
 800390e:	687b      	ldr	r3, [r7, #4]
 8003910:	681b      	ldr	r3, [r3, #0]
 8003912:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8003916:	609a      	str	r2, [r3, #8]
 8003918:	687b      	ldr	r3, [r7, #4]
 800391a:	681b      	ldr	r3, [r3, #0]
 800391c:	6899      	ldr	r1, [r3, #8]
 800391e:	687b      	ldr	r3, [r7, #4]
 8003920:	695b      	ldr	r3, [r3, #20]
 8003922:	029a      	lsls	r2, r3, #10
 8003924:	687b      	ldr	r3, [r7, #4]
 8003926:	681b      	ldr	r3, [r3, #0]
 8003928:	430a      	orrs	r2, r1
 800392a:	609a      	str	r2, [r3, #8]
 800392c:	bf00      	nop
 800392e:	3714      	adds	r7, #20
 8003930:	46bd      	mov	sp, r7
 8003932:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003936:	4770      	bx	lr
 8003938:	40012300 	.word	0x40012300
 800393c:	0f000001 	.word	0x0f000001

08003940 <__NVIC_SetPriorityGrouping>:
 8003940:	b480      	push	{r7}
 8003942:	b085      	sub	sp, #20
 8003944:	af00      	add	r7, sp, #0
 8003946:	6078      	str	r0, [r7, #4]
 8003948:	687b      	ldr	r3, [r7, #4]
 800394a:	f003 0307 	and.w	r3, r3, #7
 800394e:	60fb      	str	r3, [r7, #12]
 8003950:	4b0c      	ldr	r3, [pc, #48]	@ (8003984 <__NVIC_SetPriorityGrouping+0x44>)
 8003952:	68db      	ldr	r3, [r3, #12]
 8003954:	60bb      	str	r3, [r7, #8]
 8003956:	68ba      	ldr	r2, [r7, #8]
 8003958:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 800395c:	4013      	ands	r3, r2
 800395e:	60bb      	str	r3, [r7, #8]
 8003960:	68fb      	ldr	r3, [r7, #12]
 8003962:	021a      	lsls	r2, r3, #8
 8003964:	68bb      	ldr	r3, [r7, #8]
 8003966:	4313      	orrs	r3, r2
 8003968:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 800396c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8003970:	60bb      	str	r3, [r7, #8]
 8003972:	4a04      	ldr	r2, [pc, #16]	@ (8003984 <__NVIC_SetPriorityGrouping+0x44>)
 8003974:	68bb      	ldr	r3, [r7, #8]
 8003976:	60d3      	str	r3, [r2, #12]
 8003978:	bf00      	nop
 800397a:	3714      	adds	r7, #20
 800397c:	46bd      	mov	sp, r7
 800397e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003982:	4770      	bx	lr
 8003984:	e000ed00 	.word	0xe000ed00

08003988 <__NVIC_GetPriorityGrouping>:
 8003988:	b480      	push	{r7}
 800398a:	af00      	add	r7, sp, #0
 800398c:	4b04      	ldr	r3, [pc, #16]	@ (80039a0 <__NVIC_GetPriorityGrouping+0x18>)
 800398e:	68db      	ldr	r3, [r3, #12]
 8003990:	0a1b      	lsrs	r3, r3, #8
 8003992:	f003 0307 	and.w	r3, r3, #7
 8003996:	4618      	mov	r0, r3
 8003998:	46bd      	mov	sp, r7
 800399a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800399e:	4770      	bx	lr
 80039a0:	e000ed00 	.word	0xe000ed00

080039a4 <__NVIC_EnableIRQ>:
 80039a4:	b480      	push	{r7}
 80039a6:	b083      	sub	sp, #12
 80039a8:	af00      	add	r7, sp, #0
 80039aa:	4603      	mov	r3, r0
 80039ac:	71fb      	strb	r3, [r7, #7]
 80039ae:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80039b2:	2b00      	cmp	r3, #0
 80039b4:	db0b      	blt.n	80039ce <__NVIC_EnableIRQ+0x2a>
 80039b6:	79fb      	ldrb	r3, [r7, #7]
 80039b8:	f003 021f 	and.w	r2, r3, #31
 80039bc:	4907      	ldr	r1, [pc, #28]	@ (80039dc <__NVIC_EnableIRQ+0x38>)
 80039be:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80039c2:	095b      	lsrs	r3, r3, #5
 80039c4:	2001      	movs	r0, #1
 80039c6:	fa00 f202 	lsl.w	r2, r0, r2
 80039ca:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80039ce:	bf00      	nop
 80039d0:	370c      	adds	r7, #12
 80039d2:	46bd      	mov	sp, r7
 80039d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80039d8:	4770      	bx	lr
 80039da:	bf00      	nop
 80039dc:	e000e100 	.word	0xe000e100

080039e0 <__NVIC_SetPriority>:
 80039e0:	b480      	push	{r7}
 80039e2:	b083      	sub	sp, #12
 80039e4:	af00      	add	r7, sp, #0
 80039e6:	4603      	mov	r3, r0
 80039e8:	6039      	str	r1, [r7, #0]
 80039ea:	71fb      	strb	r3, [r7, #7]
 80039ec:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80039f0:	2b00      	cmp	r3, #0
 80039f2:	db0a      	blt.n	8003a0a <__NVIC_SetPriority+0x2a>
 80039f4:	683b      	ldr	r3, [r7, #0]
 80039f6:	b2da      	uxtb	r2, r3
 80039f8:	490c      	ldr	r1, [pc, #48]	@ (8003a2c <__NVIC_SetPriority+0x4c>)
 80039fa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80039fe:	0112      	lsls	r2, r2, #4
 8003a00:	b2d2      	uxtb	r2, r2
 8003a02:	440b      	add	r3, r1
 8003a04:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8003a08:	e00a      	b.n	8003a20 <__NVIC_SetPriority+0x40>
 8003a0a:	683b      	ldr	r3, [r7, #0]
 8003a0c:	b2da      	uxtb	r2, r3
 8003a0e:	4908      	ldr	r1, [pc, #32]	@ (8003a30 <__NVIC_SetPriority+0x50>)
 8003a10:	79fb      	ldrb	r3, [r7, #7]
 8003a12:	f003 030f 	and.w	r3, r3, #15
 8003a16:	3b04      	subs	r3, #4
 8003a18:	0112      	lsls	r2, r2, #4
 8003a1a:	b2d2      	uxtb	r2, r2
 8003a1c:	440b      	add	r3, r1
 8003a1e:	761a      	strb	r2, [r3, #24]
 8003a20:	bf00      	nop
 8003a22:	370c      	adds	r7, #12
 8003a24:	46bd      	mov	sp, r7
 8003a26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a2a:	4770      	bx	lr
 8003a2c:	e000e100 	.word	0xe000e100
 8003a30:	e000ed00 	.word	0xe000ed00

08003a34 <NVIC_EncodePriority>:
 8003a34:	b480      	push	{r7}
 8003a36:	b089      	sub	sp, #36	@ 0x24
 8003a38:	af00      	add	r7, sp, #0
 8003a3a:	60f8      	str	r0, [r7, #12]
 8003a3c:	60b9      	str	r1, [r7, #8]
 8003a3e:	607a      	str	r2, [r7, #4]
 8003a40:	68fb      	ldr	r3, [r7, #12]
 8003a42:	f003 0307 	and.w	r3, r3, #7
 8003a46:	61fb      	str	r3, [r7, #28]
 8003a48:	69fb      	ldr	r3, [r7, #28]
 8003a4a:	f1c3 0307 	rsb	r3, r3, #7
 8003a4e:	2b04      	cmp	r3, #4
 8003a50:	bf28      	it	cs
 8003a52:	2304      	movcs	r3, #4
 8003a54:	61bb      	str	r3, [r7, #24]
 8003a56:	69fb      	ldr	r3, [r7, #28]
 8003a58:	3304      	adds	r3, #4
 8003a5a:	2b06      	cmp	r3, #6
 8003a5c:	d902      	bls.n	8003a64 <NVIC_EncodePriority+0x30>
 8003a5e:	69fb      	ldr	r3, [r7, #28]
 8003a60:	3b03      	subs	r3, #3
 8003a62:	e000      	b.n	8003a66 <NVIC_EncodePriority+0x32>
 8003a64:	2300      	movs	r3, #0
 8003a66:	617b      	str	r3, [r7, #20]
 8003a68:	f04f 32ff 	mov.w	r2, #4294967295
 8003a6c:	69bb      	ldr	r3, [r7, #24]
 8003a6e:	fa02 f303 	lsl.w	r3, r2, r3
 8003a72:	43da      	mvns	r2, r3
 8003a74:	68bb      	ldr	r3, [r7, #8]
 8003a76:	401a      	ands	r2, r3
 8003a78:	697b      	ldr	r3, [r7, #20]
 8003a7a:	409a      	lsls	r2, r3
 8003a7c:	f04f 31ff 	mov.w	r1, #4294967295
 8003a80:	697b      	ldr	r3, [r7, #20]
 8003a82:	fa01 f303 	lsl.w	r3, r1, r3
 8003a86:	43d9      	mvns	r1, r3
 8003a88:	687b      	ldr	r3, [r7, #4]
 8003a8a:	400b      	ands	r3, r1
 8003a8c:	4313      	orrs	r3, r2
 8003a8e:	4618      	mov	r0, r3
 8003a90:	3724      	adds	r7, #36	@ 0x24
 8003a92:	46bd      	mov	sp, r7
 8003a94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a98:	4770      	bx	lr
	...

08003a9c <SysTick_Config>:
 8003a9c:	b580      	push	{r7, lr}
 8003a9e:	b082      	sub	sp, #8
 8003aa0:	af00      	add	r7, sp, #0
 8003aa2:	6078      	str	r0, [r7, #4]
 8003aa4:	687b      	ldr	r3, [r7, #4]
 8003aa6:	3b01      	subs	r3, #1
 8003aa8:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8003aac:	d301      	bcc.n	8003ab2 <SysTick_Config+0x16>
 8003aae:	2301      	movs	r3, #1
 8003ab0:	e00f      	b.n	8003ad2 <SysTick_Config+0x36>
 8003ab2:	4a0a      	ldr	r2, [pc, #40]	@ (8003adc <SysTick_Config+0x40>)
 8003ab4:	687b      	ldr	r3, [r7, #4]
 8003ab6:	3b01      	subs	r3, #1
 8003ab8:	6053      	str	r3, [r2, #4]
 8003aba:	210f      	movs	r1, #15
 8003abc:	f04f 30ff 	mov.w	r0, #4294967295
 8003ac0:	f7ff ff8e 	bl	80039e0 <__NVIC_SetPriority>
 8003ac4:	4b05      	ldr	r3, [pc, #20]	@ (8003adc <SysTick_Config+0x40>)
 8003ac6:	2200      	movs	r2, #0
 8003ac8:	609a      	str	r2, [r3, #8]
 8003aca:	4b04      	ldr	r3, [pc, #16]	@ (8003adc <SysTick_Config+0x40>)
 8003acc:	2207      	movs	r2, #7
 8003ace:	601a      	str	r2, [r3, #0]
 8003ad0:	2300      	movs	r3, #0
 8003ad2:	4618      	mov	r0, r3
 8003ad4:	3708      	adds	r7, #8
 8003ad6:	46bd      	mov	sp, r7
 8003ad8:	bd80      	pop	{r7, pc}
 8003ada:	bf00      	nop
 8003adc:	e000e010 	.word	0xe000e010

08003ae0 <HAL_NVIC_SetPriorityGrouping>:
 8003ae0:	b580      	push	{r7, lr}
 8003ae2:	b082      	sub	sp, #8
 8003ae4:	af00      	add	r7, sp, #0
 8003ae6:	6078      	str	r0, [r7, #4]
 8003ae8:	6878      	ldr	r0, [r7, #4]
 8003aea:	f7ff ff29 	bl	8003940 <__NVIC_SetPriorityGrouping>
 8003aee:	bf00      	nop
 8003af0:	3708      	adds	r7, #8
 8003af2:	46bd      	mov	sp, r7
 8003af4:	bd80      	pop	{r7, pc}

08003af6 <HAL_NVIC_SetPriority>:
 8003af6:	b580      	push	{r7, lr}
 8003af8:	b086      	sub	sp, #24
 8003afa:	af00      	add	r7, sp, #0
 8003afc:	4603      	mov	r3, r0
 8003afe:	60b9      	str	r1, [r7, #8]
 8003b00:	607a      	str	r2, [r7, #4]
 8003b02:	73fb      	strb	r3, [r7, #15]
 8003b04:	2300      	movs	r3, #0
 8003b06:	617b      	str	r3, [r7, #20]
 8003b08:	f7ff ff3e 	bl	8003988 <__NVIC_GetPriorityGrouping>
 8003b0c:	6178      	str	r0, [r7, #20]
 8003b0e:	687a      	ldr	r2, [r7, #4]
 8003b10:	68b9      	ldr	r1, [r7, #8]
 8003b12:	6978      	ldr	r0, [r7, #20]
 8003b14:	f7ff ff8e 	bl	8003a34 <NVIC_EncodePriority>
 8003b18:	4602      	mov	r2, r0
 8003b1a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8003b1e:	4611      	mov	r1, r2
 8003b20:	4618      	mov	r0, r3
 8003b22:	f7ff ff5d 	bl	80039e0 <__NVIC_SetPriority>
 8003b26:	bf00      	nop
 8003b28:	3718      	adds	r7, #24
 8003b2a:	46bd      	mov	sp, r7
 8003b2c:	bd80      	pop	{r7, pc}

08003b2e <HAL_NVIC_EnableIRQ>:
 8003b2e:	b580      	push	{r7, lr}
 8003b30:	b082      	sub	sp, #8
 8003b32:	af00      	add	r7, sp, #0
 8003b34:	4603      	mov	r3, r0
 8003b36:	71fb      	strb	r3, [r7, #7]
 8003b38:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003b3c:	4618      	mov	r0, r3
 8003b3e:	f7ff ff31 	bl	80039a4 <__NVIC_EnableIRQ>
 8003b42:	bf00      	nop
 8003b44:	3708      	adds	r7, #8
 8003b46:	46bd      	mov	sp, r7
 8003b48:	bd80      	pop	{r7, pc}

08003b4a <HAL_SYSTICK_Config>:
 8003b4a:	b580      	push	{r7, lr}
 8003b4c:	b082      	sub	sp, #8
 8003b4e:	af00      	add	r7, sp, #0
 8003b50:	6078      	str	r0, [r7, #4]
 8003b52:	6878      	ldr	r0, [r7, #4]
 8003b54:	f7ff ffa2 	bl	8003a9c <SysTick_Config>
 8003b58:	4603      	mov	r3, r0
 8003b5a:	4618      	mov	r0, r3
 8003b5c:	3708      	adds	r7, #8
 8003b5e:	46bd      	mov	sp, r7
 8003b60:	bd80      	pop	{r7, pc}

08003b62 <HAL_DMA_Abort>:
 8003b62:	b580      	push	{r7, lr}
 8003b64:	b084      	sub	sp, #16
 8003b66:	af00      	add	r7, sp, #0
 8003b68:	6078      	str	r0, [r7, #4]
 8003b6a:	687b      	ldr	r3, [r7, #4]
 8003b6c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003b6e:	60fb      	str	r3, [r7, #12]
 8003b70:	f7ff faa6 	bl	80030c0 <HAL_GetTick>
 8003b74:	60b8      	str	r0, [r7, #8]
 8003b76:	687b      	ldr	r3, [r7, #4]
 8003b78:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003b7c:	b2db      	uxtb	r3, r3
 8003b7e:	2b02      	cmp	r3, #2
 8003b80:	d008      	beq.n	8003b94 <HAL_DMA_Abort+0x32>
 8003b82:	687b      	ldr	r3, [r7, #4]
 8003b84:	2280      	movs	r2, #128	@ 0x80
 8003b86:	655a      	str	r2, [r3, #84]	@ 0x54
 8003b88:	687b      	ldr	r3, [r7, #4]
 8003b8a:	2200      	movs	r2, #0
 8003b8c:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003b90:	2301      	movs	r3, #1
 8003b92:	e052      	b.n	8003c3a <HAL_DMA_Abort+0xd8>
 8003b94:	687b      	ldr	r3, [r7, #4]
 8003b96:	681b      	ldr	r3, [r3, #0]
 8003b98:	681a      	ldr	r2, [r3, #0]
 8003b9a:	687b      	ldr	r3, [r7, #4]
 8003b9c:	681b      	ldr	r3, [r3, #0]
 8003b9e:	f022 0216 	bic.w	r2, r2, #22
 8003ba2:	601a      	str	r2, [r3, #0]
 8003ba4:	687b      	ldr	r3, [r7, #4]
 8003ba6:	681b      	ldr	r3, [r3, #0]
 8003ba8:	695a      	ldr	r2, [r3, #20]
 8003baa:	687b      	ldr	r3, [r7, #4]
 8003bac:	681b      	ldr	r3, [r3, #0]
 8003bae:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8003bb2:	615a      	str	r2, [r3, #20]
 8003bb4:	687b      	ldr	r3, [r7, #4]
 8003bb6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003bb8:	2b00      	cmp	r3, #0
 8003bba:	d103      	bne.n	8003bc4 <HAL_DMA_Abort+0x62>
 8003bbc:	687b      	ldr	r3, [r7, #4]
 8003bbe:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003bc0:	2b00      	cmp	r3, #0
 8003bc2:	d007      	beq.n	8003bd4 <HAL_DMA_Abort+0x72>
 8003bc4:	687b      	ldr	r3, [r7, #4]
 8003bc6:	681b      	ldr	r3, [r3, #0]
 8003bc8:	681a      	ldr	r2, [r3, #0]
 8003bca:	687b      	ldr	r3, [r7, #4]
 8003bcc:	681b      	ldr	r3, [r3, #0]
 8003bce:	f022 0208 	bic.w	r2, r2, #8
 8003bd2:	601a      	str	r2, [r3, #0]
 8003bd4:	687b      	ldr	r3, [r7, #4]
 8003bd6:	681b      	ldr	r3, [r3, #0]
 8003bd8:	681a      	ldr	r2, [r3, #0]
 8003bda:	687b      	ldr	r3, [r7, #4]
 8003bdc:	681b      	ldr	r3, [r3, #0]
 8003bde:	f022 0201 	bic.w	r2, r2, #1
 8003be2:	601a      	str	r2, [r3, #0]
 8003be4:	e013      	b.n	8003c0e <HAL_DMA_Abort+0xac>
 8003be6:	f7ff fa6b 	bl	80030c0 <HAL_GetTick>
 8003bea:	4602      	mov	r2, r0
 8003bec:	68bb      	ldr	r3, [r7, #8]
 8003bee:	1ad3      	subs	r3, r2, r3
 8003bf0:	2b05      	cmp	r3, #5
 8003bf2:	d90c      	bls.n	8003c0e <HAL_DMA_Abort+0xac>
 8003bf4:	687b      	ldr	r3, [r7, #4]
 8003bf6:	2220      	movs	r2, #32
 8003bf8:	655a      	str	r2, [r3, #84]	@ 0x54
 8003bfa:	687b      	ldr	r3, [r7, #4]
 8003bfc:	2203      	movs	r2, #3
 8003bfe:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003c02:	687b      	ldr	r3, [r7, #4]
 8003c04:	2200      	movs	r2, #0
 8003c06:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003c0a:	2303      	movs	r3, #3
 8003c0c:	e015      	b.n	8003c3a <HAL_DMA_Abort+0xd8>
 8003c0e:	687b      	ldr	r3, [r7, #4]
 8003c10:	681b      	ldr	r3, [r3, #0]
 8003c12:	681b      	ldr	r3, [r3, #0]
 8003c14:	f003 0301 	and.w	r3, r3, #1
 8003c18:	2b00      	cmp	r3, #0
 8003c1a:	d1e4      	bne.n	8003be6 <HAL_DMA_Abort+0x84>
 8003c1c:	687b      	ldr	r3, [r7, #4]
 8003c1e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003c20:	223f      	movs	r2, #63	@ 0x3f
 8003c22:	409a      	lsls	r2, r3
 8003c24:	68fb      	ldr	r3, [r7, #12]
 8003c26:	609a      	str	r2, [r3, #8]
 8003c28:	687b      	ldr	r3, [r7, #4]
 8003c2a:	2201      	movs	r2, #1
 8003c2c:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003c30:	687b      	ldr	r3, [r7, #4]
 8003c32:	2200      	movs	r2, #0
 8003c34:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003c38:	2300      	movs	r3, #0
 8003c3a:	4618      	mov	r0, r3
 8003c3c:	3710      	adds	r7, #16
 8003c3e:	46bd      	mov	sp, r7
 8003c40:	bd80      	pop	{r7, pc}

08003c42 <HAL_DMA_Abort_IT>:
 8003c42:	b480      	push	{r7}
 8003c44:	b083      	sub	sp, #12
 8003c46:	af00      	add	r7, sp, #0
 8003c48:	6078      	str	r0, [r7, #4]
 8003c4a:	687b      	ldr	r3, [r7, #4]
 8003c4c:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003c50:	b2db      	uxtb	r3, r3
 8003c52:	2b02      	cmp	r3, #2
 8003c54:	d004      	beq.n	8003c60 <HAL_DMA_Abort_IT+0x1e>
 8003c56:	687b      	ldr	r3, [r7, #4]
 8003c58:	2280      	movs	r2, #128	@ 0x80
 8003c5a:	655a      	str	r2, [r3, #84]	@ 0x54
 8003c5c:	2301      	movs	r3, #1
 8003c5e:	e00c      	b.n	8003c7a <HAL_DMA_Abort_IT+0x38>
 8003c60:	687b      	ldr	r3, [r7, #4]
 8003c62:	2205      	movs	r2, #5
 8003c64:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003c68:	687b      	ldr	r3, [r7, #4]
 8003c6a:	681b      	ldr	r3, [r3, #0]
 8003c6c:	681a      	ldr	r2, [r3, #0]
 8003c6e:	687b      	ldr	r3, [r7, #4]
 8003c70:	681b      	ldr	r3, [r3, #0]
 8003c72:	f022 0201 	bic.w	r2, r2, #1
 8003c76:	601a      	str	r2, [r3, #0]
 8003c78:	2300      	movs	r3, #0
 8003c7a:	4618      	mov	r0, r3
 8003c7c:	370c      	adds	r7, #12
 8003c7e:	46bd      	mov	sp, r7
 8003c80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c84:	4770      	bx	lr
	...

08003c88 <HAL_GPIO_Init>:
 8003c88:	b480      	push	{r7}
 8003c8a:	b089      	sub	sp, #36	@ 0x24
 8003c8c:	af00      	add	r7, sp, #0
 8003c8e:	6078      	str	r0, [r7, #4]
 8003c90:	6039      	str	r1, [r7, #0]
 8003c92:	2300      	movs	r3, #0
 8003c94:	617b      	str	r3, [r7, #20]
 8003c96:	2300      	movs	r3, #0
 8003c98:	613b      	str	r3, [r7, #16]
 8003c9a:	2300      	movs	r3, #0
 8003c9c:	61bb      	str	r3, [r7, #24]
 8003c9e:	2300      	movs	r3, #0
 8003ca0:	61fb      	str	r3, [r7, #28]
 8003ca2:	e165      	b.n	8003f70 <HAL_GPIO_Init+0x2e8>
 8003ca4:	2201      	movs	r2, #1
 8003ca6:	69fb      	ldr	r3, [r7, #28]
 8003ca8:	fa02 f303 	lsl.w	r3, r2, r3
 8003cac:	617b      	str	r3, [r7, #20]
 8003cae:	683b      	ldr	r3, [r7, #0]
 8003cb0:	681b      	ldr	r3, [r3, #0]
 8003cb2:	697a      	ldr	r2, [r7, #20]
 8003cb4:	4013      	ands	r3, r2
 8003cb6:	613b      	str	r3, [r7, #16]
 8003cb8:	693a      	ldr	r2, [r7, #16]
 8003cba:	697b      	ldr	r3, [r7, #20]
 8003cbc:	429a      	cmp	r2, r3
 8003cbe:	f040 8154 	bne.w	8003f6a <HAL_GPIO_Init+0x2e2>
 8003cc2:	683b      	ldr	r3, [r7, #0]
 8003cc4:	685b      	ldr	r3, [r3, #4]
 8003cc6:	f003 0303 	and.w	r3, r3, #3
 8003cca:	2b01      	cmp	r3, #1
 8003ccc:	d005      	beq.n	8003cda <HAL_GPIO_Init+0x52>
 8003cce:	683b      	ldr	r3, [r7, #0]
 8003cd0:	685b      	ldr	r3, [r3, #4]
 8003cd2:	f003 0303 	and.w	r3, r3, #3
 8003cd6:	2b02      	cmp	r3, #2
 8003cd8:	d130      	bne.n	8003d3c <HAL_GPIO_Init+0xb4>
 8003cda:	687b      	ldr	r3, [r7, #4]
 8003cdc:	689b      	ldr	r3, [r3, #8]
 8003cde:	61bb      	str	r3, [r7, #24]
 8003ce0:	69fb      	ldr	r3, [r7, #28]
 8003ce2:	005b      	lsls	r3, r3, #1
 8003ce4:	2203      	movs	r2, #3
 8003ce6:	fa02 f303 	lsl.w	r3, r2, r3
 8003cea:	43db      	mvns	r3, r3
 8003cec:	69ba      	ldr	r2, [r7, #24]
 8003cee:	4013      	ands	r3, r2
 8003cf0:	61bb      	str	r3, [r7, #24]
 8003cf2:	683b      	ldr	r3, [r7, #0]
 8003cf4:	68da      	ldr	r2, [r3, #12]
 8003cf6:	69fb      	ldr	r3, [r7, #28]
 8003cf8:	005b      	lsls	r3, r3, #1
 8003cfa:	fa02 f303 	lsl.w	r3, r2, r3
 8003cfe:	69ba      	ldr	r2, [r7, #24]
 8003d00:	4313      	orrs	r3, r2
 8003d02:	61bb      	str	r3, [r7, #24]
 8003d04:	687b      	ldr	r3, [r7, #4]
 8003d06:	69ba      	ldr	r2, [r7, #24]
 8003d08:	609a      	str	r2, [r3, #8]
 8003d0a:	687b      	ldr	r3, [r7, #4]
 8003d0c:	685b      	ldr	r3, [r3, #4]
 8003d0e:	61bb      	str	r3, [r7, #24]
 8003d10:	2201      	movs	r2, #1
 8003d12:	69fb      	ldr	r3, [r7, #28]
 8003d14:	fa02 f303 	lsl.w	r3, r2, r3
 8003d18:	43db      	mvns	r3, r3
 8003d1a:	69ba      	ldr	r2, [r7, #24]
 8003d1c:	4013      	ands	r3, r2
 8003d1e:	61bb      	str	r3, [r7, #24]
 8003d20:	683b      	ldr	r3, [r7, #0]
 8003d22:	685b      	ldr	r3, [r3, #4]
 8003d24:	091b      	lsrs	r3, r3, #4
 8003d26:	f003 0201 	and.w	r2, r3, #1
 8003d2a:	69fb      	ldr	r3, [r7, #28]
 8003d2c:	fa02 f303 	lsl.w	r3, r2, r3
 8003d30:	69ba      	ldr	r2, [r7, #24]
 8003d32:	4313      	orrs	r3, r2
 8003d34:	61bb      	str	r3, [r7, #24]
 8003d36:	687b      	ldr	r3, [r7, #4]
 8003d38:	69ba      	ldr	r2, [r7, #24]
 8003d3a:	605a      	str	r2, [r3, #4]
 8003d3c:	683b      	ldr	r3, [r7, #0]
 8003d3e:	685b      	ldr	r3, [r3, #4]
 8003d40:	f003 0303 	and.w	r3, r3, #3
 8003d44:	2b03      	cmp	r3, #3
 8003d46:	d017      	beq.n	8003d78 <HAL_GPIO_Init+0xf0>
 8003d48:	687b      	ldr	r3, [r7, #4]
 8003d4a:	68db      	ldr	r3, [r3, #12]
 8003d4c:	61bb      	str	r3, [r7, #24]
 8003d4e:	69fb      	ldr	r3, [r7, #28]
 8003d50:	005b      	lsls	r3, r3, #1
 8003d52:	2203      	movs	r2, #3
 8003d54:	fa02 f303 	lsl.w	r3, r2, r3
 8003d58:	43db      	mvns	r3, r3
 8003d5a:	69ba      	ldr	r2, [r7, #24]
 8003d5c:	4013      	ands	r3, r2
 8003d5e:	61bb      	str	r3, [r7, #24]
 8003d60:	683b      	ldr	r3, [r7, #0]
 8003d62:	689a      	ldr	r2, [r3, #8]
 8003d64:	69fb      	ldr	r3, [r7, #28]
 8003d66:	005b      	lsls	r3, r3, #1
 8003d68:	fa02 f303 	lsl.w	r3, r2, r3
 8003d6c:	69ba      	ldr	r2, [r7, #24]
 8003d6e:	4313      	orrs	r3, r2
 8003d70:	61bb      	str	r3, [r7, #24]
 8003d72:	687b      	ldr	r3, [r7, #4]
 8003d74:	69ba      	ldr	r2, [r7, #24]
 8003d76:	60da      	str	r2, [r3, #12]
 8003d78:	683b      	ldr	r3, [r7, #0]
 8003d7a:	685b      	ldr	r3, [r3, #4]
 8003d7c:	f003 0303 	and.w	r3, r3, #3
 8003d80:	2b02      	cmp	r3, #2
 8003d82:	d123      	bne.n	8003dcc <HAL_GPIO_Init+0x144>
 8003d84:	69fb      	ldr	r3, [r7, #28]
 8003d86:	08da      	lsrs	r2, r3, #3
 8003d88:	687b      	ldr	r3, [r7, #4]
 8003d8a:	3208      	adds	r2, #8
 8003d8c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003d90:	61bb      	str	r3, [r7, #24]
 8003d92:	69fb      	ldr	r3, [r7, #28]
 8003d94:	f003 0307 	and.w	r3, r3, #7
 8003d98:	009b      	lsls	r3, r3, #2
 8003d9a:	220f      	movs	r2, #15
 8003d9c:	fa02 f303 	lsl.w	r3, r2, r3
 8003da0:	43db      	mvns	r3, r3
 8003da2:	69ba      	ldr	r2, [r7, #24]
 8003da4:	4013      	ands	r3, r2
 8003da6:	61bb      	str	r3, [r7, #24]
 8003da8:	683b      	ldr	r3, [r7, #0]
 8003daa:	691a      	ldr	r2, [r3, #16]
 8003dac:	69fb      	ldr	r3, [r7, #28]
 8003dae:	f003 0307 	and.w	r3, r3, #7
 8003db2:	009b      	lsls	r3, r3, #2
 8003db4:	fa02 f303 	lsl.w	r3, r2, r3
 8003db8:	69ba      	ldr	r2, [r7, #24]
 8003dba:	4313      	orrs	r3, r2
 8003dbc:	61bb      	str	r3, [r7, #24]
 8003dbe:	69fb      	ldr	r3, [r7, #28]
 8003dc0:	08da      	lsrs	r2, r3, #3
 8003dc2:	687b      	ldr	r3, [r7, #4]
 8003dc4:	3208      	adds	r2, #8
 8003dc6:	69b9      	ldr	r1, [r7, #24]
 8003dc8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8003dcc:	687b      	ldr	r3, [r7, #4]
 8003dce:	681b      	ldr	r3, [r3, #0]
 8003dd0:	61bb      	str	r3, [r7, #24]
 8003dd2:	69fb      	ldr	r3, [r7, #28]
 8003dd4:	005b      	lsls	r3, r3, #1
 8003dd6:	2203      	movs	r2, #3
 8003dd8:	fa02 f303 	lsl.w	r3, r2, r3
 8003ddc:	43db      	mvns	r3, r3
 8003dde:	69ba      	ldr	r2, [r7, #24]
 8003de0:	4013      	ands	r3, r2
 8003de2:	61bb      	str	r3, [r7, #24]
 8003de4:	683b      	ldr	r3, [r7, #0]
 8003de6:	685b      	ldr	r3, [r3, #4]
 8003de8:	f003 0203 	and.w	r2, r3, #3
 8003dec:	69fb      	ldr	r3, [r7, #28]
 8003dee:	005b      	lsls	r3, r3, #1
 8003df0:	fa02 f303 	lsl.w	r3, r2, r3
 8003df4:	69ba      	ldr	r2, [r7, #24]
 8003df6:	4313      	orrs	r3, r2
 8003df8:	61bb      	str	r3, [r7, #24]
 8003dfa:	687b      	ldr	r3, [r7, #4]
 8003dfc:	69ba      	ldr	r2, [r7, #24]
 8003dfe:	601a      	str	r2, [r3, #0]
 8003e00:	683b      	ldr	r3, [r7, #0]
 8003e02:	685b      	ldr	r3, [r3, #4]
 8003e04:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8003e08:	2b00      	cmp	r3, #0
 8003e0a:	f000 80ae 	beq.w	8003f6a <HAL_GPIO_Init+0x2e2>
 8003e0e:	2300      	movs	r3, #0
 8003e10:	60fb      	str	r3, [r7, #12]
 8003e12:	4b5d      	ldr	r3, [pc, #372]	@ (8003f88 <HAL_GPIO_Init+0x300>)
 8003e14:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003e16:	4a5c      	ldr	r2, [pc, #368]	@ (8003f88 <HAL_GPIO_Init+0x300>)
 8003e18:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8003e1c:	6453      	str	r3, [r2, #68]	@ 0x44
 8003e1e:	4b5a      	ldr	r3, [pc, #360]	@ (8003f88 <HAL_GPIO_Init+0x300>)
 8003e20:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003e22:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8003e26:	60fb      	str	r3, [r7, #12]
 8003e28:	68fb      	ldr	r3, [r7, #12]
 8003e2a:	4a58      	ldr	r2, [pc, #352]	@ (8003f8c <HAL_GPIO_Init+0x304>)
 8003e2c:	69fb      	ldr	r3, [r7, #28]
 8003e2e:	089b      	lsrs	r3, r3, #2
 8003e30:	3302      	adds	r3, #2
 8003e32:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003e36:	61bb      	str	r3, [r7, #24]
 8003e38:	69fb      	ldr	r3, [r7, #28]
 8003e3a:	f003 0303 	and.w	r3, r3, #3
 8003e3e:	009b      	lsls	r3, r3, #2
 8003e40:	220f      	movs	r2, #15
 8003e42:	fa02 f303 	lsl.w	r3, r2, r3
 8003e46:	43db      	mvns	r3, r3
 8003e48:	69ba      	ldr	r2, [r7, #24]
 8003e4a:	4013      	ands	r3, r2
 8003e4c:	61bb      	str	r3, [r7, #24]
 8003e4e:	687b      	ldr	r3, [r7, #4]
 8003e50:	4a4f      	ldr	r2, [pc, #316]	@ (8003f90 <HAL_GPIO_Init+0x308>)
 8003e52:	4293      	cmp	r3, r2
 8003e54:	d025      	beq.n	8003ea2 <HAL_GPIO_Init+0x21a>
 8003e56:	687b      	ldr	r3, [r7, #4]
 8003e58:	4a4e      	ldr	r2, [pc, #312]	@ (8003f94 <HAL_GPIO_Init+0x30c>)
 8003e5a:	4293      	cmp	r3, r2
 8003e5c:	d01f      	beq.n	8003e9e <HAL_GPIO_Init+0x216>
 8003e5e:	687b      	ldr	r3, [r7, #4]
 8003e60:	4a4d      	ldr	r2, [pc, #308]	@ (8003f98 <HAL_GPIO_Init+0x310>)
 8003e62:	4293      	cmp	r3, r2
 8003e64:	d019      	beq.n	8003e9a <HAL_GPIO_Init+0x212>
 8003e66:	687b      	ldr	r3, [r7, #4]
 8003e68:	4a4c      	ldr	r2, [pc, #304]	@ (8003f9c <HAL_GPIO_Init+0x314>)
 8003e6a:	4293      	cmp	r3, r2
 8003e6c:	d013      	beq.n	8003e96 <HAL_GPIO_Init+0x20e>
 8003e6e:	687b      	ldr	r3, [r7, #4]
 8003e70:	4a4b      	ldr	r2, [pc, #300]	@ (8003fa0 <HAL_GPIO_Init+0x318>)
 8003e72:	4293      	cmp	r3, r2
 8003e74:	d00d      	beq.n	8003e92 <HAL_GPIO_Init+0x20a>
 8003e76:	687b      	ldr	r3, [r7, #4]
 8003e78:	4a4a      	ldr	r2, [pc, #296]	@ (8003fa4 <HAL_GPIO_Init+0x31c>)
 8003e7a:	4293      	cmp	r3, r2
 8003e7c:	d007      	beq.n	8003e8e <HAL_GPIO_Init+0x206>
 8003e7e:	687b      	ldr	r3, [r7, #4]
 8003e80:	4a49      	ldr	r2, [pc, #292]	@ (8003fa8 <HAL_GPIO_Init+0x320>)
 8003e82:	4293      	cmp	r3, r2
 8003e84:	d101      	bne.n	8003e8a <HAL_GPIO_Init+0x202>
 8003e86:	2306      	movs	r3, #6
 8003e88:	e00c      	b.n	8003ea4 <HAL_GPIO_Init+0x21c>
 8003e8a:	2307      	movs	r3, #7
 8003e8c:	e00a      	b.n	8003ea4 <HAL_GPIO_Init+0x21c>
 8003e8e:	2305      	movs	r3, #5
 8003e90:	e008      	b.n	8003ea4 <HAL_GPIO_Init+0x21c>
 8003e92:	2304      	movs	r3, #4
 8003e94:	e006      	b.n	8003ea4 <HAL_GPIO_Init+0x21c>
 8003e96:	2303      	movs	r3, #3
 8003e98:	e004      	b.n	8003ea4 <HAL_GPIO_Init+0x21c>
 8003e9a:	2302      	movs	r3, #2
 8003e9c:	e002      	b.n	8003ea4 <HAL_GPIO_Init+0x21c>
 8003e9e:	2301      	movs	r3, #1
 8003ea0:	e000      	b.n	8003ea4 <HAL_GPIO_Init+0x21c>
 8003ea2:	2300      	movs	r3, #0
 8003ea4:	69fa      	ldr	r2, [r7, #28]
 8003ea6:	f002 0203 	and.w	r2, r2, #3
 8003eaa:	0092      	lsls	r2, r2, #2
 8003eac:	4093      	lsls	r3, r2
 8003eae:	69ba      	ldr	r2, [r7, #24]
 8003eb0:	4313      	orrs	r3, r2
 8003eb2:	61bb      	str	r3, [r7, #24]
 8003eb4:	4935      	ldr	r1, [pc, #212]	@ (8003f8c <HAL_GPIO_Init+0x304>)
 8003eb6:	69fb      	ldr	r3, [r7, #28]
 8003eb8:	089b      	lsrs	r3, r3, #2
 8003eba:	3302      	adds	r3, #2
 8003ebc:	69ba      	ldr	r2, [r7, #24]
 8003ebe:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8003ec2:	4b3a      	ldr	r3, [pc, #232]	@ (8003fac <HAL_GPIO_Init+0x324>)
 8003ec4:	689b      	ldr	r3, [r3, #8]
 8003ec6:	61bb      	str	r3, [r7, #24]
 8003ec8:	693b      	ldr	r3, [r7, #16]
 8003eca:	43db      	mvns	r3, r3
 8003ecc:	69ba      	ldr	r2, [r7, #24]
 8003ece:	4013      	ands	r3, r2
 8003ed0:	61bb      	str	r3, [r7, #24]
 8003ed2:	683b      	ldr	r3, [r7, #0]
 8003ed4:	685b      	ldr	r3, [r3, #4]
 8003ed6:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8003eda:	2b00      	cmp	r3, #0
 8003edc:	d003      	beq.n	8003ee6 <HAL_GPIO_Init+0x25e>
 8003ede:	69ba      	ldr	r2, [r7, #24]
 8003ee0:	693b      	ldr	r3, [r7, #16]
 8003ee2:	4313      	orrs	r3, r2
 8003ee4:	61bb      	str	r3, [r7, #24]
 8003ee6:	4a31      	ldr	r2, [pc, #196]	@ (8003fac <HAL_GPIO_Init+0x324>)
 8003ee8:	69bb      	ldr	r3, [r7, #24]
 8003eea:	6093      	str	r3, [r2, #8]
 8003eec:	4b2f      	ldr	r3, [pc, #188]	@ (8003fac <HAL_GPIO_Init+0x324>)
 8003eee:	68db      	ldr	r3, [r3, #12]
 8003ef0:	61bb      	str	r3, [r7, #24]
 8003ef2:	693b      	ldr	r3, [r7, #16]
 8003ef4:	43db      	mvns	r3, r3
 8003ef6:	69ba      	ldr	r2, [r7, #24]
 8003ef8:	4013      	ands	r3, r2
 8003efa:	61bb      	str	r3, [r7, #24]
 8003efc:	683b      	ldr	r3, [r7, #0]
 8003efe:	685b      	ldr	r3, [r3, #4]
 8003f00:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8003f04:	2b00      	cmp	r3, #0
 8003f06:	d003      	beq.n	8003f10 <HAL_GPIO_Init+0x288>
 8003f08:	69ba      	ldr	r2, [r7, #24]
 8003f0a:	693b      	ldr	r3, [r7, #16]
 8003f0c:	4313      	orrs	r3, r2
 8003f0e:	61bb      	str	r3, [r7, #24]
 8003f10:	4a26      	ldr	r2, [pc, #152]	@ (8003fac <HAL_GPIO_Init+0x324>)
 8003f12:	69bb      	ldr	r3, [r7, #24]
 8003f14:	60d3      	str	r3, [r2, #12]
 8003f16:	4b25      	ldr	r3, [pc, #148]	@ (8003fac <HAL_GPIO_Init+0x324>)
 8003f18:	685b      	ldr	r3, [r3, #4]
 8003f1a:	61bb      	str	r3, [r7, #24]
 8003f1c:	693b      	ldr	r3, [r7, #16]
 8003f1e:	43db      	mvns	r3, r3
 8003f20:	69ba      	ldr	r2, [r7, #24]
 8003f22:	4013      	ands	r3, r2
 8003f24:	61bb      	str	r3, [r7, #24]
 8003f26:	683b      	ldr	r3, [r7, #0]
 8003f28:	685b      	ldr	r3, [r3, #4]
 8003f2a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003f2e:	2b00      	cmp	r3, #0
 8003f30:	d003      	beq.n	8003f3a <HAL_GPIO_Init+0x2b2>
 8003f32:	69ba      	ldr	r2, [r7, #24]
 8003f34:	693b      	ldr	r3, [r7, #16]
 8003f36:	4313      	orrs	r3, r2
 8003f38:	61bb      	str	r3, [r7, #24]
 8003f3a:	4a1c      	ldr	r2, [pc, #112]	@ (8003fac <HAL_GPIO_Init+0x324>)
 8003f3c:	69bb      	ldr	r3, [r7, #24]
 8003f3e:	6053      	str	r3, [r2, #4]
 8003f40:	4b1a      	ldr	r3, [pc, #104]	@ (8003fac <HAL_GPIO_Init+0x324>)
 8003f42:	681b      	ldr	r3, [r3, #0]
 8003f44:	61bb      	str	r3, [r7, #24]
 8003f46:	693b      	ldr	r3, [r7, #16]
 8003f48:	43db      	mvns	r3, r3
 8003f4a:	69ba      	ldr	r2, [r7, #24]
 8003f4c:	4013      	ands	r3, r2
 8003f4e:	61bb      	str	r3, [r7, #24]
 8003f50:	683b      	ldr	r3, [r7, #0]
 8003f52:	685b      	ldr	r3, [r3, #4]
 8003f54:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8003f58:	2b00      	cmp	r3, #0
 8003f5a:	d003      	beq.n	8003f64 <HAL_GPIO_Init+0x2dc>
 8003f5c:	69ba      	ldr	r2, [r7, #24]
 8003f5e:	693b      	ldr	r3, [r7, #16]
 8003f60:	4313      	orrs	r3, r2
 8003f62:	61bb      	str	r3, [r7, #24]
 8003f64:	4a11      	ldr	r2, [pc, #68]	@ (8003fac <HAL_GPIO_Init+0x324>)
 8003f66:	69bb      	ldr	r3, [r7, #24]
 8003f68:	6013      	str	r3, [r2, #0]
 8003f6a:	69fb      	ldr	r3, [r7, #28]
 8003f6c:	3301      	adds	r3, #1
 8003f6e:	61fb      	str	r3, [r7, #28]
 8003f70:	69fb      	ldr	r3, [r7, #28]
 8003f72:	2b0f      	cmp	r3, #15
 8003f74:	f67f ae96 	bls.w	8003ca4 <HAL_GPIO_Init+0x1c>
 8003f78:	bf00      	nop
 8003f7a:	bf00      	nop
 8003f7c:	3724      	adds	r7, #36	@ 0x24
 8003f7e:	46bd      	mov	sp, r7
 8003f80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f84:	4770      	bx	lr
 8003f86:	bf00      	nop
 8003f88:	40023800 	.word	0x40023800
 8003f8c:	40013800 	.word	0x40013800
 8003f90:	40020000 	.word	0x40020000
 8003f94:	40020400 	.word	0x40020400
 8003f98:	40020800 	.word	0x40020800
 8003f9c:	40020c00 	.word	0x40020c00
 8003fa0:	40021000 	.word	0x40021000
 8003fa4:	40021400 	.word	0x40021400
 8003fa8:	40021800 	.word	0x40021800
 8003fac:	40013c00 	.word	0x40013c00

08003fb0 <HAL_GPIO_ReadPin>:
 8003fb0:	b480      	push	{r7}
 8003fb2:	b085      	sub	sp, #20
 8003fb4:	af00      	add	r7, sp, #0
 8003fb6:	6078      	str	r0, [r7, #4]
 8003fb8:	460b      	mov	r3, r1
 8003fba:	807b      	strh	r3, [r7, #2]
 8003fbc:	687b      	ldr	r3, [r7, #4]
 8003fbe:	691a      	ldr	r2, [r3, #16]
 8003fc0:	887b      	ldrh	r3, [r7, #2]
 8003fc2:	4013      	ands	r3, r2
 8003fc4:	2b00      	cmp	r3, #0
 8003fc6:	d002      	beq.n	8003fce <HAL_GPIO_ReadPin+0x1e>
 8003fc8:	2301      	movs	r3, #1
 8003fca:	73fb      	strb	r3, [r7, #15]
 8003fcc:	e001      	b.n	8003fd2 <HAL_GPIO_ReadPin+0x22>
 8003fce:	2300      	movs	r3, #0
 8003fd0:	73fb      	strb	r3, [r7, #15]
 8003fd2:	7bfb      	ldrb	r3, [r7, #15]
 8003fd4:	4618      	mov	r0, r3
 8003fd6:	3714      	adds	r7, #20
 8003fd8:	46bd      	mov	sp, r7
 8003fda:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fde:	4770      	bx	lr

08003fe0 <HAL_GPIO_WritePin>:
 8003fe0:	b480      	push	{r7}
 8003fe2:	b083      	sub	sp, #12
 8003fe4:	af00      	add	r7, sp, #0
 8003fe6:	6078      	str	r0, [r7, #4]
 8003fe8:	460b      	mov	r3, r1
 8003fea:	807b      	strh	r3, [r7, #2]
 8003fec:	4613      	mov	r3, r2
 8003fee:	707b      	strb	r3, [r7, #1]
 8003ff0:	787b      	ldrb	r3, [r7, #1]
 8003ff2:	2b00      	cmp	r3, #0
 8003ff4:	d003      	beq.n	8003ffe <HAL_GPIO_WritePin+0x1e>
 8003ff6:	887a      	ldrh	r2, [r7, #2]
 8003ff8:	687b      	ldr	r3, [r7, #4]
 8003ffa:	619a      	str	r2, [r3, #24]
 8003ffc:	e003      	b.n	8004006 <HAL_GPIO_WritePin+0x26>
 8003ffe:	887b      	ldrh	r3, [r7, #2]
 8004000:	041a      	lsls	r2, r3, #16
 8004002:	687b      	ldr	r3, [r7, #4]
 8004004:	619a      	str	r2, [r3, #24]
 8004006:	bf00      	nop
 8004008:	370c      	adds	r7, #12
 800400a:	46bd      	mov	sp, r7
 800400c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004010:	4770      	bx	lr
	...

08004014 <HAL_I2C_Init>:
 8004014:	b580      	push	{r7, lr}
 8004016:	b084      	sub	sp, #16
 8004018:	af00      	add	r7, sp, #0
 800401a:	6078      	str	r0, [r7, #4]
 800401c:	687b      	ldr	r3, [r7, #4]
 800401e:	2b00      	cmp	r3, #0
 8004020:	d101      	bne.n	8004026 <HAL_I2C_Init+0x12>
 8004022:	2301      	movs	r3, #1
 8004024:	e12b      	b.n	800427e <HAL_I2C_Init+0x26a>
 8004026:	687b      	ldr	r3, [r7, #4]
 8004028:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800402c:	b2db      	uxtb	r3, r3
 800402e:	2b00      	cmp	r3, #0
 8004030:	d106      	bne.n	8004040 <HAL_I2C_Init+0x2c>
 8004032:	687b      	ldr	r3, [r7, #4]
 8004034:	2200      	movs	r2, #0
 8004036:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800403a:	6878      	ldr	r0, [r7, #4]
 800403c:	f7fd fcd2 	bl	80019e4 <HAL_I2C_MspInit>
 8004040:	687b      	ldr	r3, [r7, #4]
 8004042:	2224      	movs	r2, #36	@ 0x24
 8004044:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004048:	687b      	ldr	r3, [r7, #4]
 800404a:	681b      	ldr	r3, [r3, #0]
 800404c:	681a      	ldr	r2, [r3, #0]
 800404e:	687b      	ldr	r3, [r7, #4]
 8004050:	681b      	ldr	r3, [r3, #0]
 8004052:	f022 0201 	bic.w	r2, r2, #1
 8004056:	601a      	str	r2, [r3, #0]
 8004058:	687b      	ldr	r3, [r7, #4]
 800405a:	681b      	ldr	r3, [r3, #0]
 800405c:	681a      	ldr	r2, [r3, #0]
 800405e:	687b      	ldr	r3, [r7, #4]
 8004060:	681b      	ldr	r3, [r3, #0]
 8004062:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8004066:	601a      	str	r2, [r3, #0]
 8004068:	687b      	ldr	r3, [r7, #4]
 800406a:	681b      	ldr	r3, [r3, #0]
 800406c:	681a      	ldr	r2, [r3, #0]
 800406e:	687b      	ldr	r3, [r7, #4]
 8004070:	681b      	ldr	r3, [r3, #0]
 8004072:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8004076:	601a      	str	r2, [r3, #0]
 8004078:	f001 f8e2 	bl	8005240 <HAL_RCC_GetPCLK1Freq>
 800407c:	60f8      	str	r0, [r7, #12]
 800407e:	687b      	ldr	r3, [r7, #4]
 8004080:	685b      	ldr	r3, [r3, #4]
 8004082:	4a81      	ldr	r2, [pc, #516]	@ (8004288 <HAL_I2C_Init+0x274>)
 8004084:	4293      	cmp	r3, r2
 8004086:	d807      	bhi.n	8004098 <HAL_I2C_Init+0x84>
 8004088:	68fb      	ldr	r3, [r7, #12]
 800408a:	4a80      	ldr	r2, [pc, #512]	@ (800428c <HAL_I2C_Init+0x278>)
 800408c:	4293      	cmp	r3, r2
 800408e:	bf94      	ite	ls
 8004090:	2301      	movls	r3, #1
 8004092:	2300      	movhi	r3, #0
 8004094:	b2db      	uxtb	r3, r3
 8004096:	e006      	b.n	80040a6 <HAL_I2C_Init+0x92>
 8004098:	68fb      	ldr	r3, [r7, #12]
 800409a:	4a7d      	ldr	r2, [pc, #500]	@ (8004290 <HAL_I2C_Init+0x27c>)
 800409c:	4293      	cmp	r3, r2
 800409e:	bf94      	ite	ls
 80040a0:	2301      	movls	r3, #1
 80040a2:	2300      	movhi	r3, #0
 80040a4:	b2db      	uxtb	r3, r3
 80040a6:	2b00      	cmp	r3, #0
 80040a8:	d001      	beq.n	80040ae <HAL_I2C_Init+0x9a>
 80040aa:	2301      	movs	r3, #1
 80040ac:	e0e7      	b.n	800427e <HAL_I2C_Init+0x26a>
 80040ae:	68fb      	ldr	r3, [r7, #12]
 80040b0:	4a78      	ldr	r2, [pc, #480]	@ (8004294 <HAL_I2C_Init+0x280>)
 80040b2:	fba2 2303 	umull	r2, r3, r2, r3
 80040b6:	0c9b      	lsrs	r3, r3, #18
 80040b8:	60bb      	str	r3, [r7, #8]
 80040ba:	687b      	ldr	r3, [r7, #4]
 80040bc:	681b      	ldr	r3, [r3, #0]
 80040be:	685b      	ldr	r3, [r3, #4]
 80040c0:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 80040c4:	687b      	ldr	r3, [r7, #4]
 80040c6:	681b      	ldr	r3, [r3, #0]
 80040c8:	68ba      	ldr	r2, [r7, #8]
 80040ca:	430a      	orrs	r2, r1
 80040cc:	605a      	str	r2, [r3, #4]
 80040ce:	687b      	ldr	r3, [r7, #4]
 80040d0:	681b      	ldr	r3, [r3, #0]
 80040d2:	6a1b      	ldr	r3, [r3, #32]
 80040d4:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 80040d8:	687b      	ldr	r3, [r7, #4]
 80040da:	685b      	ldr	r3, [r3, #4]
 80040dc:	4a6a      	ldr	r2, [pc, #424]	@ (8004288 <HAL_I2C_Init+0x274>)
 80040de:	4293      	cmp	r3, r2
 80040e0:	d802      	bhi.n	80040e8 <HAL_I2C_Init+0xd4>
 80040e2:	68bb      	ldr	r3, [r7, #8]
 80040e4:	3301      	adds	r3, #1
 80040e6:	e009      	b.n	80040fc <HAL_I2C_Init+0xe8>
 80040e8:	68bb      	ldr	r3, [r7, #8]
 80040ea:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 80040ee:	fb02 f303 	mul.w	r3, r2, r3
 80040f2:	4a69      	ldr	r2, [pc, #420]	@ (8004298 <HAL_I2C_Init+0x284>)
 80040f4:	fba2 2303 	umull	r2, r3, r2, r3
 80040f8:	099b      	lsrs	r3, r3, #6
 80040fa:	3301      	adds	r3, #1
 80040fc:	687a      	ldr	r2, [r7, #4]
 80040fe:	6812      	ldr	r2, [r2, #0]
 8004100:	430b      	orrs	r3, r1
 8004102:	6213      	str	r3, [r2, #32]
 8004104:	687b      	ldr	r3, [r7, #4]
 8004106:	681b      	ldr	r3, [r3, #0]
 8004108:	69db      	ldr	r3, [r3, #28]
 800410a:	f423 424f 	bic.w	r2, r3, #52992	@ 0xcf00
 800410e:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 8004112:	687b      	ldr	r3, [r7, #4]
 8004114:	685b      	ldr	r3, [r3, #4]
 8004116:	495c      	ldr	r1, [pc, #368]	@ (8004288 <HAL_I2C_Init+0x274>)
 8004118:	428b      	cmp	r3, r1
 800411a:	d819      	bhi.n	8004150 <HAL_I2C_Init+0x13c>
 800411c:	68fb      	ldr	r3, [r7, #12]
 800411e:	1e59      	subs	r1, r3, #1
 8004120:	687b      	ldr	r3, [r7, #4]
 8004122:	685b      	ldr	r3, [r3, #4]
 8004124:	005b      	lsls	r3, r3, #1
 8004126:	fbb1 f3f3 	udiv	r3, r1, r3
 800412a:	1c59      	adds	r1, r3, #1
 800412c:	f640 73fc 	movw	r3, #4092	@ 0xffc
 8004130:	400b      	ands	r3, r1
 8004132:	2b00      	cmp	r3, #0
 8004134:	d00a      	beq.n	800414c <HAL_I2C_Init+0x138>
 8004136:	68fb      	ldr	r3, [r7, #12]
 8004138:	1e59      	subs	r1, r3, #1
 800413a:	687b      	ldr	r3, [r7, #4]
 800413c:	685b      	ldr	r3, [r3, #4]
 800413e:	005b      	lsls	r3, r3, #1
 8004140:	fbb1 f3f3 	udiv	r3, r1, r3
 8004144:	3301      	adds	r3, #1
 8004146:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800414a:	e051      	b.n	80041f0 <HAL_I2C_Init+0x1dc>
 800414c:	2304      	movs	r3, #4
 800414e:	e04f      	b.n	80041f0 <HAL_I2C_Init+0x1dc>
 8004150:	687b      	ldr	r3, [r7, #4]
 8004152:	689b      	ldr	r3, [r3, #8]
 8004154:	2b00      	cmp	r3, #0
 8004156:	d111      	bne.n	800417c <HAL_I2C_Init+0x168>
 8004158:	68fb      	ldr	r3, [r7, #12]
 800415a:	1e58      	subs	r0, r3, #1
 800415c:	687b      	ldr	r3, [r7, #4]
 800415e:	6859      	ldr	r1, [r3, #4]
 8004160:	460b      	mov	r3, r1
 8004162:	005b      	lsls	r3, r3, #1
 8004164:	440b      	add	r3, r1
 8004166:	fbb0 f3f3 	udiv	r3, r0, r3
 800416a:	3301      	adds	r3, #1
 800416c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004170:	2b00      	cmp	r3, #0
 8004172:	bf0c      	ite	eq
 8004174:	2301      	moveq	r3, #1
 8004176:	2300      	movne	r3, #0
 8004178:	b2db      	uxtb	r3, r3
 800417a:	e012      	b.n	80041a2 <HAL_I2C_Init+0x18e>
 800417c:	68fb      	ldr	r3, [r7, #12]
 800417e:	1e58      	subs	r0, r3, #1
 8004180:	687b      	ldr	r3, [r7, #4]
 8004182:	6859      	ldr	r1, [r3, #4]
 8004184:	460b      	mov	r3, r1
 8004186:	009b      	lsls	r3, r3, #2
 8004188:	440b      	add	r3, r1
 800418a:	0099      	lsls	r1, r3, #2
 800418c:	440b      	add	r3, r1
 800418e:	fbb0 f3f3 	udiv	r3, r0, r3
 8004192:	3301      	adds	r3, #1
 8004194:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004198:	2b00      	cmp	r3, #0
 800419a:	bf0c      	ite	eq
 800419c:	2301      	moveq	r3, #1
 800419e:	2300      	movne	r3, #0
 80041a0:	b2db      	uxtb	r3, r3
 80041a2:	2b00      	cmp	r3, #0
 80041a4:	d001      	beq.n	80041aa <HAL_I2C_Init+0x196>
 80041a6:	2301      	movs	r3, #1
 80041a8:	e022      	b.n	80041f0 <HAL_I2C_Init+0x1dc>
 80041aa:	687b      	ldr	r3, [r7, #4]
 80041ac:	689b      	ldr	r3, [r3, #8]
 80041ae:	2b00      	cmp	r3, #0
 80041b0:	d10e      	bne.n	80041d0 <HAL_I2C_Init+0x1bc>
 80041b2:	68fb      	ldr	r3, [r7, #12]
 80041b4:	1e58      	subs	r0, r3, #1
 80041b6:	687b      	ldr	r3, [r7, #4]
 80041b8:	6859      	ldr	r1, [r3, #4]
 80041ba:	460b      	mov	r3, r1
 80041bc:	005b      	lsls	r3, r3, #1
 80041be:	440b      	add	r3, r1
 80041c0:	fbb0 f3f3 	udiv	r3, r0, r3
 80041c4:	3301      	adds	r3, #1
 80041c6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80041ca:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80041ce:	e00f      	b.n	80041f0 <HAL_I2C_Init+0x1dc>
 80041d0:	68fb      	ldr	r3, [r7, #12]
 80041d2:	1e58      	subs	r0, r3, #1
 80041d4:	687b      	ldr	r3, [r7, #4]
 80041d6:	6859      	ldr	r1, [r3, #4]
 80041d8:	460b      	mov	r3, r1
 80041da:	009b      	lsls	r3, r3, #2
 80041dc:	440b      	add	r3, r1
 80041de:	0099      	lsls	r1, r3, #2
 80041e0:	440b      	add	r3, r1
 80041e2:	fbb0 f3f3 	udiv	r3, r0, r3
 80041e6:	3301      	adds	r3, #1
 80041e8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80041ec:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 80041f0:	6879      	ldr	r1, [r7, #4]
 80041f2:	6809      	ldr	r1, [r1, #0]
 80041f4:	4313      	orrs	r3, r2
 80041f6:	61cb      	str	r3, [r1, #28]
 80041f8:	687b      	ldr	r3, [r7, #4]
 80041fa:	681b      	ldr	r3, [r3, #0]
 80041fc:	681b      	ldr	r3, [r3, #0]
 80041fe:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 8004202:	687b      	ldr	r3, [r7, #4]
 8004204:	69da      	ldr	r2, [r3, #28]
 8004206:	687b      	ldr	r3, [r7, #4]
 8004208:	6a1b      	ldr	r3, [r3, #32]
 800420a:	431a      	orrs	r2, r3
 800420c:	687b      	ldr	r3, [r7, #4]
 800420e:	681b      	ldr	r3, [r3, #0]
 8004210:	430a      	orrs	r2, r1
 8004212:	601a      	str	r2, [r3, #0]
 8004214:	687b      	ldr	r3, [r7, #4]
 8004216:	681b      	ldr	r3, [r3, #0]
 8004218:	689b      	ldr	r3, [r3, #8]
 800421a:	f423 4303 	bic.w	r3, r3, #33536	@ 0x8300
 800421e:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8004222:	687a      	ldr	r2, [r7, #4]
 8004224:	6911      	ldr	r1, [r2, #16]
 8004226:	687a      	ldr	r2, [r7, #4]
 8004228:	68d2      	ldr	r2, [r2, #12]
 800422a:	4311      	orrs	r1, r2
 800422c:	687a      	ldr	r2, [r7, #4]
 800422e:	6812      	ldr	r2, [r2, #0]
 8004230:	430b      	orrs	r3, r1
 8004232:	6093      	str	r3, [r2, #8]
 8004234:	687b      	ldr	r3, [r7, #4]
 8004236:	681b      	ldr	r3, [r3, #0]
 8004238:	68db      	ldr	r3, [r3, #12]
 800423a:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 800423e:	687b      	ldr	r3, [r7, #4]
 8004240:	695a      	ldr	r2, [r3, #20]
 8004242:	687b      	ldr	r3, [r7, #4]
 8004244:	699b      	ldr	r3, [r3, #24]
 8004246:	431a      	orrs	r2, r3
 8004248:	687b      	ldr	r3, [r7, #4]
 800424a:	681b      	ldr	r3, [r3, #0]
 800424c:	430a      	orrs	r2, r1
 800424e:	60da      	str	r2, [r3, #12]
 8004250:	687b      	ldr	r3, [r7, #4]
 8004252:	681b      	ldr	r3, [r3, #0]
 8004254:	681a      	ldr	r2, [r3, #0]
 8004256:	687b      	ldr	r3, [r7, #4]
 8004258:	681b      	ldr	r3, [r3, #0]
 800425a:	f042 0201 	orr.w	r2, r2, #1
 800425e:	601a      	str	r2, [r3, #0]
 8004260:	687b      	ldr	r3, [r7, #4]
 8004262:	2200      	movs	r2, #0
 8004264:	641a      	str	r2, [r3, #64]	@ 0x40
 8004266:	687b      	ldr	r3, [r7, #4]
 8004268:	2220      	movs	r2, #32
 800426a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800426e:	687b      	ldr	r3, [r7, #4]
 8004270:	2200      	movs	r2, #0
 8004272:	631a      	str	r2, [r3, #48]	@ 0x30
 8004274:	687b      	ldr	r3, [r7, #4]
 8004276:	2200      	movs	r2, #0
 8004278:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800427c:	2300      	movs	r3, #0
 800427e:	4618      	mov	r0, r3
 8004280:	3710      	adds	r7, #16
 8004282:	46bd      	mov	sp, r7
 8004284:	bd80      	pop	{r7, pc}
 8004286:	bf00      	nop
 8004288:	000186a0 	.word	0x000186a0
 800428c:	001e847f 	.word	0x001e847f
 8004290:	003d08ff 	.word	0x003d08ff
 8004294:	431bde83 	.word	0x431bde83
 8004298:	10624dd3 	.word	0x10624dd3

0800429c <HAL_I2C_Mem_Write>:
 800429c:	b580      	push	{r7, lr}
 800429e:	b088      	sub	sp, #32
 80042a0:	af02      	add	r7, sp, #8
 80042a2:	60f8      	str	r0, [r7, #12]
 80042a4:	4608      	mov	r0, r1
 80042a6:	4611      	mov	r1, r2
 80042a8:	461a      	mov	r2, r3
 80042aa:	4603      	mov	r3, r0
 80042ac:	817b      	strh	r3, [r7, #10]
 80042ae:	460b      	mov	r3, r1
 80042b0:	813b      	strh	r3, [r7, #8]
 80042b2:	4613      	mov	r3, r2
 80042b4:	80fb      	strh	r3, [r7, #6]
 80042b6:	f7fe ff03 	bl	80030c0 <HAL_GetTick>
 80042ba:	6178      	str	r0, [r7, #20]
 80042bc:	68fb      	ldr	r3, [r7, #12]
 80042be:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80042c2:	b2db      	uxtb	r3, r3
 80042c4:	2b20      	cmp	r3, #32
 80042c6:	f040 80d9 	bne.w	800447c <HAL_I2C_Mem_Write+0x1e0>
 80042ca:	697b      	ldr	r3, [r7, #20]
 80042cc:	9300      	str	r3, [sp, #0]
 80042ce:	2319      	movs	r3, #25
 80042d0:	2201      	movs	r2, #1
 80042d2:	496d      	ldr	r1, [pc, #436]	@ (8004488 <HAL_I2C_Mem_Write+0x1ec>)
 80042d4:	68f8      	ldr	r0, [r7, #12]
 80042d6:	f000 fc8b 	bl	8004bf0 <I2C_WaitOnFlagUntilTimeout>
 80042da:	4603      	mov	r3, r0
 80042dc:	2b00      	cmp	r3, #0
 80042de:	d001      	beq.n	80042e4 <HAL_I2C_Mem_Write+0x48>
 80042e0:	2302      	movs	r3, #2
 80042e2:	e0cc      	b.n	800447e <HAL_I2C_Mem_Write+0x1e2>
 80042e4:	68fb      	ldr	r3, [r7, #12]
 80042e6:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80042ea:	2b01      	cmp	r3, #1
 80042ec:	d101      	bne.n	80042f2 <HAL_I2C_Mem_Write+0x56>
 80042ee:	2302      	movs	r3, #2
 80042f0:	e0c5      	b.n	800447e <HAL_I2C_Mem_Write+0x1e2>
 80042f2:	68fb      	ldr	r3, [r7, #12]
 80042f4:	2201      	movs	r2, #1
 80042f6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80042fa:	68fb      	ldr	r3, [r7, #12]
 80042fc:	681b      	ldr	r3, [r3, #0]
 80042fe:	681b      	ldr	r3, [r3, #0]
 8004300:	f003 0301 	and.w	r3, r3, #1
 8004304:	2b01      	cmp	r3, #1
 8004306:	d007      	beq.n	8004318 <HAL_I2C_Mem_Write+0x7c>
 8004308:	68fb      	ldr	r3, [r7, #12]
 800430a:	681b      	ldr	r3, [r3, #0]
 800430c:	681a      	ldr	r2, [r3, #0]
 800430e:	68fb      	ldr	r3, [r7, #12]
 8004310:	681b      	ldr	r3, [r3, #0]
 8004312:	f042 0201 	orr.w	r2, r2, #1
 8004316:	601a      	str	r2, [r3, #0]
 8004318:	68fb      	ldr	r3, [r7, #12]
 800431a:	681b      	ldr	r3, [r3, #0]
 800431c:	681a      	ldr	r2, [r3, #0]
 800431e:	68fb      	ldr	r3, [r7, #12]
 8004320:	681b      	ldr	r3, [r3, #0]
 8004322:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8004326:	601a      	str	r2, [r3, #0]
 8004328:	68fb      	ldr	r3, [r7, #12]
 800432a:	2221      	movs	r2, #33	@ 0x21
 800432c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004330:	68fb      	ldr	r3, [r7, #12]
 8004332:	2240      	movs	r2, #64	@ 0x40
 8004334:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004338:	68fb      	ldr	r3, [r7, #12]
 800433a:	2200      	movs	r2, #0
 800433c:	641a      	str	r2, [r3, #64]	@ 0x40
 800433e:	68fb      	ldr	r3, [r7, #12]
 8004340:	6a3a      	ldr	r2, [r7, #32]
 8004342:	625a      	str	r2, [r3, #36]	@ 0x24
 8004344:	68fb      	ldr	r3, [r7, #12]
 8004346:	8cba      	ldrh	r2, [r7, #36]	@ 0x24
 8004348:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800434a:	68fb      	ldr	r3, [r7, #12]
 800434c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800434e:	b29a      	uxth	r2, r3
 8004350:	68fb      	ldr	r3, [r7, #12]
 8004352:	851a      	strh	r2, [r3, #40]	@ 0x28
 8004354:	68fb      	ldr	r3, [r7, #12]
 8004356:	4a4d      	ldr	r2, [pc, #308]	@ (800448c <HAL_I2C_Mem_Write+0x1f0>)
 8004358:	62da      	str	r2, [r3, #44]	@ 0x2c
 800435a:	88f8      	ldrh	r0, [r7, #6]
 800435c:	893a      	ldrh	r2, [r7, #8]
 800435e:	8979      	ldrh	r1, [r7, #10]
 8004360:	697b      	ldr	r3, [r7, #20]
 8004362:	9301      	str	r3, [sp, #4]
 8004364:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004366:	9300      	str	r3, [sp, #0]
 8004368:	4603      	mov	r3, r0
 800436a:	68f8      	ldr	r0, [r7, #12]
 800436c:	f000 fac2 	bl	80048f4 <I2C_RequestMemoryWrite>
 8004370:	4603      	mov	r3, r0
 8004372:	2b00      	cmp	r3, #0
 8004374:	d052      	beq.n	800441c <HAL_I2C_Mem_Write+0x180>
 8004376:	2301      	movs	r3, #1
 8004378:	e081      	b.n	800447e <HAL_I2C_Mem_Write+0x1e2>
 800437a:	697a      	ldr	r2, [r7, #20]
 800437c:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800437e:	68f8      	ldr	r0, [r7, #12]
 8004380:	f000 fd50 	bl	8004e24 <I2C_WaitOnTXEFlagUntilTimeout>
 8004384:	4603      	mov	r3, r0
 8004386:	2b00      	cmp	r3, #0
 8004388:	d00d      	beq.n	80043a6 <HAL_I2C_Mem_Write+0x10a>
 800438a:	68fb      	ldr	r3, [r7, #12]
 800438c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800438e:	2b04      	cmp	r3, #4
 8004390:	d107      	bne.n	80043a2 <HAL_I2C_Mem_Write+0x106>
 8004392:	68fb      	ldr	r3, [r7, #12]
 8004394:	681b      	ldr	r3, [r3, #0]
 8004396:	681a      	ldr	r2, [r3, #0]
 8004398:	68fb      	ldr	r3, [r7, #12]
 800439a:	681b      	ldr	r3, [r3, #0]
 800439c:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80043a0:	601a      	str	r2, [r3, #0]
 80043a2:	2301      	movs	r3, #1
 80043a4:	e06b      	b.n	800447e <HAL_I2C_Mem_Write+0x1e2>
 80043a6:	68fb      	ldr	r3, [r7, #12]
 80043a8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80043aa:	781a      	ldrb	r2, [r3, #0]
 80043ac:	68fb      	ldr	r3, [r7, #12]
 80043ae:	681b      	ldr	r3, [r3, #0]
 80043b0:	611a      	str	r2, [r3, #16]
 80043b2:	68fb      	ldr	r3, [r7, #12]
 80043b4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80043b6:	1c5a      	adds	r2, r3, #1
 80043b8:	68fb      	ldr	r3, [r7, #12]
 80043ba:	625a      	str	r2, [r3, #36]	@ 0x24
 80043bc:	68fb      	ldr	r3, [r7, #12]
 80043be:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80043c0:	3b01      	subs	r3, #1
 80043c2:	b29a      	uxth	r2, r3
 80043c4:	68fb      	ldr	r3, [r7, #12]
 80043c6:	851a      	strh	r2, [r3, #40]	@ 0x28
 80043c8:	68fb      	ldr	r3, [r7, #12]
 80043ca:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80043cc:	b29b      	uxth	r3, r3
 80043ce:	3b01      	subs	r3, #1
 80043d0:	b29a      	uxth	r2, r3
 80043d2:	68fb      	ldr	r3, [r7, #12]
 80043d4:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80043d6:	68fb      	ldr	r3, [r7, #12]
 80043d8:	681b      	ldr	r3, [r3, #0]
 80043da:	695b      	ldr	r3, [r3, #20]
 80043dc:	f003 0304 	and.w	r3, r3, #4
 80043e0:	2b04      	cmp	r3, #4
 80043e2:	d11b      	bne.n	800441c <HAL_I2C_Mem_Write+0x180>
 80043e4:	68fb      	ldr	r3, [r7, #12]
 80043e6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80043e8:	2b00      	cmp	r3, #0
 80043ea:	d017      	beq.n	800441c <HAL_I2C_Mem_Write+0x180>
 80043ec:	68fb      	ldr	r3, [r7, #12]
 80043ee:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80043f0:	781a      	ldrb	r2, [r3, #0]
 80043f2:	68fb      	ldr	r3, [r7, #12]
 80043f4:	681b      	ldr	r3, [r3, #0]
 80043f6:	611a      	str	r2, [r3, #16]
 80043f8:	68fb      	ldr	r3, [r7, #12]
 80043fa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80043fc:	1c5a      	adds	r2, r3, #1
 80043fe:	68fb      	ldr	r3, [r7, #12]
 8004400:	625a      	str	r2, [r3, #36]	@ 0x24
 8004402:	68fb      	ldr	r3, [r7, #12]
 8004404:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004406:	3b01      	subs	r3, #1
 8004408:	b29a      	uxth	r2, r3
 800440a:	68fb      	ldr	r3, [r7, #12]
 800440c:	851a      	strh	r2, [r3, #40]	@ 0x28
 800440e:	68fb      	ldr	r3, [r7, #12]
 8004410:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004412:	b29b      	uxth	r3, r3
 8004414:	3b01      	subs	r3, #1
 8004416:	b29a      	uxth	r2, r3
 8004418:	68fb      	ldr	r3, [r7, #12]
 800441a:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800441c:	68fb      	ldr	r3, [r7, #12]
 800441e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004420:	2b00      	cmp	r3, #0
 8004422:	d1aa      	bne.n	800437a <HAL_I2C_Mem_Write+0xde>
 8004424:	697a      	ldr	r2, [r7, #20]
 8004426:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8004428:	68f8      	ldr	r0, [r7, #12]
 800442a:	f000 fd43 	bl	8004eb4 <I2C_WaitOnBTFFlagUntilTimeout>
 800442e:	4603      	mov	r3, r0
 8004430:	2b00      	cmp	r3, #0
 8004432:	d00d      	beq.n	8004450 <HAL_I2C_Mem_Write+0x1b4>
 8004434:	68fb      	ldr	r3, [r7, #12]
 8004436:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004438:	2b04      	cmp	r3, #4
 800443a:	d107      	bne.n	800444c <HAL_I2C_Mem_Write+0x1b0>
 800443c:	68fb      	ldr	r3, [r7, #12]
 800443e:	681b      	ldr	r3, [r3, #0]
 8004440:	681a      	ldr	r2, [r3, #0]
 8004442:	68fb      	ldr	r3, [r7, #12]
 8004444:	681b      	ldr	r3, [r3, #0]
 8004446:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800444a:	601a      	str	r2, [r3, #0]
 800444c:	2301      	movs	r3, #1
 800444e:	e016      	b.n	800447e <HAL_I2C_Mem_Write+0x1e2>
 8004450:	68fb      	ldr	r3, [r7, #12]
 8004452:	681b      	ldr	r3, [r3, #0]
 8004454:	681a      	ldr	r2, [r3, #0]
 8004456:	68fb      	ldr	r3, [r7, #12]
 8004458:	681b      	ldr	r3, [r3, #0]
 800445a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800445e:	601a      	str	r2, [r3, #0]
 8004460:	68fb      	ldr	r3, [r7, #12]
 8004462:	2220      	movs	r2, #32
 8004464:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004468:	68fb      	ldr	r3, [r7, #12]
 800446a:	2200      	movs	r2, #0
 800446c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004470:	68fb      	ldr	r3, [r7, #12]
 8004472:	2200      	movs	r2, #0
 8004474:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004478:	2300      	movs	r3, #0
 800447a:	e000      	b.n	800447e <HAL_I2C_Mem_Write+0x1e2>
 800447c:	2302      	movs	r3, #2
 800447e:	4618      	mov	r0, r3
 8004480:	3718      	adds	r7, #24
 8004482:	46bd      	mov	sp, r7
 8004484:	bd80      	pop	{r7, pc}
 8004486:	bf00      	nop
 8004488:	00100002 	.word	0x00100002
 800448c:	ffff0000 	.word	0xffff0000

08004490 <HAL_I2C_Mem_Read>:
 8004490:	b580      	push	{r7, lr}
 8004492:	b08c      	sub	sp, #48	@ 0x30
 8004494:	af02      	add	r7, sp, #8
 8004496:	60f8      	str	r0, [r7, #12]
 8004498:	4608      	mov	r0, r1
 800449a:	4611      	mov	r1, r2
 800449c:	461a      	mov	r2, r3
 800449e:	4603      	mov	r3, r0
 80044a0:	817b      	strh	r3, [r7, #10]
 80044a2:	460b      	mov	r3, r1
 80044a4:	813b      	strh	r3, [r7, #8]
 80044a6:	4613      	mov	r3, r2
 80044a8:	80fb      	strh	r3, [r7, #6]
 80044aa:	f7fe fe09 	bl	80030c0 <HAL_GetTick>
 80044ae:	6278      	str	r0, [r7, #36]	@ 0x24
 80044b0:	68fb      	ldr	r3, [r7, #12]
 80044b2:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80044b6:	b2db      	uxtb	r3, r3
 80044b8:	2b20      	cmp	r3, #32
 80044ba:	f040 8214 	bne.w	80048e6 <HAL_I2C_Mem_Read+0x456>
 80044be:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80044c0:	9300      	str	r3, [sp, #0]
 80044c2:	2319      	movs	r3, #25
 80044c4:	2201      	movs	r2, #1
 80044c6:	497b      	ldr	r1, [pc, #492]	@ (80046b4 <HAL_I2C_Mem_Read+0x224>)
 80044c8:	68f8      	ldr	r0, [r7, #12]
 80044ca:	f000 fb91 	bl	8004bf0 <I2C_WaitOnFlagUntilTimeout>
 80044ce:	4603      	mov	r3, r0
 80044d0:	2b00      	cmp	r3, #0
 80044d2:	d001      	beq.n	80044d8 <HAL_I2C_Mem_Read+0x48>
 80044d4:	2302      	movs	r3, #2
 80044d6:	e207      	b.n	80048e8 <HAL_I2C_Mem_Read+0x458>
 80044d8:	68fb      	ldr	r3, [r7, #12]
 80044da:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80044de:	2b01      	cmp	r3, #1
 80044e0:	d101      	bne.n	80044e6 <HAL_I2C_Mem_Read+0x56>
 80044e2:	2302      	movs	r3, #2
 80044e4:	e200      	b.n	80048e8 <HAL_I2C_Mem_Read+0x458>
 80044e6:	68fb      	ldr	r3, [r7, #12]
 80044e8:	2201      	movs	r2, #1
 80044ea:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80044ee:	68fb      	ldr	r3, [r7, #12]
 80044f0:	681b      	ldr	r3, [r3, #0]
 80044f2:	681b      	ldr	r3, [r3, #0]
 80044f4:	f003 0301 	and.w	r3, r3, #1
 80044f8:	2b01      	cmp	r3, #1
 80044fa:	d007      	beq.n	800450c <HAL_I2C_Mem_Read+0x7c>
 80044fc:	68fb      	ldr	r3, [r7, #12]
 80044fe:	681b      	ldr	r3, [r3, #0]
 8004500:	681a      	ldr	r2, [r3, #0]
 8004502:	68fb      	ldr	r3, [r7, #12]
 8004504:	681b      	ldr	r3, [r3, #0]
 8004506:	f042 0201 	orr.w	r2, r2, #1
 800450a:	601a      	str	r2, [r3, #0]
 800450c:	68fb      	ldr	r3, [r7, #12]
 800450e:	681b      	ldr	r3, [r3, #0]
 8004510:	681a      	ldr	r2, [r3, #0]
 8004512:	68fb      	ldr	r3, [r7, #12]
 8004514:	681b      	ldr	r3, [r3, #0]
 8004516:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800451a:	601a      	str	r2, [r3, #0]
 800451c:	68fb      	ldr	r3, [r7, #12]
 800451e:	2222      	movs	r2, #34	@ 0x22
 8004520:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004524:	68fb      	ldr	r3, [r7, #12]
 8004526:	2240      	movs	r2, #64	@ 0x40
 8004528:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800452c:	68fb      	ldr	r3, [r7, #12]
 800452e:	2200      	movs	r2, #0
 8004530:	641a      	str	r2, [r3, #64]	@ 0x40
 8004532:	68fb      	ldr	r3, [r7, #12]
 8004534:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8004536:	625a      	str	r2, [r3, #36]	@ 0x24
 8004538:	68fb      	ldr	r3, [r7, #12]
 800453a:	8eba      	ldrh	r2, [r7, #52]	@ 0x34
 800453c:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800453e:	68fb      	ldr	r3, [r7, #12]
 8004540:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004542:	b29a      	uxth	r2, r3
 8004544:	68fb      	ldr	r3, [r7, #12]
 8004546:	851a      	strh	r2, [r3, #40]	@ 0x28
 8004548:	68fb      	ldr	r3, [r7, #12]
 800454a:	4a5b      	ldr	r2, [pc, #364]	@ (80046b8 <HAL_I2C_Mem_Read+0x228>)
 800454c:	62da      	str	r2, [r3, #44]	@ 0x2c
 800454e:	88f8      	ldrh	r0, [r7, #6]
 8004550:	893a      	ldrh	r2, [r7, #8]
 8004552:	8979      	ldrh	r1, [r7, #10]
 8004554:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004556:	9301      	str	r3, [sp, #4]
 8004558:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800455a:	9300      	str	r3, [sp, #0]
 800455c:	4603      	mov	r3, r0
 800455e:	68f8      	ldr	r0, [r7, #12]
 8004560:	f000 fa5e 	bl	8004a20 <I2C_RequestMemoryRead>
 8004564:	4603      	mov	r3, r0
 8004566:	2b00      	cmp	r3, #0
 8004568:	d001      	beq.n	800456e <HAL_I2C_Mem_Read+0xde>
 800456a:	2301      	movs	r3, #1
 800456c:	e1bc      	b.n	80048e8 <HAL_I2C_Mem_Read+0x458>
 800456e:	68fb      	ldr	r3, [r7, #12]
 8004570:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004572:	2b00      	cmp	r3, #0
 8004574:	d113      	bne.n	800459e <HAL_I2C_Mem_Read+0x10e>
 8004576:	2300      	movs	r3, #0
 8004578:	623b      	str	r3, [r7, #32]
 800457a:	68fb      	ldr	r3, [r7, #12]
 800457c:	681b      	ldr	r3, [r3, #0]
 800457e:	695b      	ldr	r3, [r3, #20]
 8004580:	623b      	str	r3, [r7, #32]
 8004582:	68fb      	ldr	r3, [r7, #12]
 8004584:	681b      	ldr	r3, [r3, #0]
 8004586:	699b      	ldr	r3, [r3, #24]
 8004588:	623b      	str	r3, [r7, #32]
 800458a:	6a3b      	ldr	r3, [r7, #32]
 800458c:	68fb      	ldr	r3, [r7, #12]
 800458e:	681b      	ldr	r3, [r3, #0]
 8004590:	681a      	ldr	r2, [r3, #0]
 8004592:	68fb      	ldr	r3, [r7, #12]
 8004594:	681b      	ldr	r3, [r3, #0]
 8004596:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800459a:	601a      	str	r2, [r3, #0]
 800459c:	e190      	b.n	80048c0 <HAL_I2C_Mem_Read+0x430>
 800459e:	68fb      	ldr	r3, [r7, #12]
 80045a0:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80045a2:	2b01      	cmp	r3, #1
 80045a4:	d11b      	bne.n	80045de <HAL_I2C_Mem_Read+0x14e>
 80045a6:	68fb      	ldr	r3, [r7, #12]
 80045a8:	681b      	ldr	r3, [r3, #0]
 80045aa:	681a      	ldr	r2, [r3, #0]
 80045ac:	68fb      	ldr	r3, [r7, #12]
 80045ae:	681b      	ldr	r3, [r3, #0]
 80045b0:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80045b4:	601a      	str	r2, [r3, #0]
 80045b6:	2300      	movs	r3, #0
 80045b8:	61fb      	str	r3, [r7, #28]
 80045ba:	68fb      	ldr	r3, [r7, #12]
 80045bc:	681b      	ldr	r3, [r3, #0]
 80045be:	695b      	ldr	r3, [r3, #20]
 80045c0:	61fb      	str	r3, [r7, #28]
 80045c2:	68fb      	ldr	r3, [r7, #12]
 80045c4:	681b      	ldr	r3, [r3, #0]
 80045c6:	699b      	ldr	r3, [r3, #24]
 80045c8:	61fb      	str	r3, [r7, #28]
 80045ca:	69fb      	ldr	r3, [r7, #28]
 80045cc:	68fb      	ldr	r3, [r7, #12]
 80045ce:	681b      	ldr	r3, [r3, #0]
 80045d0:	681a      	ldr	r2, [r3, #0]
 80045d2:	68fb      	ldr	r3, [r7, #12]
 80045d4:	681b      	ldr	r3, [r3, #0]
 80045d6:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80045da:	601a      	str	r2, [r3, #0]
 80045dc:	e170      	b.n	80048c0 <HAL_I2C_Mem_Read+0x430>
 80045de:	68fb      	ldr	r3, [r7, #12]
 80045e0:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80045e2:	2b02      	cmp	r3, #2
 80045e4:	d11b      	bne.n	800461e <HAL_I2C_Mem_Read+0x18e>
 80045e6:	68fb      	ldr	r3, [r7, #12]
 80045e8:	681b      	ldr	r3, [r3, #0]
 80045ea:	681a      	ldr	r2, [r3, #0]
 80045ec:	68fb      	ldr	r3, [r7, #12]
 80045ee:	681b      	ldr	r3, [r3, #0]
 80045f0:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80045f4:	601a      	str	r2, [r3, #0]
 80045f6:	68fb      	ldr	r3, [r7, #12]
 80045f8:	681b      	ldr	r3, [r3, #0]
 80045fa:	681a      	ldr	r2, [r3, #0]
 80045fc:	68fb      	ldr	r3, [r7, #12]
 80045fe:	681b      	ldr	r3, [r3, #0]
 8004600:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8004604:	601a      	str	r2, [r3, #0]
 8004606:	2300      	movs	r3, #0
 8004608:	61bb      	str	r3, [r7, #24]
 800460a:	68fb      	ldr	r3, [r7, #12]
 800460c:	681b      	ldr	r3, [r3, #0]
 800460e:	695b      	ldr	r3, [r3, #20]
 8004610:	61bb      	str	r3, [r7, #24]
 8004612:	68fb      	ldr	r3, [r7, #12]
 8004614:	681b      	ldr	r3, [r3, #0]
 8004616:	699b      	ldr	r3, [r3, #24]
 8004618:	61bb      	str	r3, [r7, #24]
 800461a:	69bb      	ldr	r3, [r7, #24]
 800461c:	e150      	b.n	80048c0 <HAL_I2C_Mem_Read+0x430>
 800461e:	2300      	movs	r3, #0
 8004620:	617b      	str	r3, [r7, #20]
 8004622:	68fb      	ldr	r3, [r7, #12]
 8004624:	681b      	ldr	r3, [r3, #0]
 8004626:	695b      	ldr	r3, [r3, #20]
 8004628:	617b      	str	r3, [r7, #20]
 800462a:	68fb      	ldr	r3, [r7, #12]
 800462c:	681b      	ldr	r3, [r3, #0]
 800462e:	699b      	ldr	r3, [r3, #24]
 8004630:	617b      	str	r3, [r7, #20]
 8004632:	697b      	ldr	r3, [r7, #20]
 8004634:	e144      	b.n	80048c0 <HAL_I2C_Mem_Read+0x430>
 8004636:	68fb      	ldr	r3, [r7, #12]
 8004638:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800463a:	2b03      	cmp	r3, #3
 800463c:	f200 80f1 	bhi.w	8004822 <HAL_I2C_Mem_Read+0x392>
 8004640:	68fb      	ldr	r3, [r7, #12]
 8004642:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004644:	2b01      	cmp	r3, #1
 8004646:	d123      	bne.n	8004690 <HAL_I2C_Mem_Read+0x200>
 8004648:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800464a:	6bb9      	ldr	r1, [r7, #56]	@ 0x38
 800464c:	68f8      	ldr	r0, [r7, #12]
 800464e:	f000 fc79 	bl	8004f44 <I2C_WaitOnRXNEFlagUntilTimeout>
 8004652:	4603      	mov	r3, r0
 8004654:	2b00      	cmp	r3, #0
 8004656:	d001      	beq.n	800465c <HAL_I2C_Mem_Read+0x1cc>
 8004658:	2301      	movs	r3, #1
 800465a:	e145      	b.n	80048e8 <HAL_I2C_Mem_Read+0x458>
 800465c:	68fb      	ldr	r3, [r7, #12]
 800465e:	681b      	ldr	r3, [r3, #0]
 8004660:	691a      	ldr	r2, [r3, #16]
 8004662:	68fb      	ldr	r3, [r7, #12]
 8004664:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004666:	b2d2      	uxtb	r2, r2
 8004668:	701a      	strb	r2, [r3, #0]
 800466a:	68fb      	ldr	r3, [r7, #12]
 800466c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800466e:	1c5a      	adds	r2, r3, #1
 8004670:	68fb      	ldr	r3, [r7, #12]
 8004672:	625a      	str	r2, [r3, #36]	@ 0x24
 8004674:	68fb      	ldr	r3, [r7, #12]
 8004676:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004678:	3b01      	subs	r3, #1
 800467a:	b29a      	uxth	r2, r3
 800467c:	68fb      	ldr	r3, [r7, #12]
 800467e:	851a      	strh	r2, [r3, #40]	@ 0x28
 8004680:	68fb      	ldr	r3, [r7, #12]
 8004682:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004684:	b29b      	uxth	r3, r3
 8004686:	3b01      	subs	r3, #1
 8004688:	b29a      	uxth	r2, r3
 800468a:	68fb      	ldr	r3, [r7, #12]
 800468c:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800468e:	e117      	b.n	80048c0 <HAL_I2C_Mem_Read+0x430>
 8004690:	68fb      	ldr	r3, [r7, #12]
 8004692:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004694:	2b02      	cmp	r3, #2
 8004696:	d14e      	bne.n	8004736 <HAL_I2C_Mem_Read+0x2a6>
 8004698:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800469a:	9300      	str	r3, [sp, #0]
 800469c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800469e:	2200      	movs	r2, #0
 80046a0:	4906      	ldr	r1, [pc, #24]	@ (80046bc <HAL_I2C_Mem_Read+0x22c>)
 80046a2:	68f8      	ldr	r0, [r7, #12]
 80046a4:	f000 faa4 	bl	8004bf0 <I2C_WaitOnFlagUntilTimeout>
 80046a8:	4603      	mov	r3, r0
 80046aa:	2b00      	cmp	r3, #0
 80046ac:	d008      	beq.n	80046c0 <HAL_I2C_Mem_Read+0x230>
 80046ae:	2301      	movs	r3, #1
 80046b0:	e11a      	b.n	80048e8 <HAL_I2C_Mem_Read+0x458>
 80046b2:	bf00      	nop
 80046b4:	00100002 	.word	0x00100002
 80046b8:	ffff0000 	.word	0xffff0000
 80046bc:	00010004 	.word	0x00010004
 80046c0:	68fb      	ldr	r3, [r7, #12]
 80046c2:	681b      	ldr	r3, [r3, #0]
 80046c4:	681a      	ldr	r2, [r3, #0]
 80046c6:	68fb      	ldr	r3, [r7, #12]
 80046c8:	681b      	ldr	r3, [r3, #0]
 80046ca:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80046ce:	601a      	str	r2, [r3, #0]
 80046d0:	68fb      	ldr	r3, [r7, #12]
 80046d2:	681b      	ldr	r3, [r3, #0]
 80046d4:	691a      	ldr	r2, [r3, #16]
 80046d6:	68fb      	ldr	r3, [r7, #12]
 80046d8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80046da:	b2d2      	uxtb	r2, r2
 80046dc:	701a      	strb	r2, [r3, #0]
 80046de:	68fb      	ldr	r3, [r7, #12]
 80046e0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80046e2:	1c5a      	adds	r2, r3, #1
 80046e4:	68fb      	ldr	r3, [r7, #12]
 80046e6:	625a      	str	r2, [r3, #36]	@ 0x24
 80046e8:	68fb      	ldr	r3, [r7, #12]
 80046ea:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80046ec:	3b01      	subs	r3, #1
 80046ee:	b29a      	uxth	r2, r3
 80046f0:	68fb      	ldr	r3, [r7, #12]
 80046f2:	851a      	strh	r2, [r3, #40]	@ 0x28
 80046f4:	68fb      	ldr	r3, [r7, #12]
 80046f6:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80046f8:	b29b      	uxth	r3, r3
 80046fa:	3b01      	subs	r3, #1
 80046fc:	b29a      	uxth	r2, r3
 80046fe:	68fb      	ldr	r3, [r7, #12]
 8004700:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8004702:	68fb      	ldr	r3, [r7, #12]
 8004704:	681b      	ldr	r3, [r3, #0]
 8004706:	691a      	ldr	r2, [r3, #16]
 8004708:	68fb      	ldr	r3, [r7, #12]
 800470a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800470c:	b2d2      	uxtb	r2, r2
 800470e:	701a      	strb	r2, [r3, #0]
 8004710:	68fb      	ldr	r3, [r7, #12]
 8004712:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004714:	1c5a      	adds	r2, r3, #1
 8004716:	68fb      	ldr	r3, [r7, #12]
 8004718:	625a      	str	r2, [r3, #36]	@ 0x24
 800471a:	68fb      	ldr	r3, [r7, #12]
 800471c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800471e:	3b01      	subs	r3, #1
 8004720:	b29a      	uxth	r2, r3
 8004722:	68fb      	ldr	r3, [r7, #12]
 8004724:	851a      	strh	r2, [r3, #40]	@ 0x28
 8004726:	68fb      	ldr	r3, [r7, #12]
 8004728:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800472a:	b29b      	uxth	r3, r3
 800472c:	3b01      	subs	r3, #1
 800472e:	b29a      	uxth	r2, r3
 8004730:	68fb      	ldr	r3, [r7, #12]
 8004732:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8004734:	e0c4      	b.n	80048c0 <HAL_I2C_Mem_Read+0x430>
 8004736:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004738:	9300      	str	r3, [sp, #0]
 800473a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800473c:	2200      	movs	r2, #0
 800473e:	496c      	ldr	r1, [pc, #432]	@ (80048f0 <HAL_I2C_Mem_Read+0x460>)
 8004740:	68f8      	ldr	r0, [r7, #12]
 8004742:	f000 fa55 	bl	8004bf0 <I2C_WaitOnFlagUntilTimeout>
 8004746:	4603      	mov	r3, r0
 8004748:	2b00      	cmp	r3, #0
 800474a:	d001      	beq.n	8004750 <HAL_I2C_Mem_Read+0x2c0>
 800474c:	2301      	movs	r3, #1
 800474e:	e0cb      	b.n	80048e8 <HAL_I2C_Mem_Read+0x458>
 8004750:	68fb      	ldr	r3, [r7, #12]
 8004752:	681b      	ldr	r3, [r3, #0]
 8004754:	681a      	ldr	r2, [r3, #0]
 8004756:	68fb      	ldr	r3, [r7, #12]
 8004758:	681b      	ldr	r3, [r3, #0]
 800475a:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800475e:	601a      	str	r2, [r3, #0]
 8004760:	68fb      	ldr	r3, [r7, #12]
 8004762:	681b      	ldr	r3, [r3, #0]
 8004764:	691a      	ldr	r2, [r3, #16]
 8004766:	68fb      	ldr	r3, [r7, #12]
 8004768:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800476a:	b2d2      	uxtb	r2, r2
 800476c:	701a      	strb	r2, [r3, #0]
 800476e:	68fb      	ldr	r3, [r7, #12]
 8004770:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004772:	1c5a      	adds	r2, r3, #1
 8004774:	68fb      	ldr	r3, [r7, #12]
 8004776:	625a      	str	r2, [r3, #36]	@ 0x24
 8004778:	68fb      	ldr	r3, [r7, #12]
 800477a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800477c:	3b01      	subs	r3, #1
 800477e:	b29a      	uxth	r2, r3
 8004780:	68fb      	ldr	r3, [r7, #12]
 8004782:	851a      	strh	r2, [r3, #40]	@ 0x28
 8004784:	68fb      	ldr	r3, [r7, #12]
 8004786:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004788:	b29b      	uxth	r3, r3
 800478a:	3b01      	subs	r3, #1
 800478c:	b29a      	uxth	r2, r3
 800478e:	68fb      	ldr	r3, [r7, #12]
 8004790:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8004792:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004794:	9300      	str	r3, [sp, #0]
 8004796:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004798:	2200      	movs	r2, #0
 800479a:	4955      	ldr	r1, [pc, #340]	@ (80048f0 <HAL_I2C_Mem_Read+0x460>)
 800479c:	68f8      	ldr	r0, [r7, #12]
 800479e:	f000 fa27 	bl	8004bf0 <I2C_WaitOnFlagUntilTimeout>
 80047a2:	4603      	mov	r3, r0
 80047a4:	2b00      	cmp	r3, #0
 80047a6:	d001      	beq.n	80047ac <HAL_I2C_Mem_Read+0x31c>
 80047a8:	2301      	movs	r3, #1
 80047aa:	e09d      	b.n	80048e8 <HAL_I2C_Mem_Read+0x458>
 80047ac:	68fb      	ldr	r3, [r7, #12]
 80047ae:	681b      	ldr	r3, [r3, #0]
 80047b0:	681a      	ldr	r2, [r3, #0]
 80047b2:	68fb      	ldr	r3, [r7, #12]
 80047b4:	681b      	ldr	r3, [r3, #0]
 80047b6:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80047ba:	601a      	str	r2, [r3, #0]
 80047bc:	68fb      	ldr	r3, [r7, #12]
 80047be:	681b      	ldr	r3, [r3, #0]
 80047c0:	691a      	ldr	r2, [r3, #16]
 80047c2:	68fb      	ldr	r3, [r7, #12]
 80047c4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80047c6:	b2d2      	uxtb	r2, r2
 80047c8:	701a      	strb	r2, [r3, #0]
 80047ca:	68fb      	ldr	r3, [r7, #12]
 80047cc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80047ce:	1c5a      	adds	r2, r3, #1
 80047d0:	68fb      	ldr	r3, [r7, #12]
 80047d2:	625a      	str	r2, [r3, #36]	@ 0x24
 80047d4:	68fb      	ldr	r3, [r7, #12]
 80047d6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80047d8:	3b01      	subs	r3, #1
 80047da:	b29a      	uxth	r2, r3
 80047dc:	68fb      	ldr	r3, [r7, #12]
 80047de:	851a      	strh	r2, [r3, #40]	@ 0x28
 80047e0:	68fb      	ldr	r3, [r7, #12]
 80047e2:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80047e4:	b29b      	uxth	r3, r3
 80047e6:	3b01      	subs	r3, #1
 80047e8:	b29a      	uxth	r2, r3
 80047ea:	68fb      	ldr	r3, [r7, #12]
 80047ec:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80047ee:	68fb      	ldr	r3, [r7, #12]
 80047f0:	681b      	ldr	r3, [r3, #0]
 80047f2:	691a      	ldr	r2, [r3, #16]
 80047f4:	68fb      	ldr	r3, [r7, #12]
 80047f6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80047f8:	b2d2      	uxtb	r2, r2
 80047fa:	701a      	strb	r2, [r3, #0]
 80047fc:	68fb      	ldr	r3, [r7, #12]
 80047fe:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004800:	1c5a      	adds	r2, r3, #1
 8004802:	68fb      	ldr	r3, [r7, #12]
 8004804:	625a      	str	r2, [r3, #36]	@ 0x24
 8004806:	68fb      	ldr	r3, [r7, #12]
 8004808:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800480a:	3b01      	subs	r3, #1
 800480c:	b29a      	uxth	r2, r3
 800480e:	68fb      	ldr	r3, [r7, #12]
 8004810:	851a      	strh	r2, [r3, #40]	@ 0x28
 8004812:	68fb      	ldr	r3, [r7, #12]
 8004814:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004816:	b29b      	uxth	r3, r3
 8004818:	3b01      	subs	r3, #1
 800481a:	b29a      	uxth	r2, r3
 800481c:	68fb      	ldr	r3, [r7, #12]
 800481e:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8004820:	e04e      	b.n	80048c0 <HAL_I2C_Mem_Read+0x430>
 8004822:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8004824:	6bb9      	ldr	r1, [r7, #56]	@ 0x38
 8004826:	68f8      	ldr	r0, [r7, #12]
 8004828:	f000 fb8c 	bl	8004f44 <I2C_WaitOnRXNEFlagUntilTimeout>
 800482c:	4603      	mov	r3, r0
 800482e:	2b00      	cmp	r3, #0
 8004830:	d001      	beq.n	8004836 <HAL_I2C_Mem_Read+0x3a6>
 8004832:	2301      	movs	r3, #1
 8004834:	e058      	b.n	80048e8 <HAL_I2C_Mem_Read+0x458>
 8004836:	68fb      	ldr	r3, [r7, #12]
 8004838:	681b      	ldr	r3, [r3, #0]
 800483a:	691a      	ldr	r2, [r3, #16]
 800483c:	68fb      	ldr	r3, [r7, #12]
 800483e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004840:	b2d2      	uxtb	r2, r2
 8004842:	701a      	strb	r2, [r3, #0]
 8004844:	68fb      	ldr	r3, [r7, #12]
 8004846:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004848:	1c5a      	adds	r2, r3, #1
 800484a:	68fb      	ldr	r3, [r7, #12]
 800484c:	625a      	str	r2, [r3, #36]	@ 0x24
 800484e:	68fb      	ldr	r3, [r7, #12]
 8004850:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004852:	3b01      	subs	r3, #1
 8004854:	b29a      	uxth	r2, r3
 8004856:	68fb      	ldr	r3, [r7, #12]
 8004858:	851a      	strh	r2, [r3, #40]	@ 0x28
 800485a:	68fb      	ldr	r3, [r7, #12]
 800485c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800485e:	b29b      	uxth	r3, r3
 8004860:	3b01      	subs	r3, #1
 8004862:	b29a      	uxth	r2, r3
 8004864:	68fb      	ldr	r3, [r7, #12]
 8004866:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8004868:	68fb      	ldr	r3, [r7, #12]
 800486a:	681b      	ldr	r3, [r3, #0]
 800486c:	695b      	ldr	r3, [r3, #20]
 800486e:	f003 0304 	and.w	r3, r3, #4
 8004872:	2b04      	cmp	r3, #4
 8004874:	d124      	bne.n	80048c0 <HAL_I2C_Mem_Read+0x430>
 8004876:	68fb      	ldr	r3, [r7, #12]
 8004878:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800487a:	2b03      	cmp	r3, #3
 800487c:	d107      	bne.n	800488e <HAL_I2C_Mem_Read+0x3fe>
 800487e:	68fb      	ldr	r3, [r7, #12]
 8004880:	681b      	ldr	r3, [r3, #0]
 8004882:	681a      	ldr	r2, [r3, #0]
 8004884:	68fb      	ldr	r3, [r7, #12]
 8004886:	681b      	ldr	r3, [r3, #0]
 8004888:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800488c:	601a      	str	r2, [r3, #0]
 800488e:	68fb      	ldr	r3, [r7, #12]
 8004890:	681b      	ldr	r3, [r3, #0]
 8004892:	691a      	ldr	r2, [r3, #16]
 8004894:	68fb      	ldr	r3, [r7, #12]
 8004896:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004898:	b2d2      	uxtb	r2, r2
 800489a:	701a      	strb	r2, [r3, #0]
 800489c:	68fb      	ldr	r3, [r7, #12]
 800489e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80048a0:	1c5a      	adds	r2, r3, #1
 80048a2:	68fb      	ldr	r3, [r7, #12]
 80048a4:	625a      	str	r2, [r3, #36]	@ 0x24
 80048a6:	68fb      	ldr	r3, [r7, #12]
 80048a8:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80048aa:	3b01      	subs	r3, #1
 80048ac:	b29a      	uxth	r2, r3
 80048ae:	68fb      	ldr	r3, [r7, #12]
 80048b0:	851a      	strh	r2, [r3, #40]	@ 0x28
 80048b2:	68fb      	ldr	r3, [r7, #12]
 80048b4:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80048b6:	b29b      	uxth	r3, r3
 80048b8:	3b01      	subs	r3, #1
 80048ba:	b29a      	uxth	r2, r3
 80048bc:	68fb      	ldr	r3, [r7, #12]
 80048be:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80048c0:	68fb      	ldr	r3, [r7, #12]
 80048c2:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80048c4:	2b00      	cmp	r3, #0
 80048c6:	f47f aeb6 	bne.w	8004636 <HAL_I2C_Mem_Read+0x1a6>
 80048ca:	68fb      	ldr	r3, [r7, #12]
 80048cc:	2220      	movs	r2, #32
 80048ce:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80048d2:	68fb      	ldr	r3, [r7, #12]
 80048d4:	2200      	movs	r2, #0
 80048d6:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80048da:	68fb      	ldr	r3, [r7, #12]
 80048dc:	2200      	movs	r2, #0
 80048de:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80048e2:	2300      	movs	r3, #0
 80048e4:	e000      	b.n	80048e8 <HAL_I2C_Mem_Read+0x458>
 80048e6:	2302      	movs	r3, #2
 80048e8:	4618      	mov	r0, r3
 80048ea:	3728      	adds	r7, #40	@ 0x28
 80048ec:	46bd      	mov	sp, r7
 80048ee:	bd80      	pop	{r7, pc}
 80048f0:	00010004 	.word	0x00010004

080048f4 <I2C_RequestMemoryWrite>:
 80048f4:	b580      	push	{r7, lr}
 80048f6:	b088      	sub	sp, #32
 80048f8:	af02      	add	r7, sp, #8
 80048fa:	60f8      	str	r0, [r7, #12]
 80048fc:	4608      	mov	r0, r1
 80048fe:	4611      	mov	r1, r2
 8004900:	461a      	mov	r2, r3
 8004902:	4603      	mov	r3, r0
 8004904:	817b      	strh	r3, [r7, #10]
 8004906:	460b      	mov	r3, r1
 8004908:	813b      	strh	r3, [r7, #8]
 800490a:	4613      	mov	r3, r2
 800490c:	80fb      	strh	r3, [r7, #6]
 800490e:	68fb      	ldr	r3, [r7, #12]
 8004910:	681b      	ldr	r3, [r3, #0]
 8004912:	681a      	ldr	r2, [r3, #0]
 8004914:	68fb      	ldr	r3, [r7, #12]
 8004916:	681b      	ldr	r3, [r3, #0]
 8004918:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800491c:	601a      	str	r2, [r3, #0]
 800491e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004920:	9300      	str	r3, [sp, #0]
 8004922:	6a3b      	ldr	r3, [r7, #32]
 8004924:	2200      	movs	r2, #0
 8004926:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 800492a:	68f8      	ldr	r0, [r7, #12]
 800492c:	f000 f960 	bl	8004bf0 <I2C_WaitOnFlagUntilTimeout>
 8004930:	4603      	mov	r3, r0
 8004932:	2b00      	cmp	r3, #0
 8004934:	d00d      	beq.n	8004952 <I2C_RequestMemoryWrite+0x5e>
 8004936:	68fb      	ldr	r3, [r7, #12]
 8004938:	681b      	ldr	r3, [r3, #0]
 800493a:	681b      	ldr	r3, [r3, #0]
 800493c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004940:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8004944:	d103      	bne.n	800494e <I2C_RequestMemoryWrite+0x5a>
 8004946:	68fb      	ldr	r3, [r7, #12]
 8004948:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800494c:	641a      	str	r2, [r3, #64]	@ 0x40
 800494e:	2303      	movs	r3, #3
 8004950:	e05f      	b.n	8004a12 <I2C_RequestMemoryWrite+0x11e>
 8004952:	897b      	ldrh	r3, [r7, #10]
 8004954:	b2db      	uxtb	r3, r3
 8004956:	461a      	mov	r2, r3
 8004958:	68fb      	ldr	r3, [r7, #12]
 800495a:	681b      	ldr	r3, [r3, #0]
 800495c:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 8004960:	611a      	str	r2, [r3, #16]
 8004962:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004964:	6a3a      	ldr	r2, [r7, #32]
 8004966:	492d      	ldr	r1, [pc, #180]	@ (8004a1c <I2C_RequestMemoryWrite+0x128>)
 8004968:	68f8      	ldr	r0, [r7, #12]
 800496a:	f000 f9bb 	bl	8004ce4 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800496e:	4603      	mov	r3, r0
 8004970:	2b00      	cmp	r3, #0
 8004972:	d001      	beq.n	8004978 <I2C_RequestMemoryWrite+0x84>
 8004974:	2301      	movs	r3, #1
 8004976:	e04c      	b.n	8004a12 <I2C_RequestMemoryWrite+0x11e>
 8004978:	2300      	movs	r3, #0
 800497a:	617b      	str	r3, [r7, #20]
 800497c:	68fb      	ldr	r3, [r7, #12]
 800497e:	681b      	ldr	r3, [r3, #0]
 8004980:	695b      	ldr	r3, [r3, #20]
 8004982:	617b      	str	r3, [r7, #20]
 8004984:	68fb      	ldr	r3, [r7, #12]
 8004986:	681b      	ldr	r3, [r3, #0]
 8004988:	699b      	ldr	r3, [r3, #24]
 800498a:	617b      	str	r3, [r7, #20]
 800498c:	697b      	ldr	r3, [r7, #20]
 800498e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8004990:	6a39      	ldr	r1, [r7, #32]
 8004992:	68f8      	ldr	r0, [r7, #12]
 8004994:	f000 fa46 	bl	8004e24 <I2C_WaitOnTXEFlagUntilTimeout>
 8004998:	4603      	mov	r3, r0
 800499a:	2b00      	cmp	r3, #0
 800499c:	d00d      	beq.n	80049ba <I2C_RequestMemoryWrite+0xc6>
 800499e:	68fb      	ldr	r3, [r7, #12]
 80049a0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80049a2:	2b04      	cmp	r3, #4
 80049a4:	d107      	bne.n	80049b6 <I2C_RequestMemoryWrite+0xc2>
 80049a6:	68fb      	ldr	r3, [r7, #12]
 80049a8:	681b      	ldr	r3, [r3, #0]
 80049aa:	681a      	ldr	r2, [r3, #0]
 80049ac:	68fb      	ldr	r3, [r7, #12]
 80049ae:	681b      	ldr	r3, [r3, #0]
 80049b0:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80049b4:	601a      	str	r2, [r3, #0]
 80049b6:	2301      	movs	r3, #1
 80049b8:	e02b      	b.n	8004a12 <I2C_RequestMemoryWrite+0x11e>
 80049ba:	88fb      	ldrh	r3, [r7, #6]
 80049bc:	2b01      	cmp	r3, #1
 80049be:	d105      	bne.n	80049cc <I2C_RequestMemoryWrite+0xd8>
 80049c0:	893b      	ldrh	r3, [r7, #8]
 80049c2:	b2da      	uxtb	r2, r3
 80049c4:	68fb      	ldr	r3, [r7, #12]
 80049c6:	681b      	ldr	r3, [r3, #0]
 80049c8:	611a      	str	r2, [r3, #16]
 80049ca:	e021      	b.n	8004a10 <I2C_RequestMemoryWrite+0x11c>
 80049cc:	893b      	ldrh	r3, [r7, #8]
 80049ce:	0a1b      	lsrs	r3, r3, #8
 80049d0:	b29b      	uxth	r3, r3
 80049d2:	b2da      	uxtb	r2, r3
 80049d4:	68fb      	ldr	r3, [r7, #12]
 80049d6:	681b      	ldr	r3, [r3, #0]
 80049d8:	611a      	str	r2, [r3, #16]
 80049da:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80049dc:	6a39      	ldr	r1, [r7, #32]
 80049de:	68f8      	ldr	r0, [r7, #12]
 80049e0:	f000 fa20 	bl	8004e24 <I2C_WaitOnTXEFlagUntilTimeout>
 80049e4:	4603      	mov	r3, r0
 80049e6:	2b00      	cmp	r3, #0
 80049e8:	d00d      	beq.n	8004a06 <I2C_RequestMemoryWrite+0x112>
 80049ea:	68fb      	ldr	r3, [r7, #12]
 80049ec:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80049ee:	2b04      	cmp	r3, #4
 80049f0:	d107      	bne.n	8004a02 <I2C_RequestMemoryWrite+0x10e>
 80049f2:	68fb      	ldr	r3, [r7, #12]
 80049f4:	681b      	ldr	r3, [r3, #0]
 80049f6:	681a      	ldr	r2, [r3, #0]
 80049f8:	68fb      	ldr	r3, [r7, #12]
 80049fa:	681b      	ldr	r3, [r3, #0]
 80049fc:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004a00:	601a      	str	r2, [r3, #0]
 8004a02:	2301      	movs	r3, #1
 8004a04:	e005      	b.n	8004a12 <I2C_RequestMemoryWrite+0x11e>
 8004a06:	893b      	ldrh	r3, [r7, #8]
 8004a08:	b2da      	uxtb	r2, r3
 8004a0a:	68fb      	ldr	r3, [r7, #12]
 8004a0c:	681b      	ldr	r3, [r3, #0]
 8004a0e:	611a      	str	r2, [r3, #16]
 8004a10:	2300      	movs	r3, #0
 8004a12:	4618      	mov	r0, r3
 8004a14:	3718      	adds	r7, #24
 8004a16:	46bd      	mov	sp, r7
 8004a18:	bd80      	pop	{r7, pc}
 8004a1a:	bf00      	nop
 8004a1c:	00010002 	.word	0x00010002

08004a20 <I2C_RequestMemoryRead>:
 8004a20:	b580      	push	{r7, lr}
 8004a22:	b088      	sub	sp, #32
 8004a24:	af02      	add	r7, sp, #8
 8004a26:	60f8      	str	r0, [r7, #12]
 8004a28:	4608      	mov	r0, r1
 8004a2a:	4611      	mov	r1, r2
 8004a2c:	461a      	mov	r2, r3
 8004a2e:	4603      	mov	r3, r0
 8004a30:	817b      	strh	r3, [r7, #10]
 8004a32:	460b      	mov	r3, r1
 8004a34:	813b      	strh	r3, [r7, #8]
 8004a36:	4613      	mov	r3, r2
 8004a38:	80fb      	strh	r3, [r7, #6]
 8004a3a:	68fb      	ldr	r3, [r7, #12]
 8004a3c:	681b      	ldr	r3, [r3, #0]
 8004a3e:	681a      	ldr	r2, [r3, #0]
 8004a40:	68fb      	ldr	r3, [r7, #12]
 8004a42:	681b      	ldr	r3, [r3, #0]
 8004a44:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8004a48:	601a      	str	r2, [r3, #0]
 8004a4a:	68fb      	ldr	r3, [r7, #12]
 8004a4c:	681b      	ldr	r3, [r3, #0]
 8004a4e:	681a      	ldr	r2, [r3, #0]
 8004a50:	68fb      	ldr	r3, [r7, #12]
 8004a52:	681b      	ldr	r3, [r3, #0]
 8004a54:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004a58:	601a      	str	r2, [r3, #0]
 8004a5a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004a5c:	9300      	str	r3, [sp, #0]
 8004a5e:	6a3b      	ldr	r3, [r7, #32]
 8004a60:	2200      	movs	r2, #0
 8004a62:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8004a66:	68f8      	ldr	r0, [r7, #12]
 8004a68:	f000 f8c2 	bl	8004bf0 <I2C_WaitOnFlagUntilTimeout>
 8004a6c:	4603      	mov	r3, r0
 8004a6e:	2b00      	cmp	r3, #0
 8004a70:	d00d      	beq.n	8004a8e <I2C_RequestMemoryRead+0x6e>
 8004a72:	68fb      	ldr	r3, [r7, #12]
 8004a74:	681b      	ldr	r3, [r3, #0]
 8004a76:	681b      	ldr	r3, [r3, #0]
 8004a78:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004a7c:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8004a80:	d103      	bne.n	8004a8a <I2C_RequestMemoryRead+0x6a>
 8004a82:	68fb      	ldr	r3, [r7, #12]
 8004a84:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004a88:	641a      	str	r2, [r3, #64]	@ 0x40
 8004a8a:	2303      	movs	r3, #3
 8004a8c:	e0aa      	b.n	8004be4 <I2C_RequestMemoryRead+0x1c4>
 8004a8e:	897b      	ldrh	r3, [r7, #10]
 8004a90:	b2db      	uxtb	r3, r3
 8004a92:	461a      	mov	r2, r3
 8004a94:	68fb      	ldr	r3, [r7, #12]
 8004a96:	681b      	ldr	r3, [r3, #0]
 8004a98:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 8004a9c:	611a      	str	r2, [r3, #16]
 8004a9e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004aa0:	6a3a      	ldr	r2, [r7, #32]
 8004aa2:	4952      	ldr	r1, [pc, #328]	@ (8004bec <I2C_RequestMemoryRead+0x1cc>)
 8004aa4:	68f8      	ldr	r0, [r7, #12]
 8004aa6:	f000 f91d 	bl	8004ce4 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004aaa:	4603      	mov	r3, r0
 8004aac:	2b00      	cmp	r3, #0
 8004aae:	d001      	beq.n	8004ab4 <I2C_RequestMemoryRead+0x94>
 8004ab0:	2301      	movs	r3, #1
 8004ab2:	e097      	b.n	8004be4 <I2C_RequestMemoryRead+0x1c4>
 8004ab4:	2300      	movs	r3, #0
 8004ab6:	617b      	str	r3, [r7, #20]
 8004ab8:	68fb      	ldr	r3, [r7, #12]
 8004aba:	681b      	ldr	r3, [r3, #0]
 8004abc:	695b      	ldr	r3, [r3, #20]
 8004abe:	617b      	str	r3, [r7, #20]
 8004ac0:	68fb      	ldr	r3, [r7, #12]
 8004ac2:	681b      	ldr	r3, [r3, #0]
 8004ac4:	699b      	ldr	r3, [r3, #24]
 8004ac6:	617b      	str	r3, [r7, #20]
 8004ac8:	697b      	ldr	r3, [r7, #20]
 8004aca:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8004acc:	6a39      	ldr	r1, [r7, #32]
 8004ace:	68f8      	ldr	r0, [r7, #12]
 8004ad0:	f000 f9a8 	bl	8004e24 <I2C_WaitOnTXEFlagUntilTimeout>
 8004ad4:	4603      	mov	r3, r0
 8004ad6:	2b00      	cmp	r3, #0
 8004ad8:	d00d      	beq.n	8004af6 <I2C_RequestMemoryRead+0xd6>
 8004ada:	68fb      	ldr	r3, [r7, #12]
 8004adc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004ade:	2b04      	cmp	r3, #4
 8004ae0:	d107      	bne.n	8004af2 <I2C_RequestMemoryRead+0xd2>
 8004ae2:	68fb      	ldr	r3, [r7, #12]
 8004ae4:	681b      	ldr	r3, [r3, #0]
 8004ae6:	681a      	ldr	r2, [r3, #0]
 8004ae8:	68fb      	ldr	r3, [r7, #12]
 8004aea:	681b      	ldr	r3, [r3, #0]
 8004aec:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004af0:	601a      	str	r2, [r3, #0]
 8004af2:	2301      	movs	r3, #1
 8004af4:	e076      	b.n	8004be4 <I2C_RequestMemoryRead+0x1c4>
 8004af6:	88fb      	ldrh	r3, [r7, #6]
 8004af8:	2b01      	cmp	r3, #1
 8004afa:	d105      	bne.n	8004b08 <I2C_RequestMemoryRead+0xe8>
 8004afc:	893b      	ldrh	r3, [r7, #8]
 8004afe:	b2da      	uxtb	r2, r3
 8004b00:	68fb      	ldr	r3, [r7, #12]
 8004b02:	681b      	ldr	r3, [r3, #0]
 8004b04:	611a      	str	r2, [r3, #16]
 8004b06:	e021      	b.n	8004b4c <I2C_RequestMemoryRead+0x12c>
 8004b08:	893b      	ldrh	r3, [r7, #8]
 8004b0a:	0a1b      	lsrs	r3, r3, #8
 8004b0c:	b29b      	uxth	r3, r3
 8004b0e:	b2da      	uxtb	r2, r3
 8004b10:	68fb      	ldr	r3, [r7, #12]
 8004b12:	681b      	ldr	r3, [r3, #0]
 8004b14:	611a      	str	r2, [r3, #16]
 8004b16:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8004b18:	6a39      	ldr	r1, [r7, #32]
 8004b1a:	68f8      	ldr	r0, [r7, #12]
 8004b1c:	f000 f982 	bl	8004e24 <I2C_WaitOnTXEFlagUntilTimeout>
 8004b20:	4603      	mov	r3, r0
 8004b22:	2b00      	cmp	r3, #0
 8004b24:	d00d      	beq.n	8004b42 <I2C_RequestMemoryRead+0x122>
 8004b26:	68fb      	ldr	r3, [r7, #12]
 8004b28:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004b2a:	2b04      	cmp	r3, #4
 8004b2c:	d107      	bne.n	8004b3e <I2C_RequestMemoryRead+0x11e>
 8004b2e:	68fb      	ldr	r3, [r7, #12]
 8004b30:	681b      	ldr	r3, [r3, #0]
 8004b32:	681a      	ldr	r2, [r3, #0]
 8004b34:	68fb      	ldr	r3, [r7, #12]
 8004b36:	681b      	ldr	r3, [r3, #0]
 8004b38:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004b3c:	601a      	str	r2, [r3, #0]
 8004b3e:	2301      	movs	r3, #1
 8004b40:	e050      	b.n	8004be4 <I2C_RequestMemoryRead+0x1c4>
 8004b42:	893b      	ldrh	r3, [r7, #8]
 8004b44:	b2da      	uxtb	r2, r3
 8004b46:	68fb      	ldr	r3, [r7, #12]
 8004b48:	681b      	ldr	r3, [r3, #0]
 8004b4a:	611a      	str	r2, [r3, #16]
 8004b4c:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8004b4e:	6a39      	ldr	r1, [r7, #32]
 8004b50:	68f8      	ldr	r0, [r7, #12]
 8004b52:	f000 f967 	bl	8004e24 <I2C_WaitOnTXEFlagUntilTimeout>
 8004b56:	4603      	mov	r3, r0
 8004b58:	2b00      	cmp	r3, #0
 8004b5a:	d00d      	beq.n	8004b78 <I2C_RequestMemoryRead+0x158>
 8004b5c:	68fb      	ldr	r3, [r7, #12]
 8004b5e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004b60:	2b04      	cmp	r3, #4
 8004b62:	d107      	bne.n	8004b74 <I2C_RequestMemoryRead+0x154>
 8004b64:	68fb      	ldr	r3, [r7, #12]
 8004b66:	681b      	ldr	r3, [r3, #0]
 8004b68:	681a      	ldr	r2, [r3, #0]
 8004b6a:	68fb      	ldr	r3, [r7, #12]
 8004b6c:	681b      	ldr	r3, [r3, #0]
 8004b6e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004b72:	601a      	str	r2, [r3, #0]
 8004b74:	2301      	movs	r3, #1
 8004b76:	e035      	b.n	8004be4 <I2C_RequestMemoryRead+0x1c4>
 8004b78:	68fb      	ldr	r3, [r7, #12]
 8004b7a:	681b      	ldr	r3, [r3, #0]
 8004b7c:	681a      	ldr	r2, [r3, #0]
 8004b7e:	68fb      	ldr	r3, [r7, #12]
 8004b80:	681b      	ldr	r3, [r3, #0]
 8004b82:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004b86:	601a      	str	r2, [r3, #0]
 8004b88:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004b8a:	9300      	str	r3, [sp, #0]
 8004b8c:	6a3b      	ldr	r3, [r7, #32]
 8004b8e:	2200      	movs	r2, #0
 8004b90:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8004b94:	68f8      	ldr	r0, [r7, #12]
 8004b96:	f000 f82b 	bl	8004bf0 <I2C_WaitOnFlagUntilTimeout>
 8004b9a:	4603      	mov	r3, r0
 8004b9c:	2b00      	cmp	r3, #0
 8004b9e:	d00d      	beq.n	8004bbc <I2C_RequestMemoryRead+0x19c>
 8004ba0:	68fb      	ldr	r3, [r7, #12]
 8004ba2:	681b      	ldr	r3, [r3, #0]
 8004ba4:	681b      	ldr	r3, [r3, #0]
 8004ba6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004baa:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8004bae:	d103      	bne.n	8004bb8 <I2C_RequestMemoryRead+0x198>
 8004bb0:	68fb      	ldr	r3, [r7, #12]
 8004bb2:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004bb6:	641a      	str	r2, [r3, #64]	@ 0x40
 8004bb8:	2303      	movs	r3, #3
 8004bba:	e013      	b.n	8004be4 <I2C_RequestMemoryRead+0x1c4>
 8004bbc:	897b      	ldrh	r3, [r7, #10]
 8004bbe:	b2db      	uxtb	r3, r3
 8004bc0:	f043 0301 	orr.w	r3, r3, #1
 8004bc4:	b2da      	uxtb	r2, r3
 8004bc6:	68fb      	ldr	r3, [r7, #12]
 8004bc8:	681b      	ldr	r3, [r3, #0]
 8004bca:	611a      	str	r2, [r3, #16]
 8004bcc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004bce:	6a3a      	ldr	r2, [r7, #32]
 8004bd0:	4906      	ldr	r1, [pc, #24]	@ (8004bec <I2C_RequestMemoryRead+0x1cc>)
 8004bd2:	68f8      	ldr	r0, [r7, #12]
 8004bd4:	f000 f886 	bl	8004ce4 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004bd8:	4603      	mov	r3, r0
 8004bda:	2b00      	cmp	r3, #0
 8004bdc:	d001      	beq.n	8004be2 <I2C_RequestMemoryRead+0x1c2>
 8004bde:	2301      	movs	r3, #1
 8004be0:	e000      	b.n	8004be4 <I2C_RequestMemoryRead+0x1c4>
 8004be2:	2300      	movs	r3, #0
 8004be4:	4618      	mov	r0, r3
 8004be6:	3718      	adds	r7, #24
 8004be8:	46bd      	mov	sp, r7
 8004bea:	bd80      	pop	{r7, pc}
 8004bec:	00010002 	.word	0x00010002

08004bf0 <I2C_WaitOnFlagUntilTimeout>:
 8004bf0:	b580      	push	{r7, lr}
 8004bf2:	b084      	sub	sp, #16
 8004bf4:	af00      	add	r7, sp, #0
 8004bf6:	60f8      	str	r0, [r7, #12]
 8004bf8:	60b9      	str	r1, [r7, #8]
 8004bfa:	603b      	str	r3, [r7, #0]
 8004bfc:	4613      	mov	r3, r2
 8004bfe:	71fb      	strb	r3, [r7, #7]
 8004c00:	e048      	b.n	8004c94 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8004c02:	683b      	ldr	r3, [r7, #0]
 8004c04:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004c08:	d044      	beq.n	8004c94 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8004c0a:	f7fe fa59 	bl	80030c0 <HAL_GetTick>
 8004c0e:	4602      	mov	r2, r0
 8004c10:	69bb      	ldr	r3, [r7, #24]
 8004c12:	1ad3      	subs	r3, r2, r3
 8004c14:	683a      	ldr	r2, [r7, #0]
 8004c16:	429a      	cmp	r2, r3
 8004c18:	d302      	bcc.n	8004c20 <I2C_WaitOnFlagUntilTimeout+0x30>
 8004c1a:	683b      	ldr	r3, [r7, #0]
 8004c1c:	2b00      	cmp	r3, #0
 8004c1e:	d139      	bne.n	8004c94 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8004c20:	68bb      	ldr	r3, [r7, #8]
 8004c22:	0c1b      	lsrs	r3, r3, #16
 8004c24:	b2db      	uxtb	r3, r3
 8004c26:	2b01      	cmp	r3, #1
 8004c28:	d10d      	bne.n	8004c46 <I2C_WaitOnFlagUntilTimeout+0x56>
 8004c2a:	68fb      	ldr	r3, [r7, #12]
 8004c2c:	681b      	ldr	r3, [r3, #0]
 8004c2e:	695b      	ldr	r3, [r3, #20]
 8004c30:	43da      	mvns	r2, r3
 8004c32:	68bb      	ldr	r3, [r7, #8]
 8004c34:	4013      	ands	r3, r2
 8004c36:	b29b      	uxth	r3, r3
 8004c38:	2b00      	cmp	r3, #0
 8004c3a:	bf0c      	ite	eq
 8004c3c:	2301      	moveq	r3, #1
 8004c3e:	2300      	movne	r3, #0
 8004c40:	b2db      	uxtb	r3, r3
 8004c42:	461a      	mov	r2, r3
 8004c44:	e00c      	b.n	8004c60 <I2C_WaitOnFlagUntilTimeout+0x70>
 8004c46:	68fb      	ldr	r3, [r7, #12]
 8004c48:	681b      	ldr	r3, [r3, #0]
 8004c4a:	699b      	ldr	r3, [r3, #24]
 8004c4c:	43da      	mvns	r2, r3
 8004c4e:	68bb      	ldr	r3, [r7, #8]
 8004c50:	4013      	ands	r3, r2
 8004c52:	b29b      	uxth	r3, r3
 8004c54:	2b00      	cmp	r3, #0
 8004c56:	bf0c      	ite	eq
 8004c58:	2301      	moveq	r3, #1
 8004c5a:	2300      	movne	r3, #0
 8004c5c:	b2db      	uxtb	r3, r3
 8004c5e:	461a      	mov	r2, r3
 8004c60:	79fb      	ldrb	r3, [r7, #7]
 8004c62:	429a      	cmp	r2, r3
 8004c64:	d116      	bne.n	8004c94 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8004c66:	68fb      	ldr	r3, [r7, #12]
 8004c68:	2200      	movs	r2, #0
 8004c6a:	631a      	str	r2, [r3, #48]	@ 0x30
 8004c6c:	68fb      	ldr	r3, [r7, #12]
 8004c6e:	2220      	movs	r2, #32
 8004c70:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004c74:	68fb      	ldr	r3, [r7, #12]
 8004c76:	2200      	movs	r2, #0
 8004c78:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004c7c:	68fb      	ldr	r3, [r7, #12]
 8004c7e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004c80:	f043 0220 	orr.w	r2, r3, #32
 8004c84:	68fb      	ldr	r3, [r7, #12]
 8004c86:	641a      	str	r2, [r3, #64]	@ 0x40
 8004c88:	68fb      	ldr	r3, [r7, #12]
 8004c8a:	2200      	movs	r2, #0
 8004c8c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004c90:	2301      	movs	r3, #1
 8004c92:	e023      	b.n	8004cdc <I2C_WaitOnFlagUntilTimeout+0xec>
 8004c94:	68bb      	ldr	r3, [r7, #8]
 8004c96:	0c1b      	lsrs	r3, r3, #16
 8004c98:	b2db      	uxtb	r3, r3
 8004c9a:	2b01      	cmp	r3, #1
 8004c9c:	d10d      	bne.n	8004cba <I2C_WaitOnFlagUntilTimeout+0xca>
 8004c9e:	68fb      	ldr	r3, [r7, #12]
 8004ca0:	681b      	ldr	r3, [r3, #0]
 8004ca2:	695b      	ldr	r3, [r3, #20]
 8004ca4:	43da      	mvns	r2, r3
 8004ca6:	68bb      	ldr	r3, [r7, #8]
 8004ca8:	4013      	ands	r3, r2
 8004caa:	b29b      	uxth	r3, r3
 8004cac:	2b00      	cmp	r3, #0
 8004cae:	bf0c      	ite	eq
 8004cb0:	2301      	moveq	r3, #1
 8004cb2:	2300      	movne	r3, #0
 8004cb4:	b2db      	uxtb	r3, r3
 8004cb6:	461a      	mov	r2, r3
 8004cb8:	e00c      	b.n	8004cd4 <I2C_WaitOnFlagUntilTimeout+0xe4>
 8004cba:	68fb      	ldr	r3, [r7, #12]
 8004cbc:	681b      	ldr	r3, [r3, #0]
 8004cbe:	699b      	ldr	r3, [r3, #24]
 8004cc0:	43da      	mvns	r2, r3
 8004cc2:	68bb      	ldr	r3, [r7, #8]
 8004cc4:	4013      	ands	r3, r2
 8004cc6:	b29b      	uxth	r3, r3
 8004cc8:	2b00      	cmp	r3, #0
 8004cca:	bf0c      	ite	eq
 8004ccc:	2301      	moveq	r3, #1
 8004cce:	2300      	movne	r3, #0
 8004cd0:	b2db      	uxtb	r3, r3
 8004cd2:	461a      	mov	r2, r3
 8004cd4:	79fb      	ldrb	r3, [r7, #7]
 8004cd6:	429a      	cmp	r2, r3
 8004cd8:	d093      	beq.n	8004c02 <I2C_WaitOnFlagUntilTimeout+0x12>
 8004cda:	2300      	movs	r3, #0
 8004cdc:	4618      	mov	r0, r3
 8004cde:	3710      	adds	r7, #16
 8004ce0:	46bd      	mov	sp, r7
 8004ce2:	bd80      	pop	{r7, pc}

08004ce4 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 8004ce4:	b580      	push	{r7, lr}
 8004ce6:	b084      	sub	sp, #16
 8004ce8:	af00      	add	r7, sp, #0
 8004cea:	60f8      	str	r0, [r7, #12]
 8004cec:	60b9      	str	r1, [r7, #8]
 8004cee:	607a      	str	r2, [r7, #4]
 8004cf0:	603b      	str	r3, [r7, #0]
 8004cf2:	e071      	b.n	8004dd8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8004cf4:	68fb      	ldr	r3, [r7, #12]
 8004cf6:	681b      	ldr	r3, [r3, #0]
 8004cf8:	695b      	ldr	r3, [r3, #20]
 8004cfa:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8004cfe:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8004d02:	d123      	bne.n	8004d4c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 8004d04:	68fb      	ldr	r3, [r7, #12]
 8004d06:	681b      	ldr	r3, [r3, #0]
 8004d08:	681a      	ldr	r2, [r3, #0]
 8004d0a:	68fb      	ldr	r3, [r7, #12]
 8004d0c:	681b      	ldr	r3, [r3, #0]
 8004d0e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004d12:	601a      	str	r2, [r3, #0]
 8004d14:	68fb      	ldr	r3, [r7, #12]
 8004d16:	681b      	ldr	r3, [r3, #0]
 8004d18:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 8004d1c:	615a      	str	r2, [r3, #20]
 8004d1e:	68fb      	ldr	r3, [r7, #12]
 8004d20:	2200      	movs	r2, #0
 8004d22:	631a      	str	r2, [r3, #48]	@ 0x30
 8004d24:	68fb      	ldr	r3, [r7, #12]
 8004d26:	2220      	movs	r2, #32
 8004d28:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004d2c:	68fb      	ldr	r3, [r7, #12]
 8004d2e:	2200      	movs	r2, #0
 8004d30:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004d34:	68fb      	ldr	r3, [r7, #12]
 8004d36:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004d38:	f043 0204 	orr.w	r2, r3, #4
 8004d3c:	68fb      	ldr	r3, [r7, #12]
 8004d3e:	641a      	str	r2, [r3, #64]	@ 0x40
 8004d40:	68fb      	ldr	r3, [r7, #12]
 8004d42:	2200      	movs	r2, #0
 8004d44:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004d48:	2301      	movs	r3, #1
 8004d4a:	e067      	b.n	8004e1c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 8004d4c:	687b      	ldr	r3, [r7, #4]
 8004d4e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004d52:	d041      	beq.n	8004dd8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8004d54:	f7fe f9b4 	bl	80030c0 <HAL_GetTick>
 8004d58:	4602      	mov	r2, r0
 8004d5a:	683b      	ldr	r3, [r7, #0]
 8004d5c:	1ad3      	subs	r3, r2, r3
 8004d5e:	687a      	ldr	r2, [r7, #4]
 8004d60:	429a      	cmp	r2, r3
 8004d62:	d302      	bcc.n	8004d6a <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 8004d64:	687b      	ldr	r3, [r7, #4]
 8004d66:	2b00      	cmp	r3, #0
 8004d68:	d136      	bne.n	8004dd8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8004d6a:	68bb      	ldr	r3, [r7, #8]
 8004d6c:	0c1b      	lsrs	r3, r3, #16
 8004d6e:	b2db      	uxtb	r3, r3
 8004d70:	2b01      	cmp	r3, #1
 8004d72:	d10c      	bne.n	8004d8e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xaa>
 8004d74:	68fb      	ldr	r3, [r7, #12]
 8004d76:	681b      	ldr	r3, [r3, #0]
 8004d78:	695b      	ldr	r3, [r3, #20]
 8004d7a:	43da      	mvns	r2, r3
 8004d7c:	68bb      	ldr	r3, [r7, #8]
 8004d7e:	4013      	ands	r3, r2
 8004d80:	b29b      	uxth	r3, r3
 8004d82:	2b00      	cmp	r3, #0
 8004d84:	bf14      	ite	ne
 8004d86:	2301      	movne	r3, #1
 8004d88:	2300      	moveq	r3, #0
 8004d8a:	b2db      	uxtb	r3, r3
 8004d8c:	e00b      	b.n	8004da6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc2>
 8004d8e:	68fb      	ldr	r3, [r7, #12]
 8004d90:	681b      	ldr	r3, [r3, #0]
 8004d92:	699b      	ldr	r3, [r3, #24]
 8004d94:	43da      	mvns	r2, r3
 8004d96:	68bb      	ldr	r3, [r7, #8]
 8004d98:	4013      	ands	r3, r2
 8004d9a:	b29b      	uxth	r3, r3
 8004d9c:	2b00      	cmp	r3, #0
 8004d9e:	bf14      	ite	ne
 8004da0:	2301      	movne	r3, #1
 8004da2:	2300      	moveq	r3, #0
 8004da4:	b2db      	uxtb	r3, r3
 8004da6:	2b00      	cmp	r3, #0
 8004da8:	d016      	beq.n	8004dd8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8004daa:	68fb      	ldr	r3, [r7, #12]
 8004dac:	2200      	movs	r2, #0
 8004dae:	631a      	str	r2, [r3, #48]	@ 0x30
 8004db0:	68fb      	ldr	r3, [r7, #12]
 8004db2:	2220      	movs	r2, #32
 8004db4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004db8:	68fb      	ldr	r3, [r7, #12]
 8004dba:	2200      	movs	r2, #0
 8004dbc:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004dc0:	68fb      	ldr	r3, [r7, #12]
 8004dc2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004dc4:	f043 0220 	orr.w	r2, r3, #32
 8004dc8:	68fb      	ldr	r3, [r7, #12]
 8004dca:	641a      	str	r2, [r3, #64]	@ 0x40
 8004dcc:	68fb      	ldr	r3, [r7, #12]
 8004dce:	2200      	movs	r2, #0
 8004dd0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004dd4:	2301      	movs	r3, #1
 8004dd6:	e021      	b.n	8004e1c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 8004dd8:	68bb      	ldr	r3, [r7, #8]
 8004dda:	0c1b      	lsrs	r3, r3, #16
 8004ddc:	b2db      	uxtb	r3, r3
 8004dde:	2b01      	cmp	r3, #1
 8004de0:	d10c      	bne.n	8004dfc <I2C_WaitOnMasterAddressFlagUntilTimeout+0x118>
 8004de2:	68fb      	ldr	r3, [r7, #12]
 8004de4:	681b      	ldr	r3, [r3, #0]
 8004de6:	695b      	ldr	r3, [r3, #20]
 8004de8:	43da      	mvns	r2, r3
 8004dea:	68bb      	ldr	r3, [r7, #8]
 8004dec:	4013      	ands	r3, r2
 8004dee:	b29b      	uxth	r3, r3
 8004df0:	2b00      	cmp	r3, #0
 8004df2:	bf14      	ite	ne
 8004df4:	2301      	movne	r3, #1
 8004df6:	2300      	moveq	r3, #0
 8004df8:	b2db      	uxtb	r3, r3
 8004dfa:	e00b      	b.n	8004e14 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x130>
 8004dfc:	68fb      	ldr	r3, [r7, #12]
 8004dfe:	681b      	ldr	r3, [r3, #0]
 8004e00:	699b      	ldr	r3, [r3, #24]
 8004e02:	43da      	mvns	r2, r3
 8004e04:	68bb      	ldr	r3, [r7, #8]
 8004e06:	4013      	ands	r3, r2
 8004e08:	b29b      	uxth	r3, r3
 8004e0a:	2b00      	cmp	r3, #0
 8004e0c:	bf14      	ite	ne
 8004e0e:	2301      	movne	r3, #1
 8004e10:	2300      	moveq	r3, #0
 8004e12:	b2db      	uxtb	r3, r3
 8004e14:	2b00      	cmp	r3, #0
 8004e16:	f47f af6d 	bne.w	8004cf4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 8004e1a:	2300      	movs	r3, #0
 8004e1c:	4618      	mov	r0, r3
 8004e1e:	3710      	adds	r7, #16
 8004e20:	46bd      	mov	sp, r7
 8004e22:	bd80      	pop	{r7, pc}

08004e24 <I2C_WaitOnTXEFlagUntilTimeout>:
 8004e24:	b580      	push	{r7, lr}
 8004e26:	b084      	sub	sp, #16
 8004e28:	af00      	add	r7, sp, #0
 8004e2a:	60f8      	str	r0, [r7, #12]
 8004e2c:	60b9      	str	r1, [r7, #8]
 8004e2e:	607a      	str	r2, [r7, #4]
 8004e30:	e034      	b.n	8004e9c <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8004e32:	68f8      	ldr	r0, [r7, #12]
 8004e34:	f000 f8e3 	bl	8004ffe <I2C_IsAcknowledgeFailed>
 8004e38:	4603      	mov	r3, r0
 8004e3a:	2b00      	cmp	r3, #0
 8004e3c:	d001      	beq.n	8004e42 <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 8004e3e:	2301      	movs	r3, #1
 8004e40:	e034      	b.n	8004eac <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 8004e42:	68bb      	ldr	r3, [r7, #8]
 8004e44:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004e48:	d028      	beq.n	8004e9c <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8004e4a:	f7fe f939 	bl	80030c0 <HAL_GetTick>
 8004e4e:	4602      	mov	r2, r0
 8004e50:	687b      	ldr	r3, [r7, #4]
 8004e52:	1ad3      	subs	r3, r2, r3
 8004e54:	68ba      	ldr	r2, [r7, #8]
 8004e56:	429a      	cmp	r2, r3
 8004e58:	d302      	bcc.n	8004e60 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 8004e5a:	68bb      	ldr	r3, [r7, #8]
 8004e5c:	2b00      	cmp	r3, #0
 8004e5e:	d11d      	bne.n	8004e9c <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8004e60:	68fb      	ldr	r3, [r7, #12]
 8004e62:	681b      	ldr	r3, [r3, #0]
 8004e64:	695b      	ldr	r3, [r3, #20]
 8004e66:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004e6a:	2b80      	cmp	r3, #128	@ 0x80
 8004e6c:	d016      	beq.n	8004e9c <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8004e6e:	68fb      	ldr	r3, [r7, #12]
 8004e70:	2200      	movs	r2, #0
 8004e72:	631a      	str	r2, [r3, #48]	@ 0x30
 8004e74:	68fb      	ldr	r3, [r7, #12]
 8004e76:	2220      	movs	r2, #32
 8004e78:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004e7c:	68fb      	ldr	r3, [r7, #12]
 8004e7e:	2200      	movs	r2, #0
 8004e80:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004e84:	68fb      	ldr	r3, [r7, #12]
 8004e86:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004e88:	f043 0220 	orr.w	r2, r3, #32
 8004e8c:	68fb      	ldr	r3, [r7, #12]
 8004e8e:	641a      	str	r2, [r3, #64]	@ 0x40
 8004e90:	68fb      	ldr	r3, [r7, #12]
 8004e92:	2200      	movs	r2, #0
 8004e94:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004e98:	2301      	movs	r3, #1
 8004e9a:	e007      	b.n	8004eac <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 8004e9c:	68fb      	ldr	r3, [r7, #12]
 8004e9e:	681b      	ldr	r3, [r3, #0]
 8004ea0:	695b      	ldr	r3, [r3, #20]
 8004ea2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004ea6:	2b80      	cmp	r3, #128	@ 0x80
 8004ea8:	d1c3      	bne.n	8004e32 <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 8004eaa:	2300      	movs	r3, #0
 8004eac:	4618      	mov	r0, r3
 8004eae:	3710      	adds	r7, #16
 8004eb0:	46bd      	mov	sp, r7
 8004eb2:	bd80      	pop	{r7, pc}

08004eb4 <I2C_WaitOnBTFFlagUntilTimeout>:
 8004eb4:	b580      	push	{r7, lr}
 8004eb6:	b084      	sub	sp, #16
 8004eb8:	af00      	add	r7, sp, #0
 8004eba:	60f8      	str	r0, [r7, #12]
 8004ebc:	60b9      	str	r1, [r7, #8]
 8004ebe:	607a      	str	r2, [r7, #4]
 8004ec0:	e034      	b.n	8004f2c <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8004ec2:	68f8      	ldr	r0, [r7, #12]
 8004ec4:	f000 f89b 	bl	8004ffe <I2C_IsAcknowledgeFailed>
 8004ec8:	4603      	mov	r3, r0
 8004eca:	2b00      	cmp	r3, #0
 8004ecc:	d001      	beq.n	8004ed2 <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 8004ece:	2301      	movs	r3, #1
 8004ed0:	e034      	b.n	8004f3c <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 8004ed2:	68bb      	ldr	r3, [r7, #8]
 8004ed4:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004ed8:	d028      	beq.n	8004f2c <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8004eda:	f7fe f8f1 	bl	80030c0 <HAL_GetTick>
 8004ede:	4602      	mov	r2, r0
 8004ee0:	687b      	ldr	r3, [r7, #4]
 8004ee2:	1ad3      	subs	r3, r2, r3
 8004ee4:	68ba      	ldr	r2, [r7, #8]
 8004ee6:	429a      	cmp	r2, r3
 8004ee8:	d302      	bcc.n	8004ef0 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 8004eea:	68bb      	ldr	r3, [r7, #8]
 8004eec:	2b00      	cmp	r3, #0
 8004eee:	d11d      	bne.n	8004f2c <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8004ef0:	68fb      	ldr	r3, [r7, #12]
 8004ef2:	681b      	ldr	r3, [r3, #0]
 8004ef4:	695b      	ldr	r3, [r3, #20]
 8004ef6:	f003 0304 	and.w	r3, r3, #4
 8004efa:	2b04      	cmp	r3, #4
 8004efc:	d016      	beq.n	8004f2c <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8004efe:	68fb      	ldr	r3, [r7, #12]
 8004f00:	2200      	movs	r2, #0
 8004f02:	631a      	str	r2, [r3, #48]	@ 0x30
 8004f04:	68fb      	ldr	r3, [r7, #12]
 8004f06:	2220      	movs	r2, #32
 8004f08:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004f0c:	68fb      	ldr	r3, [r7, #12]
 8004f0e:	2200      	movs	r2, #0
 8004f10:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004f14:	68fb      	ldr	r3, [r7, #12]
 8004f16:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004f18:	f043 0220 	orr.w	r2, r3, #32
 8004f1c:	68fb      	ldr	r3, [r7, #12]
 8004f1e:	641a      	str	r2, [r3, #64]	@ 0x40
 8004f20:	68fb      	ldr	r3, [r7, #12]
 8004f22:	2200      	movs	r2, #0
 8004f24:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004f28:	2301      	movs	r3, #1
 8004f2a:	e007      	b.n	8004f3c <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 8004f2c:	68fb      	ldr	r3, [r7, #12]
 8004f2e:	681b      	ldr	r3, [r3, #0]
 8004f30:	695b      	ldr	r3, [r3, #20]
 8004f32:	f003 0304 	and.w	r3, r3, #4
 8004f36:	2b04      	cmp	r3, #4
 8004f38:	d1c3      	bne.n	8004ec2 <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 8004f3a:	2300      	movs	r3, #0
 8004f3c:	4618      	mov	r0, r3
 8004f3e:	3710      	adds	r7, #16
 8004f40:	46bd      	mov	sp, r7
 8004f42:	bd80      	pop	{r7, pc}

08004f44 <I2C_WaitOnRXNEFlagUntilTimeout>:
 8004f44:	b580      	push	{r7, lr}
 8004f46:	b084      	sub	sp, #16
 8004f48:	af00      	add	r7, sp, #0
 8004f4a:	60f8      	str	r0, [r7, #12]
 8004f4c:	60b9      	str	r1, [r7, #8]
 8004f4e:	607a      	str	r2, [r7, #4]
 8004f50:	e049      	b.n	8004fe6 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 8004f52:	68fb      	ldr	r3, [r7, #12]
 8004f54:	681b      	ldr	r3, [r3, #0]
 8004f56:	695b      	ldr	r3, [r3, #20]
 8004f58:	f003 0310 	and.w	r3, r3, #16
 8004f5c:	2b10      	cmp	r3, #16
 8004f5e:	d119      	bne.n	8004f94 <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
 8004f60:	68fb      	ldr	r3, [r7, #12]
 8004f62:	681b      	ldr	r3, [r3, #0]
 8004f64:	f06f 0210 	mvn.w	r2, #16
 8004f68:	615a      	str	r2, [r3, #20]
 8004f6a:	68fb      	ldr	r3, [r7, #12]
 8004f6c:	2200      	movs	r2, #0
 8004f6e:	631a      	str	r2, [r3, #48]	@ 0x30
 8004f70:	68fb      	ldr	r3, [r7, #12]
 8004f72:	2220      	movs	r2, #32
 8004f74:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004f78:	68fb      	ldr	r3, [r7, #12]
 8004f7a:	2200      	movs	r2, #0
 8004f7c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004f80:	68fb      	ldr	r3, [r7, #12]
 8004f82:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8004f84:	68fb      	ldr	r3, [r7, #12]
 8004f86:	641a      	str	r2, [r3, #64]	@ 0x40
 8004f88:	68fb      	ldr	r3, [r7, #12]
 8004f8a:	2200      	movs	r2, #0
 8004f8c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004f90:	2301      	movs	r3, #1
 8004f92:	e030      	b.n	8004ff6 <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
 8004f94:	f7fe f894 	bl	80030c0 <HAL_GetTick>
 8004f98:	4602      	mov	r2, r0
 8004f9a:	687b      	ldr	r3, [r7, #4]
 8004f9c:	1ad3      	subs	r3, r2, r3
 8004f9e:	68ba      	ldr	r2, [r7, #8]
 8004fa0:	429a      	cmp	r2, r3
 8004fa2:	d302      	bcc.n	8004faa <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 8004fa4:	68bb      	ldr	r3, [r7, #8]
 8004fa6:	2b00      	cmp	r3, #0
 8004fa8:	d11d      	bne.n	8004fe6 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 8004faa:	68fb      	ldr	r3, [r7, #12]
 8004fac:	681b      	ldr	r3, [r3, #0]
 8004fae:	695b      	ldr	r3, [r3, #20]
 8004fb0:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004fb4:	2b40      	cmp	r3, #64	@ 0x40
 8004fb6:	d016      	beq.n	8004fe6 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 8004fb8:	68fb      	ldr	r3, [r7, #12]
 8004fba:	2200      	movs	r2, #0
 8004fbc:	631a      	str	r2, [r3, #48]	@ 0x30
 8004fbe:	68fb      	ldr	r3, [r7, #12]
 8004fc0:	2220      	movs	r2, #32
 8004fc2:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004fc6:	68fb      	ldr	r3, [r7, #12]
 8004fc8:	2200      	movs	r2, #0
 8004fca:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004fce:	68fb      	ldr	r3, [r7, #12]
 8004fd0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004fd2:	f043 0220 	orr.w	r2, r3, #32
 8004fd6:	68fb      	ldr	r3, [r7, #12]
 8004fd8:	641a      	str	r2, [r3, #64]	@ 0x40
 8004fda:	68fb      	ldr	r3, [r7, #12]
 8004fdc:	2200      	movs	r2, #0
 8004fde:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004fe2:	2301      	movs	r3, #1
 8004fe4:	e007      	b.n	8004ff6 <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
 8004fe6:	68fb      	ldr	r3, [r7, #12]
 8004fe8:	681b      	ldr	r3, [r3, #0]
 8004fea:	695b      	ldr	r3, [r3, #20]
 8004fec:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004ff0:	2b40      	cmp	r3, #64	@ 0x40
 8004ff2:	d1ae      	bne.n	8004f52 <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
 8004ff4:	2300      	movs	r3, #0
 8004ff6:	4618      	mov	r0, r3
 8004ff8:	3710      	adds	r7, #16
 8004ffa:	46bd      	mov	sp, r7
 8004ffc:	bd80      	pop	{r7, pc}

08004ffe <I2C_IsAcknowledgeFailed>:
 8004ffe:	b480      	push	{r7}
 8005000:	b083      	sub	sp, #12
 8005002:	af00      	add	r7, sp, #0
 8005004:	6078      	str	r0, [r7, #4]
 8005006:	687b      	ldr	r3, [r7, #4]
 8005008:	681b      	ldr	r3, [r3, #0]
 800500a:	695b      	ldr	r3, [r3, #20]
 800500c:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8005010:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8005014:	d11b      	bne.n	800504e <I2C_IsAcknowledgeFailed+0x50>
 8005016:	687b      	ldr	r3, [r7, #4]
 8005018:	681b      	ldr	r3, [r3, #0]
 800501a:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 800501e:	615a      	str	r2, [r3, #20]
 8005020:	687b      	ldr	r3, [r7, #4]
 8005022:	2200      	movs	r2, #0
 8005024:	631a      	str	r2, [r3, #48]	@ 0x30
 8005026:	687b      	ldr	r3, [r7, #4]
 8005028:	2220      	movs	r2, #32
 800502a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800502e:	687b      	ldr	r3, [r7, #4]
 8005030:	2200      	movs	r2, #0
 8005032:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005036:	687b      	ldr	r3, [r7, #4]
 8005038:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800503a:	f043 0204 	orr.w	r2, r3, #4
 800503e:	687b      	ldr	r3, [r7, #4]
 8005040:	641a      	str	r2, [r3, #64]	@ 0x40
 8005042:	687b      	ldr	r3, [r7, #4]
 8005044:	2200      	movs	r2, #0
 8005046:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800504a:	2301      	movs	r3, #1
 800504c:	e000      	b.n	8005050 <I2C_IsAcknowledgeFailed+0x52>
 800504e:	2300      	movs	r3, #0
 8005050:	4618      	mov	r0, r3
 8005052:	370c      	adds	r7, #12
 8005054:	46bd      	mov	sp, r7
 8005056:	f85d 7b04 	ldr.w	r7, [sp], #4
 800505a:	4770      	bx	lr

0800505c <HAL_RCC_ClockConfig>:
 800505c:	b580      	push	{r7, lr}
 800505e:	b084      	sub	sp, #16
 8005060:	af00      	add	r7, sp, #0
 8005062:	6078      	str	r0, [r7, #4]
 8005064:	6039      	str	r1, [r7, #0]
 8005066:	687b      	ldr	r3, [r7, #4]
 8005068:	2b00      	cmp	r3, #0
 800506a:	d101      	bne.n	8005070 <HAL_RCC_ClockConfig+0x14>
 800506c:	2301      	movs	r3, #1
 800506e:	e0cc      	b.n	800520a <HAL_RCC_ClockConfig+0x1ae>
 8005070:	4b68      	ldr	r3, [pc, #416]	@ (8005214 <HAL_RCC_ClockConfig+0x1b8>)
 8005072:	681b      	ldr	r3, [r3, #0]
 8005074:	f003 030f 	and.w	r3, r3, #15
 8005078:	683a      	ldr	r2, [r7, #0]
 800507a:	429a      	cmp	r2, r3
 800507c:	d90c      	bls.n	8005098 <HAL_RCC_ClockConfig+0x3c>
 800507e:	4b65      	ldr	r3, [pc, #404]	@ (8005214 <HAL_RCC_ClockConfig+0x1b8>)
 8005080:	683a      	ldr	r2, [r7, #0]
 8005082:	b2d2      	uxtb	r2, r2
 8005084:	701a      	strb	r2, [r3, #0]
 8005086:	4b63      	ldr	r3, [pc, #396]	@ (8005214 <HAL_RCC_ClockConfig+0x1b8>)
 8005088:	681b      	ldr	r3, [r3, #0]
 800508a:	f003 030f 	and.w	r3, r3, #15
 800508e:	683a      	ldr	r2, [r7, #0]
 8005090:	429a      	cmp	r2, r3
 8005092:	d001      	beq.n	8005098 <HAL_RCC_ClockConfig+0x3c>
 8005094:	2301      	movs	r3, #1
 8005096:	e0b8      	b.n	800520a <HAL_RCC_ClockConfig+0x1ae>
 8005098:	687b      	ldr	r3, [r7, #4]
 800509a:	681b      	ldr	r3, [r3, #0]
 800509c:	f003 0302 	and.w	r3, r3, #2
 80050a0:	2b00      	cmp	r3, #0
 80050a2:	d020      	beq.n	80050e6 <HAL_RCC_ClockConfig+0x8a>
 80050a4:	687b      	ldr	r3, [r7, #4]
 80050a6:	681b      	ldr	r3, [r3, #0]
 80050a8:	f003 0304 	and.w	r3, r3, #4
 80050ac:	2b00      	cmp	r3, #0
 80050ae:	d005      	beq.n	80050bc <HAL_RCC_ClockConfig+0x60>
 80050b0:	4b59      	ldr	r3, [pc, #356]	@ (8005218 <HAL_RCC_ClockConfig+0x1bc>)
 80050b2:	689b      	ldr	r3, [r3, #8]
 80050b4:	4a58      	ldr	r2, [pc, #352]	@ (8005218 <HAL_RCC_ClockConfig+0x1bc>)
 80050b6:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 80050ba:	6093      	str	r3, [r2, #8]
 80050bc:	687b      	ldr	r3, [r7, #4]
 80050be:	681b      	ldr	r3, [r3, #0]
 80050c0:	f003 0308 	and.w	r3, r3, #8
 80050c4:	2b00      	cmp	r3, #0
 80050c6:	d005      	beq.n	80050d4 <HAL_RCC_ClockConfig+0x78>
 80050c8:	4b53      	ldr	r3, [pc, #332]	@ (8005218 <HAL_RCC_ClockConfig+0x1bc>)
 80050ca:	689b      	ldr	r3, [r3, #8]
 80050cc:	4a52      	ldr	r2, [pc, #328]	@ (8005218 <HAL_RCC_ClockConfig+0x1bc>)
 80050ce:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 80050d2:	6093      	str	r3, [r2, #8]
 80050d4:	4b50      	ldr	r3, [pc, #320]	@ (8005218 <HAL_RCC_ClockConfig+0x1bc>)
 80050d6:	689b      	ldr	r3, [r3, #8]
 80050d8:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80050dc:	687b      	ldr	r3, [r7, #4]
 80050de:	689b      	ldr	r3, [r3, #8]
 80050e0:	494d      	ldr	r1, [pc, #308]	@ (8005218 <HAL_RCC_ClockConfig+0x1bc>)
 80050e2:	4313      	orrs	r3, r2
 80050e4:	608b      	str	r3, [r1, #8]
 80050e6:	687b      	ldr	r3, [r7, #4]
 80050e8:	681b      	ldr	r3, [r3, #0]
 80050ea:	f003 0301 	and.w	r3, r3, #1
 80050ee:	2b00      	cmp	r3, #0
 80050f0:	d044      	beq.n	800517c <HAL_RCC_ClockConfig+0x120>
 80050f2:	687b      	ldr	r3, [r7, #4]
 80050f4:	685b      	ldr	r3, [r3, #4]
 80050f6:	2b01      	cmp	r3, #1
 80050f8:	d107      	bne.n	800510a <HAL_RCC_ClockConfig+0xae>
 80050fa:	4b47      	ldr	r3, [pc, #284]	@ (8005218 <HAL_RCC_ClockConfig+0x1bc>)
 80050fc:	681b      	ldr	r3, [r3, #0]
 80050fe:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005102:	2b00      	cmp	r3, #0
 8005104:	d119      	bne.n	800513a <HAL_RCC_ClockConfig+0xde>
 8005106:	2301      	movs	r3, #1
 8005108:	e07f      	b.n	800520a <HAL_RCC_ClockConfig+0x1ae>
 800510a:	687b      	ldr	r3, [r7, #4]
 800510c:	685b      	ldr	r3, [r3, #4]
 800510e:	2b02      	cmp	r3, #2
 8005110:	d003      	beq.n	800511a <HAL_RCC_ClockConfig+0xbe>
 8005112:	687b      	ldr	r3, [r7, #4]
 8005114:	685b      	ldr	r3, [r3, #4]
 8005116:	2b03      	cmp	r3, #3
 8005118:	d107      	bne.n	800512a <HAL_RCC_ClockConfig+0xce>
 800511a:	4b3f      	ldr	r3, [pc, #252]	@ (8005218 <HAL_RCC_ClockConfig+0x1bc>)
 800511c:	681b      	ldr	r3, [r3, #0]
 800511e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8005122:	2b00      	cmp	r3, #0
 8005124:	d109      	bne.n	800513a <HAL_RCC_ClockConfig+0xde>
 8005126:	2301      	movs	r3, #1
 8005128:	e06f      	b.n	800520a <HAL_RCC_ClockConfig+0x1ae>
 800512a:	4b3b      	ldr	r3, [pc, #236]	@ (8005218 <HAL_RCC_ClockConfig+0x1bc>)
 800512c:	681b      	ldr	r3, [r3, #0]
 800512e:	f003 0302 	and.w	r3, r3, #2
 8005132:	2b00      	cmp	r3, #0
 8005134:	d101      	bne.n	800513a <HAL_RCC_ClockConfig+0xde>
 8005136:	2301      	movs	r3, #1
 8005138:	e067      	b.n	800520a <HAL_RCC_ClockConfig+0x1ae>
 800513a:	4b37      	ldr	r3, [pc, #220]	@ (8005218 <HAL_RCC_ClockConfig+0x1bc>)
 800513c:	689b      	ldr	r3, [r3, #8]
 800513e:	f023 0203 	bic.w	r2, r3, #3
 8005142:	687b      	ldr	r3, [r7, #4]
 8005144:	685b      	ldr	r3, [r3, #4]
 8005146:	4934      	ldr	r1, [pc, #208]	@ (8005218 <HAL_RCC_ClockConfig+0x1bc>)
 8005148:	4313      	orrs	r3, r2
 800514a:	608b      	str	r3, [r1, #8]
 800514c:	f7fd ffb8 	bl	80030c0 <HAL_GetTick>
 8005150:	60f8      	str	r0, [r7, #12]
 8005152:	e00a      	b.n	800516a <HAL_RCC_ClockConfig+0x10e>
 8005154:	f7fd ffb4 	bl	80030c0 <HAL_GetTick>
 8005158:	4602      	mov	r2, r0
 800515a:	68fb      	ldr	r3, [r7, #12]
 800515c:	1ad3      	subs	r3, r2, r3
 800515e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8005162:	4293      	cmp	r3, r2
 8005164:	d901      	bls.n	800516a <HAL_RCC_ClockConfig+0x10e>
 8005166:	2303      	movs	r3, #3
 8005168:	e04f      	b.n	800520a <HAL_RCC_ClockConfig+0x1ae>
 800516a:	4b2b      	ldr	r3, [pc, #172]	@ (8005218 <HAL_RCC_ClockConfig+0x1bc>)
 800516c:	689b      	ldr	r3, [r3, #8]
 800516e:	f003 020c 	and.w	r2, r3, #12
 8005172:	687b      	ldr	r3, [r7, #4]
 8005174:	685b      	ldr	r3, [r3, #4]
 8005176:	009b      	lsls	r3, r3, #2
 8005178:	429a      	cmp	r2, r3
 800517a:	d1eb      	bne.n	8005154 <HAL_RCC_ClockConfig+0xf8>
 800517c:	4b25      	ldr	r3, [pc, #148]	@ (8005214 <HAL_RCC_ClockConfig+0x1b8>)
 800517e:	681b      	ldr	r3, [r3, #0]
 8005180:	f003 030f 	and.w	r3, r3, #15
 8005184:	683a      	ldr	r2, [r7, #0]
 8005186:	429a      	cmp	r2, r3
 8005188:	d20c      	bcs.n	80051a4 <HAL_RCC_ClockConfig+0x148>
 800518a:	4b22      	ldr	r3, [pc, #136]	@ (8005214 <HAL_RCC_ClockConfig+0x1b8>)
 800518c:	683a      	ldr	r2, [r7, #0]
 800518e:	b2d2      	uxtb	r2, r2
 8005190:	701a      	strb	r2, [r3, #0]
 8005192:	4b20      	ldr	r3, [pc, #128]	@ (8005214 <HAL_RCC_ClockConfig+0x1b8>)
 8005194:	681b      	ldr	r3, [r3, #0]
 8005196:	f003 030f 	and.w	r3, r3, #15
 800519a:	683a      	ldr	r2, [r7, #0]
 800519c:	429a      	cmp	r2, r3
 800519e:	d001      	beq.n	80051a4 <HAL_RCC_ClockConfig+0x148>
 80051a0:	2301      	movs	r3, #1
 80051a2:	e032      	b.n	800520a <HAL_RCC_ClockConfig+0x1ae>
 80051a4:	687b      	ldr	r3, [r7, #4]
 80051a6:	681b      	ldr	r3, [r3, #0]
 80051a8:	f003 0304 	and.w	r3, r3, #4
 80051ac:	2b00      	cmp	r3, #0
 80051ae:	d008      	beq.n	80051c2 <HAL_RCC_ClockConfig+0x166>
 80051b0:	4b19      	ldr	r3, [pc, #100]	@ (8005218 <HAL_RCC_ClockConfig+0x1bc>)
 80051b2:	689b      	ldr	r3, [r3, #8]
 80051b4:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 80051b8:	687b      	ldr	r3, [r7, #4]
 80051ba:	68db      	ldr	r3, [r3, #12]
 80051bc:	4916      	ldr	r1, [pc, #88]	@ (8005218 <HAL_RCC_ClockConfig+0x1bc>)
 80051be:	4313      	orrs	r3, r2
 80051c0:	608b      	str	r3, [r1, #8]
 80051c2:	687b      	ldr	r3, [r7, #4]
 80051c4:	681b      	ldr	r3, [r3, #0]
 80051c6:	f003 0308 	and.w	r3, r3, #8
 80051ca:	2b00      	cmp	r3, #0
 80051cc:	d009      	beq.n	80051e2 <HAL_RCC_ClockConfig+0x186>
 80051ce:	4b12      	ldr	r3, [pc, #72]	@ (8005218 <HAL_RCC_ClockConfig+0x1bc>)
 80051d0:	689b      	ldr	r3, [r3, #8]
 80051d2:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 80051d6:	687b      	ldr	r3, [r7, #4]
 80051d8:	691b      	ldr	r3, [r3, #16]
 80051da:	00db      	lsls	r3, r3, #3
 80051dc:	490e      	ldr	r1, [pc, #56]	@ (8005218 <HAL_RCC_ClockConfig+0x1bc>)
 80051de:	4313      	orrs	r3, r2
 80051e0:	608b      	str	r3, [r1, #8]
 80051e2:	f000 f855 	bl	8005290 <HAL_RCC_GetSysClockFreq>
 80051e6:	4602      	mov	r2, r0
 80051e8:	4b0b      	ldr	r3, [pc, #44]	@ (8005218 <HAL_RCC_ClockConfig+0x1bc>)
 80051ea:	689b      	ldr	r3, [r3, #8]
 80051ec:	091b      	lsrs	r3, r3, #4
 80051ee:	f003 030f 	and.w	r3, r3, #15
 80051f2:	490a      	ldr	r1, [pc, #40]	@ (800521c <HAL_RCC_ClockConfig+0x1c0>)
 80051f4:	5ccb      	ldrb	r3, [r1, r3]
 80051f6:	fa22 f303 	lsr.w	r3, r2, r3
 80051fa:	4a09      	ldr	r2, [pc, #36]	@ (8005220 <HAL_RCC_ClockConfig+0x1c4>)
 80051fc:	6013      	str	r3, [r2, #0]
 80051fe:	4b09      	ldr	r3, [pc, #36]	@ (8005224 <HAL_RCC_ClockConfig+0x1c8>)
 8005200:	681b      	ldr	r3, [r3, #0]
 8005202:	4618      	mov	r0, r3
 8005204:	f7fd ff18 	bl	8003038 <HAL_InitTick>
 8005208:	2300      	movs	r3, #0
 800520a:	4618      	mov	r0, r3
 800520c:	3710      	adds	r7, #16
 800520e:	46bd      	mov	sp, r7
 8005210:	bd80      	pop	{r7, pc}
 8005212:	bf00      	nop
 8005214:	40023c00 	.word	0x40023c00
 8005218:	40023800 	.word	0x40023800
 800521c:	0800e1f0 	.word	0x0800e1f0
 8005220:	20000004 	.word	0x20000004
 8005224:	20000008 	.word	0x20000008

08005228 <HAL_RCC_GetHCLKFreq>:
 8005228:	b480      	push	{r7}
 800522a:	af00      	add	r7, sp, #0
 800522c:	4b03      	ldr	r3, [pc, #12]	@ (800523c <HAL_RCC_GetHCLKFreq+0x14>)
 800522e:	681b      	ldr	r3, [r3, #0]
 8005230:	4618      	mov	r0, r3
 8005232:	46bd      	mov	sp, r7
 8005234:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005238:	4770      	bx	lr
 800523a:	bf00      	nop
 800523c:	20000004 	.word	0x20000004

08005240 <HAL_RCC_GetPCLK1Freq>:
 8005240:	b580      	push	{r7, lr}
 8005242:	af00      	add	r7, sp, #0
 8005244:	f7ff fff0 	bl	8005228 <HAL_RCC_GetHCLKFreq>
 8005248:	4602      	mov	r2, r0
 800524a:	4b05      	ldr	r3, [pc, #20]	@ (8005260 <HAL_RCC_GetPCLK1Freq+0x20>)
 800524c:	689b      	ldr	r3, [r3, #8]
 800524e:	0a9b      	lsrs	r3, r3, #10
 8005250:	f003 0307 	and.w	r3, r3, #7
 8005254:	4903      	ldr	r1, [pc, #12]	@ (8005264 <HAL_RCC_GetPCLK1Freq+0x24>)
 8005256:	5ccb      	ldrb	r3, [r1, r3]
 8005258:	fa22 f303 	lsr.w	r3, r2, r3
 800525c:	4618      	mov	r0, r3
 800525e:	bd80      	pop	{r7, pc}
 8005260:	40023800 	.word	0x40023800
 8005264:	0800e200 	.word	0x0800e200

08005268 <HAL_RCC_GetPCLK2Freq>:
 8005268:	b580      	push	{r7, lr}
 800526a:	af00      	add	r7, sp, #0
 800526c:	f7ff ffdc 	bl	8005228 <HAL_RCC_GetHCLKFreq>
 8005270:	4602      	mov	r2, r0
 8005272:	4b05      	ldr	r3, [pc, #20]	@ (8005288 <HAL_RCC_GetPCLK2Freq+0x20>)
 8005274:	689b      	ldr	r3, [r3, #8]
 8005276:	0b5b      	lsrs	r3, r3, #13
 8005278:	f003 0307 	and.w	r3, r3, #7
 800527c:	4903      	ldr	r1, [pc, #12]	@ (800528c <HAL_RCC_GetPCLK2Freq+0x24>)
 800527e:	5ccb      	ldrb	r3, [r1, r3]
 8005280:	fa22 f303 	lsr.w	r3, r2, r3
 8005284:	4618      	mov	r0, r3
 8005286:	bd80      	pop	{r7, pc}
 8005288:	40023800 	.word	0x40023800
 800528c:	0800e200 	.word	0x0800e200

08005290 <HAL_RCC_GetSysClockFreq>:
 8005290:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8005294:	b0a6      	sub	sp, #152	@ 0x98
 8005296:	af00      	add	r7, sp, #0
 8005298:	2300      	movs	r3, #0
 800529a:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 800529e:	2300      	movs	r3, #0
 80052a0:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 80052a4:	2300      	movs	r3, #0
 80052a6:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 80052aa:	2300      	movs	r3, #0
 80052ac:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 80052b0:	2300      	movs	r3, #0
 80052b2:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80052b6:	4bc8      	ldr	r3, [pc, #800]	@ (80055d8 <HAL_RCC_GetSysClockFreq+0x348>)
 80052b8:	689b      	ldr	r3, [r3, #8]
 80052ba:	f003 030c 	and.w	r3, r3, #12
 80052be:	2b0c      	cmp	r3, #12
 80052c0:	f200 817e 	bhi.w	80055c0 <HAL_RCC_GetSysClockFreq+0x330>
 80052c4:	a201      	add	r2, pc, #4	@ (adr r2, 80052cc <HAL_RCC_GetSysClockFreq+0x3c>)
 80052c6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80052ca:	bf00      	nop
 80052cc:	08005301 	.word	0x08005301
 80052d0:	080055c1 	.word	0x080055c1
 80052d4:	080055c1 	.word	0x080055c1
 80052d8:	080055c1 	.word	0x080055c1
 80052dc:	08005309 	.word	0x08005309
 80052e0:	080055c1 	.word	0x080055c1
 80052e4:	080055c1 	.word	0x080055c1
 80052e8:	080055c1 	.word	0x080055c1
 80052ec:	08005311 	.word	0x08005311
 80052f0:	080055c1 	.word	0x080055c1
 80052f4:	080055c1 	.word	0x080055c1
 80052f8:	080055c1 	.word	0x080055c1
 80052fc:	0800547b 	.word	0x0800547b
 8005300:	4bb6      	ldr	r3, [pc, #728]	@ (80055dc <HAL_RCC_GetSysClockFreq+0x34c>)
 8005302:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8005306:	e15f      	b.n	80055c8 <HAL_RCC_GetSysClockFreq+0x338>
 8005308:	4bb5      	ldr	r3, [pc, #724]	@ (80055e0 <HAL_RCC_GetSysClockFreq+0x350>)
 800530a:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800530e:	e15b      	b.n	80055c8 <HAL_RCC_GetSysClockFreq+0x338>
 8005310:	4bb1      	ldr	r3, [pc, #708]	@ (80055d8 <HAL_RCC_GetSysClockFreq+0x348>)
 8005312:	685b      	ldr	r3, [r3, #4]
 8005314:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8005318:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 800531c:	4bae      	ldr	r3, [pc, #696]	@ (80055d8 <HAL_RCC_GetSysClockFreq+0x348>)
 800531e:	685b      	ldr	r3, [r3, #4]
 8005320:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005324:	2b00      	cmp	r3, #0
 8005326:	d031      	beq.n	800538c <HAL_RCC_GetSysClockFreq+0xfc>
 8005328:	4bab      	ldr	r3, [pc, #684]	@ (80055d8 <HAL_RCC_GetSysClockFreq+0x348>)
 800532a:	685b      	ldr	r3, [r3, #4]
 800532c:	099b      	lsrs	r3, r3, #6
 800532e:	2200      	movs	r2, #0
 8005330:	66bb      	str	r3, [r7, #104]	@ 0x68
 8005332:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8005334:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8005336:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800533a:	663b      	str	r3, [r7, #96]	@ 0x60
 800533c:	2300      	movs	r3, #0
 800533e:	667b      	str	r3, [r7, #100]	@ 0x64
 8005340:	4ba7      	ldr	r3, [pc, #668]	@ (80055e0 <HAL_RCC_GetSysClockFreq+0x350>)
 8005342:	e9d7 4518 	ldrd	r4, r5, [r7, #96]	@ 0x60
 8005346:	462a      	mov	r2, r5
 8005348:	fb03 f202 	mul.w	r2, r3, r2
 800534c:	2300      	movs	r3, #0
 800534e:	4621      	mov	r1, r4
 8005350:	fb01 f303 	mul.w	r3, r1, r3
 8005354:	4413      	add	r3, r2
 8005356:	4aa2      	ldr	r2, [pc, #648]	@ (80055e0 <HAL_RCC_GetSysClockFreq+0x350>)
 8005358:	4621      	mov	r1, r4
 800535a:	fba1 1202 	umull	r1, r2, r1, r2
 800535e:	67fa      	str	r2, [r7, #124]	@ 0x7c
 8005360:	460a      	mov	r2, r1
 8005362:	67ba      	str	r2, [r7, #120]	@ 0x78
 8005364:	6ffa      	ldr	r2, [r7, #124]	@ 0x7c
 8005366:	4413      	add	r3, r2
 8005368:	67fb      	str	r3, [r7, #124]	@ 0x7c
 800536a:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800536e:	2200      	movs	r2, #0
 8005370:	65bb      	str	r3, [r7, #88]	@ 0x58
 8005372:	65fa      	str	r2, [r7, #92]	@ 0x5c
 8005374:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8005378:	e9d7 011e 	ldrd	r0, r1, [r7, #120]	@ 0x78
 800537c:	f7fb fca4 	bl	8000cc8 <__aeabi_uldivmod>
 8005380:	4602      	mov	r2, r0
 8005382:	460b      	mov	r3, r1
 8005384:	4613      	mov	r3, r2
 8005386:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 800538a:	e064      	b.n	8005456 <HAL_RCC_GetSysClockFreq+0x1c6>
 800538c:	4b92      	ldr	r3, [pc, #584]	@ (80055d8 <HAL_RCC_GetSysClockFreq+0x348>)
 800538e:	685b      	ldr	r3, [r3, #4]
 8005390:	099b      	lsrs	r3, r3, #6
 8005392:	2200      	movs	r2, #0
 8005394:	653b      	str	r3, [r7, #80]	@ 0x50
 8005396:	657a      	str	r2, [r7, #84]	@ 0x54
 8005398:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800539a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800539e:	64bb      	str	r3, [r7, #72]	@ 0x48
 80053a0:	2300      	movs	r3, #0
 80053a2:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80053a4:	e9d7 4512 	ldrd	r4, r5, [r7, #72]	@ 0x48
 80053a8:	4622      	mov	r2, r4
 80053aa:	462b      	mov	r3, r5
 80053ac:	f04f 0000 	mov.w	r0, #0
 80053b0:	f04f 0100 	mov.w	r1, #0
 80053b4:	0159      	lsls	r1, r3, #5
 80053b6:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80053ba:	0150      	lsls	r0, r2, #5
 80053bc:	4602      	mov	r2, r0
 80053be:	460b      	mov	r3, r1
 80053c0:	4621      	mov	r1, r4
 80053c2:	1a51      	subs	r1, r2, r1
 80053c4:	6139      	str	r1, [r7, #16]
 80053c6:	4629      	mov	r1, r5
 80053c8:	eb63 0301 	sbc.w	r3, r3, r1
 80053cc:	617b      	str	r3, [r7, #20]
 80053ce:	f04f 0200 	mov.w	r2, #0
 80053d2:	f04f 0300 	mov.w	r3, #0
 80053d6:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 80053da:	4659      	mov	r1, fp
 80053dc:	018b      	lsls	r3, r1, #6
 80053de:	4651      	mov	r1, sl
 80053e0:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 80053e4:	4651      	mov	r1, sl
 80053e6:	018a      	lsls	r2, r1, #6
 80053e8:	4651      	mov	r1, sl
 80053ea:	ebb2 0801 	subs.w	r8, r2, r1
 80053ee:	4659      	mov	r1, fp
 80053f0:	eb63 0901 	sbc.w	r9, r3, r1
 80053f4:	f04f 0200 	mov.w	r2, #0
 80053f8:	f04f 0300 	mov.w	r3, #0
 80053fc:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8005400:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8005404:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8005408:	4690      	mov	r8, r2
 800540a:	4699      	mov	r9, r3
 800540c:	4623      	mov	r3, r4
 800540e:	eb18 0303 	adds.w	r3, r8, r3
 8005412:	60bb      	str	r3, [r7, #8]
 8005414:	462b      	mov	r3, r5
 8005416:	eb49 0303 	adc.w	r3, r9, r3
 800541a:	60fb      	str	r3, [r7, #12]
 800541c:	f04f 0200 	mov.w	r2, #0
 8005420:	f04f 0300 	mov.w	r3, #0
 8005424:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 8005428:	4629      	mov	r1, r5
 800542a:	028b      	lsls	r3, r1, #10
 800542c:	4621      	mov	r1, r4
 800542e:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8005432:	4621      	mov	r1, r4
 8005434:	028a      	lsls	r2, r1, #10
 8005436:	4610      	mov	r0, r2
 8005438:	4619      	mov	r1, r3
 800543a:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800543e:	2200      	movs	r2, #0
 8005440:	643b      	str	r3, [r7, #64]	@ 0x40
 8005442:	647a      	str	r2, [r7, #68]	@ 0x44
 8005444:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8005448:	f7fb fc3e 	bl	8000cc8 <__aeabi_uldivmod>
 800544c:	4602      	mov	r2, r0
 800544e:	460b      	mov	r3, r1
 8005450:	4613      	mov	r3, r2
 8005452:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8005456:	4b60      	ldr	r3, [pc, #384]	@ (80055d8 <HAL_RCC_GetSysClockFreq+0x348>)
 8005458:	685b      	ldr	r3, [r3, #4]
 800545a:	0c1b      	lsrs	r3, r3, #16
 800545c:	f003 0303 	and.w	r3, r3, #3
 8005460:	3301      	adds	r3, #1
 8005462:	005b      	lsls	r3, r3, #1
 8005464:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8005468:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 800546c:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8005470:	fbb2 f3f3 	udiv	r3, r2, r3
 8005474:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8005478:	e0a6      	b.n	80055c8 <HAL_RCC_GetSysClockFreq+0x338>
 800547a:	4b57      	ldr	r3, [pc, #348]	@ (80055d8 <HAL_RCC_GetSysClockFreq+0x348>)
 800547c:	685b      	ldr	r3, [r3, #4]
 800547e:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8005482:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8005486:	4b54      	ldr	r3, [pc, #336]	@ (80055d8 <HAL_RCC_GetSysClockFreq+0x348>)
 8005488:	685b      	ldr	r3, [r3, #4]
 800548a:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800548e:	2b00      	cmp	r3, #0
 8005490:	d02a      	beq.n	80054e8 <HAL_RCC_GetSysClockFreq+0x258>
 8005492:	4b51      	ldr	r3, [pc, #324]	@ (80055d8 <HAL_RCC_GetSysClockFreq+0x348>)
 8005494:	685b      	ldr	r3, [r3, #4]
 8005496:	099b      	lsrs	r3, r3, #6
 8005498:	2200      	movs	r2, #0
 800549a:	63bb      	str	r3, [r7, #56]	@ 0x38
 800549c:	63fa      	str	r2, [r7, #60]	@ 0x3c
 800549e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80054a0:	f3c3 0008 	ubfx	r0, r3, #0, #9
 80054a4:	2100      	movs	r1, #0
 80054a6:	4b4e      	ldr	r3, [pc, #312]	@ (80055e0 <HAL_RCC_GetSysClockFreq+0x350>)
 80054a8:	fb03 f201 	mul.w	r2, r3, r1
 80054ac:	2300      	movs	r3, #0
 80054ae:	fb00 f303 	mul.w	r3, r0, r3
 80054b2:	4413      	add	r3, r2
 80054b4:	4a4a      	ldr	r2, [pc, #296]	@ (80055e0 <HAL_RCC_GetSysClockFreq+0x350>)
 80054b6:	fba0 1202 	umull	r1, r2, r0, r2
 80054ba:	677a      	str	r2, [r7, #116]	@ 0x74
 80054bc:	460a      	mov	r2, r1
 80054be:	673a      	str	r2, [r7, #112]	@ 0x70
 80054c0:	6f7a      	ldr	r2, [r7, #116]	@ 0x74
 80054c2:	4413      	add	r3, r2
 80054c4:	677b      	str	r3, [r7, #116]	@ 0x74
 80054c6:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 80054ca:	2200      	movs	r2, #0
 80054cc:	633b      	str	r3, [r7, #48]	@ 0x30
 80054ce:	637a      	str	r2, [r7, #52]	@ 0x34
 80054d0:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	@ 0x30
 80054d4:	e9d7 011c 	ldrd	r0, r1, [r7, #112]	@ 0x70
 80054d8:	f7fb fbf6 	bl	8000cc8 <__aeabi_uldivmod>
 80054dc:	4602      	mov	r2, r0
 80054de:	460b      	mov	r3, r1
 80054e0:	4613      	mov	r3, r2
 80054e2:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 80054e6:	e05b      	b.n	80055a0 <HAL_RCC_GetSysClockFreq+0x310>
 80054e8:	4b3b      	ldr	r3, [pc, #236]	@ (80055d8 <HAL_RCC_GetSysClockFreq+0x348>)
 80054ea:	685b      	ldr	r3, [r3, #4]
 80054ec:	099b      	lsrs	r3, r3, #6
 80054ee:	2200      	movs	r2, #0
 80054f0:	62bb      	str	r3, [r7, #40]	@ 0x28
 80054f2:	62fa      	str	r2, [r7, #44]	@ 0x2c
 80054f4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80054f6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80054fa:	623b      	str	r3, [r7, #32]
 80054fc:	2300      	movs	r3, #0
 80054fe:	627b      	str	r3, [r7, #36]	@ 0x24
 8005500:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8005504:	4642      	mov	r2, r8
 8005506:	464b      	mov	r3, r9
 8005508:	f04f 0000 	mov.w	r0, #0
 800550c:	f04f 0100 	mov.w	r1, #0
 8005510:	0159      	lsls	r1, r3, #5
 8005512:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8005516:	0150      	lsls	r0, r2, #5
 8005518:	4602      	mov	r2, r0
 800551a:	460b      	mov	r3, r1
 800551c:	4641      	mov	r1, r8
 800551e:	ebb2 0a01 	subs.w	sl, r2, r1
 8005522:	4649      	mov	r1, r9
 8005524:	eb63 0b01 	sbc.w	fp, r3, r1
 8005528:	f04f 0200 	mov.w	r2, #0
 800552c:	f04f 0300 	mov.w	r3, #0
 8005530:	ea4f 138b 	mov.w	r3, fp, lsl #6
 8005534:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 8005538:	ea4f 128a 	mov.w	r2, sl, lsl #6
 800553c:	ebb2 040a 	subs.w	r4, r2, sl
 8005540:	eb63 050b 	sbc.w	r5, r3, fp
 8005544:	f04f 0200 	mov.w	r2, #0
 8005548:	f04f 0300 	mov.w	r3, #0
 800554c:	00eb      	lsls	r3, r5, #3
 800554e:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8005552:	00e2      	lsls	r2, r4, #3
 8005554:	4614      	mov	r4, r2
 8005556:	461d      	mov	r5, r3
 8005558:	4643      	mov	r3, r8
 800555a:	18e3      	adds	r3, r4, r3
 800555c:	603b      	str	r3, [r7, #0]
 800555e:	464b      	mov	r3, r9
 8005560:	eb45 0303 	adc.w	r3, r5, r3
 8005564:	607b      	str	r3, [r7, #4]
 8005566:	f04f 0200 	mov.w	r2, #0
 800556a:	f04f 0300 	mov.w	r3, #0
 800556e:	e9d7 4500 	ldrd	r4, r5, [r7]
 8005572:	4629      	mov	r1, r5
 8005574:	028b      	lsls	r3, r1, #10
 8005576:	4621      	mov	r1, r4
 8005578:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 800557c:	4621      	mov	r1, r4
 800557e:	028a      	lsls	r2, r1, #10
 8005580:	4610      	mov	r0, r2
 8005582:	4619      	mov	r1, r3
 8005584:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8005588:	2200      	movs	r2, #0
 800558a:	61bb      	str	r3, [r7, #24]
 800558c:	61fa      	str	r2, [r7, #28]
 800558e:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8005592:	f7fb fb99 	bl	8000cc8 <__aeabi_uldivmod>
 8005596:	4602      	mov	r2, r0
 8005598:	460b      	mov	r3, r1
 800559a:	4613      	mov	r3, r2
 800559c:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 80055a0:	4b0d      	ldr	r3, [pc, #52]	@ (80055d8 <HAL_RCC_GetSysClockFreq+0x348>)
 80055a2:	685b      	ldr	r3, [r3, #4]
 80055a4:	0f1b      	lsrs	r3, r3, #28
 80055a6:	f003 0307 	and.w	r3, r3, #7
 80055aa:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 80055ae:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 80055b2:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 80055b6:	fbb2 f3f3 	udiv	r3, r2, r3
 80055ba:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80055be:	e003      	b.n	80055c8 <HAL_RCC_GetSysClockFreq+0x338>
 80055c0:	4b06      	ldr	r3, [pc, #24]	@ (80055dc <HAL_RCC_GetSysClockFreq+0x34c>)
 80055c2:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80055c6:	bf00      	nop
 80055c8:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 80055cc:	4618      	mov	r0, r3
 80055ce:	3798      	adds	r7, #152	@ 0x98
 80055d0:	46bd      	mov	sp, r7
 80055d2:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80055d6:	bf00      	nop
 80055d8:	40023800 	.word	0x40023800
 80055dc:	00f42400 	.word	0x00f42400
 80055e0:	017d7840 	.word	0x017d7840

080055e4 <HAL_RCC_OscConfig>:
 80055e4:	b580      	push	{r7, lr}
 80055e6:	b086      	sub	sp, #24
 80055e8:	af00      	add	r7, sp, #0
 80055ea:	6078      	str	r0, [r7, #4]
 80055ec:	687b      	ldr	r3, [r7, #4]
 80055ee:	2b00      	cmp	r3, #0
 80055f0:	d101      	bne.n	80055f6 <HAL_RCC_OscConfig+0x12>
 80055f2:	2301      	movs	r3, #1
 80055f4:	e28d      	b.n	8005b12 <HAL_RCC_OscConfig+0x52e>
 80055f6:	687b      	ldr	r3, [r7, #4]
 80055f8:	681b      	ldr	r3, [r3, #0]
 80055fa:	f003 0301 	and.w	r3, r3, #1
 80055fe:	2b00      	cmp	r3, #0
 8005600:	f000 8083 	beq.w	800570a <HAL_RCC_OscConfig+0x126>
 8005604:	4b94      	ldr	r3, [pc, #592]	@ (8005858 <HAL_RCC_OscConfig+0x274>)
 8005606:	689b      	ldr	r3, [r3, #8]
 8005608:	f003 030c 	and.w	r3, r3, #12
 800560c:	2b04      	cmp	r3, #4
 800560e:	d019      	beq.n	8005644 <HAL_RCC_OscConfig+0x60>
 8005610:	4b91      	ldr	r3, [pc, #580]	@ (8005858 <HAL_RCC_OscConfig+0x274>)
 8005612:	689b      	ldr	r3, [r3, #8]
 8005614:	f003 030c 	and.w	r3, r3, #12
 8005618:	2b08      	cmp	r3, #8
 800561a:	d106      	bne.n	800562a <HAL_RCC_OscConfig+0x46>
 800561c:	4b8e      	ldr	r3, [pc, #568]	@ (8005858 <HAL_RCC_OscConfig+0x274>)
 800561e:	685b      	ldr	r3, [r3, #4]
 8005620:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005624:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8005628:	d00c      	beq.n	8005644 <HAL_RCC_OscConfig+0x60>
 800562a:	4b8b      	ldr	r3, [pc, #556]	@ (8005858 <HAL_RCC_OscConfig+0x274>)
 800562c:	689b      	ldr	r3, [r3, #8]
 800562e:	f003 030c 	and.w	r3, r3, #12
 8005632:	2b0c      	cmp	r3, #12
 8005634:	d112      	bne.n	800565c <HAL_RCC_OscConfig+0x78>
 8005636:	4b88      	ldr	r3, [pc, #544]	@ (8005858 <HAL_RCC_OscConfig+0x274>)
 8005638:	685b      	ldr	r3, [r3, #4]
 800563a:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800563e:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8005642:	d10b      	bne.n	800565c <HAL_RCC_OscConfig+0x78>
 8005644:	4b84      	ldr	r3, [pc, #528]	@ (8005858 <HAL_RCC_OscConfig+0x274>)
 8005646:	681b      	ldr	r3, [r3, #0]
 8005648:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800564c:	2b00      	cmp	r3, #0
 800564e:	d05b      	beq.n	8005708 <HAL_RCC_OscConfig+0x124>
 8005650:	687b      	ldr	r3, [r7, #4]
 8005652:	685b      	ldr	r3, [r3, #4]
 8005654:	2b00      	cmp	r3, #0
 8005656:	d157      	bne.n	8005708 <HAL_RCC_OscConfig+0x124>
 8005658:	2301      	movs	r3, #1
 800565a:	e25a      	b.n	8005b12 <HAL_RCC_OscConfig+0x52e>
 800565c:	687b      	ldr	r3, [r7, #4]
 800565e:	685b      	ldr	r3, [r3, #4]
 8005660:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8005664:	d106      	bne.n	8005674 <HAL_RCC_OscConfig+0x90>
 8005666:	4b7c      	ldr	r3, [pc, #496]	@ (8005858 <HAL_RCC_OscConfig+0x274>)
 8005668:	681b      	ldr	r3, [r3, #0]
 800566a:	4a7b      	ldr	r2, [pc, #492]	@ (8005858 <HAL_RCC_OscConfig+0x274>)
 800566c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8005670:	6013      	str	r3, [r2, #0]
 8005672:	e01d      	b.n	80056b0 <HAL_RCC_OscConfig+0xcc>
 8005674:	687b      	ldr	r3, [r7, #4]
 8005676:	685b      	ldr	r3, [r3, #4]
 8005678:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 800567c:	d10c      	bne.n	8005698 <HAL_RCC_OscConfig+0xb4>
 800567e:	4b76      	ldr	r3, [pc, #472]	@ (8005858 <HAL_RCC_OscConfig+0x274>)
 8005680:	681b      	ldr	r3, [r3, #0]
 8005682:	4a75      	ldr	r2, [pc, #468]	@ (8005858 <HAL_RCC_OscConfig+0x274>)
 8005684:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8005688:	6013      	str	r3, [r2, #0]
 800568a:	4b73      	ldr	r3, [pc, #460]	@ (8005858 <HAL_RCC_OscConfig+0x274>)
 800568c:	681b      	ldr	r3, [r3, #0]
 800568e:	4a72      	ldr	r2, [pc, #456]	@ (8005858 <HAL_RCC_OscConfig+0x274>)
 8005690:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8005694:	6013      	str	r3, [r2, #0]
 8005696:	e00b      	b.n	80056b0 <HAL_RCC_OscConfig+0xcc>
 8005698:	4b6f      	ldr	r3, [pc, #444]	@ (8005858 <HAL_RCC_OscConfig+0x274>)
 800569a:	681b      	ldr	r3, [r3, #0]
 800569c:	4a6e      	ldr	r2, [pc, #440]	@ (8005858 <HAL_RCC_OscConfig+0x274>)
 800569e:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80056a2:	6013      	str	r3, [r2, #0]
 80056a4:	4b6c      	ldr	r3, [pc, #432]	@ (8005858 <HAL_RCC_OscConfig+0x274>)
 80056a6:	681b      	ldr	r3, [r3, #0]
 80056a8:	4a6b      	ldr	r2, [pc, #428]	@ (8005858 <HAL_RCC_OscConfig+0x274>)
 80056aa:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80056ae:	6013      	str	r3, [r2, #0]
 80056b0:	687b      	ldr	r3, [r7, #4]
 80056b2:	685b      	ldr	r3, [r3, #4]
 80056b4:	2b00      	cmp	r3, #0
 80056b6:	d013      	beq.n	80056e0 <HAL_RCC_OscConfig+0xfc>
 80056b8:	f7fd fd02 	bl	80030c0 <HAL_GetTick>
 80056bc:	6138      	str	r0, [r7, #16]
 80056be:	e008      	b.n	80056d2 <HAL_RCC_OscConfig+0xee>
 80056c0:	f7fd fcfe 	bl	80030c0 <HAL_GetTick>
 80056c4:	4602      	mov	r2, r0
 80056c6:	693b      	ldr	r3, [r7, #16]
 80056c8:	1ad3      	subs	r3, r2, r3
 80056ca:	2b64      	cmp	r3, #100	@ 0x64
 80056cc:	d901      	bls.n	80056d2 <HAL_RCC_OscConfig+0xee>
 80056ce:	2303      	movs	r3, #3
 80056d0:	e21f      	b.n	8005b12 <HAL_RCC_OscConfig+0x52e>
 80056d2:	4b61      	ldr	r3, [pc, #388]	@ (8005858 <HAL_RCC_OscConfig+0x274>)
 80056d4:	681b      	ldr	r3, [r3, #0]
 80056d6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80056da:	2b00      	cmp	r3, #0
 80056dc:	d0f0      	beq.n	80056c0 <HAL_RCC_OscConfig+0xdc>
 80056de:	e014      	b.n	800570a <HAL_RCC_OscConfig+0x126>
 80056e0:	f7fd fcee 	bl	80030c0 <HAL_GetTick>
 80056e4:	6138      	str	r0, [r7, #16]
 80056e6:	e008      	b.n	80056fa <HAL_RCC_OscConfig+0x116>
 80056e8:	f7fd fcea 	bl	80030c0 <HAL_GetTick>
 80056ec:	4602      	mov	r2, r0
 80056ee:	693b      	ldr	r3, [r7, #16]
 80056f0:	1ad3      	subs	r3, r2, r3
 80056f2:	2b64      	cmp	r3, #100	@ 0x64
 80056f4:	d901      	bls.n	80056fa <HAL_RCC_OscConfig+0x116>
 80056f6:	2303      	movs	r3, #3
 80056f8:	e20b      	b.n	8005b12 <HAL_RCC_OscConfig+0x52e>
 80056fa:	4b57      	ldr	r3, [pc, #348]	@ (8005858 <HAL_RCC_OscConfig+0x274>)
 80056fc:	681b      	ldr	r3, [r3, #0]
 80056fe:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005702:	2b00      	cmp	r3, #0
 8005704:	d1f0      	bne.n	80056e8 <HAL_RCC_OscConfig+0x104>
 8005706:	e000      	b.n	800570a <HAL_RCC_OscConfig+0x126>
 8005708:	bf00      	nop
 800570a:	687b      	ldr	r3, [r7, #4]
 800570c:	681b      	ldr	r3, [r3, #0]
 800570e:	f003 0302 	and.w	r3, r3, #2
 8005712:	2b00      	cmp	r3, #0
 8005714:	d06f      	beq.n	80057f6 <HAL_RCC_OscConfig+0x212>
 8005716:	4b50      	ldr	r3, [pc, #320]	@ (8005858 <HAL_RCC_OscConfig+0x274>)
 8005718:	689b      	ldr	r3, [r3, #8]
 800571a:	f003 030c 	and.w	r3, r3, #12
 800571e:	2b00      	cmp	r3, #0
 8005720:	d017      	beq.n	8005752 <HAL_RCC_OscConfig+0x16e>
 8005722:	4b4d      	ldr	r3, [pc, #308]	@ (8005858 <HAL_RCC_OscConfig+0x274>)
 8005724:	689b      	ldr	r3, [r3, #8]
 8005726:	f003 030c 	and.w	r3, r3, #12
 800572a:	2b08      	cmp	r3, #8
 800572c:	d105      	bne.n	800573a <HAL_RCC_OscConfig+0x156>
 800572e:	4b4a      	ldr	r3, [pc, #296]	@ (8005858 <HAL_RCC_OscConfig+0x274>)
 8005730:	685b      	ldr	r3, [r3, #4]
 8005732:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005736:	2b00      	cmp	r3, #0
 8005738:	d00b      	beq.n	8005752 <HAL_RCC_OscConfig+0x16e>
 800573a:	4b47      	ldr	r3, [pc, #284]	@ (8005858 <HAL_RCC_OscConfig+0x274>)
 800573c:	689b      	ldr	r3, [r3, #8]
 800573e:	f003 030c 	and.w	r3, r3, #12
 8005742:	2b0c      	cmp	r3, #12
 8005744:	d11c      	bne.n	8005780 <HAL_RCC_OscConfig+0x19c>
 8005746:	4b44      	ldr	r3, [pc, #272]	@ (8005858 <HAL_RCC_OscConfig+0x274>)
 8005748:	685b      	ldr	r3, [r3, #4]
 800574a:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800574e:	2b00      	cmp	r3, #0
 8005750:	d116      	bne.n	8005780 <HAL_RCC_OscConfig+0x19c>
 8005752:	4b41      	ldr	r3, [pc, #260]	@ (8005858 <HAL_RCC_OscConfig+0x274>)
 8005754:	681b      	ldr	r3, [r3, #0]
 8005756:	f003 0302 	and.w	r3, r3, #2
 800575a:	2b00      	cmp	r3, #0
 800575c:	d005      	beq.n	800576a <HAL_RCC_OscConfig+0x186>
 800575e:	687b      	ldr	r3, [r7, #4]
 8005760:	68db      	ldr	r3, [r3, #12]
 8005762:	2b01      	cmp	r3, #1
 8005764:	d001      	beq.n	800576a <HAL_RCC_OscConfig+0x186>
 8005766:	2301      	movs	r3, #1
 8005768:	e1d3      	b.n	8005b12 <HAL_RCC_OscConfig+0x52e>
 800576a:	4b3b      	ldr	r3, [pc, #236]	@ (8005858 <HAL_RCC_OscConfig+0x274>)
 800576c:	681b      	ldr	r3, [r3, #0]
 800576e:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8005772:	687b      	ldr	r3, [r7, #4]
 8005774:	691b      	ldr	r3, [r3, #16]
 8005776:	00db      	lsls	r3, r3, #3
 8005778:	4937      	ldr	r1, [pc, #220]	@ (8005858 <HAL_RCC_OscConfig+0x274>)
 800577a:	4313      	orrs	r3, r2
 800577c:	600b      	str	r3, [r1, #0]
 800577e:	e03a      	b.n	80057f6 <HAL_RCC_OscConfig+0x212>
 8005780:	687b      	ldr	r3, [r7, #4]
 8005782:	68db      	ldr	r3, [r3, #12]
 8005784:	2b00      	cmp	r3, #0
 8005786:	d020      	beq.n	80057ca <HAL_RCC_OscConfig+0x1e6>
 8005788:	4b34      	ldr	r3, [pc, #208]	@ (800585c <HAL_RCC_OscConfig+0x278>)
 800578a:	2201      	movs	r2, #1
 800578c:	601a      	str	r2, [r3, #0]
 800578e:	f7fd fc97 	bl	80030c0 <HAL_GetTick>
 8005792:	6138      	str	r0, [r7, #16]
 8005794:	e008      	b.n	80057a8 <HAL_RCC_OscConfig+0x1c4>
 8005796:	f7fd fc93 	bl	80030c0 <HAL_GetTick>
 800579a:	4602      	mov	r2, r0
 800579c:	693b      	ldr	r3, [r7, #16]
 800579e:	1ad3      	subs	r3, r2, r3
 80057a0:	2b02      	cmp	r3, #2
 80057a2:	d901      	bls.n	80057a8 <HAL_RCC_OscConfig+0x1c4>
 80057a4:	2303      	movs	r3, #3
 80057a6:	e1b4      	b.n	8005b12 <HAL_RCC_OscConfig+0x52e>
 80057a8:	4b2b      	ldr	r3, [pc, #172]	@ (8005858 <HAL_RCC_OscConfig+0x274>)
 80057aa:	681b      	ldr	r3, [r3, #0]
 80057ac:	f003 0302 	and.w	r3, r3, #2
 80057b0:	2b00      	cmp	r3, #0
 80057b2:	d0f0      	beq.n	8005796 <HAL_RCC_OscConfig+0x1b2>
 80057b4:	4b28      	ldr	r3, [pc, #160]	@ (8005858 <HAL_RCC_OscConfig+0x274>)
 80057b6:	681b      	ldr	r3, [r3, #0]
 80057b8:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80057bc:	687b      	ldr	r3, [r7, #4]
 80057be:	691b      	ldr	r3, [r3, #16]
 80057c0:	00db      	lsls	r3, r3, #3
 80057c2:	4925      	ldr	r1, [pc, #148]	@ (8005858 <HAL_RCC_OscConfig+0x274>)
 80057c4:	4313      	orrs	r3, r2
 80057c6:	600b      	str	r3, [r1, #0]
 80057c8:	e015      	b.n	80057f6 <HAL_RCC_OscConfig+0x212>
 80057ca:	4b24      	ldr	r3, [pc, #144]	@ (800585c <HAL_RCC_OscConfig+0x278>)
 80057cc:	2200      	movs	r2, #0
 80057ce:	601a      	str	r2, [r3, #0]
 80057d0:	f7fd fc76 	bl	80030c0 <HAL_GetTick>
 80057d4:	6138      	str	r0, [r7, #16]
 80057d6:	e008      	b.n	80057ea <HAL_RCC_OscConfig+0x206>
 80057d8:	f7fd fc72 	bl	80030c0 <HAL_GetTick>
 80057dc:	4602      	mov	r2, r0
 80057de:	693b      	ldr	r3, [r7, #16]
 80057e0:	1ad3      	subs	r3, r2, r3
 80057e2:	2b02      	cmp	r3, #2
 80057e4:	d901      	bls.n	80057ea <HAL_RCC_OscConfig+0x206>
 80057e6:	2303      	movs	r3, #3
 80057e8:	e193      	b.n	8005b12 <HAL_RCC_OscConfig+0x52e>
 80057ea:	4b1b      	ldr	r3, [pc, #108]	@ (8005858 <HAL_RCC_OscConfig+0x274>)
 80057ec:	681b      	ldr	r3, [r3, #0]
 80057ee:	f003 0302 	and.w	r3, r3, #2
 80057f2:	2b00      	cmp	r3, #0
 80057f4:	d1f0      	bne.n	80057d8 <HAL_RCC_OscConfig+0x1f4>
 80057f6:	687b      	ldr	r3, [r7, #4]
 80057f8:	681b      	ldr	r3, [r3, #0]
 80057fa:	f003 0308 	and.w	r3, r3, #8
 80057fe:	2b00      	cmp	r3, #0
 8005800:	d036      	beq.n	8005870 <HAL_RCC_OscConfig+0x28c>
 8005802:	687b      	ldr	r3, [r7, #4]
 8005804:	695b      	ldr	r3, [r3, #20]
 8005806:	2b00      	cmp	r3, #0
 8005808:	d016      	beq.n	8005838 <HAL_RCC_OscConfig+0x254>
 800580a:	4b15      	ldr	r3, [pc, #84]	@ (8005860 <HAL_RCC_OscConfig+0x27c>)
 800580c:	2201      	movs	r2, #1
 800580e:	601a      	str	r2, [r3, #0]
 8005810:	f7fd fc56 	bl	80030c0 <HAL_GetTick>
 8005814:	6138      	str	r0, [r7, #16]
 8005816:	e008      	b.n	800582a <HAL_RCC_OscConfig+0x246>
 8005818:	f7fd fc52 	bl	80030c0 <HAL_GetTick>
 800581c:	4602      	mov	r2, r0
 800581e:	693b      	ldr	r3, [r7, #16]
 8005820:	1ad3      	subs	r3, r2, r3
 8005822:	2b02      	cmp	r3, #2
 8005824:	d901      	bls.n	800582a <HAL_RCC_OscConfig+0x246>
 8005826:	2303      	movs	r3, #3
 8005828:	e173      	b.n	8005b12 <HAL_RCC_OscConfig+0x52e>
 800582a:	4b0b      	ldr	r3, [pc, #44]	@ (8005858 <HAL_RCC_OscConfig+0x274>)
 800582c:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800582e:	f003 0302 	and.w	r3, r3, #2
 8005832:	2b00      	cmp	r3, #0
 8005834:	d0f0      	beq.n	8005818 <HAL_RCC_OscConfig+0x234>
 8005836:	e01b      	b.n	8005870 <HAL_RCC_OscConfig+0x28c>
 8005838:	4b09      	ldr	r3, [pc, #36]	@ (8005860 <HAL_RCC_OscConfig+0x27c>)
 800583a:	2200      	movs	r2, #0
 800583c:	601a      	str	r2, [r3, #0]
 800583e:	f7fd fc3f 	bl	80030c0 <HAL_GetTick>
 8005842:	6138      	str	r0, [r7, #16]
 8005844:	e00e      	b.n	8005864 <HAL_RCC_OscConfig+0x280>
 8005846:	f7fd fc3b 	bl	80030c0 <HAL_GetTick>
 800584a:	4602      	mov	r2, r0
 800584c:	693b      	ldr	r3, [r7, #16]
 800584e:	1ad3      	subs	r3, r2, r3
 8005850:	2b02      	cmp	r3, #2
 8005852:	d907      	bls.n	8005864 <HAL_RCC_OscConfig+0x280>
 8005854:	2303      	movs	r3, #3
 8005856:	e15c      	b.n	8005b12 <HAL_RCC_OscConfig+0x52e>
 8005858:	40023800 	.word	0x40023800
 800585c:	42470000 	.word	0x42470000
 8005860:	42470e80 	.word	0x42470e80
 8005864:	4b8a      	ldr	r3, [pc, #552]	@ (8005a90 <HAL_RCC_OscConfig+0x4ac>)
 8005866:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8005868:	f003 0302 	and.w	r3, r3, #2
 800586c:	2b00      	cmp	r3, #0
 800586e:	d1ea      	bne.n	8005846 <HAL_RCC_OscConfig+0x262>
 8005870:	687b      	ldr	r3, [r7, #4]
 8005872:	681b      	ldr	r3, [r3, #0]
 8005874:	f003 0304 	and.w	r3, r3, #4
 8005878:	2b00      	cmp	r3, #0
 800587a:	f000 8097 	beq.w	80059ac <HAL_RCC_OscConfig+0x3c8>
 800587e:	2300      	movs	r3, #0
 8005880:	75fb      	strb	r3, [r7, #23]
 8005882:	4b83      	ldr	r3, [pc, #524]	@ (8005a90 <HAL_RCC_OscConfig+0x4ac>)
 8005884:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005886:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800588a:	2b00      	cmp	r3, #0
 800588c:	d10f      	bne.n	80058ae <HAL_RCC_OscConfig+0x2ca>
 800588e:	2300      	movs	r3, #0
 8005890:	60bb      	str	r3, [r7, #8]
 8005892:	4b7f      	ldr	r3, [pc, #508]	@ (8005a90 <HAL_RCC_OscConfig+0x4ac>)
 8005894:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005896:	4a7e      	ldr	r2, [pc, #504]	@ (8005a90 <HAL_RCC_OscConfig+0x4ac>)
 8005898:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800589c:	6413      	str	r3, [r2, #64]	@ 0x40
 800589e:	4b7c      	ldr	r3, [pc, #496]	@ (8005a90 <HAL_RCC_OscConfig+0x4ac>)
 80058a0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80058a2:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80058a6:	60bb      	str	r3, [r7, #8]
 80058a8:	68bb      	ldr	r3, [r7, #8]
 80058aa:	2301      	movs	r3, #1
 80058ac:	75fb      	strb	r3, [r7, #23]
 80058ae:	4b79      	ldr	r3, [pc, #484]	@ (8005a94 <HAL_RCC_OscConfig+0x4b0>)
 80058b0:	681b      	ldr	r3, [r3, #0]
 80058b2:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80058b6:	2b00      	cmp	r3, #0
 80058b8:	d118      	bne.n	80058ec <HAL_RCC_OscConfig+0x308>
 80058ba:	4b76      	ldr	r3, [pc, #472]	@ (8005a94 <HAL_RCC_OscConfig+0x4b0>)
 80058bc:	681b      	ldr	r3, [r3, #0]
 80058be:	4a75      	ldr	r2, [pc, #468]	@ (8005a94 <HAL_RCC_OscConfig+0x4b0>)
 80058c0:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80058c4:	6013      	str	r3, [r2, #0]
 80058c6:	f7fd fbfb 	bl	80030c0 <HAL_GetTick>
 80058ca:	6138      	str	r0, [r7, #16]
 80058cc:	e008      	b.n	80058e0 <HAL_RCC_OscConfig+0x2fc>
 80058ce:	f7fd fbf7 	bl	80030c0 <HAL_GetTick>
 80058d2:	4602      	mov	r2, r0
 80058d4:	693b      	ldr	r3, [r7, #16]
 80058d6:	1ad3      	subs	r3, r2, r3
 80058d8:	2b02      	cmp	r3, #2
 80058da:	d901      	bls.n	80058e0 <HAL_RCC_OscConfig+0x2fc>
 80058dc:	2303      	movs	r3, #3
 80058de:	e118      	b.n	8005b12 <HAL_RCC_OscConfig+0x52e>
 80058e0:	4b6c      	ldr	r3, [pc, #432]	@ (8005a94 <HAL_RCC_OscConfig+0x4b0>)
 80058e2:	681b      	ldr	r3, [r3, #0]
 80058e4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80058e8:	2b00      	cmp	r3, #0
 80058ea:	d0f0      	beq.n	80058ce <HAL_RCC_OscConfig+0x2ea>
 80058ec:	687b      	ldr	r3, [r7, #4]
 80058ee:	689b      	ldr	r3, [r3, #8]
 80058f0:	2b01      	cmp	r3, #1
 80058f2:	d106      	bne.n	8005902 <HAL_RCC_OscConfig+0x31e>
 80058f4:	4b66      	ldr	r3, [pc, #408]	@ (8005a90 <HAL_RCC_OscConfig+0x4ac>)
 80058f6:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80058f8:	4a65      	ldr	r2, [pc, #404]	@ (8005a90 <HAL_RCC_OscConfig+0x4ac>)
 80058fa:	f043 0301 	orr.w	r3, r3, #1
 80058fe:	6713      	str	r3, [r2, #112]	@ 0x70
 8005900:	e01c      	b.n	800593c <HAL_RCC_OscConfig+0x358>
 8005902:	687b      	ldr	r3, [r7, #4]
 8005904:	689b      	ldr	r3, [r3, #8]
 8005906:	2b05      	cmp	r3, #5
 8005908:	d10c      	bne.n	8005924 <HAL_RCC_OscConfig+0x340>
 800590a:	4b61      	ldr	r3, [pc, #388]	@ (8005a90 <HAL_RCC_OscConfig+0x4ac>)
 800590c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800590e:	4a60      	ldr	r2, [pc, #384]	@ (8005a90 <HAL_RCC_OscConfig+0x4ac>)
 8005910:	f043 0304 	orr.w	r3, r3, #4
 8005914:	6713      	str	r3, [r2, #112]	@ 0x70
 8005916:	4b5e      	ldr	r3, [pc, #376]	@ (8005a90 <HAL_RCC_OscConfig+0x4ac>)
 8005918:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800591a:	4a5d      	ldr	r2, [pc, #372]	@ (8005a90 <HAL_RCC_OscConfig+0x4ac>)
 800591c:	f043 0301 	orr.w	r3, r3, #1
 8005920:	6713      	str	r3, [r2, #112]	@ 0x70
 8005922:	e00b      	b.n	800593c <HAL_RCC_OscConfig+0x358>
 8005924:	4b5a      	ldr	r3, [pc, #360]	@ (8005a90 <HAL_RCC_OscConfig+0x4ac>)
 8005926:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005928:	4a59      	ldr	r2, [pc, #356]	@ (8005a90 <HAL_RCC_OscConfig+0x4ac>)
 800592a:	f023 0301 	bic.w	r3, r3, #1
 800592e:	6713      	str	r3, [r2, #112]	@ 0x70
 8005930:	4b57      	ldr	r3, [pc, #348]	@ (8005a90 <HAL_RCC_OscConfig+0x4ac>)
 8005932:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005934:	4a56      	ldr	r2, [pc, #344]	@ (8005a90 <HAL_RCC_OscConfig+0x4ac>)
 8005936:	f023 0304 	bic.w	r3, r3, #4
 800593a:	6713      	str	r3, [r2, #112]	@ 0x70
 800593c:	687b      	ldr	r3, [r7, #4]
 800593e:	689b      	ldr	r3, [r3, #8]
 8005940:	2b00      	cmp	r3, #0
 8005942:	d015      	beq.n	8005970 <HAL_RCC_OscConfig+0x38c>
 8005944:	f7fd fbbc 	bl	80030c0 <HAL_GetTick>
 8005948:	6138      	str	r0, [r7, #16]
 800594a:	e00a      	b.n	8005962 <HAL_RCC_OscConfig+0x37e>
 800594c:	f7fd fbb8 	bl	80030c0 <HAL_GetTick>
 8005950:	4602      	mov	r2, r0
 8005952:	693b      	ldr	r3, [r7, #16]
 8005954:	1ad3      	subs	r3, r2, r3
 8005956:	f241 3288 	movw	r2, #5000	@ 0x1388
 800595a:	4293      	cmp	r3, r2
 800595c:	d901      	bls.n	8005962 <HAL_RCC_OscConfig+0x37e>
 800595e:	2303      	movs	r3, #3
 8005960:	e0d7      	b.n	8005b12 <HAL_RCC_OscConfig+0x52e>
 8005962:	4b4b      	ldr	r3, [pc, #300]	@ (8005a90 <HAL_RCC_OscConfig+0x4ac>)
 8005964:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005966:	f003 0302 	and.w	r3, r3, #2
 800596a:	2b00      	cmp	r3, #0
 800596c:	d0ee      	beq.n	800594c <HAL_RCC_OscConfig+0x368>
 800596e:	e014      	b.n	800599a <HAL_RCC_OscConfig+0x3b6>
 8005970:	f7fd fba6 	bl	80030c0 <HAL_GetTick>
 8005974:	6138      	str	r0, [r7, #16]
 8005976:	e00a      	b.n	800598e <HAL_RCC_OscConfig+0x3aa>
 8005978:	f7fd fba2 	bl	80030c0 <HAL_GetTick>
 800597c:	4602      	mov	r2, r0
 800597e:	693b      	ldr	r3, [r7, #16]
 8005980:	1ad3      	subs	r3, r2, r3
 8005982:	f241 3288 	movw	r2, #5000	@ 0x1388
 8005986:	4293      	cmp	r3, r2
 8005988:	d901      	bls.n	800598e <HAL_RCC_OscConfig+0x3aa>
 800598a:	2303      	movs	r3, #3
 800598c:	e0c1      	b.n	8005b12 <HAL_RCC_OscConfig+0x52e>
 800598e:	4b40      	ldr	r3, [pc, #256]	@ (8005a90 <HAL_RCC_OscConfig+0x4ac>)
 8005990:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005992:	f003 0302 	and.w	r3, r3, #2
 8005996:	2b00      	cmp	r3, #0
 8005998:	d1ee      	bne.n	8005978 <HAL_RCC_OscConfig+0x394>
 800599a:	7dfb      	ldrb	r3, [r7, #23]
 800599c:	2b01      	cmp	r3, #1
 800599e:	d105      	bne.n	80059ac <HAL_RCC_OscConfig+0x3c8>
 80059a0:	4b3b      	ldr	r3, [pc, #236]	@ (8005a90 <HAL_RCC_OscConfig+0x4ac>)
 80059a2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80059a4:	4a3a      	ldr	r2, [pc, #232]	@ (8005a90 <HAL_RCC_OscConfig+0x4ac>)
 80059a6:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80059aa:	6413      	str	r3, [r2, #64]	@ 0x40
 80059ac:	687b      	ldr	r3, [r7, #4]
 80059ae:	699b      	ldr	r3, [r3, #24]
 80059b0:	2b00      	cmp	r3, #0
 80059b2:	f000 80ad 	beq.w	8005b10 <HAL_RCC_OscConfig+0x52c>
 80059b6:	4b36      	ldr	r3, [pc, #216]	@ (8005a90 <HAL_RCC_OscConfig+0x4ac>)
 80059b8:	689b      	ldr	r3, [r3, #8]
 80059ba:	f003 030c 	and.w	r3, r3, #12
 80059be:	2b08      	cmp	r3, #8
 80059c0:	d060      	beq.n	8005a84 <HAL_RCC_OscConfig+0x4a0>
 80059c2:	687b      	ldr	r3, [r7, #4]
 80059c4:	699b      	ldr	r3, [r3, #24]
 80059c6:	2b02      	cmp	r3, #2
 80059c8:	d145      	bne.n	8005a56 <HAL_RCC_OscConfig+0x472>
 80059ca:	4b33      	ldr	r3, [pc, #204]	@ (8005a98 <HAL_RCC_OscConfig+0x4b4>)
 80059cc:	2200      	movs	r2, #0
 80059ce:	601a      	str	r2, [r3, #0]
 80059d0:	f7fd fb76 	bl	80030c0 <HAL_GetTick>
 80059d4:	6138      	str	r0, [r7, #16]
 80059d6:	e008      	b.n	80059ea <HAL_RCC_OscConfig+0x406>
 80059d8:	f7fd fb72 	bl	80030c0 <HAL_GetTick>
 80059dc:	4602      	mov	r2, r0
 80059de:	693b      	ldr	r3, [r7, #16]
 80059e0:	1ad3      	subs	r3, r2, r3
 80059e2:	2b02      	cmp	r3, #2
 80059e4:	d901      	bls.n	80059ea <HAL_RCC_OscConfig+0x406>
 80059e6:	2303      	movs	r3, #3
 80059e8:	e093      	b.n	8005b12 <HAL_RCC_OscConfig+0x52e>
 80059ea:	4b29      	ldr	r3, [pc, #164]	@ (8005a90 <HAL_RCC_OscConfig+0x4ac>)
 80059ec:	681b      	ldr	r3, [r3, #0]
 80059ee:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80059f2:	2b00      	cmp	r3, #0
 80059f4:	d1f0      	bne.n	80059d8 <HAL_RCC_OscConfig+0x3f4>
 80059f6:	687b      	ldr	r3, [r7, #4]
 80059f8:	69da      	ldr	r2, [r3, #28]
 80059fa:	687b      	ldr	r3, [r7, #4]
 80059fc:	6a1b      	ldr	r3, [r3, #32]
 80059fe:	431a      	orrs	r2, r3
 8005a00:	687b      	ldr	r3, [r7, #4]
 8005a02:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005a04:	019b      	lsls	r3, r3, #6
 8005a06:	431a      	orrs	r2, r3
 8005a08:	687b      	ldr	r3, [r7, #4]
 8005a0a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005a0c:	085b      	lsrs	r3, r3, #1
 8005a0e:	3b01      	subs	r3, #1
 8005a10:	041b      	lsls	r3, r3, #16
 8005a12:	431a      	orrs	r2, r3
 8005a14:	687b      	ldr	r3, [r7, #4]
 8005a16:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005a18:	061b      	lsls	r3, r3, #24
 8005a1a:	431a      	orrs	r2, r3
 8005a1c:	687b      	ldr	r3, [r7, #4]
 8005a1e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005a20:	071b      	lsls	r3, r3, #28
 8005a22:	491b      	ldr	r1, [pc, #108]	@ (8005a90 <HAL_RCC_OscConfig+0x4ac>)
 8005a24:	4313      	orrs	r3, r2
 8005a26:	604b      	str	r3, [r1, #4]
 8005a28:	4b1b      	ldr	r3, [pc, #108]	@ (8005a98 <HAL_RCC_OscConfig+0x4b4>)
 8005a2a:	2201      	movs	r2, #1
 8005a2c:	601a      	str	r2, [r3, #0]
 8005a2e:	f7fd fb47 	bl	80030c0 <HAL_GetTick>
 8005a32:	6138      	str	r0, [r7, #16]
 8005a34:	e008      	b.n	8005a48 <HAL_RCC_OscConfig+0x464>
 8005a36:	f7fd fb43 	bl	80030c0 <HAL_GetTick>
 8005a3a:	4602      	mov	r2, r0
 8005a3c:	693b      	ldr	r3, [r7, #16]
 8005a3e:	1ad3      	subs	r3, r2, r3
 8005a40:	2b02      	cmp	r3, #2
 8005a42:	d901      	bls.n	8005a48 <HAL_RCC_OscConfig+0x464>
 8005a44:	2303      	movs	r3, #3
 8005a46:	e064      	b.n	8005b12 <HAL_RCC_OscConfig+0x52e>
 8005a48:	4b11      	ldr	r3, [pc, #68]	@ (8005a90 <HAL_RCC_OscConfig+0x4ac>)
 8005a4a:	681b      	ldr	r3, [r3, #0]
 8005a4c:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8005a50:	2b00      	cmp	r3, #0
 8005a52:	d0f0      	beq.n	8005a36 <HAL_RCC_OscConfig+0x452>
 8005a54:	e05c      	b.n	8005b10 <HAL_RCC_OscConfig+0x52c>
 8005a56:	4b10      	ldr	r3, [pc, #64]	@ (8005a98 <HAL_RCC_OscConfig+0x4b4>)
 8005a58:	2200      	movs	r2, #0
 8005a5a:	601a      	str	r2, [r3, #0]
 8005a5c:	f7fd fb30 	bl	80030c0 <HAL_GetTick>
 8005a60:	6138      	str	r0, [r7, #16]
 8005a62:	e008      	b.n	8005a76 <HAL_RCC_OscConfig+0x492>
 8005a64:	f7fd fb2c 	bl	80030c0 <HAL_GetTick>
 8005a68:	4602      	mov	r2, r0
 8005a6a:	693b      	ldr	r3, [r7, #16]
 8005a6c:	1ad3      	subs	r3, r2, r3
 8005a6e:	2b02      	cmp	r3, #2
 8005a70:	d901      	bls.n	8005a76 <HAL_RCC_OscConfig+0x492>
 8005a72:	2303      	movs	r3, #3
 8005a74:	e04d      	b.n	8005b12 <HAL_RCC_OscConfig+0x52e>
 8005a76:	4b06      	ldr	r3, [pc, #24]	@ (8005a90 <HAL_RCC_OscConfig+0x4ac>)
 8005a78:	681b      	ldr	r3, [r3, #0]
 8005a7a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8005a7e:	2b00      	cmp	r3, #0
 8005a80:	d1f0      	bne.n	8005a64 <HAL_RCC_OscConfig+0x480>
 8005a82:	e045      	b.n	8005b10 <HAL_RCC_OscConfig+0x52c>
 8005a84:	687b      	ldr	r3, [r7, #4]
 8005a86:	699b      	ldr	r3, [r3, #24]
 8005a88:	2b01      	cmp	r3, #1
 8005a8a:	d107      	bne.n	8005a9c <HAL_RCC_OscConfig+0x4b8>
 8005a8c:	2301      	movs	r3, #1
 8005a8e:	e040      	b.n	8005b12 <HAL_RCC_OscConfig+0x52e>
 8005a90:	40023800 	.word	0x40023800
 8005a94:	40007000 	.word	0x40007000
 8005a98:	42470060 	.word	0x42470060
 8005a9c:	4b1f      	ldr	r3, [pc, #124]	@ (8005b1c <HAL_RCC_OscConfig+0x538>)
 8005a9e:	685b      	ldr	r3, [r3, #4]
 8005aa0:	60fb      	str	r3, [r7, #12]
 8005aa2:	687b      	ldr	r3, [r7, #4]
 8005aa4:	699b      	ldr	r3, [r3, #24]
 8005aa6:	2b01      	cmp	r3, #1
 8005aa8:	d030      	beq.n	8005b0c <HAL_RCC_OscConfig+0x528>
 8005aaa:	68fb      	ldr	r3, [r7, #12]
 8005aac:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 8005ab0:	687b      	ldr	r3, [r7, #4]
 8005ab2:	69db      	ldr	r3, [r3, #28]
 8005ab4:	429a      	cmp	r2, r3
 8005ab6:	d129      	bne.n	8005b0c <HAL_RCC_OscConfig+0x528>
 8005ab8:	68fb      	ldr	r3, [r7, #12]
 8005aba:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 8005abe:	687b      	ldr	r3, [r7, #4]
 8005ac0:	6a1b      	ldr	r3, [r3, #32]
 8005ac2:	429a      	cmp	r2, r3
 8005ac4:	d122      	bne.n	8005b0c <HAL_RCC_OscConfig+0x528>
 8005ac6:	68fa      	ldr	r2, [r7, #12]
 8005ac8:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8005acc:	4013      	ands	r3, r2
 8005ace:	687a      	ldr	r2, [r7, #4]
 8005ad0:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8005ad2:	0192      	lsls	r2, r2, #6
 8005ad4:	4293      	cmp	r3, r2
 8005ad6:	d119      	bne.n	8005b0c <HAL_RCC_OscConfig+0x528>
 8005ad8:	68fb      	ldr	r3, [r7, #12]
 8005ada:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 8005ade:	687b      	ldr	r3, [r7, #4]
 8005ae0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005ae2:	085b      	lsrs	r3, r3, #1
 8005ae4:	3b01      	subs	r3, #1
 8005ae6:	041b      	lsls	r3, r3, #16
 8005ae8:	429a      	cmp	r2, r3
 8005aea:	d10f      	bne.n	8005b0c <HAL_RCC_OscConfig+0x528>
 8005aec:	68fb      	ldr	r3, [r7, #12]
 8005aee:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 8005af2:	687b      	ldr	r3, [r7, #4]
 8005af4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005af6:	061b      	lsls	r3, r3, #24
 8005af8:	429a      	cmp	r2, r3
 8005afa:	d107      	bne.n	8005b0c <HAL_RCC_OscConfig+0x528>
 8005afc:	68fb      	ldr	r3, [r7, #12]
 8005afe:	f003 42e0 	and.w	r2, r3, #1879048192	@ 0x70000000
 8005b02:	687b      	ldr	r3, [r7, #4]
 8005b04:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005b06:	071b      	lsls	r3, r3, #28
 8005b08:	429a      	cmp	r2, r3
 8005b0a:	d001      	beq.n	8005b10 <HAL_RCC_OscConfig+0x52c>
 8005b0c:	2301      	movs	r3, #1
 8005b0e:	e000      	b.n	8005b12 <HAL_RCC_OscConfig+0x52e>
 8005b10:	2300      	movs	r3, #0
 8005b12:	4618      	mov	r0, r3
 8005b14:	3718      	adds	r7, #24
 8005b16:	46bd      	mov	sp, r7
 8005b18:	bd80      	pop	{r7, pc}
 8005b1a:	bf00      	nop
 8005b1c:	40023800 	.word	0x40023800

08005b20 <HAL_SPI_Init>:
 8005b20:	b580      	push	{r7, lr}
 8005b22:	b082      	sub	sp, #8
 8005b24:	af00      	add	r7, sp, #0
 8005b26:	6078      	str	r0, [r7, #4]
 8005b28:	687b      	ldr	r3, [r7, #4]
 8005b2a:	2b00      	cmp	r3, #0
 8005b2c:	d101      	bne.n	8005b32 <HAL_SPI_Init+0x12>
 8005b2e:	2301      	movs	r3, #1
 8005b30:	e07b      	b.n	8005c2a <HAL_SPI_Init+0x10a>
 8005b32:	687b      	ldr	r3, [r7, #4]
 8005b34:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005b36:	2b00      	cmp	r3, #0
 8005b38:	d108      	bne.n	8005b4c <HAL_SPI_Init+0x2c>
 8005b3a:	687b      	ldr	r3, [r7, #4]
 8005b3c:	685b      	ldr	r3, [r3, #4]
 8005b3e:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8005b42:	d009      	beq.n	8005b58 <HAL_SPI_Init+0x38>
 8005b44:	687b      	ldr	r3, [r7, #4]
 8005b46:	2200      	movs	r2, #0
 8005b48:	61da      	str	r2, [r3, #28]
 8005b4a:	e005      	b.n	8005b58 <HAL_SPI_Init+0x38>
 8005b4c:	687b      	ldr	r3, [r7, #4]
 8005b4e:	2200      	movs	r2, #0
 8005b50:	611a      	str	r2, [r3, #16]
 8005b52:	687b      	ldr	r3, [r7, #4]
 8005b54:	2200      	movs	r2, #0
 8005b56:	615a      	str	r2, [r3, #20]
 8005b58:	687b      	ldr	r3, [r7, #4]
 8005b5a:	2200      	movs	r2, #0
 8005b5c:	629a      	str	r2, [r3, #40]	@ 0x28
 8005b5e:	687b      	ldr	r3, [r7, #4]
 8005b60:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8005b64:	b2db      	uxtb	r3, r3
 8005b66:	2b00      	cmp	r3, #0
 8005b68:	d106      	bne.n	8005b78 <HAL_SPI_Init+0x58>
 8005b6a:	687b      	ldr	r3, [r7, #4]
 8005b6c:	2200      	movs	r2, #0
 8005b6e:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8005b72:	6878      	ldr	r0, [r7, #4]
 8005b74:	f7fc fc02 	bl	800237c <HAL_SPI_MspInit>
 8005b78:	687b      	ldr	r3, [r7, #4]
 8005b7a:	2202      	movs	r2, #2
 8005b7c:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8005b80:	687b      	ldr	r3, [r7, #4]
 8005b82:	681b      	ldr	r3, [r3, #0]
 8005b84:	681a      	ldr	r2, [r3, #0]
 8005b86:	687b      	ldr	r3, [r7, #4]
 8005b88:	681b      	ldr	r3, [r3, #0]
 8005b8a:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005b8e:	601a      	str	r2, [r3, #0]
 8005b90:	687b      	ldr	r3, [r7, #4]
 8005b92:	685b      	ldr	r3, [r3, #4]
 8005b94:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 8005b98:	687b      	ldr	r3, [r7, #4]
 8005b9a:	689b      	ldr	r3, [r3, #8]
 8005b9c:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 8005ba0:	431a      	orrs	r2, r3
 8005ba2:	687b      	ldr	r3, [r7, #4]
 8005ba4:	68db      	ldr	r3, [r3, #12]
 8005ba6:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8005baa:	431a      	orrs	r2, r3
 8005bac:	687b      	ldr	r3, [r7, #4]
 8005bae:	691b      	ldr	r3, [r3, #16]
 8005bb0:	f003 0302 	and.w	r3, r3, #2
 8005bb4:	431a      	orrs	r2, r3
 8005bb6:	687b      	ldr	r3, [r7, #4]
 8005bb8:	695b      	ldr	r3, [r3, #20]
 8005bba:	f003 0301 	and.w	r3, r3, #1
 8005bbe:	431a      	orrs	r2, r3
 8005bc0:	687b      	ldr	r3, [r7, #4]
 8005bc2:	699b      	ldr	r3, [r3, #24]
 8005bc4:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8005bc8:	431a      	orrs	r2, r3
 8005bca:	687b      	ldr	r3, [r7, #4]
 8005bcc:	69db      	ldr	r3, [r3, #28]
 8005bce:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8005bd2:	431a      	orrs	r2, r3
 8005bd4:	687b      	ldr	r3, [r7, #4]
 8005bd6:	6a1b      	ldr	r3, [r3, #32]
 8005bd8:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005bdc:	ea42 0103 	orr.w	r1, r2, r3
 8005be0:	687b      	ldr	r3, [r7, #4]
 8005be2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005be4:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 8005be8:	687b      	ldr	r3, [r7, #4]
 8005bea:	681b      	ldr	r3, [r3, #0]
 8005bec:	430a      	orrs	r2, r1
 8005bee:	601a      	str	r2, [r3, #0]
 8005bf0:	687b      	ldr	r3, [r7, #4]
 8005bf2:	699b      	ldr	r3, [r3, #24]
 8005bf4:	0c1b      	lsrs	r3, r3, #16
 8005bf6:	f003 0104 	and.w	r1, r3, #4
 8005bfa:	687b      	ldr	r3, [r7, #4]
 8005bfc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005bfe:	f003 0210 	and.w	r2, r3, #16
 8005c02:	687b      	ldr	r3, [r7, #4]
 8005c04:	681b      	ldr	r3, [r3, #0]
 8005c06:	430a      	orrs	r2, r1
 8005c08:	605a      	str	r2, [r3, #4]
 8005c0a:	687b      	ldr	r3, [r7, #4]
 8005c0c:	681b      	ldr	r3, [r3, #0]
 8005c0e:	69da      	ldr	r2, [r3, #28]
 8005c10:	687b      	ldr	r3, [r7, #4]
 8005c12:	681b      	ldr	r3, [r3, #0]
 8005c14:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8005c18:	61da      	str	r2, [r3, #28]
 8005c1a:	687b      	ldr	r3, [r7, #4]
 8005c1c:	2200      	movs	r2, #0
 8005c1e:	655a      	str	r2, [r3, #84]	@ 0x54
 8005c20:	687b      	ldr	r3, [r7, #4]
 8005c22:	2201      	movs	r2, #1
 8005c24:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8005c28:	2300      	movs	r3, #0
 8005c2a:	4618      	mov	r0, r3
 8005c2c:	3708      	adds	r7, #8
 8005c2e:	46bd      	mov	sp, r7
 8005c30:	bd80      	pop	{r7, pc}
	...

08005c34 <HAL_SPI_IRQHandler>:
 8005c34:	b580      	push	{r7, lr}
 8005c36:	b088      	sub	sp, #32
 8005c38:	af00      	add	r7, sp, #0
 8005c3a:	6078      	str	r0, [r7, #4]
 8005c3c:	687b      	ldr	r3, [r7, #4]
 8005c3e:	681b      	ldr	r3, [r3, #0]
 8005c40:	685b      	ldr	r3, [r3, #4]
 8005c42:	61fb      	str	r3, [r7, #28]
 8005c44:	687b      	ldr	r3, [r7, #4]
 8005c46:	681b      	ldr	r3, [r3, #0]
 8005c48:	689b      	ldr	r3, [r3, #8]
 8005c4a:	61bb      	str	r3, [r7, #24]
 8005c4c:	69bb      	ldr	r3, [r7, #24]
 8005c4e:	099b      	lsrs	r3, r3, #6
 8005c50:	f003 0301 	and.w	r3, r3, #1
 8005c54:	2b00      	cmp	r3, #0
 8005c56:	d10f      	bne.n	8005c78 <HAL_SPI_IRQHandler+0x44>
 8005c58:	69bb      	ldr	r3, [r7, #24]
 8005c5a:	f003 0301 	and.w	r3, r3, #1
 8005c5e:	2b00      	cmp	r3, #0
 8005c60:	d00a      	beq.n	8005c78 <HAL_SPI_IRQHandler+0x44>
 8005c62:	69fb      	ldr	r3, [r7, #28]
 8005c64:	099b      	lsrs	r3, r3, #6
 8005c66:	f003 0301 	and.w	r3, r3, #1
 8005c6a:	2b00      	cmp	r3, #0
 8005c6c:	d004      	beq.n	8005c78 <HAL_SPI_IRQHandler+0x44>
 8005c6e:	687b      	ldr	r3, [r7, #4]
 8005c70:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005c72:	6878      	ldr	r0, [r7, #4]
 8005c74:	4798      	blx	r3
 8005c76:	e0d7      	b.n	8005e28 <HAL_SPI_IRQHandler+0x1f4>
 8005c78:	69bb      	ldr	r3, [r7, #24]
 8005c7a:	085b      	lsrs	r3, r3, #1
 8005c7c:	f003 0301 	and.w	r3, r3, #1
 8005c80:	2b00      	cmp	r3, #0
 8005c82:	d00a      	beq.n	8005c9a <HAL_SPI_IRQHandler+0x66>
 8005c84:	69fb      	ldr	r3, [r7, #28]
 8005c86:	09db      	lsrs	r3, r3, #7
 8005c88:	f003 0301 	and.w	r3, r3, #1
 8005c8c:	2b00      	cmp	r3, #0
 8005c8e:	d004      	beq.n	8005c9a <HAL_SPI_IRQHandler+0x66>
 8005c90:	687b      	ldr	r3, [r7, #4]
 8005c92:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005c94:	6878      	ldr	r0, [r7, #4]
 8005c96:	4798      	blx	r3
 8005c98:	e0c6      	b.n	8005e28 <HAL_SPI_IRQHandler+0x1f4>
 8005c9a:	69bb      	ldr	r3, [r7, #24]
 8005c9c:	095b      	lsrs	r3, r3, #5
 8005c9e:	f003 0301 	and.w	r3, r3, #1
 8005ca2:	2b00      	cmp	r3, #0
 8005ca4:	d10c      	bne.n	8005cc0 <HAL_SPI_IRQHandler+0x8c>
 8005ca6:	69bb      	ldr	r3, [r7, #24]
 8005ca8:	099b      	lsrs	r3, r3, #6
 8005caa:	f003 0301 	and.w	r3, r3, #1
 8005cae:	2b00      	cmp	r3, #0
 8005cb0:	d106      	bne.n	8005cc0 <HAL_SPI_IRQHandler+0x8c>
 8005cb2:	69bb      	ldr	r3, [r7, #24]
 8005cb4:	0a1b      	lsrs	r3, r3, #8
 8005cb6:	f003 0301 	and.w	r3, r3, #1
 8005cba:	2b00      	cmp	r3, #0
 8005cbc:	f000 80b4 	beq.w	8005e28 <HAL_SPI_IRQHandler+0x1f4>
 8005cc0:	69fb      	ldr	r3, [r7, #28]
 8005cc2:	095b      	lsrs	r3, r3, #5
 8005cc4:	f003 0301 	and.w	r3, r3, #1
 8005cc8:	2b00      	cmp	r3, #0
 8005cca:	f000 80ad 	beq.w	8005e28 <HAL_SPI_IRQHandler+0x1f4>
 8005cce:	69bb      	ldr	r3, [r7, #24]
 8005cd0:	099b      	lsrs	r3, r3, #6
 8005cd2:	f003 0301 	and.w	r3, r3, #1
 8005cd6:	2b00      	cmp	r3, #0
 8005cd8:	d023      	beq.n	8005d22 <HAL_SPI_IRQHandler+0xee>
 8005cda:	687b      	ldr	r3, [r7, #4]
 8005cdc:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8005ce0:	b2db      	uxtb	r3, r3
 8005ce2:	2b03      	cmp	r3, #3
 8005ce4:	d011      	beq.n	8005d0a <HAL_SPI_IRQHandler+0xd6>
 8005ce6:	687b      	ldr	r3, [r7, #4]
 8005ce8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005cea:	f043 0204 	orr.w	r2, r3, #4
 8005cee:	687b      	ldr	r3, [r7, #4]
 8005cf0:	655a      	str	r2, [r3, #84]	@ 0x54
 8005cf2:	2300      	movs	r3, #0
 8005cf4:	617b      	str	r3, [r7, #20]
 8005cf6:	687b      	ldr	r3, [r7, #4]
 8005cf8:	681b      	ldr	r3, [r3, #0]
 8005cfa:	68db      	ldr	r3, [r3, #12]
 8005cfc:	617b      	str	r3, [r7, #20]
 8005cfe:	687b      	ldr	r3, [r7, #4]
 8005d00:	681b      	ldr	r3, [r3, #0]
 8005d02:	689b      	ldr	r3, [r3, #8]
 8005d04:	617b      	str	r3, [r7, #20]
 8005d06:	697b      	ldr	r3, [r7, #20]
 8005d08:	e00b      	b.n	8005d22 <HAL_SPI_IRQHandler+0xee>
 8005d0a:	2300      	movs	r3, #0
 8005d0c:	613b      	str	r3, [r7, #16]
 8005d0e:	687b      	ldr	r3, [r7, #4]
 8005d10:	681b      	ldr	r3, [r3, #0]
 8005d12:	68db      	ldr	r3, [r3, #12]
 8005d14:	613b      	str	r3, [r7, #16]
 8005d16:	687b      	ldr	r3, [r7, #4]
 8005d18:	681b      	ldr	r3, [r3, #0]
 8005d1a:	689b      	ldr	r3, [r3, #8]
 8005d1c:	613b      	str	r3, [r7, #16]
 8005d1e:	693b      	ldr	r3, [r7, #16]
 8005d20:	e082      	b.n	8005e28 <HAL_SPI_IRQHandler+0x1f4>
 8005d22:	69bb      	ldr	r3, [r7, #24]
 8005d24:	095b      	lsrs	r3, r3, #5
 8005d26:	f003 0301 	and.w	r3, r3, #1
 8005d2a:	2b00      	cmp	r3, #0
 8005d2c:	d014      	beq.n	8005d58 <HAL_SPI_IRQHandler+0x124>
 8005d2e:	687b      	ldr	r3, [r7, #4]
 8005d30:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005d32:	f043 0201 	orr.w	r2, r3, #1
 8005d36:	687b      	ldr	r3, [r7, #4]
 8005d38:	655a      	str	r2, [r3, #84]	@ 0x54
 8005d3a:	2300      	movs	r3, #0
 8005d3c:	60fb      	str	r3, [r7, #12]
 8005d3e:	687b      	ldr	r3, [r7, #4]
 8005d40:	681b      	ldr	r3, [r3, #0]
 8005d42:	689b      	ldr	r3, [r3, #8]
 8005d44:	60fb      	str	r3, [r7, #12]
 8005d46:	687b      	ldr	r3, [r7, #4]
 8005d48:	681b      	ldr	r3, [r3, #0]
 8005d4a:	681a      	ldr	r2, [r3, #0]
 8005d4c:	687b      	ldr	r3, [r7, #4]
 8005d4e:	681b      	ldr	r3, [r3, #0]
 8005d50:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005d54:	601a      	str	r2, [r3, #0]
 8005d56:	68fb      	ldr	r3, [r7, #12]
 8005d58:	69bb      	ldr	r3, [r7, #24]
 8005d5a:	0a1b      	lsrs	r3, r3, #8
 8005d5c:	f003 0301 	and.w	r3, r3, #1
 8005d60:	2b00      	cmp	r3, #0
 8005d62:	d00c      	beq.n	8005d7e <HAL_SPI_IRQHandler+0x14a>
 8005d64:	687b      	ldr	r3, [r7, #4]
 8005d66:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005d68:	f043 0208 	orr.w	r2, r3, #8
 8005d6c:	687b      	ldr	r3, [r7, #4]
 8005d6e:	655a      	str	r2, [r3, #84]	@ 0x54
 8005d70:	2300      	movs	r3, #0
 8005d72:	60bb      	str	r3, [r7, #8]
 8005d74:	687b      	ldr	r3, [r7, #4]
 8005d76:	681b      	ldr	r3, [r3, #0]
 8005d78:	689b      	ldr	r3, [r3, #8]
 8005d7a:	60bb      	str	r3, [r7, #8]
 8005d7c:	68bb      	ldr	r3, [r7, #8]
 8005d7e:	687b      	ldr	r3, [r7, #4]
 8005d80:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005d82:	2b00      	cmp	r3, #0
 8005d84:	d04f      	beq.n	8005e26 <HAL_SPI_IRQHandler+0x1f2>
 8005d86:	687b      	ldr	r3, [r7, #4]
 8005d88:	681b      	ldr	r3, [r3, #0]
 8005d8a:	685a      	ldr	r2, [r3, #4]
 8005d8c:	687b      	ldr	r3, [r7, #4]
 8005d8e:	681b      	ldr	r3, [r3, #0]
 8005d90:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8005d94:	605a      	str	r2, [r3, #4]
 8005d96:	687b      	ldr	r3, [r7, #4]
 8005d98:	2201      	movs	r2, #1
 8005d9a:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8005d9e:	69fb      	ldr	r3, [r7, #28]
 8005da0:	f003 0302 	and.w	r3, r3, #2
 8005da4:	2b00      	cmp	r3, #0
 8005da6:	d104      	bne.n	8005db2 <HAL_SPI_IRQHandler+0x17e>
 8005da8:	69fb      	ldr	r3, [r7, #28]
 8005daa:	f003 0301 	and.w	r3, r3, #1
 8005dae:	2b00      	cmp	r3, #0
 8005db0:	d034      	beq.n	8005e1c <HAL_SPI_IRQHandler+0x1e8>
 8005db2:	687b      	ldr	r3, [r7, #4]
 8005db4:	681b      	ldr	r3, [r3, #0]
 8005db6:	685a      	ldr	r2, [r3, #4]
 8005db8:	687b      	ldr	r3, [r7, #4]
 8005dba:	681b      	ldr	r3, [r3, #0]
 8005dbc:	f022 0203 	bic.w	r2, r2, #3
 8005dc0:	605a      	str	r2, [r3, #4]
 8005dc2:	687b      	ldr	r3, [r7, #4]
 8005dc4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8005dc6:	2b00      	cmp	r3, #0
 8005dc8:	d011      	beq.n	8005dee <HAL_SPI_IRQHandler+0x1ba>
 8005dca:	687b      	ldr	r3, [r7, #4]
 8005dcc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8005dce:	4a18      	ldr	r2, [pc, #96]	@ (8005e30 <HAL_SPI_IRQHandler+0x1fc>)
 8005dd0:	651a      	str	r2, [r3, #80]	@ 0x50
 8005dd2:	687b      	ldr	r3, [r7, #4]
 8005dd4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8005dd6:	4618      	mov	r0, r3
 8005dd8:	f7fd ff33 	bl	8003c42 <HAL_DMA_Abort_IT>
 8005ddc:	4603      	mov	r3, r0
 8005dde:	2b00      	cmp	r3, #0
 8005de0:	d005      	beq.n	8005dee <HAL_SPI_IRQHandler+0x1ba>
 8005de2:	687b      	ldr	r3, [r7, #4]
 8005de4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005de6:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 8005dea:	687b      	ldr	r3, [r7, #4]
 8005dec:	655a      	str	r2, [r3, #84]	@ 0x54
 8005dee:	687b      	ldr	r3, [r7, #4]
 8005df0:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005df2:	2b00      	cmp	r3, #0
 8005df4:	d016      	beq.n	8005e24 <HAL_SPI_IRQHandler+0x1f0>
 8005df6:	687b      	ldr	r3, [r7, #4]
 8005df8:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005dfa:	4a0d      	ldr	r2, [pc, #52]	@ (8005e30 <HAL_SPI_IRQHandler+0x1fc>)
 8005dfc:	651a      	str	r2, [r3, #80]	@ 0x50
 8005dfe:	687b      	ldr	r3, [r7, #4]
 8005e00:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005e02:	4618      	mov	r0, r3
 8005e04:	f7fd ff1d 	bl	8003c42 <HAL_DMA_Abort_IT>
 8005e08:	4603      	mov	r3, r0
 8005e0a:	2b00      	cmp	r3, #0
 8005e0c:	d00a      	beq.n	8005e24 <HAL_SPI_IRQHandler+0x1f0>
 8005e0e:	687b      	ldr	r3, [r7, #4]
 8005e10:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005e12:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 8005e16:	687b      	ldr	r3, [r7, #4]
 8005e18:	655a      	str	r2, [r3, #84]	@ 0x54
 8005e1a:	e003      	b.n	8005e24 <HAL_SPI_IRQHandler+0x1f0>
 8005e1c:	6878      	ldr	r0, [r7, #4]
 8005e1e:	f000 f809 	bl	8005e34 <HAL_SPI_ErrorCallback>
 8005e22:	e000      	b.n	8005e26 <HAL_SPI_IRQHandler+0x1f2>
 8005e24:	bf00      	nop
 8005e26:	bf00      	nop
 8005e28:	3720      	adds	r7, #32
 8005e2a:	46bd      	mov	sp, r7
 8005e2c:	bd80      	pop	{r7, pc}
 8005e2e:	bf00      	nop
 8005e30:	08005e49 	.word	0x08005e49

08005e34 <HAL_SPI_ErrorCallback>:
 8005e34:	b480      	push	{r7}
 8005e36:	b083      	sub	sp, #12
 8005e38:	af00      	add	r7, sp, #0
 8005e3a:	6078      	str	r0, [r7, #4]
 8005e3c:	bf00      	nop
 8005e3e:	370c      	adds	r7, #12
 8005e40:	46bd      	mov	sp, r7
 8005e42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e46:	4770      	bx	lr

08005e48 <SPI_DMAAbortOnError>:
 8005e48:	b580      	push	{r7, lr}
 8005e4a:	b084      	sub	sp, #16
 8005e4c:	af00      	add	r7, sp, #0
 8005e4e:	6078      	str	r0, [r7, #4]
 8005e50:	687b      	ldr	r3, [r7, #4]
 8005e52:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005e54:	60fb      	str	r3, [r7, #12]
 8005e56:	68fb      	ldr	r3, [r7, #12]
 8005e58:	2200      	movs	r2, #0
 8005e5a:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8005e5c:	68fb      	ldr	r3, [r7, #12]
 8005e5e:	2200      	movs	r2, #0
 8005e60:	86da      	strh	r2, [r3, #54]	@ 0x36
 8005e62:	68f8      	ldr	r0, [r7, #12]
 8005e64:	f7ff ffe6 	bl	8005e34 <HAL_SPI_ErrorCallback>
 8005e68:	bf00      	nop
 8005e6a:	3710      	adds	r7, #16
 8005e6c:	46bd      	mov	sp, r7
 8005e6e:	bd80      	pop	{r7, pc}

08005e70 <HAL_TIM_Base_Init>:
 8005e70:	b580      	push	{r7, lr}
 8005e72:	b082      	sub	sp, #8
 8005e74:	af00      	add	r7, sp, #0
 8005e76:	6078      	str	r0, [r7, #4]
 8005e78:	687b      	ldr	r3, [r7, #4]
 8005e7a:	2b00      	cmp	r3, #0
 8005e7c:	d101      	bne.n	8005e82 <HAL_TIM_Base_Init+0x12>
 8005e7e:	2301      	movs	r3, #1
 8005e80:	e041      	b.n	8005f06 <HAL_TIM_Base_Init+0x96>
 8005e82:	687b      	ldr	r3, [r7, #4]
 8005e84:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8005e88:	b2db      	uxtb	r3, r3
 8005e8a:	2b00      	cmp	r3, #0
 8005e8c:	d106      	bne.n	8005e9c <HAL_TIM_Base_Init+0x2c>
 8005e8e:	687b      	ldr	r3, [r7, #4]
 8005e90:	2200      	movs	r2, #0
 8005e92:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005e96:	6878      	ldr	r0, [r7, #4]
 8005e98:	f7fc fd9e 	bl	80029d8 <HAL_TIM_Base_MspInit>
 8005e9c:	687b      	ldr	r3, [r7, #4]
 8005e9e:	2202      	movs	r2, #2
 8005ea0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005ea4:	687b      	ldr	r3, [r7, #4]
 8005ea6:	681a      	ldr	r2, [r3, #0]
 8005ea8:	687b      	ldr	r3, [r7, #4]
 8005eaa:	3304      	adds	r3, #4
 8005eac:	4619      	mov	r1, r3
 8005eae:	4610      	mov	r0, r2
 8005eb0:	f000 fb5e 	bl	8006570 <TIM_Base_SetConfig>
 8005eb4:	687b      	ldr	r3, [r7, #4]
 8005eb6:	2201      	movs	r2, #1
 8005eb8:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8005ebc:	687b      	ldr	r3, [r7, #4]
 8005ebe:	2201      	movs	r2, #1
 8005ec0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005ec4:	687b      	ldr	r3, [r7, #4]
 8005ec6:	2201      	movs	r2, #1
 8005ec8:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8005ecc:	687b      	ldr	r3, [r7, #4]
 8005ece:	2201      	movs	r2, #1
 8005ed0:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005ed4:	687b      	ldr	r3, [r7, #4]
 8005ed6:	2201      	movs	r2, #1
 8005ed8:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005edc:	687b      	ldr	r3, [r7, #4]
 8005ede:	2201      	movs	r2, #1
 8005ee0:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005ee4:	687b      	ldr	r3, [r7, #4]
 8005ee6:	2201      	movs	r2, #1
 8005ee8:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8005eec:	687b      	ldr	r3, [r7, #4]
 8005eee:	2201      	movs	r2, #1
 8005ef0:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8005ef4:	687b      	ldr	r3, [r7, #4]
 8005ef6:	2201      	movs	r2, #1
 8005ef8:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8005efc:	687b      	ldr	r3, [r7, #4]
 8005efe:	2201      	movs	r2, #1
 8005f00:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005f04:	2300      	movs	r3, #0
 8005f06:	4618      	mov	r0, r3
 8005f08:	3708      	adds	r7, #8
 8005f0a:	46bd      	mov	sp, r7
 8005f0c:	bd80      	pop	{r7, pc}
	...

08005f10 <HAL_TIM_Base_Start>:
 8005f10:	b480      	push	{r7}
 8005f12:	b085      	sub	sp, #20
 8005f14:	af00      	add	r7, sp, #0
 8005f16:	6078      	str	r0, [r7, #4]
 8005f18:	687b      	ldr	r3, [r7, #4]
 8005f1a:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8005f1e:	b2db      	uxtb	r3, r3
 8005f20:	2b01      	cmp	r3, #1
 8005f22:	d001      	beq.n	8005f28 <HAL_TIM_Base_Start+0x18>
 8005f24:	2301      	movs	r3, #1
 8005f26:	e046      	b.n	8005fb6 <HAL_TIM_Base_Start+0xa6>
 8005f28:	687b      	ldr	r3, [r7, #4]
 8005f2a:	2202      	movs	r2, #2
 8005f2c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005f30:	687b      	ldr	r3, [r7, #4]
 8005f32:	681b      	ldr	r3, [r3, #0]
 8005f34:	4a23      	ldr	r2, [pc, #140]	@ (8005fc4 <HAL_TIM_Base_Start+0xb4>)
 8005f36:	4293      	cmp	r3, r2
 8005f38:	d022      	beq.n	8005f80 <HAL_TIM_Base_Start+0x70>
 8005f3a:	687b      	ldr	r3, [r7, #4]
 8005f3c:	681b      	ldr	r3, [r3, #0]
 8005f3e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005f42:	d01d      	beq.n	8005f80 <HAL_TIM_Base_Start+0x70>
 8005f44:	687b      	ldr	r3, [r7, #4]
 8005f46:	681b      	ldr	r3, [r3, #0]
 8005f48:	4a1f      	ldr	r2, [pc, #124]	@ (8005fc8 <HAL_TIM_Base_Start+0xb8>)
 8005f4a:	4293      	cmp	r3, r2
 8005f4c:	d018      	beq.n	8005f80 <HAL_TIM_Base_Start+0x70>
 8005f4e:	687b      	ldr	r3, [r7, #4]
 8005f50:	681b      	ldr	r3, [r3, #0]
 8005f52:	4a1e      	ldr	r2, [pc, #120]	@ (8005fcc <HAL_TIM_Base_Start+0xbc>)
 8005f54:	4293      	cmp	r3, r2
 8005f56:	d013      	beq.n	8005f80 <HAL_TIM_Base_Start+0x70>
 8005f58:	687b      	ldr	r3, [r7, #4]
 8005f5a:	681b      	ldr	r3, [r3, #0]
 8005f5c:	4a1c      	ldr	r2, [pc, #112]	@ (8005fd0 <HAL_TIM_Base_Start+0xc0>)
 8005f5e:	4293      	cmp	r3, r2
 8005f60:	d00e      	beq.n	8005f80 <HAL_TIM_Base_Start+0x70>
 8005f62:	687b      	ldr	r3, [r7, #4]
 8005f64:	681b      	ldr	r3, [r3, #0]
 8005f66:	4a1b      	ldr	r2, [pc, #108]	@ (8005fd4 <HAL_TIM_Base_Start+0xc4>)
 8005f68:	4293      	cmp	r3, r2
 8005f6a:	d009      	beq.n	8005f80 <HAL_TIM_Base_Start+0x70>
 8005f6c:	687b      	ldr	r3, [r7, #4]
 8005f6e:	681b      	ldr	r3, [r3, #0]
 8005f70:	4a19      	ldr	r2, [pc, #100]	@ (8005fd8 <HAL_TIM_Base_Start+0xc8>)
 8005f72:	4293      	cmp	r3, r2
 8005f74:	d004      	beq.n	8005f80 <HAL_TIM_Base_Start+0x70>
 8005f76:	687b      	ldr	r3, [r7, #4]
 8005f78:	681b      	ldr	r3, [r3, #0]
 8005f7a:	4a18      	ldr	r2, [pc, #96]	@ (8005fdc <HAL_TIM_Base_Start+0xcc>)
 8005f7c:	4293      	cmp	r3, r2
 8005f7e:	d111      	bne.n	8005fa4 <HAL_TIM_Base_Start+0x94>
 8005f80:	687b      	ldr	r3, [r7, #4]
 8005f82:	681b      	ldr	r3, [r3, #0]
 8005f84:	689b      	ldr	r3, [r3, #8]
 8005f86:	f003 0307 	and.w	r3, r3, #7
 8005f8a:	60fb      	str	r3, [r7, #12]
 8005f8c:	68fb      	ldr	r3, [r7, #12]
 8005f8e:	2b06      	cmp	r3, #6
 8005f90:	d010      	beq.n	8005fb4 <HAL_TIM_Base_Start+0xa4>
 8005f92:	687b      	ldr	r3, [r7, #4]
 8005f94:	681b      	ldr	r3, [r3, #0]
 8005f96:	681a      	ldr	r2, [r3, #0]
 8005f98:	687b      	ldr	r3, [r7, #4]
 8005f9a:	681b      	ldr	r3, [r3, #0]
 8005f9c:	f042 0201 	orr.w	r2, r2, #1
 8005fa0:	601a      	str	r2, [r3, #0]
 8005fa2:	e007      	b.n	8005fb4 <HAL_TIM_Base_Start+0xa4>
 8005fa4:	687b      	ldr	r3, [r7, #4]
 8005fa6:	681b      	ldr	r3, [r3, #0]
 8005fa8:	681a      	ldr	r2, [r3, #0]
 8005faa:	687b      	ldr	r3, [r7, #4]
 8005fac:	681b      	ldr	r3, [r3, #0]
 8005fae:	f042 0201 	orr.w	r2, r2, #1
 8005fb2:	601a      	str	r2, [r3, #0]
 8005fb4:	2300      	movs	r3, #0
 8005fb6:	4618      	mov	r0, r3
 8005fb8:	3714      	adds	r7, #20
 8005fba:	46bd      	mov	sp, r7
 8005fbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005fc0:	4770      	bx	lr
 8005fc2:	bf00      	nop
 8005fc4:	40010000 	.word	0x40010000
 8005fc8:	40000400 	.word	0x40000400
 8005fcc:	40000800 	.word	0x40000800
 8005fd0:	40000c00 	.word	0x40000c00
 8005fd4:	40010400 	.word	0x40010400
 8005fd8:	40014000 	.word	0x40014000
 8005fdc:	40001800 	.word	0x40001800

08005fe0 <HAL_TIM_Base_Stop>:
 8005fe0:	b480      	push	{r7}
 8005fe2:	b083      	sub	sp, #12
 8005fe4:	af00      	add	r7, sp, #0
 8005fe6:	6078      	str	r0, [r7, #4]
 8005fe8:	687b      	ldr	r3, [r7, #4]
 8005fea:	681b      	ldr	r3, [r3, #0]
 8005fec:	6a1a      	ldr	r2, [r3, #32]
 8005fee:	f241 1311 	movw	r3, #4369	@ 0x1111
 8005ff2:	4013      	ands	r3, r2
 8005ff4:	2b00      	cmp	r3, #0
 8005ff6:	d10f      	bne.n	8006018 <HAL_TIM_Base_Stop+0x38>
 8005ff8:	687b      	ldr	r3, [r7, #4]
 8005ffa:	681b      	ldr	r3, [r3, #0]
 8005ffc:	6a1a      	ldr	r2, [r3, #32]
 8005ffe:	f240 4344 	movw	r3, #1092	@ 0x444
 8006002:	4013      	ands	r3, r2
 8006004:	2b00      	cmp	r3, #0
 8006006:	d107      	bne.n	8006018 <HAL_TIM_Base_Stop+0x38>
 8006008:	687b      	ldr	r3, [r7, #4]
 800600a:	681b      	ldr	r3, [r3, #0]
 800600c:	681a      	ldr	r2, [r3, #0]
 800600e:	687b      	ldr	r3, [r7, #4]
 8006010:	681b      	ldr	r3, [r3, #0]
 8006012:	f022 0201 	bic.w	r2, r2, #1
 8006016:	601a      	str	r2, [r3, #0]
 8006018:	687b      	ldr	r3, [r7, #4]
 800601a:	2201      	movs	r2, #1
 800601c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8006020:	2300      	movs	r3, #0
 8006022:	4618      	mov	r0, r3
 8006024:	370c      	adds	r7, #12
 8006026:	46bd      	mov	sp, r7
 8006028:	f85d 7b04 	ldr.w	r7, [sp], #4
 800602c:	4770      	bx	lr

0800602e <HAL_TIM_PWM_Init>:
 800602e:	b580      	push	{r7, lr}
 8006030:	b082      	sub	sp, #8
 8006032:	af00      	add	r7, sp, #0
 8006034:	6078      	str	r0, [r7, #4]
 8006036:	687b      	ldr	r3, [r7, #4]
 8006038:	2b00      	cmp	r3, #0
 800603a:	d101      	bne.n	8006040 <HAL_TIM_PWM_Init+0x12>
 800603c:	2301      	movs	r3, #1
 800603e:	e041      	b.n	80060c4 <HAL_TIM_PWM_Init+0x96>
 8006040:	687b      	ldr	r3, [r7, #4]
 8006042:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8006046:	b2db      	uxtb	r3, r3
 8006048:	2b00      	cmp	r3, #0
 800604a:	d106      	bne.n	800605a <HAL_TIM_PWM_Init+0x2c>
 800604c:	687b      	ldr	r3, [r7, #4]
 800604e:	2200      	movs	r2, #0
 8006050:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006054:	6878      	ldr	r0, [r7, #4]
 8006056:	f7fc fd0b 	bl	8002a70 <HAL_TIM_PWM_MspInit>
 800605a:	687b      	ldr	r3, [r7, #4]
 800605c:	2202      	movs	r2, #2
 800605e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8006062:	687b      	ldr	r3, [r7, #4]
 8006064:	681a      	ldr	r2, [r3, #0]
 8006066:	687b      	ldr	r3, [r7, #4]
 8006068:	3304      	adds	r3, #4
 800606a:	4619      	mov	r1, r3
 800606c:	4610      	mov	r0, r2
 800606e:	f000 fa7f 	bl	8006570 <TIM_Base_SetConfig>
 8006072:	687b      	ldr	r3, [r7, #4]
 8006074:	2201      	movs	r2, #1
 8006076:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 800607a:	687b      	ldr	r3, [r7, #4]
 800607c:	2201      	movs	r2, #1
 800607e:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8006082:	687b      	ldr	r3, [r7, #4]
 8006084:	2201      	movs	r2, #1
 8006086:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800608a:	687b      	ldr	r3, [r7, #4]
 800608c:	2201      	movs	r2, #1
 800608e:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8006092:	687b      	ldr	r3, [r7, #4]
 8006094:	2201      	movs	r2, #1
 8006096:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800609a:	687b      	ldr	r3, [r7, #4]
 800609c:	2201      	movs	r2, #1
 800609e:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80060a2:	687b      	ldr	r3, [r7, #4]
 80060a4:	2201      	movs	r2, #1
 80060a6:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80060aa:	687b      	ldr	r3, [r7, #4]
 80060ac:	2201      	movs	r2, #1
 80060ae:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80060b2:	687b      	ldr	r3, [r7, #4]
 80060b4:	2201      	movs	r2, #1
 80060b6:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80060ba:	687b      	ldr	r3, [r7, #4]
 80060bc:	2201      	movs	r2, #1
 80060be:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80060c2:	2300      	movs	r3, #0
 80060c4:	4618      	mov	r0, r3
 80060c6:	3708      	adds	r7, #8
 80060c8:	46bd      	mov	sp, r7
 80060ca:	bd80      	pop	{r7, pc}

080060cc <HAL_TIM_PWM_Start>:
 80060cc:	b580      	push	{r7, lr}
 80060ce:	b084      	sub	sp, #16
 80060d0:	af00      	add	r7, sp, #0
 80060d2:	6078      	str	r0, [r7, #4]
 80060d4:	6039      	str	r1, [r7, #0]
 80060d6:	683b      	ldr	r3, [r7, #0]
 80060d8:	2b00      	cmp	r3, #0
 80060da:	d109      	bne.n	80060f0 <HAL_TIM_PWM_Start+0x24>
 80060dc:	687b      	ldr	r3, [r7, #4]
 80060de:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 80060e2:	b2db      	uxtb	r3, r3
 80060e4:	2b01      	cmp	r3, #1
 80060e6:	bf14      	ite	ne
 80060e8:	2301      	movne	r3, #1
 80060ea:	2300      	moveq	r3, #0
 80060ec:	b2db      	uxtb	r3, r3
 80060ee:	e022      	b.n	8006136 <HAL_TIM_PWM_Start+0x6a>
 80060f0:	683b      	ldr	r3, [r7, #0]
 80060f2:	2b04      	cmp	r3, #4
 80060f4:	d109      	bne.n	800610a <HAL_TIM_PWM_Start+0x3e>
 80060f6:	687b      	ldr	r3, [r7, #4]
 80060f8:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 80060fc:	b2db      	uxtb	r3, r3
 80060fe:	2b01      	cmp	r3, #1
 8006100:	bf14      	ite	ne
 8006102:	2301      	movne	r3, #1
 8006104:	2300      	moveq	r3, #0
 8006106:	b2db      	uxtb	r3, r3
 8006108:	e015      	b.n	8006136 <HAL_TIM_PWM_Start+0x6a>
 800610a:	683b      	ldr	r3, [r7, #0]
 800610c:	2b08      	cmp	r3, #8
 800610e:	d109      	bne.n	8006124 <HAL_TIM_PWM_Start+0x58>
 8006110:	687b      	ldr	r3, [r7, #4]
 8006112:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8006116:	b2db      	uxtb	r3, r3
 8006118:	2b01      	cmp	r3, #1
 800611a:	bf14      	ite	ne
 800611c:	2301      	movne	r3, #1
 800611e:	2300      	moveq	r3, #0
 8006120:	b2db      	uxtb	r3, r3
 8006122:	e008      	b.n	8006136 <HAL_TIM_PWM_Start+0x6a>
 8006124:	687b      	ldr	r3, [r7, #4]
 8006126:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800612a:	b2db      	uxtb	r3, r3
 800612c:	2b01      	cmp	r3, #1
 800612e:	bf14      	ite	ne
 8006130:	2301      	movne	r3, #1
 8006132:	2300      	moveq	r3, #0
 8006134:	b2db      	uxtb	r3, r3
 8006136:	2b00      	cmp	r3, #0
 8006138:	d001      	beq.n	800613e <HAL_TIM_PWM_Start+0x72>
 800613a:	2301      	movs	r3, #1
 800613c:	e07c      	b.n	8006238 <HAL_TIM_PWM_Start+0x16c>
 800613e:	683b      	ldr	r3, [r7, #0]
 8006140:	2b00      	cmp	r3, #0
 8006142:	d104      	bne.n	800614e <HAL_TIM_PWM_Start+0x82>
 8006144:	687b      	ldr	r3, [r7, #4]
 8006146:	2202      	movs	r2, #2
 8006148:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800614c:	e013      	b.n	8006176 <HAL_TIM_PWM_Start+0xaa>
 800614e:	683b      	ldr	r3, [r7, #0]
 8006150:	2b04      	cmp	r3, #4
 8006152:	d104      	bne.n	800615e <HAL_TIM_PWM_Start+0x92>
 8006154:	687b      	ldr	r3, [r7, #4]
 8006156:	2202      	movs	r2, #2
 8006158:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800615c:	e00b      	b.n	8006176 <HAL_TIM_PWM_Start+0xaa>
 800615e:	683b      	ldr	r3, [r7, #0]
 8006160:	2b08      	cmp	r3, #8
 8006162:	d104      	bne.n	800616e <HAL_TIM_PWM_Start+0xa2>
 8006164:	687b      	ldr	r3, [r7, #4]
 8006166:	2202      	movs	r2, #2
 8006168:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800616c:	e003      	b.n	8006176 <HAL_TIM_PWM_Start+0xaa>
 800616e:	687b      	ldr	r3, [r7, #4]
 8006170:	2202      	movs	r2, #2
 8006172:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006176:	687b      	ldr	r3, [r7, #4]
 8006178:	681b      	ldr	r3, [r3, #0]
 800617a:	2201      	movs	r2, #1
 800617c:	6839      	ldr	r1, [r7, #0]
 800617e:	4618      	mov	r0, r3
 8006180:	f000 fcec 	bl	8006b5c <TIM_CCxChannelCmd>
 8006184:	687b      	ldr	r3, [r7, #4]
 8006186:	681b      	ldr	r3, [r3, #0]
 8006188:	4a2d      	ldr	r2, [pc, #180]	@ (8006240 <HAL_TIM_PWM_Start+0x174>)
 800618a:	4293      	cmp	r3, r2
 800618c:	d004      	beq.n	8006198 <HAL_TIM_PWM_Start+0xcc>
 800618e:	687b      	ldr	r3, [r7, #4]
 8006190:	681b      	ldr	r3, [r3, #0]
 8006192:	4a2c      	ldr	r2, [pc, #176]	@ (8006244 <HAL_TIM_PWM_Start+0x178>)
 8006194:	4293      	cmp	r3, r2
 8006196:	d101      	bne.n	800619c <HAL_TIM_PWM_Start+0xd0>
 8006198:	2301      	movs	r3, #1
 800619a:	e000      	b.n	800619e <HAL_TIM_PWM_Start+0xd2>
 800619c:	2300      	movs	r3, #0
 800619e:	2b00      	cmp	r3, #0
 80061a0:	d007      	beq.n	80061b2 <HAL_TIM_PWM_Start+0xe6>
 80061a2:	687b      	ldr	r3, [r7, #4]
 80061a4:	681b      	ldr	r3, [r3, #0]
 80061a6:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80061a8:	687b      	ldr	r3, [r7, #4]
 80061aa:	681b      	ldr	r3, [r3, #0]
 80061ac:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80061b0:	645a      	str	r2, [r3, #68]	@ 0x44
 80061b2:	687b      	ldr	r3, [r7, #4]
 80061b4:	681b      	ldr	r3, [r3, #0]
 80061b6:	4a22      	ldr	r2, [pc, #136]	@ (8006240 <HAL_TIM_PWM_Start+0x174>)
 80061b8:	4293      	cmp	r3, r2
 80061ba:	d022      	beq.n	8006202 <HAL_TIM_PWM_Start+0x136>
 80061bc:	687b      	ldr	r3, [r7, #4]
 80061be:	681b      	ldr	r3, [r3, #0]
 80061c0:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80061c4:	d01d      	beq.n	8006202 <HAL_TIM_PWM_Start+0x136>
 80061c6:	687b      	ldr	r3, [r7, #4]
 80061c8:	681b      	ldr	r3, [r3, #0]
 80061ca:	4a1f      	ldr	r2, [pc, #124]	@ (8006248 <HAL_TIM_PWM_Start+0x17c>)
 80061cc:	4293      	cmp	r3, r2
 80061ce:	d018      	beq.n	8006202 <HAL_TIM_PWM_Start+0x136>
 80061d0:	687b      	ldr	r3, [r7, #4]
 80061d2:	681b      	ldr	r3, [r3, #0]
 80061d4:	4a1d      	ldr	r2, [pc, #116]	@ (800624c <HAL_TIM_PWM_Start+0x180>)
 80061d6:	4293      	cmp	r3, r2
 80061d8:	d013      	beq.n	8006202 <HAL_TIM_PWM_Start+0x136>
 80061da:	687b      	ldr	r3, [r7, #4]
 80061dc:	681b      	ldr	r3, [r3, #0]
 80061de:	4a1c      	ldr	r2, [pc, #112]	@ (8006250 <HAL_TIM_PWM_Start+0x184>)
 80061e0:	4293      	cmp	r3, r2
 80061e2:	d00e      	beq.n	8006202 <HAL_TIM_PWM_Start+0x136>
 80061e4:	687b      	ldr	r3, [r7, #4]
 80061e6:	681b      	ldr	r3, [r3, #0]
 80061e8:	4a16      	ldr	r2, [pc, #88]	@ (8006244 <HAL_TIM_PWM_Start+0x178>)
 80061ea:	4293      	cmp	r3, r2
 80061ec:	d009      	beq.n	8006202 <HAL_TIM_PWM_Start+0x136>
 80061ee:	687b      	ldr	r3, [r7, #4]
 80061f0:	681b      	ldr	r3, [r3, #0]
 80061f2:	4a18      	ldr	r2, [pc, #96]	@ (8006254 <HAL_TIM_PWM_Start+0x188>)
 80061f4:	4293      	cmp	r3, r2
 80061f6:	d004      	beq.n	8006202 <HAL_TIM_PWM_Start+0x136>
 80061f8:	687b      	ldr	r3, [r7, #4]
 80061fa:	681b      	ldr	r3, [r3, #0]
 80061fc:	4a16      	ldr	r2, [pc, #88]	@ (8006258 <HAL_TIM_PWM_Start+0x18c>)
 80061fe:	4293      	cmp	r3, r2
 8006200:	d111      	bne.n	8006226 <HAL_TIM_PWM_Start+0x15a>
 8006202:	687b      	ldr	r3, [r7, #4]
 8006204:	681b      	ldr	r3, [r3, #0]
 8006206:	689b      	ldr	r3, [r3, #8]
 8006208:	f003 0307 	and.w	r3, r3, #7
 800620c:	60fb      	str	r3, [r7, #12]
 800620e:	68fb      	ldr	r3, [r7, #12]
 8006210:	2b06      	cmp	r3, #6
 8006212:	d010      	beq.n	8006236 <HAL_TIM_PWM_Start+0x16a>
 8006214:	687b      	ldr	r3, [r7, #4]
 8006216:	681b      	ldr	r3, [r3, #0]
 8006218:	681a      	ldr	r2, [r3, #0]
 800621a:	687b      	ldr	r3, [r7, #4]
 800621c:	681b      	ldr	r3, [r3, #0]
 800621e:	f042 0201 	orr.w	r2, r2, #1
 8006222:	601a      	str	r2, [r3, #0]
 8006224:	e007      	b.n	8006236 <HAL_TIM_PWM_Start+0x16a>
 8006226:	687b      	ldr	r3, [r7, #4]
 8006228:	681b      	ldr	r3, [r3, #0]
 800622a:	681a      	ldr	r2, [r3, #0]
 800622c:	687b      	ldr	r3, [r7, #4]
 800622e:	681b      	ldr	r3, [r3, #0]
 8006230:	f042 0201 	orr.w	r2, r2, #1
 8006234:	601a      	str	r2, [r3, #0]
 8006236:	2300      	movs	r3, #0
 8006238:	4618      	mov	r0, r3
 800623a:	3710      	adds	r7, #16
 800623c:	46bd      	mov	sp, r7
 800623e:	bd80      	pop	{r7, pc}
 8006240:	40010000 	.word	0x40010000
 8006244:	40010400 	.word	0x40010400
 8006248:	40000400 	.word	0x40000400
 800624c:	40000800 	.word	0x40000800
 8006250:	40000c00 	.word	0x40000c00
 8006254:	40014000 	.word	0x40014000
 8006258:	40001800 	.word	0x40001800

0800625c <HAL_TIM_PWM_ConfigChannel>:
 800625c:	b580      	push	{r7, lr}
 800625e:	b086      	sub	sp, #24
 8006260:	af00      	add	r7, sp, #0
 8006262:	60f8      	str	r0, [r7, #12]
 8006264:	60b9      	str	r1, [r7, #8]
 8006266:	607a      	str	r2, [r7, #4]
 8006268:	2300      	movs	r3, #0
 800626a:	75fb      	strb	r3, [r7, #23]
 800626c:	68fb      	ldr	r3, [r7, #12]
 800626e:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8006272:	2b01      	cmp	r3, #1
 8006274:	d101      	bne.n	800627a <HAL_TIM_PWM_ConfigChannel+0x1e>
 8006276:	2302      	movs	r3, #2
 8006278:	e0ae      	b.n	80063d8 <HAL_TIM_PWM_ConfigChannel+0x17c>
 800627a:	68fb      	ldr	r3, [r7, #12]
 800627c:	2201      	movs	r2, #1
 800627e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006282:	687b      	ldr	r3, [r7, #4]
 8006284:	2b0c      	cmp	r3, #12
 8006286:	f200 809f 	bhi.w	80063c8 <HAL_TIM_PWM_ConfigChannel+0x16c>
 800628a:	a201      	add	r2, pc, #4	@ (adr r2, 8006290 <HAL_TIM_PWM_ConfigChannel+0x34>)
 800628c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006290:	080062c5 	.word	0x080062c5
 8006294:	080063c9 	.word	0x080063c9
 8006298:	080063c9 	.word	0x080063c9
 800629c:	080063c9 	.word	0x080063c9
 80062a0:	08006305 	.word	0x08006305
 80062a4:	080063c9 	.word	0x080063c9
 80062a8:	080063c9 	.word	0x080063c9
 80062ac:	080063c9 	.word	0x080063c9
 80062b0:	08006347 	.word	0x08006347
 80062b4:	080063c9 	.word	0x080063c9
 80062b8:	080063c9 	.word	0x080063c9
 80062bc:	080063c9 	.word	0x080063c9
 80062c0:	08006387 	.word	0x08006387
 80062c4:	68fb      	ldr	r3, [r7, #12]
 80062c6:	681b      	ldr	r3, [r3, #0]
 80062c8:	68b9      	ldr	r1, [r7, #8]
 80062ca:	4618      	mov	r0, r3
 80062cc:	f000 f9fc 	bl	80066c8 <TIM_OC1_SetConfig>
 80062d0:	68fb      	ldr	r3, [r7, #12]
 80062d2:	681b      	ldr	r3, [r3, #0]
 80062d4:	699a      	ldr	r2, [r3, #24]
 80062d6:	68fb      	ldr	r3, [r7, #12]
 80062d8:	681b      	ldr	r3, [r3, #0]
 80062da:	f042 0208 	orr.w	r2, r2, #8
 80062de:	619a      	str	r2, [r3, #24]
 80062e0:	68fb      	ldr	r3, [r7, #12]
 80062e2:	681b      	ldr	r3, [r3, #0]
 80062e4:	699a      	ldr	r2, [r3, #24]
 80062e6:	68fb      	ldr	r3, [r7, #12]
 80062e8:	681b      	ldr	r3, [r3, #0]
 80062ea:	f022 0204 	bic.w	r2, r2, #4
 80062ee:	619a      	str	r2, [r3, #24]
 80062f0:	68fb      	ldr	r3, [r7, #12]
 80062f2:	681b      	ldr	r3, [r3, #0]
 80062f4:	6999      	ldr	r1, [r3, #24]
 80062f6:	68bb      	ldr	r3, [r7, #8]
 80062f8:	691a      	ldr	r2, [r3, #16]
 80062fa:	68fb      	ldr	r3, [r7, #12]
 80062fc:	681b      	ldr	r3, [r3, #0]
 80062fe:	430a      	orrs	r2, r1
 8006300:	619a      	str	r2, [r3, #24]
 8006302:	e064      	b.n	80063ce <HAL_TIM_PWM_ConfigChannel+0x172>
 8006304:	68fb      	ldr	r3, [r7, #12]
 8006306:	681b      	ldr	r3, [r3, #0]
 8006308:	68b9      	ldr	r1, [r7, #8]
 800630a:	4618      	mov	r0, r3
 800630c:	f000 fa4c 	bl	80067a8 <TIM_OC2_SetConfig>
 8006310:	68fb      	ldr	r3, [r7, #12]
 8006312:	681b      	ldr	r3, [r3, #0]
 8006314:	699a      	ldr	r2, [r3, #24]
 8006316:	68fb      	ldr	r3, [r7, #12]
 8006318:	681b      	ldr	r3, [r3, #0]
 800631a:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800631e:	619a      	str	r2, [r3, #24]
 8006320:	68fb      	ldr	r3, [r7, #12]
 8006322:	681b      	ldr	r3, [r3, #0]
 8006324:	699a      	ldr	r2, [r3, #24]
 8006326:	68fb      	ldr	r3, [r7, #12]
 8006328:	681b      	ldr	r3, [r3, #0]
 800632a:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800632e:	619a      	str	r2, [r3, #24]
 8006330:	68fb      	ldr	r3, [r7, #12]
 8006332:	681b      	ldr	r3, [r3, #0]
 8006334:	6999      	ldr	r1, [r3, #24]
 8006336:	68bb      	ldr	r3, [r7, #8]
 8006338:	691b      	ldr	r3, [r3, #16]
 800633a:	021a      	lsls	r2, r3, #8
 800633c:	68fb      	ldr	r3, [r7, #12]
 800633e:	681b      	ldr	r3, [r3, #0]
 8006340:	430a      	orrs	r2, r1
 8006342:	619a      	str	r2, [r3, #24]
 8006344:	e043      	b.n	80063ce <HAL_TIM_PWM_ConfigChannel+0x172>
 8006346:	68fb      	ldr	r3, [r7, #12]
 8006348:	681b      	ldr	r3, [r3, #0]
 800634a:	68b9      	ldr	r1, [r7, #8]
 800634c:	4618      	mov	r0, r3
 800634e:	f000 faa1 	bl	8006894 <TIM_OC3_SetConfig>
 8006352:	68fb      	ldr	r3, [r7, #12]
 8006354:	681b      	ldr	r3, [r3, #0]
 8006356:	69da      	ldr	r2, [r3, #28]
 8006358:	68fb      	ldr	r3, [r7, #12]
 800635a:	681b      	ldr	r3, [r3, #0]
 800635c:	f042 0208 	orr.w	r2, r2, #8
 8006360:	61da      	str	r2, [r3, #28]
 8006362:	68fb      	ldr	r3, [r7, #12]
 8006364:	681b      	ldr	r3, [r3, #0]
 8006366:	69da      	ldr	r2, [r3, #28]
 8006368:	68fb      	ldr	r3, [r7, #12]
 800636a:	681b      	ldr	r3, [r3, #0]
 800636c:	f022 0204 	bic.w	r2, r2, #4
 8006370:	61da      	str	r2, [r3, #28]
 8006372:	68fb      	ldr	r3, [r7, #12]
 8006374:	681b      	ldr	r3, [r3, #0]
 8006376:	69d9      	ldr	r1, [r3, #28]
 8006378:	68bb      	ldr	r3, [r7, #8]
 800637a:	691a      	ldr	r2, [r3, #16]
 800637c:	68fb      	ldr	r3, [r7, #12]
 800637e:	681b      	ldr	r3, [r3, #0]
 8006380:	430a      	orrs	r2, r1
 8006382:	61da      	str	r2, [r3, #28]
 8006384:	e023      	b.n	80063ce <HAL_TIM_PWM_ConfigChannel+0x172>
 8006386:	68fb      	ldr	r3, [r7, #12]
 8006388:	681b      	ldr	r3, [r3, #0]
 800638a:	68b9      	ldr	r1, [r7, #8]
 800638c:	4618      	mov	r0, r3
 800638e:	f000 faf5 	bl	800697c <TIM_OC4_SetConfig>
 8006392:	68fb      	ldr	r3, [r7, #12]
 8006394:	681b      	ldr	r3, [r3, #0]
 8006396:	69da      	ldr	r2, [r3, #28]
 8006398:	68fb      	ldr	r3, [r7, #12]
 800639a:	681b      	ldr	r3, [r3, #0]
 800639c:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80063a0:	61da      	str	r2, [r3, #28]
 80063a2:	68fb      	ldr	r3, [r7, #12]
 80063a4:	681b      	ldr	r3, [r3, #0]
 80063a6:	69da      	ldr	r2, [r3, #28]
 80063a8:	68fb      	ldr	r3, [r7, #12]
 80063aa:	681b      	ldr	r3, [r3, #0]
 80063ac:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80063b0:	61da      	str	r2, [r3, #28]
 80063b2:	68fb      	ldr	r3, [r7, #12]
 80063b4:	681b      	ldr	r3, [r3, #0]
 80063b6:	69d9      	ldr	r1, [r3, #28]
 80063b8:	68bb      	ldr	r3, [r7, #8]
 80063ba:	691b      	ldr	r3, [r3, #16]
 80063bc:	021a      	lsls	r2, r3, #8
 80063be:	68fb      	ldr	r3, [r7, #12]
 80063c0:	681b      	ldr	r3, [r3, #0]
 80063c2:	430a      	orrs	r2, r1
 80063c4:	61da      	str	r2, [r3, #28]
 80063c6:	e002      	b.n	80063ce <HAL_TIM_PWM_ConfigChannel+0x172>
 80063c8:	2301      	movs	r3, #1
 80063ca:	75fb      	strb	r3, [r7, #23]
 80063cc:	bf00      	nop
 80063ce:	68fb      	ldr	r3, [r7, #12]
 80063d0:	2200      	movs	r2, #0
 80063d2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80063d6:	7dfb      	ldrb	r3, [r7, #23]
 80063d8:	4618      	mov	r0, r3
 80063da:	3718      	adds	r7, #24
 80063dc:	46bd      	mov	sp, r7
 80063de:	bd80      	pop	{r7, pc}

080063e0 <HAL_TIM_ConfigClockSource>:
 80063e0:	b580      	push	{r7, lr}
 80063e2:	b084      	sub	sp, #16
 80063e4:	af00      	add	r7, sp, #0
 80063e6:	6078      	str	r0, [r7, #4]
 80063e8:	6039      	str	r1, [r7, #0]
 80063ea:	2300      	movs	r3, #0
 80063ec:	73fb      	strb	r3, [r7, #15]
 80063ee:	687b      	ldr	r3, [r7, #4]
 80063f0:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80063f4:	2b01      	cmp	r3, #1
 80063f6:	d101      	bne.n	80063fc <HAL_TIM_ConfigClockSource+0x1c>
 80063f8:	2302      	movs	r3, #2
 80063fa:	e0b4      	b.n	8006566 <HAL_TIM_ConfigClockSource+0x186>
 80063fc:	687b      	ldr	r3, [r7, #4]
 80063fe:	2201      	movs	r2, #1
 8006400:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006404:	687b      	ldr	r3, [r7, #4]
 8006406:	2202      	movs	r2, #2
 8006408:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800640c:	687b      	ldr	r3, [r7, #4]
 800640e:	681b      	ldr	r3, [r3, #0]
 8006410:	689b      	ldr	r3, [r3, #8]
 8006412:	60bb      	str	r3, [r7, #8]
 8006414:	68bb      	ldr	r3, [r7, #8]
 8006416:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 800641a:	60bb      	str	r3, [r7, #8]
 800641c:	68bb      	ldr	r3, [r7, #8]
 800641e:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8006422:	60bb      	str	r3, [r7, #8]
 8006424:	687b      	ldr	r3, [r7, #4]
 8006426:	681b      	ldr	r3, [r3, #0]
 8006428:	68ba      	ldr	r2, [r7, #8]
 800642a:	609a      	str	r2, [r3, #8]
 800642c:	683b      	ldr	r3, [r7, #0]
 800642e:	681b      	ldr	r3, [r3, #0]
 8006430:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8006434:	d03e      	beq.n	80064b4 <HAL_TIM_ConfigClockSource+0xd4>
 8006436:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800643a:	f200 8087 	bhi.w	800654c <HAL_TIM_ConfigClockSource+0x16c>
 800643e:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8006442:	f000 8086 	beq.w	8006552 <HAL_TIM_ConfigClockSource+0x172>
 8006446:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800644a:	d87f      	bhi.n	800654c <HAL_TIM_ConfigClockSource+0x16c>
 800644c:	2b70      	cmp	r3, #112	@ 0x70
 800644e:	d01a      	beq.n	8006486 <HAL_TIM_ConfigClockSource+0xa6>
 8006450:	2b70      	cmp	r3, #112	@ 0x70
 8006452:	d87b      	bhi.n	800654c <HAL_TIM_ConfigClockSource+0x16c>
 8006454:	2b60      	cmp	r3, #96	@ 0x60
 8006456:	d050      	beq.n	80064fa <HAL_TIM_ConfigClockSource+0x11a>
 8006458:	2b60      	cmp	r3, #96	@ 0x60
 800645a:	d877      	bhi.n	800654c <HAL_TIM_ConfigClockSource+0x16c>
 800645c:	2b50      	cmp	r3, #80	@ 0x50
 800645e:	d03c      	beq.n	80064da <HAL_TIM_ConfigClockSource+0xfa>
 8006460:	2b50      	cmp	r3, #80	@ 0x50
 8006462:	d873      	bhi.n	800654c <HAL_TIM_ConfigClockSource+0x16c>
 8006464:	2b40      	cmp	r3, #64	@ 0x40
 8006466:	d058      	beq.n	800651a <HAL_TIM_ConfigClockSource+0x13a>
 8006468:	2b40      	cmp	r3, #64	@ 0x40
 800646a:	d86f      	bhi.n	800654c <HAL_TIM_ConfigClockSource+0x16c>
 800646c:	2b30      	cmp	r3, #48	@ 0x30
 800646e:	d064      	beq.n	800653a <HAL_TIM_ConfigClockSource+0x15a>
 8006470:	2b30      	cmp	r3, #48	@ 0x30
 8006472:	d86b      	bhi.n	800654c <HAL_TIM_ConfigClockSource+0x16c>
 8006474:	2b20      	cmp	r3, #32
 8006476:	d060      	beq.n	800653a <HAL_TIM_ConfigClockSource+0x15a>
 8006478:	2b20      	cmp	r3, #32
 800647a:	d867      	bhi.n	800654c <HAL_TIM_ConfigClockSource+0x16c>
 800647c:	2b00      	cmp	r3, #0
 800647e:	d05c      	beq.n	800653a <HAL_TIM_ConfigClockSource+0x15a>
 8006480:	2b10      	cmp	r3, #16
 8006482:	d05a      	beq.n	800653a <HAL_TIM_ConfigClockSource+0x15a>
 8006484:	e062      	b.n	800654c <HAL_TIM_ConfigClockSource+0x16c>
 8006486:	687b      	ldr	r3, [r7, #4]
 8006488:	6818      	ldr	r0, [r3, #0]
 800648a:	683b      	ldr	r3, [r7, #0]
 800648c:	6899      	ldr	r1, [r3, #8]
 800648e:	683b      	ldr	r3, [r7, #0]
 8006490:	685a      	ldr	r2, [r3, #4]
 8006492:	683b      	ldr	r3, [r7, #0]
 8006494:	68db      	ldr	r3, [r3, #12]
 8006496:	f000 fb41 	bl	8006b1c <TIM_ETR_SetConfig>
 800649a:	687b      	ldr	r3, [r7, #4]
 800649c:	681b      	ldr	r3, [r3, #0]
 800649e:	689b      	ldr	r3, [r3, #8]
 80064a0:	60bb      	str	r3, [r7, #8]
 80064a2:	68bb      	ldr	r3, [r7, #8]
 80064a4:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 80064a8:	60bb      	str	r3, [r7, #8]
 80064aa:	687b      	ldr	r3, [r7, #4]
 80064ac:	681b      	ldr	r3, [r3, #0]
 80064ae:	68ba      	ldr	r2, [r7, #8]
 80064b0:	609a      	str	r2, [r3, #8]
 80064b2:	e04f      	b.n	8006554 <HAL_TIM_ConfigClockSource+0x174>
 80064b4:	687b      	ldr	r3, [r7, #4]
 80064b6:	6818      	ldr	r0, [r3, #0]
 80064b8:	683b      	ldr	r3, [r7, #0]
 80064ba:	6899      	ldr	r1, [r3, #8]
 80064bc:	683b      	ldr	r3, [r7, #0]
 80064be:	685a      	ldr	r2, [r3, #4]
 80064c0:	683b      	ldr	r3, [r7, #0]
 80064c2:	68db      	ldr	r3, [r3, #12]
 80064c4:	f000 fb2a 	bl	8006b1c <TIM_ETR_SetConfig>
 80064c8:	687b      	ldr	r3, [r7, #4]
 80064ca:	681b      	ldr	r3, [r3, #0]
 80064cc:	689a      	ldr	r2, [r3, #8]
 80064ce:	687b      	ldr	r3, [r7, #4]
 80064d0:	681b      	ldr	r3, [r3, #0]
 80064d2:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 80064d6:	609a      	str	r2, [r3, #8]
 80064d8:	e03c      	b.n	8006554 <HAL_TIM_ConfigClockSource+0x174>
 80064da:	687b      	ldr	r3, [r7, #4]
 80064dc:	6818      	ldr	r0, [r3, #0]
 80064de:	683b      	ldr	r3, [r7, #0]
 80064e0:	6859      	ldr	r1, [r3, #4]
 80064e2:	683b      	ldr	r3, [r7, #0]
 80064e4:	68db      	ldr	r3, [r3, #12]
 80064e6:	461a      	mov	r2, r3
 80064e8:	f000 fa9e 	bl	8006a28 <TIM_TI1_ConfigInputStage>
 80064ec:	687b      	ldr	r3, [r7, #4]
 80064ee:	681b      	ldr	r3, [r3, #0]
 80064f0:	2150      	movs	r1, #80	@ 0x50
 80064f2:	4618      	mov	r0, r3
 80064f4:	f000 faf7 	bl	8006ae6 <TIM_ITRx_SetConfig>
 80064f8:	e02c      	b.n	8006554 <HAL_TIM_ConfigClockSource+0x174>
 80064fa:	687b      	ldr	r3, [r7, #4]
 80064fc:	6818      	ldr	r0, [r3, #0]
 80064fe:	683b      	ldr	r3, [r7, #0]
 8006500:	6859      	ldr	r1, [r3, #4]
 8006502:	683b      	ldr	r3, [r7, #0]
 8006504:	68db      	ldr	r3, [r3, #12]
 8006506:	461a      	mov	r2, r3
 8006508:	f000 fabd 	bl	8006a86 <TIM_TI2_ConfigInputStage>
 800650c:	687b      	ldr	r3, [r7, #4]
 800650e:	681b      	ldr	r3, [r3, #0]
 8006510:	2160      	movs	r1, #96	@ 0x60
 8006512:	4618      	mov	r0, r3
 8006514:	f000 fae7 	bl	8006ae6 <TIM_ITRx_SetConfig>
 8006518:	e01c      	b.n	8006554 <HAL_TIM_ConfigClockSource+0x174>
 800651a:	687b      	ldr	r3, [r7, #4]
 800651c:	6818      	ldr	r0, [r3, #0]
 800651e:	683b      	ldr	r3, [r7, #0]
 8006520:	6859      	ldr	r1, [r3, #4]
 8006522:	683b      	ldr	r3, [r7, #0]
 8006524:	68db      	ldr	r3, [r3, #12]
 8006526:	461a      	mov	r2, r3
 8006528:	f000 fa7e 	bl	8006a28 <TIM_TI1_ConfigInputStage>
 800652c:	687b      	ldr	r3, [r7, #4]
 800652e:	681b      	ldr	r3, [r3, #0]
 8006530:	2140      	movs	r1, #64	@ 0x40
 8006532:	4618      	mov	r0, r3
 8006534:	f000 fad7 	bl	8006ae6 <TIM_ITRx_SetConfig>
 8006538:	e00c      	b.n	8006554 <HAL_TIM_ConfigClockSource+0x174>
 800653a:	687b      	ldr	r3, [r7, #4]
 800653c:	681a      	ldr	r2, [r3, #0]
 800653e:	683b      	ldr	r3, [r7, #0]
 8006540:	681b      	ldr	r3, [r3, #0]
 8006542:	4619      	mov	r1, r3
 8006544:	4610      	mov	r0, r2
 8006546:	f000 face 	bl	8006ae6 <TIM_ITRx_SetConfig>
 800654a:	e003      	b.n	8006554 <HAL_TIM_ConfigClockSource+0x174>
 800654c:	2301      	movs	r3, #1
 800654e:	73fb      	strb	r3, [r7, #15]
 8006550:	e000      	b.n	8006554 <HAL_TIM_ConfigClockSource+0x174>
 8006552:	bf00      	nop
 8006554:	687b      	ldr	r3, [r7, #4]
 8006556:	2201      	movs	r2, #1
 8006558:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800655c:	687b      	ldr	r3, [r7, #4]
 800655e:	2200      	movs	r2, #0
 8006560:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006564:	7bfb      	ldrb	r3, [r7, #15]
 8006566:	4618      	mov	r0, r3
 8006568:	3710      	adds	r7, #16
 800656a:	46bd      	mov	sp, r7
 800656c:	bd80      	pop	{r7, pc}
	...

08006570 <TIM_Base_SetConfig>:
 8006570:	b480      	push	{r7}
 8006572:	b085      	sub	sp, #20
 8006574:	af00      	add	r7, sp, #0
 8006576:	6078      	str	r0, [r7, #4]
 8006578:	6039      	str	r1, [r7, #0]
 800657a:	687b      	ldr	r3, [r7, #4]
 800657c:	681b      	ldr	r3, [r3, #0]
 800657e:	60fb      	str	r3, [r7, #12]
 8006580:	687b      	ldr	r3, [r7, #4]
 8006582:	4a46      	ldr	r2, [pc, #280]	@ (800669c <TIM_Base_SetConfig+0x12c>)
 8006584:	4293      	cmp	r3, r2
 8006586:	d013      	beq.n	80065b0 <TIM_Base_SetConfig+0x40>
 8006588:	687b      	ldr	r3, [r7, #4]
 800658a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800658e:	d00f      	beq.n	80065b0 <TIM_Base_SetConfig+0x40>
 8006590:	687b      	ldr	r3, [r7, #4]
 8006592:	4a43      	ldr	r2, [pc, #268]	@ (80066a0 <TIM_Base_SetConfig+0x130>)
 8006594:	4293      	cmp	r3, r2
 8006596:	d00b      	beq.n	80065b0 <TIM_Base_SetConfig+0x40>
 8006598:	687b      	ldr	r3, [r7, #4]
 800659a:	4a42      	ldr	r2, [pc, #264]	@ (80066a4 <TIM_Base_SetConfig+0x134>)
 800659c:	4293      	cmp	r3, r2
 800659e:	d007      	beq.n	80065b0 <TIM_Base_SetConfig+0x40>
 80065a0:	687b      	ldr	r3, [r7, #4]
 80065a2:	4a41      	ldr	r2, [pc, #260]	@ (80066a8 <TIM_Base_SetConfig+0x138>)
 80065a4:	4293      	cmp	r3, r2
 80065a6:	d003      	beq.n	80065b0 <TIM_Base_SetConfig+0x40>
 80065a8:	687b      	ldr	r3, [r7, #4]
 80065aa:	4a40      	ldr	r2, [pc, #256]	@ (80066ac <TIM_Base_SetConfig+0x13c>)
 80065ac:	4293      	cmp	r3, r2
 80065ae:	d108      	bne.n	80065c2 <TIM_Base_SetConfig+0x52>
 80065b0:	68fb      	ldr	r3, [r7, #12]
 80065b2:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80065b6:	60fb      	str	r3, [r7, #12]
 80065b8:	683b      	ldr	r3, [r7, #0]
 80065ba:	685b      	ldr	r3, [r3, #4]
 80065bc:	68fa      	ldr	r2, [r7, #12]
 80065be:	4313      	orrs	r3, r2
 80065c0:	60fb      	str	r3, [r7, #12]
 80065c2:	687b      	ldr	r3, [r7, #4]
 80065c4:	4a35      	ldr	r2, [pc, #212]	@ (800669c <TIM_Base_SetConfig+0x12c>)
 80065c6:	4293      	cmp	r3, r2
 80065c8:	d02b      	beq.n	8006622 <TIM_Base_SetConfig+0xb2>
 80065ca:	687b      	ldr	r3, [r7, #4]
 80065cc:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80065d0:	d027      	beq.n	8006622 <TIM_Base_SetConfig+0xb2>
 80065d2:	687b      	ldr	r3, [r7, #4]
 80065d4:	4a32      	ldr	r2, [pc, #200]	@ (80066a0 <TIM_Base_SetConfig+0x130>)
 80065d6:	4293      	cmp	r3, r2
 80065d8:	d023      	beq.n	8006622 <TIM_Base_SetConfig+0xb2>
 80065da:	687b      	ldr	r3, [r7, #4]
 80065dc:	4a31      	ldr	r2, [pc, #196]	@ (80066a4 <TIM_Base_SetConfig+0x134>)
 80065de:	4293      	cmp	r3, r2
 80065e0:	d01f      	beq.n	8006622 <TIM_Base_SetConfig+0xb2>
 80065e2:	687b      	ldr	r3, [r7, #4]
 80065e4:	4a30      	ldr	r2, [pc, #192]	@ (80066a8 <TIM_Base_SetConfig+0x138>)
 80065e6:	4293      	cmp	r3, r2
 80065e8:	d01b      	beq.n	8006622 <TIM_Base_SetConfig+0xb2>
 80065ea:	687b      	ldr	r3, [r7, #4]
 80065ec:	4a2f      	ldr	r2, [pc, #188]	@ (80066ac <TIM_Base_SetConfig+0x13c>)
 80065ee:	4293      	cmp	r3, r2
 80065f0:	d017      	beq.n	8006622 <TIM_Base_SetConfig+0xb2>
 80065f2:	687b      	ldr	r3, [r7, #4]
 80065f4:	4a2e      	ldr	r2, [pc, #184]	@ (80066b0 <TIM_Base_SetConfig+0x140>)
 80065f6:	4293      	cmp	r3, r2
 80065f8:	d013      	beq.n	8006622 <TIM_Base_SetConfig+0xb2>
 80065fa:	687b      	ldr	r3, [r7, #4]
 80065fc:	4a2d      	ldr	r2, [pc, #180]	@ (80066b4 <TIM_Base_SetConfig+0x144>)
 80065fe:	4293      	cmp	r3, r2
 8006600:	d00f      	beq.n	8006622 <TIM_Base_SetConfig+0xb2>
 8006602:	687b      	ldr	r3, [r7, #4]
 8006604:	4a2c      	ldr	r2, [pc, #176]	@ (80066b8 <TIM_Base_SetConfig+0x148>)
 8006606:	4293      	cmp	r3, r2
 8006608:	d00b      	beq.n	8006622 <TIM_Base_SetConfig+0xb2>
 800660a:	687b      	ldr	r3, [r7, #4]
 800660c:	4a2b      	ldr	r2, [pc, #172]	@ (80066bc <TIM_Base_SetConfig+0x14c>)
 800660e:	4293      	cmp	r3, r2
 8006610:	d007      	beq.n	8006622 <TIM_Base_SetConfig+0xb2>
 8006612:	687b      	ldr	r3, [r7, #4]
 8006614:	4a2a      	ldr	r2, [pc, #168]	@ (80066c0 <TIM_Base_SetConfig+0x150>)
 8006616:	4293      	cmp	r3, r2
 8006618:	d003      	beq.n	8006622 <TIM_Base_SetConfig+0xb2>
 800661a:	687b      	ldr	r3, [r7, #4]
 800661c:	4a29      	ldr	r2, [pc, #164]	@ (80066c4 <TIM_Base_SetConfig+0x154>)
 800661e:	4293      	cmp	r3, r2
 8006620:	d108      	bne.n	8006634 <TIM_Base_SetConfig+0xc4>
 8006622:	68fb      	ldr	r3, [r7, #12]
 8006624:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8006628:	60fb      	str	r3, [r7, #12]
 800662a:	683b      	ldr	r3, [r7, #0]
 800662c:	68db      	ldr	r3, [r3, #12]
 800662e:	68fa      	ldr	r2, [r7, #12]
 8006630:	4313      	orrs	r3, r2
 8006632:	60fb      	str	r3, [r7, #12]
 8006634:	68fb      	ldr	r3, [r7, #12]
 8006636:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 800663a:	683b      	ldr	r3, [r7, #0]
 800663c:	695b      	ldr	r3, [r3, #20]
 800663e:	4313      	orrs	r3, r2
 8006640:	60fb      	str	r3, [r7, #12]
 8006642:	687b      	ldr	r3, [r7, #4]
 8006644:	68fa      	ldr	r2, [r7, #12]
 8006646:	601a      	str	r2, [r3, #0]
 8006648:	683b      	ldr	r3, [r7, #0]
 800664a:	689a      	ldr	r2, [r3, #8]
 800664c:	687b      	ldr	r3, [r7, #4]
 800664e:	62da      	str	r2, [r3, #44]	@ 0x2c
 8006650:	683b      	ldr	r3, [r7, #0]
 8006652:	681a      	ldr	r2, [r3, #0]
 8006654:	687b      	ldr	r3, [r7, #4]
 8006656:	629a      	str	r2, [r3, #40]	@ 0x28
 8006658:	687b      	ldr	r3, [r7, #4]
 800665a:	4a10      	ldr	r2, [pc, #64]	@ (800669c <TIM_Base_SetConfig+0x12c>)
 800665c:	4293      	cmp	r3, r2
 800665e:	d003      	beq.n	8006668 <TIM_Base_SetConfig+0xf8>
 8006660:	687b      	ldr	r3, [r7, #4]
 8006662:	4a12      	ldr	r2, [pc, #72]	@ (80066ac <TIM_Base_SetConfig+0x13c>)
 8006664:	4293      	cmp	r3, r2
 8006666:	d103      	bne.n	8006670 <TIM_Base_SetConfig+0x100>
 8006668:	683b      	ldr	r3, [r7, #0]
 800666a:	691a      	ldr	r2, [r3, #16]
 800666c:	687b      	ldr	r3, [r7, #4]
 800666e:	631a      	str	r2, [r3, #48]	@ 0x30
 8006670:	687b      	ldr	r3, [r7, #4]
 8006672:	2201      	movs	r2, #1
 8006674:	615a      	str	r2, [r3, #20]
 8006676:	687b      	ldr	r3, [r7, #4]
 8006678:	691b      	ldr	r3, [r3, #16]
 800667a:	f003 0301 	and.w	r3, r3, #1
 800667e:	2b01      	cmp	r3, #1
 8006680:	d105      	bne.n	800668e <TIM_Base_SetConfig+0x11e>
 8006682:	687b      	ldr	r3, [r7, #4]
 8006684:	691b      	ldr	r3, [r3, #16]
 8006686:	f023 0201 	bic.w	r2, r3, #1
 800668a:	687b      	ldr	r3, [r7, #4]
 800668c:	611a      	str	r2, [r3, #16]
 800668e:	bf00      	nop
 8006690:	3714      	adds	r7, #20
 8006692:	46bd      	mov	sp, r7
 8006694:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006698:	4770      	bx	lr
 800669a:	bf00      	nop
 800669c:	40010000 	.word	0x40010000
 80066a0:	40000400 	.word	0x40000400
 80066a4:	40000800 	.word	0x40000800
 80066a8:	40000c00 	.word	0x40000c00
 80066ac:	40010400 	.word	0x40010400
 80066b0:	40014000 	.word	0x40014000
 80066b4:	40014400 	.word	0x40014400
 80066b8:	40014800 	.word	0x40014800
 80066bc:	40001800 	.word	0x40001800
 80066c0:	40001c00 	.word	0x40001c00
 80066c4:	40002000 	.word	0x40002000

080066c8 <TIM_OC1_SetConfig>:
 80066c8:	b480      	push	{r7}
 80066ca:	b087      	sub	sp, #28
 80066cc:	af00      	add	r7, sp, #0
 80066ce:	6078      	str	r0, [r7, #4]
 80066d0:	6039      	str	r1, [r7, #0]
 80066d2:	687b      	ldr	r3, [r7, #4]
 80066d4:	6a1b      	ldr	r3, [r3, #32]
 80066d6:	617b      	str	r3, [r7, #20]
 80066d8:	687b      	ldr	r3, [r7, #4]
 80066da:	6a1b      	ldr	r3, [r3, #32]
 80066dc:	f023 0201 	bic.w	r2, r3, #1
 80066e0:	687b      	ldr	r3, [r7, #4]
 80066e2:	621a      	str	r2, [r3, #32]
 80066e4:	687b      	ldr	r3, [r7, #4]
 80066e6:	685b      	ldr	r3, [r3, #4]
 80066e8:	613b      	str	r3, [r7, #16]
 80066ea:	687b      	ldr	r3, [r7, #4]
 80066ec:	699b      	ldr	r3, [r3, #24]
 80066ee:	60fb      	str	r3, [r7, #12]
 80066f0:	68fb      	ldr	r3, [r7, #12]
 80066f2:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80066f6:	60fb      	str	r3, [r7, #12]
 80066f8:	68fb      	ldr	r3, [r7, #12]
 80066fa:	f023 0303 	bic.w	r3, r3, #3
 80066fe:	60fb      	str	r3, [r7, #12]
 8006700:	683b      	ldr	r3, [r7, #0]
 8006702:	681b      	ldr	r3, [r3, #0]
 8006704:	68fa      	ldr	r2, [r7, #12]
 8006706:	4313      	orrs	r3, r2
 8006708:	60fb      	str	r3, [r7, #12]
 800670a:	697b      	ldr	r3, [r7, #20]
 800670c:	f023 0302 	bic.w	r3, r3, #2
 8006710:	617b      	str	r3, [r7, #20]
 8006712:	683b      	ldr	r3, [r7, #0]
 8006714:	689b      	ldr	r3, [r3, #8]
 8006716:	697a      	ldr	r2, [r7, #20]
 8006718:	4313      	orrs	r3, r2
 800671a:	617b      	str	r3, [r7, #20]
 800671c:	687b      	ldr	r3, [r7, #4]
 800671e:	4a20      	ldr	r2, [pc, #128]	@ (80067a0 <TIM_OC1_SetConfig+0xd8>)
 8006720:	4293      	cmp	r3, r2
 8006722:	d003      	beq.n	800672c <TIM_OC1_SetConfig+0x64>
 8006724:	687b      	ldr	r3, [r7, #4]
 8006726:	4a1f      	ldr	r2, [pc, #124]	@ (80067a4 <TIM_OC1_SetConfig+0xdc>)
 8006728:	4293      	cmp	r3, r2
 800672a:	d10c      	bne.n	8006746 <TIM_OC1_SetConfig+0x7e>
 800672c:	697b      	ldr	r3, [r7, #20]
 800672e:	f023 0308 	bic.w	r3, r3, #8
 8006732:	617b      	str	r3, [r7, #20]
 8006734:	683b      	ldr	r3, [r7, #0]
 8006736:	68db      	ldr	r3, [r3, #12]
 8006738:	697a      	ldr	r2, [r7, #20]
 800673a:	4313      	orrs	r3, r2
 800673c:	617b      	str	r3, [r7, #20]
 800673e:	697b      	ldr	r3, [r7, #20]
 8006740:	f023 0304 	bic.w	r3, r3, #4
 8006744:	617b      	str	r3, [r7, #20]
 8006746:	687b      	ldr	r3, [r7, #4]
 8006748:	4a15      	ldr	r2, [pc, #84]	@ (80067a0 <TIM_OC1_SetConfig+0xd8>)
 800674a:	4293      	cmp	r3, r2
 800674c:	d003      	beq.n	8006756 <TIM_OC1_SetConfig+0x8e>
 800674e:	687b      	ldr	r3, [r7, #4]
 8006750:	4a14      	ldr	r2, [pc, #80]	@ (80067a4 <TIM_OC1_SetConfig+0xdc>)
 8006752:	4293      	cmp	r3, r2
 8006754:	d111      	bne.n	800677a <TIM_OC1_SetConfig+0xb2>
 8006756:	693b      	ldr	r3, [r7, #16]
 8006758:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800675c:	613b      	str	r3, [r7, #16]
 800675e:	693b      	ldr	r3, [r7, #16]
 8006760:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8006764:	613b      	str	r3, [r7, #16]
 8006766:	683b      	ldr	r3, [r7, #0]
 8006768:	695b      	ldr	r3, [r3, #20]
 800676a:	693a      	ldr	r2, [r7, #16]
 800676c:	4313      	orrs	r3, r2
 800676e:	613b      	str	r3, [r7, #16]
 8006770:	683b      	ldr	r3, [r7, #0]
 8006772:	699b      	ldr	r3, [r3, #24]
 8006774:	693a      	ldr	r2, [r7, #16]
 8006776:	4313      	orrs	r3, r2
 8006778:	613b      	str	r3, [r7, #16]
 800677a:	687b      	ldr	r3, [r7, #4]
 800677c:	693a      	ldr	r2, [r7, #16]
 800677e:	605a      	str	r2, [r3, #4]
 8006780:	687b      	ldr	r3, [r7, #4]
 8006782:	68fa      	ldr	r2, [r7, #12]
 8006784:	619a      	str	r2, [r3, #24]
 8006786:	683b      	ldr	r3, [r7, #0]
 8006788:	685a      	ldr	r2, [r3, #4]
 800678a:	687b      	ldr	r3, [r7, #4]
 800678c:	635a      	str	r2, [r3, #52]	@ 0x34
 800678e:	687b      	ldr	r3, [r7, #4]
 8006790:	697a      	ldr	r2, [r7, #20]
 8006792:	621a      	str	r2, [r3, #32]
 8006794:	bf00      	nop
 8006796:	371c      	adds	r7, #28
 8006798:	46bd      	mov	sp, r7
 800679a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800679e:	4770      	bx	lr
 80067a0:	40010000 	.word	0x40010000
 80067a4:	40010400 	.word	0x40010400

080067a8 <TIM_OC2_SetConfig>:
 80067a8:	b480      	push	{r7}
 80067aa:	b087      	sub	sp, #28
 80067ac:	af00      	add	r7, sp, #0
 80067ae:	6078      	str	r0, [r7, #4]
 80067b0:	6039      	str	r1, [r7, #0]
 80067b2:	687b      	ldr	r3, [r7, #4]
 80067b4:	6a1b      	ldr	r3, [r3, #32]
 80067b6:	617b      	str	r3, [r7, #20]
 80067b8:	687b      	ldr	r3, [r7, #4]
 80067ba:	6a1b      	ldr	r3, [r3, #32]
 80067bc:	f023 0210 	bic.w	r2, r3, #16
 80067c0:	687b      	ldr	r3, [r7, #4]
 80067c2:	621a      	str	r2, [r3, #32]
 80067c4:	687b      	ldr	r3, [r7, #4]
 80067c6:	685b      	ldr	r3, [r3, #4]
 80067c8:	613b      	str	r3, [r7, #16]
 80067ca:	687b      	ldr	r3, [r7, #4]
 80067cc:	699b      	ldr	r3, [r3, #24]
 80067ce:	60fb      	str	r3, [r7, #12]
 80067d0:	68fb      	ldr	r3, [r7, #12]
 80067d2:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80067d6:	60fb      	str	r3, [r7, #12]
 80067d8:	68fb      	ldr	r3, [r7, #12]
 80067da:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80067de:	60fb      	str	r3, [r7, #12]
 80067e0:	683b      	ldr	r3, [r7, #0]
 80067e2:	681b      	ldr	r3, [r3, #0]
 80067e4:	021b      	lsls	r3, r3, #8
 80067e6:	68fa      	ldr	r2, [r7, #12]
 80067e8:	4313      	orrs	r3, r2
 80067ea:	60fb      	str	r3, [r7, #12]
 80067ec:	697b      	ldr	r3, [r7, #20]
 80067ee:	f023 0320 	bic.w	r3, r3, #32
 80067f2:	617b      	str	r3, [r7, #20]
 80067f4:	683b      	ldr	r3, [r7, #0]
 80067f6:	689b      	ldr	r3, [r3, #8]
 80067f8:	011b      	lsls	r3, r3, #4
 80067fa:	697a      	ldr	r2, [r7, #20]
 80067fc:	4313      	orrs	r3, r2
 80067fe:	617b      	str	r3, [r7, #20]
 8006800:	687b      	ldr	r3, [r7, #4]
 8006802:	4a22      	ldr	r2, [pc, #136]	@ (800688c <TIM_OC2_SetConfig+0xe4>)
 8006804:	4293      	cmp	r3, r2
 8006806:	d003      	beq.n	8006810 <TIM_OC2_SetConfig+0x68>
 8006808:	687b      	ldr	r3, [r7, #4]
 800680a:	4a21      	ldr	r2, [pc, #132]	@ (8006890 <TIM_OC2_SetConfig+0xe8>)
 800680c:	4293      	cmp	r3, r2
 800680e:	d10d      	bne.n	800682c <TIM_OC2_SetConfig+0x84>
 8006810:	697b      	ldr	r3, [r7, #20]
 8006812:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8006816:	617b      	str	r3, [r7, #20]
 8006818:	683b      	ldr	r3, [r7, #0]
 800681a:	68db      	ldr	r3, [r3, #12]
 800681c:	011b      	lsls	r3, r3, #4
 800681e:	697a      	ldr	r2, [r7, #20]
 8006820:	4313      	orrs	r3, r2
 8006822:	617b      	str	r3, [r7, #20]
 8006824:	697b      	ldr	r3, [r7, #20]
 8006826:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800682a:	617b      	str	r3, [r7, #20]
 800682c:	687b      	ldr	r3, [r7, #4]
 800682e:	4a17      	ldr	r2, [pc, #92]	@ (800688c <TIM_OC2_SetConfig+0xe4>)
 8006830:	4293      	cmp	r3, r2
 8006832:	d003      	beq.n	800683c <TIM_OC2_SetConfig+0x94>
 8006834:	687b      	ldr	r3, [r7, #4]
 8006836:	4a16      	ldr	r2, [pc, #88]	@ (8006890 <TIM_OC2_SetConfig+0xe8>)
 8006838:	4293      	cmp	r3, r2
 800683a:	d113      	bne.n	8006864 <TIM_OC2_SetConfig+0xbc>
 800683c:	693b      	ldr	r3, [r7, #16]
 800683e:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8006842:	613b      	str	r3, [r7, #16]
 8006844:	693b      	ldr	r3, [r7, #16]
 8006846:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800684a:	613b      	str	r3, [r7, #16]
 800684c:	683b      	ldr	r3, [r7, #0]
 800684e:	695b      	ldr	r3, [r3, #20]
 8006850:	009b      	lsls	r3, r3, #2
 8006852:	693a      	ldr	r2, [r7, #16]
 8006854:	4313      	orrs	r3, r2
 8006856:	613b      	str	r3, [r7, #16]
 8006858:	683b      	ldr	r3, [r7, #0]
 800685a:	699b      	ldr	r3, [r3, #24]
 800685c:	009b      	lsls	r3, r3, #2
 800685e:	693a      	ldr	r2, [r7, #16]
 8006860:	4313      	orrs	r3, r2
 8006862:	613b      	str	r3, [r7, #16]
 8006864:	687b      	ldr	r3, [r7, #4]
 8006866:	693a      	ldr	r2, [r7, #16]
 8006868:	605a      	str	r2, [r3, #4]
 800686a:	687b      	ldr	r3, [r7, #4]
 800686c:	68fa      	ldr	r2, [r7, #12]
 800686e:	619a      	str	r2, [r3, #24]
 8006870:	683b      	ldr	r3, [r7, #0]
 8006872:	685a      	ldr	r2, [r3, #4]
 8006874:	687b      	ldr	r3, [r7, #4]
 8006876:	639a      	str	r2, [r3, #56]	@ 0x38
 8006878:	687b      	ldr	r3, [r7, #4]
 800687a:	697a      	ldr	r2, [r7, #20]
 800687c:	621a      	str	r2, [r3, #32]
 800687e:	bf00      	nop
 8006880:	371c      	adds	r7, #28
 8006882:	46bd      	mov	sp, r7
 8006884:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006888:	4770      	bx	lr
 800688a:	bf00      	nop
 800688c:	40010000 	.word	0x40010000
 8006890:	40010400 	.word	0x40010400

08006894 <TIM_OC3_SetConfig>:
 8006894:	b480      	push	{r7}
 8006896:	b087      	sub	sp, #28
 8006898:	af00      	add	r7, sp, #0
 800689a:	6078      	str	r0, [r7, #4]
 800689c:	6039      	str	r1, [r7, #0]
 800689e:	687b      	ldr	r3, [r7, #4]
 80068a0:	6a1b      	ldr	r3, [r3, #32]
 80068a2:	617b      	str	r3, [r7, #20]
 80068a4:	687b      	ldr	r3, [r7, #4]
 80068a6:	6a1b      	ldr	r3, [r3, #32]
 80068a8:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 80068ac:	687b      	ldr	r3, [r7, #4]
 80068ae:	621a      	str	r2, [r3, #32]
 80068b0:	687b      	ldr	r3, [r7, #4]
 80068b2:	685b      	ldr	r3, [r3, #4]
 80068b4:	613b      	str	r3, [r7, #16]
 80068b6:	687b      	ldr	r3, [r7, #4]
 80068b8:	69db      	ldr	r3, [r3, #28]
 80068ba:	60fb      	str	r3, [r7, #12]
 80068bc:	68fb      	ldr	r3, [r7, #12]
 80068be:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80068c2:	60fb      	str	r3, [r7, #12]
 80068c4:	68fb      	ldr	r3, [r7, #12]
 80068c6:	f023 0303 	bic.w	r3, r3, #3
 80068ca:	60fb      	str	r3, [r7, #12]
 80068cc:	683b      	ldr	r3, [r7, #0]
 80068ce:	681b      	ldr	r3, [r3, #0]
 80068d0:	68fa      	ldr	r2, [r7, #12]
 80068d2:	4313      	orrs	r3, r2
 80068d4:	60fb      	str	r3, [r7, #12]
 80068d6:	697b      	ldr	r3, [r7, #20]
 80068d8:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 80068dc:	617b      	str	r3, [r7, #20]
 80068de:	683b      	ldr	r3, [r7, #0]
 80068e0:	689b      	ldr	r3, [r3, #8]
 80068e2:	021b      	lsls	r3, r3, #8
 80068e4:	697a      	ldr	r2, [r7, #20]
 80068e6:	4313      	orrs	r3, r2
 80068e8:	617b      	str	r3, [r7, #20]
 80068ea:	687b      	ldr	r3, [r7, #4]
 80068ec:	4a21      	ldr	r2, [pc, #132]	@ (8006974 <TIM_OC3_SetConfig+0xe0>)
 80068ee:	4293      	cmp	r3, r2
 80068f0:	d003      	beq.n	80068fa <TIM_OC3_SetConfig+0x66>
 80068f2:	687b      	ldr	r3, [r7, #4]
 80068f4:	4a20      	ldr	r2, [pc, #128]	@ (8006978 <TIM_OC3_SetConfig+0xe4>)
 80068f6:	4293      	cmp	r3, r2
 80068f8:	d10d      	bne.n	8006916 <TIM_OC3_SetConfig+0x82>
 80068fa:	697b      	ldr	r3, [r7, #20]
 80068fc:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8006900:	617b      	str	r3, [r7, #20]
 8006902:	683b      	ldr	r3, [r7, #0]
 8006904:	68db      	ldr	r3, [r3, #12]
 8006906:	021b      	lsls	r3, r3, #8
 8006908:	697a      	ldr	r2, [r7, #20]
 800690a:	4313      	orrs	r3, r2
 800690c:	617b      	str	r3, [r7, #20]
 800690e:	697b      	ldr	r3, [r7, #20]
 8006910:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8006914:	617b      	str	r3, [r7, #20]
 8006916:	687b      	ldr	r3, [r7, #4]
 8006918:	4a16      	ldr	r2, [pc, #88]	@ (8006974 <TIM_OC3_SetConfig+0xe0>)
 800691a:	4293      	cmp	r3, r2
 800691c:	d003      	beq.n	8006926 <TIM_OC3_SetConfig+0x92>
 800691e:	687b      	ldr	r3, [r7, #4]
 8006920:	4a15      	ldr	r2, [pc, #84]	@ (8006978 <TIM_OC3_SetConfig+0xe4>)
 8006922:	4293      	cmp	r3, r2
 8006924:	d113      	bne.n	800694e <TIM_OC3_SetConfig+0xba>
 8006926:	693b      	ldr	r3, [r7, #16]
 8006928:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800692c:	613b      	str	r3, [r7, #16]
 800692e:	693b      	ldr	r3, [r7, #16]
 8006930:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8006934:	613b      	str	r3, [r7, #16]
 8006936:	683b      	ldr	r3, [r7, #0]
 8006938:	695b      	ldr	r3, [r3, #20]
 800693a:	011b      	lsls	r3, r3, #4
 800693c:	693a      	ldr	r2, [r7, #16]
 800693e:	4313      	orrs	r3, r2
 8006940:	613b      	str	r3, [r7, #16]
 8006942:	683b      	ldr	r3, [r7, #0]
 8006944:	699b      	ldr	r3, [r3, #24]
 8006946:	011b      	lsls	r3, r3, #4
 8006948:	693a      	ldr	r2, [r7, #16]
 800694a:	4313      	orrs	r3, r2
 800694c:	613b      	str	r3, [r7, #16]
 800694e:	687b      	ldr	r3, [r7, #4]
 8006950:	693a      	ldr	r2, [r7, #16]
 8006952:	605a      	str	r2, [r3, #4]
 8006954:	687b      	ldr	r3, [r7, #4]
 8006956:	68fa      	ldr	r2, [r7, #12]
 8006958:	61da      	str	r2, [r3, #28]
 800695a:	683b      	ldr	r3, [r7, #0]
 800695c:	685a      	ldr	r2, [r3, #4]
 800695e:	687b      	ldr	r3, [r7, #4]
 8006960:	63da      	str	r2, [r3, #60]	@ 0x3c
 8006962:	687b      	ldr	r3, [r7, #4]
 8006964:	697a      	ldr	r2, [r7, #20]
 8006966:	621a      	str	r2, [r3, #32]
 8006968:	bf00      	nop
 800696a:	371c      	adds	r7, #28
 800696c:	46bd      	mov	sp, r7
 800696e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006972:	4770      	bx	lr
 8006974:	40010000 	.word	0x40010000
 8006978:	40010400 	.word	0x40010400

0800697c <TIM_OC4_SetConfig>:
 800697c:	b480      	push	{r7}
 800697e:	b087      	sub	sp, #28
 8006980:	af00      	add	r7, sp, #0
 8006982:	6078      	str	r0, [r7, #4]
 8006984:	6039      	str	r1, [r7, #0]
 8006986:	687b      	ldr	r3, [r7, #4]
 8006988:	6a1b      	ldr	r3, [r3, #32]
 800698a:	613b      	str	r3, [r7, #16]
 800698c:	687b      	ldr	r3, [r7, #4]
 800698e:	6a1b      	ldr	r3, [r3, #32]
 8006990:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8006994:	687b      	ldr	r3, [r7, #4]
 8006996:	621a      	str	r2, [r3, #32]
 8006998:	687b      	ldr	r3, [r7, #4]
 800699a:	685b      	ldr	r3, [r3, #4]
 800699c:	617b      	str	r3, [r7, #20]
 800699e:	687b      	ldr	r3, [r7, #4]
 80069a0:	69db      	ldr	r3, [r3, #28]
 80069a2:	60fb      	str	r3, [r7, #12]
 80069a4:	68fb      	ldr	r3, [r7, #12]
 80069a6:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80069aa:	60fb      	str	r3, [r7, #12]
 80069ac:	68fb      	ldr	r3, [r7, #12]
 80069ae:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80069b2:	60fb      	str	r3, [r7, #12]
 80069b4:	683b      	ldr	r3, [r7, #0]
 80069b6:	681b      	ldr	r3, [r3, #0]
 80069b8:	021b      	lsls	r3, r3, #8
 80069ba:	68fa      	ldr	r2, [r7, #12]
 80069bc:	4313      	orrs	r3, r2
 80069be:	60fb      	str	r3, [r7, #12]
 80069c0:	693b      	ldr	r3, [r7, #16]
 80069c2:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 80069c6:	613b      	str	r3, [r7, #16]
 80069c8:	683b      	ldr	r3, [r7, #0]
 80069ca:	689b      	ldr	r3, [r3, #8]
 80069cc:	031b      	lsls	r3, r3, #12
 80069ce:	693a      	ldr	r2, [r7, #16]
 80069d0:	4313      	orrs	r3, r2
 80069d2:	613b      	str	r3, [r7, #16]
 80069d4:	687b      	ldr	r3, [r7, #4]
 80069d6:	4a12      	ldr	r2, [pc, #72]	@ (8006a20 <TIM_OC4_SetConfig+0xa4>)
 80069d8:	4293      	cmp	r3, r2
 80069da:	d003      	beq.n	80069e4 <TIM_OC4_SetConfig+0x68>
 80069dc:	687b      	ldr	r3, [r7, #4]
 80069de:	4a11      	ldr	r2, [pc, #68]	@ (8006a24 <TIM_OC4_SetConfig+0xa8>)
 80069e0:	4293      	cmp	r3, r2
 80069e2:	d109      	bne.n	80069f8 <TIM_OC4_SetConfig+0x7c>
 80069e4:	697b      	ldr	r3, [r7, #20]
 80069e6:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 80069ea:	617b      	str	r3, [r7, #20]
 80069ec:	683b      	ldr	r3, [r7, #0]
 80069ee:	695b      	ldr	r3, [r3, #20]
 80069f0:	019b      	lsls	r3, r3, #6
 80069f2:	697a      	ldr	r2, [r7, #20]
 80069f4:	4313      	orrs	r3, r2
 80069f6:	617b      	str	r3, [r7, #20]
 80069f8:	687b      	ldr	r3, [r7, #4]
 80069fa:	697a      	ldr	r2, [r7, #20]
 80069fc:	605a      	str	r2, [r3, #4]
 80069fe:	687b      	ldr	r3, [r7, #4]
 8006a00:	68fa      	ldr	r2, [r7, #12]
 8006a02:	61da      	str	r2, [r3, #28]
 8006a04:	683b      	ldr	r3, [r7, #0]
 8006a06:	685a      	ldr	r2, [r3, #4]
 8006a08:	687b      	ldr	r3, [r7, #4]
 8006a0a:	641a      	str	r2, [r3, #64]	@ 0x40
 8006a0c:	687b      	ldr	r3, [r7, #4]
 8006a0e:	693a      	ldr	r2, [r7, #16]
 8006a10:	621a      	str	r2, [r3, #32]
 8006a12:	bf00      	nop
 8006a14:	371c      	adds	r7, #28
 8006a16:	46bd      	mov	sp, r7
 8006a18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a1c:	4770      	bx	lr
 8006a1e:	bf00      	nop
 8006a20:	40010000 	.word	0x40010000
 8006a24:	40010400 	.word	0x40010400

08006a28 <TIM_TI1_ConfigInputStage>:
 8006a28:	b480      	push	{r7}
 8006a2a:	b087      	sub	sp, #28
 8006a2c:	af00      	add	r7, sp, #0
 8006a2e:	60f8      	str	r0, [r7, #12]
 8006a30:	60b9      	str	r1, [r7, #8]
 8006a32:	607a      	str	r2, [r7, #4]
 8006a34:	68fb      	ldr	r3, [r7, #12]
 8006a36:	6a1b      	ldr	r3, [r3, #32]
 8006a38:	617b      	str	r3, [r7, #20]
 8006a3a:	68fb      	ldr	r3, [r7, #12]
 8006a3c:	6a1b      	ldr	r3, [r3, #32]
 8006a3e:	f023 0201 	bic.w	r2, r3, #1
 8006a42:	68fb      	ldr	r3, [r7, #12]
 8006a44:	621a      	str	r2, [r3, #32]
 8006a46:	68fb      	ldr	r3, [r7, #12]
 8006a48:	699b      	ldr	r3, [r3, #24]
 8006a4a:	613b      	str	r3, [r7, #16]
 8006a4c:	693b      	ldr	r3, [r7, #16]
 8006a4e:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8006a52:	613b      	str	r3, [r7, #16]
 8006a54:	687b      	ldr	r3, [r7, #4]
 8006a56:	011b      	lsls	r3, r3, #4
 8006a58:	693a      	ldr	r2, [r7, #16]
 8006a5a:	4313      	orrs	r3, r2
 8006a5c:	613b      	str	r3, [r7, #16]
 8006a5e:	697b      	ldr	r3, [r7, #20]
 8006a60:	f023 030a 	bic.w	r3, r3, #10
 8006a64:	617b      	str	r3, [r7, #20]
 8006a66:	697a      	ldr	r2, [r7, #20]
 8006a68:	68bb      	ldr	r3, [r7, #8]
 8006a6a:	4313      	orrs	r3, r2
 8006a6c:	617b      	str	r3, [r7, #20]
 8006a6e:	68fb      	ldr	r3, [r7, #12]
 8006a70:	693a      	ldr	r2, [r7, #16]
 8006a72:	619a      	str	r2, [r3, #24]
 8006a74:	68fb      	ldr	r3, [r7, #12]
 8006a76:	697a      	ldr	r2, [r7, #20]
 8006a78:	621a      	str	r2, [r3, #32]
 8006a7a:	bf00      	nop
 8006a7c:	371c      	adds	r7, #28
 8006a7e:	46bd      	mov	sp, r7
 8006a80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a84:	4770      	bx	lr

08006a86 <TIM_TI2_ConfigInputStage>:
 8006a86:	b480      	push	{r7}
 8006a88:	b087      	sub	sp, #28
 8006a8a:	af00      	add	r7, sp, #0
 8006a8c:	60f8      	str	r0, [r7, #12]
 8006a8e:	60b9      	str	r1, [r7, #8]
 8006a90:	607a      	str	r2, [r7, #4]
 8006a92:	68fb      	ldr	r3, [r7, #12]
 8006a94:	6a1b      	ldr	r3, [r3, #32]
 8006a96:	617b      	str	r3, [r7, #20]
 8006a98:	68fb      	ldr	r3, [r7, #12]
 8006a9a:	6a1b      	ldr	r3, [r3, #32]
 8006a9c:	f023 0210 	bic.w	r2, r3, #16
 8006aa0:	68fb      	ldr	r3, [r7, #12]
 8006aa2:	621a      	str	r2, [r3, #32]
 8006aa4:	68fb      	ldr	r3, [r7, #12]
 8006aa6:	699b      	ldr	r3, [r3, #24]
 8006aa8:	613b      	str	r3, [r7, #16]
 8006aaa:	693b      	ldr	r3, [r7, #16]
 8006aac:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8006ab0:	613b      	str	r3, [r7, #16]
 8006ab2:	687b      	ldr	r3, [r7, #4]
 8006ab4:	031b      	lsls	r3, r3, #12
 8006ab6:	693a      	ldr	r2, [r7, #16]
 8006ab8:	4313      	orrs	r3, r2
 8006aba:	613b      	str	r3, [r7, #16]
 8006abc:	697b      	ldr	r3, [r7, #20]
 8006abe:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8006ac2:	617b      	str	r3, [r7, #20]
 8006ac4:	68bb      	ldr	r3, [r7, #8]
 8006ac6:	011b      	lsls	r3, r3, #4
 8006ac8:	697a      	ldr	r2, [r7, #20]
 8006aca:	4313      	orrs	r3, r2
 8006acc:	617b      	str	r3, [r7, #20]
 8006ace:	68fb      	ldr	r3, [r7, #12]
 8006ad0:	693a      	ldr	r2, [r7, #16]
 8006ad2:	619a      	str	r2, [r3, #24]
 8006ad4:	68fb      	ldr	r3, [r7, #12]
 8006ad6:	697a      	ldr	r2, [r7, #20]
 8006ad8:	621a      	str	r2, [r3, #32]
 8006ada:	bf00      	nop
 8006adc:	371c      	adds	r7, #28
 8006ade:	46bd      	mov	sp, r7
 8006ae0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ae4:	4770      	bx	lr

08006ae6 <TIM_ITRx_SetConfig>:
 8006ae6:	b480      	push	{r7}
 8006ae8:	b085      	sub	sp, #20
 8006aea:	af00      	add	r7, sp, #0
 8006aec:	6078      	str	r0, [r7, #4]
 8006aee:	6039      	str	r1, [r7, #0]
 8006af0:	687b      	ldr	r3, [r7, #4]
 8006af2:	689b      	ldr	r3, [r3, #8]
 8006af4:	60fb      	str	r3, [r7, #12]
 8006af6:	68fb      	ldr	r3, [r7, #12]
 8006af8:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8006afc:	60fb      	str	r3, [r7, #12]
 8006afe:	683a      	ldr	r2, [r7, #0]
 8006b00:	68fb      	ldr	r3, [r7, #12]
 8006b02:	4313      	orrs	r3, r2
 8006b04:	f043 0307 	orr.w	r3, r3, #7
 8006b08:	60fb      	str	r3, [r7, #12]
 8006b0a:	687b      	ldr	r3, [r7, #4]
 8006b0c:	68fa      	ldr	r2, [r7, #12]
 8006b0e:	609a      	str	r2, [r3, #8]
 8006b10:	bf00      	nop
 8006b12:	3714      	adds	r7, #20
 8006b14:	46bd      	mov	sp, r7
 8006b16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b1a:	4770      	bx	lr

08006b1c <TIM_ETR_SetConfig>:
 8006b1c:	b480      	push	{r7}
 8006b1e:	b087      	sub	sp, #28
 8006b20:	af00      	add	r7, sp, #0
 8006b22:	60f8      	str	r0, [r7, #12]
 8006b24:	60b9      	str	r1, [r7, #8]
 8006b26:	607a      	str	r2, [r7, #4]
 8006b28:	603b      	str	r3, [r7, #0]
 8006b2a:	68fb      	ldr	r3, [r7, #12]
 8006b2c:	689b      	ldr	r3, [r3, #8]
 8006b2e:	617b      	str	r3, [r7, #20]
 8006b30:	697b      	ldr	r3, [r7, #20]
 8006b32:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8006b36:	617b      	str	r3, [r7, #20]
 8006b38:	683b      	ldr	r3, [r7, #0]
 8006b3a:	021a      	lsls	r2, r3, #8
 8006b3c:	687b      	ldr	r3, [r7, #4]
 8006b3e:	431a      	orrs	r2, r3
 8006b40:	68bb      	ldr	r3, [r7, #8]
 8006b42:	4313      	orrs	r3, r2
 8006b44:	697a      	ldr	r2, [r7, #20]
 8006b46:	4313      	orrs	r3, r2
 8006b48:	617b      	str	r3, [r7, #20]
 8006b4a:	68fb      	ldr	r3, [r7, #12]
 8006b4c:	697a      	ldr	r2, [r7, #20]
 8006b4e:	609a      	str	r2, [r3, #8]
 8006b50:	bf00      	nop
 8006b52:	371c      	adds	r7, #28
 8006b54:	46bd      	mov	sp, r7
 8006b56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b5a:	4770      	bx	lr

08006b5c <TIM_CCxChannelCmd>:
 8006b5c:	b480      	push	{r7}
 8006b5e:	b087      	sub	sp, #28
 8006b60:	af00      	add	r7, sp, #0
 8006b62:	60f8      	str	r0, [r7, #12]
 8006b64:	60b9      	str	r1, [r7, #8]
 8006b66:	607a      	str	r2, [r7, #4]
 8006b68:	68bb      	ldr	r3, [r7, #8]
 8006b6a:	f003 031f 	and.w	r3, r3, #31
 8006b6e:	2201      	movs	r2, #1
 8006b70:	fa02 f303 	lsl.w	r3, r2, r3
 8006b74:	617b      	str	r3, [r7, #20]
 8006b76:	68fb      	ldr	r3, [r7, #12]
 8006b78:	6a1a      	ldr	r2, [r3, #32]
 8006b7a:	697b      	ldr	r3, [r7, #20]
 8006b7c:	43db      	mvns	r3, r3
 8006b7e:	401a      	ands	r2, r3
 8006b80:	68fb      	ldr	r3, [r7, #12]
 8006b82:	621a      	str	r2, [r3, #32]
 8006b84:	68fb      	ldr	r3, [r7, #12]
 8006b86:	6a1a      	ldr	r2, [r3, #32]
 8006b88:	68bb      	ldr	r3, [r7, #8]
 8006b8a:	f003 031f 	and.w	r3, r3, #31
 8006b8e:	6879      	ldr	r1, [r7, #4]
 8006b90:	fa01 f303 	lsl.w	r3, r1, r3
 8006b94:	431a      	orrs	r2, r3
 8006b96:	68fb      	ldr	r3, [r7, #12]
 8006b98:	621a      	str	r2, [r3, #32]
 8006b9a:	bf00      	nop
 8006b9c:	371c      	adds	r7, #28
 8006b9e:	46bd      	mov	sp, r7
 8006ba0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ba4:	4770      	bx	lr
	...

08006ba8 <HAL_TIMEx_MasterConfigSynchronization>:
 8006ba8:	b480      	push	{r7}
 8006baa:	b085      	sub	sp, #20
 8006bac:	af00      	add	r7, sp, #0
 8006bae:	6078      	str	r0, [r7, #4]
 8006bb0:	6039      	str	r1, [r7, #0]
 8006bb2:	687b      	ldr	r3, [r7, #4]
 8006bb4:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8006bb8:	2b01      	cmp	r3, #1
 8006bba:	d101      	bne.n	8006bc0 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8006bbc:	2302      	movs	r3, #2
 8006bbe:	e05a      	b.n	8006c76 <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8006bc0:	687b      	ldr	r3, [r7, #4]
 8006bc2:	2201      	movs	r2, #1
 8006bc4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006bc8:	687b      	ldr	r3, [r7, #4]
 8006bca:	2202      	movs	r2, #2
 8006bcc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8006bd0:	687b      	ldr	r3, [r7, #4]
 8006bd2:	681b      	ldr	r3, [r3, #0]
 8006bd4:	685b      	ldr	r3, [r3, #4]
 8006bd6:	60fb      	str	r3, [r7, #12]
 8006bd8:	687b      	ldr	r3, [r7, #4]
 8006bda:	681b      	ldr	r3, [r3, #0]
 8006bdc:	689b      	ldr	r3, [r3, #8]
 8006bde:	60bb      	str	r3, [r7, #8]
 8006be0:	68fb      	ldr	r3, [r7, #12]
 8006be2:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8006be6:	60fb      	str	r3, [r7, #12]
 8006be8:	683b      	ldr	r3, [r7, #0]
 8006bea:	681b      	ldr	r3, [r3, #0]
 8006bec:	68fa      	ldr	r2, [r7, #12]
 8006bee:	4313      	orrs	r3, r2
 8006bf0:	60fb      	str	r3, [r7, #12]
 8006bf2:	687b      	ldr	r3, [r7, #4]
 8006bf4:	681b      	ldr	r3, [r3, #0]
 8006bf6:	68fa      	ldr	r2, [r7, #12]
 8006bf8:	605a      	str	r2, [r3, #4]
 8006bfa:	687b      	ldr	r3, [r7, #4]
 8006bfc:	681b      	ldr	r3, [r3, #0]
 8006bfe:	4a21      	ldr	r2, [pc, #132]	@ (8006c84 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8006c00:	4293      	cmp	r3, r2
 8006c02:	d022      	beq.n	8006c4a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006c04:	687b      	ldr	r3, [r7, #4]
 8006c06:	681b      	ldr	r3, [r3, #0]
 8006c08:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8006c0c:	d01d      	beq.n	8006c4a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006c0e:	687b      	ldr	r3, [r7, #4]
 8006c10:	681b      	ldr	r3, [r3, #0]
 8006c12:	4a1d      	ldr	r2, [pc, #116]	@ (8006c88 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8006c14:	4293      	cmp	r3, r2
 8006c16:	d018      	beq.n	8006c4a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006c18:	687b      	ldr	r3, [r7, #4]
 8006c1a:	681b      	ldr	r3, [r3, #0]
 8006c1c:	4a1b      	ldr	r2, [pc, #108]	@ (8006c8c <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 8006c1e:	4293      	cmp	r3, r2
 8006c20:	d013      	beq.n	8006c4a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006c22:	687b      	ldr	r3, [r7, #4]
 8006c24:	681b      	ldr	r3, [r3, #0]
 8006c26:	4a1a      	ldr	r2, [pc, #104]	@ (8006c90 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 8006c28:	4293      	cmp	r3, r2
 8006c2a:	d00e      	beq.n	8006c4a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006c2c:	687b      	ldr	r3, [r7, #4]
 8006c2e:	681b      	ldr	r3, [r3, #0]
 8006c30:	4a18      	ldr	r2, [pc, #96]	@ (8006c94 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 8006c32:	4293      	cmp	r3, r2
 8006c34:	d009      	beq.n	8006c4a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006c36:	687b      	ldr	r3, [r7, #4]
 8006c38:	681b      	ldr	r3, [r3, #0]
 8006c3a:	4a17      	ldr	r2, [pc, #92]	@ (8006c98 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8006c3c:	4293      	cmp	r3, r2
 8006c3e:	d004      	beq.n	8006c4a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006c40:	687b      	ldr	r3, [r7, #4]
 8006c42:	681b      	ldr	r3, [r3, #0]
 8006c44:	4a15      	ldr	r2, [pc, #84]	@ (8006c9c <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8006c46:	4293      	cmp	r3, r2
 8006c48:	d10c      	bne.n	8006c64 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 8006c4a:	68bb      	ldr	r3, [r7, #8]
 8006c4c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8006c50:	60bb      	str	r3, [r7, #8]
 8006c52:	683b      	ldr	r3, [r7, #0]
 8006c54:	685b      	ldr	r3, [r3, #4]
 8006c56:	68ba      	ldr	r2, [r7, #8]
 8006c58:	4313      	orrs	r3, r2
 8006c5a:	60bb      	str	r3, [r7, #8]
 8006c5c:	687b      	ldr	r3, [r7, #4]
 8006c5e:	681b      	ldr	r3, [r3, #0]
 8006c60:	68ba      	ldr	r2, [r7, #8]
 8006c62:	609a      	str	r2, [r3, #8]
 8006c64:	687b      	ldr	r3, [r7, #4]
 8006c66:	2201      	movs	r2, #1
 8006c68:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8006c6c:	687b      	ldr	r3, [r7, #4]
 8006c6e:	2200      	movs	r2, #0
 8006c70:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006c74:	2300      	movs	r3, #0
 8006c76:	4618      	mov	r0, r3
 8006c78:	3714      	adds	r7, #20
 8006c7a:	46bd      	mov	sp, r7
 8006c7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c80:	4770      	bx	lr
 8006c82:	bf00      	nop
 8006c84:	40010000 	.word	0x40010000
 8006c88:	40000400 	.word	0x40000400
 8006c8c:	40000800 	.word	0x40000800
 8006c90:	40000c00 	.word	0x40000c00
 8006c94:	40010400 	.word	0x40010400
 8006c98:	40014000 	.word	0x40014000
 8006c9c:	40001800 	.word	0x40001800

08006ca0 <HAL_TIMEx_ConfigBreakDeadTime>:
 8006ca0:	b480      	push	{r7}
 8006ca2:	b085      	sub	sp, #20
 8006ca4:	af00      	add	r7, sp, #0
 8006ca6:	6078      	str	r0, [r7, #4]
 8006ca8:	6039      	str	r1, [r7, #0]
 8006caa:	2300      	movs	r3, #0
 8006cac:	60fb      	str	r3, [r7, #12]
 8006cae:	687b      	ldr	r3, [r7, #4]
 8006cb0:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8006cb4:	2b01      	cmp	r3, #1
 8006cb6:	d101      	bne.n	8006cbc <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 8006cb8:	2302      	movs	r3, #2
 8006cba:	e03d      	b.n	8006d38 <HAL_TIMEx_ConfigBreakDeadTime+0x98>
 8006cbc:	687b      	ldr	r3, [r7, #4]
 8006cbe:	2201      	movs	r2, #1
 8006cc0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006cc4:	68fb      	ldr	r3, [r7, #12]
 8006cc6:	f023 02ff 	bic.w	r2, r3, #255	@ 0xff
 8006cca:	683b      	ldr	r3, [r7, #0]
 8006ccc:	68db      	ldr	r3, [r3, #12]
 8006cce:	4313      	orrs	r3, r2
 8006cd0:	60fb      	str	r3, [r7, #12]
 8006cd2:	68fb      	ldr	r3, [r7, #12]
 8006cd4:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8006cd8:	683b      	ldr	r3, [r7, #0]
 8006cda:	689b      	ldr	r3, [r3, #8]
 8006cdc:	4313      	orrs	r3, r2
 8006cde:	60fb      	str	r3, [r7, #12]
 8006ce0:	68fb      	ldr	r3, [r7, #12]
 8006ce2:	f423 6280 	bic.w	r2, r3, #1024	@ 0x400
 8006ce6:	683b      	ldr	r3, [r7, #0]
 8006ce8:	685b      	ldr	r3, [r3, #4]
 8006cea:	4313      	orrs	r3, r2
 8006cec:	60fb      	str	r3, [r7, #12]
 8006cee:	68fb      	ldr	r3, [r7, #12]
 8006cf0:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
 8006cf4:	683b      	ldr	r3, [r7, #0]
 8006cf6:	681b      	ldr	r3, [r3, #0]
 8006cf8:	4313      	orrs	r3, r2
 8006cfa:	60fb      	str	r3, [r7, #12]
 8006cfc:	68fb      	ldr	r3, [r7, #12]
 8006cfe:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8006d02:	683b      	ldr	r3, [r7, #0]
 8006d04:	691b      	ldr	r3, [r3, #16]
 8006d06:	4313      	orrs	r3, r2
 8006d08:	60fb      	str	r3, [r7, #12]
 8006d0a:	68fb      	ldr	r3, [r7, #12]
 8006d0c:	f423 5200 	bic.w	r2, r3, #8192	@ 0x2000
 8006d10:	683b      	ldr	r3, [r7, #0]
 8006d12:	695b      	ldr	r3, [r3, #20]
 8006d14:	4313      	orrs	r3, r2
 8006d16:	60fb      	str	r3, [r7, #12]
 8006d18:	68fb      	ldr	r3, [r7, #12]
 8006d1a:	f423 4280 	bic.w	r2, r3, #16384	@ 0x4000
 8006d1e:	683b      	ldr	r3, [r7, #0]
 8006d20:	69db      	ldr	r3, [r3, #28]
 8006d22:	4313      	orrs	r3, r2
 8006d24:	60fb      	str	r3, [r7, #12]
 8006d26:	687b      	ldr	r3, [r7, #4]
 8006d28:	681b      	ldr	r3, [r3, #0]
 8006d2a:	68fa      	ldr	r2, [r7, #12]
 8006d2c:	645a      	str	r2, [r3, #68]	@ 0x44
 8006d2e:	687b      	ldr	r3, [r7, #4]
 8006d30:	2200      	movs	r2, #0
 8006d32:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006d36:	2300      	movs	r3, #0
 8006d38:	4618      	mov	r0, r3
 8006d3a:	3714      	adds	r7, #20
 8006d3c:	46bd      	mov	sp, r7
 8006d3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d42:	4770      	bx	lr

08006d44 <HAL_UART_Init>:
 8006d44:	b580      	push	{r7, lr}
 8006d46:	b082      	sub	sp, #8
 8006d48:	af00      	add	r7, sp, #0
 8006d4a:	6078      	str	r0, [r7, #4]
 8006d4c:	687b      	ldr	r3, [r7, #4]
 8006d4e:	2b00      	cmp	r3, #0
 8006d50:	d101      	bne.n	8006d56 <HAL_UART_Init+0x12>
 8006d52:	2301      	movs	r3, #1
 8006d54:	e042      	b.n	8006ddc <HAL_UART_Init+0x98>
 8006d56:	687b      	ldr	r3, [r7, #4]
 8006d58:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8006d5c:	b2db      	uxtb	r3, r3
 8006d5e:	2b00      	cmp	r3, #0
 8006d60:	d106      	bne.n	8006d70 <HAL_UART_Init+0x2c>
 8006d62:	687b      	ldr	r3, [r7, #4]
 8006d64:	2200      	movs	r2, #0
 8006d66:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8006d6a:	6878      	ldr	r0, [r7, #4]
 8006d6c:	f7fc f88c 	bl	8002e88 <HAL_UART_MspInit>
 8006d70:	687b      	ldr	r3, [r7, #4]
 8006d72:	2224      	movs	r2, #36	@ 0x24
 8006d74:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006d78:	687b      	ldr	r3, [r7, #4]
 8006d7a:	681b      	ldr	r3, [r3, #0]
 8006d7c:	68da      	ldr	r2, [r3, #12]
 8006d7e:	687b      	ldr	r3, [r7, #4]
 8006d80:	681b      	ldr	r3, [r3, #0]
 8006d82:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8006d86:	60da      	str	r2, [r3, #12]
 8006d88:	6878      	ldr	r0, [r7, #4]
 8006d8a:	f000 fdbd 	bl	8007908 <UART_SetConfig>
 8006d8e:	687b      	ldr	r3, [r7, #4]
 8006d90:	681b      	ldr	r3, [r3, #0]
 8006d92:	691a      	ldr	r2, [r3, #16]
 8006d94:	687b      	ldr	r3, [r7, #4]
 8006d96:	681b      	ldr	r3, [r3, #0]
 8006d98:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8006d9c:	611a      	str	r2, [r3, #16]
 8006d9e:	687b      	ldr	r3, [r7, #4]
 8006da0:	681b      	ldr	r3, [r3, #0]
 8006da2:	695a      	ldr	r2, [r3, #20]
 8006da4:	687b      	ldr	r3, [r7, #4]
 8006da6:	681b      	ldr	r3, [r3, #0]
 8006da8:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8006dac:	615a      	str	r2, [r3, #20]
 8006dae:	687b      	ldr	r3, [r7, #4]
 8006db0:	681b      	ldr	r3, [r3, #0]
 8006db2:	68da      	ldr	r2, [r3, #12]
 8006db4:	687b      	ldr	r3, [r7, #4]
 8006db6:	681b      	ldr	r3, [r3, #0]
 8006db8:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8006dbc:	60da      	str	r2, [r3, #12]
 8006dbe:	687b      	ldr	r3, [r7, #4]
 8006dc0:	2200      	movs	r2, #0
 8006dc2:	645a      	str	r2, [r3, #68]	@ 0x44
 8006dc4:	687b      	ldr	r3, [r7, #4]
 8006dc6:	2220      	movs	r2, #32
 8006dc8:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006dcc:	687b      	ldr	r3, [r7, #4]
 8006dce:	2220      	movs	r2, #32
 8006dd0:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006dd4:	687b      	ldr	r3, [r7, #4]
 8006dd6:	2200      	movs	r2, #0
 8006dd8:	635a      	str	r2, [r3, #52]	@ 0x34
 8006dda:	2300      	movs	r3, #0
 8006ddc:	4618      	mov	r0, r3
 8006dde:	3708      	adds	r7, #8
 8006de0:	46bd      	mov	sp, r7
 8006de2:	bd80      	pop	{r7, pc}

08006de4 <HAL_UART_Transmit>:
 8006de4:	b580      	push	{r7, lr}
 8006de6:	b08a      	sub	sp, #40	@ 0x28
 8006de8:	af02      	add	r7, sp, #8
 8006dea:	60f8      	str	r0, [r7, #12]
 8006dec:	60b9      	str	r1, [r7, #8]
 8006dee:	603b      	str	r3, [r7, #0]
 8006df0:	4613      	mov	r3, r2
 8006df2:	80fb      	strh	r3, [r7, #6]
 8006df4:	2300      	movs	r3, #0
 8006df6:	617b      	str	r3, [r7, #20]
 8006df8:	68fb      	ldr	r3, [r7, #12]
 8006dfa:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8006dfe:	b2db      	uxtb	r3, r3
 8006e00:	2b20      	cmp	r3, #32
 8006e02:	d175      	bne.n	8006ef0 <HAL_UART_Transmit+0x10c>
 8006e04:	68bb      	ldr	r3, [r7, #8]
 8006e06:	2b00      	cmp	r3, #0
 8006e08:	d002      	beq.n	8006e10 <HAL_UART_Transmit+0x2c>
 8006e0a:	88fb      	ldrh	r3, [r7, #6]
 8006e0c:	2b00      	cmp	r3, #0
 8006e0e:	d101      	bne.n	8006e14 <HAL_UART_Transmit+0x30>
 8006e10:	2301      	movs	r3, #1
 8006e12:	e06e      	b.n	8006ef2 <HAL_UART_Transmit+0x10e>
 8006e14:	68fb      	ldr	r3, [r7, #12]
 8006e16:	2200      	movs	r2, #0
 8006e18:	645a      	str	r2, [r3, #68]	@ 0x44
 8006e1a:	68fb      	ldr	r3, [r7, #12]
 8006e1c:	2221      	movs	r2, #33	@ 0x21
 8006e1e:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006e22:	f7fc f94d 	bl	80030c0 <HAL_GetTick>
 8006e26:	6178      	str	r0, [r7, #20]
 8006e28:	68fb      	ldr	r3, [r7, #12]
 8006e2a:	88fa      	ldrh	r2, [r7, #6]
 8006e2c:	849a      	strh	r2, [r3, #36]	@ 0x24
 8006e2e:	68fb      	ldr	r3, [r7, #12]
 8006e30:	88fa      	ldrh	r2, [r7, #6]
 8006e32:	84da      	strh	r2, [r3, #38]	@ 0x26
 8006e34:	68fb      	ldr	r3, [r7, #12]
 8006e36:	689b      	ldr	r3, [r3, #8]
 8006e38:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8006e3c:	d108      	bne.n	8006e50 <HAL_UART_Transmit+0x6c>
 8006e3e:	68fb      	ldr	r3, [r7, #12]
 8006e40:	691b      	ldr	r3, [r3, #16]
 8006e42:	2b00      	cmp	r3, #0
 8006e44:	d104      	bne.n	8006e50 <HAL_UART_Transmit+0x6c>
 8006e46:	2300      	movs	r3, #0
 8006e48:	61fb      	str	r3, [r7, #28]
 8006e4a:	68bb      	ldr	r3, [r7, #8]
 8006e4c:	61bb      	str	r3, [r7, #24]
 8006e4e:	e003      	b.n	8006e58 <HAL_UART_Transmit+0x74>
 8006e50:	68bb      	ldr	r3, [r7, #8]
 8006e52:	61fb      	str	r3, [r7, #28]
 8006e54:	2300      	movs	r3, #0
 8006e56:	61bb      	str	r3, [r7, #24]
 8006e58:	e02e      	b.n	8006eb8 <HAL_UART_Transmit+0xd4>
 8006e5a:	683b      	ldr	r3, [r7, #0]
 8006e5c:	9300      	str	r3, [sp, #0]
 8006e5e:	697b      	ldr	r3, [r7, #20]
 8006e60:	2200      	movs	r2, #0
 8006e62:	2180      	movs	r1, #128	@ 0x80
 8006e64:	68f8      	ldr	r0, [r7, #12]
 8006e66:	f000 fb1f 	bl	80074a8 <UART_WaitOnFlagUntilTimeout>
 8006e6a:	4603      	mov	r3, r0
 8006e6c:	2b00      	cmp	r3, #0
 8006e6e:	d005      	beq.n	8006e7c <HAL_UART_Transmit+0x98>
 8006e70:	68fb      	ldr	r3, [r7, #12]
 8006e72:	2220      	movs	r2, #32
 8006e74:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006e78:	2303      	movs	r3, #3
 8006e7a:	e03a      	b.n	8006ef2 <HAL_UART_Transmit+0x10e>
 8006e7c:	69fb      	ldr	r3, [r7, #28]
 8006e7e:	2b00      	cmp	r3, #0
 8006e80:	d10b      	bne.n	8006e9a <HAL_UART_Transmit+0xb6>
 8006e82:	69bb      	ldr	r3, [r7, #24]
 8006e84:	881b      	ldrh	r3, [r3, #0]
 8006e86:	461a      	mov	r2, r3
 8006e88:	68fb      	ldr	r3, [r7, #12]
 8006e8a:	681b      	ldr	r3, [r3, #0]
 8006e8c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8006e90:	605a      	str	r2, [r3, #4]
 8006e92:	69bb      	ldr	r3, [r7, #24]
 8006e94:	3302      	adds	r3, #2
 8006e96:	61bb      	str	r3, [r7, #24]
 8006e98:	e007      	b.n	8006eaa <HAL_UART_Transmit+0xc6>
 8006e9a:	69fb      	ldr	r3, [r7, #28]
 8006e9c:	781a      	ldrb	r2, [r3, #0]
 8006e9e:	68fb      	ldr	r3, [r7, #12]
 8006ea0:	681b      	ldr	r3, [r3, #0]
 8006ea2:	605a      	str	r2, [r3, #4]
 8006ea4:	69fb      	ldr	r3, [r7, #28]
 8006ea6:	3301      	adds	r3, #1
 8006ea8:	61fb      	str	r3, [r7, #28]
 8006eaa:	68fb      	ldr	r3, [r7, #12]
 8006eac:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8006eae:	b29b      	uxth	r3, r3
 8006eb0:	3b01      	subs	r3, #1
 8006eb2:	b29a      	uxth	r2, r3
 8006eb4:	68fb      	ldr	r3, [r7, #12]
 8006eb6:	84da      	strh	r2, [r3, #38]	@ 0x26
 8006eb8:	68fb      	ldr	r3, [r7, #12]
 8006eba:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8006ebc:	b29b      	uxth	r3, r3
 8006ebe:	2b00      	cmp	r3, #0
 8006ec0:	d1cb      	bne.n	8006e5a <HAL_UART_Transmit+0x76>
 8006ec2:	683b      	ldr	r3, [r7, #0]
 8006ec4:	9300      	str	r3, [sp, #0]
 8006ec6:	697b      	ldr	r3, [r7, #20]
 8006ec8:	2200      	movs	r2, #0
 8006eca:	2140      	movs	r1, #64	@ 0x40
 8006ecc:	68f8      	ldr	r0, [r7, #12]
 8006ece:	f000 faeb 	bl	80074a8 <UART_WaitOnFlagUntilTimeout>
 8006ed2:	4603      	mov	r3, r0
 8006ed4:	2b00      	cmp	r3, #0
 8006ed6:	d005      	beq.n	8006ee4 <HAL_UART_Transmit+0x100>
 8006ed8:	68fb      	ldr	r3, [r7, #12]
 8006eda:	2220      	movs	r2, #32
 8006edc:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006ee0:	2303      	movs	r3, #3
 8006ee2:	e006      	b.n	8006ef2 <HAL_UART_Transmit+0x10e>
 8006ee4:	68fb      	ldr	r3, [r7, #12]
 8006ee6:	2220      	movs	r2, #32
 8006ee8:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006eec:	2300      	movs	r3, #0
 8006eee:	e000      	b.n	8006ef2 <HAL_UART_Transmit+0x10e>
 8006ef0:	2302      	movs	r3, #2
 8006ef2:	4618      	mov	r0, r3
 8006ef4:	3720      	adds	r7, #32
 8006ef6:	46bd      	mov	sp, r7
 8006ef8:	bd80      	pop	{r7, pc}

08006efa <HAL_UART_Receive_IT>:
 8006efa:	b580      	push	{r7, lr}
 8006efc:	b084      	sub	sp, #16
 8006efe:	af00      	add	r7, sp, #0
 8006f00:	60f8      	str	r0, [r7, #12]
 8006f02:	60b9      	str	r1, [r7, #8]
 8006f04:	4613      	mov	r3, r2
 8006f06:	80fb      	strh	r3, [r7, #6]
 8006f08:	68fb      	ldr	r3, [r7, #12]
 8006f0a:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8006f0e:	b2db      	uxtb	r3, r3
 8006f10:	2b20      	cmp	r3, #32
 8006f12:	d112      	bne.n	8006f3a <HAL_UART_Receive_IT+0x40>
 8006f14:	68bb      	ldr	r3, [r7, #8]
 8006f16:	2b00      	cmp	r3, #0
 8006f18:	d002      	beq.n	8006f20 <HAL_UART_Receive_IT+0x26>
 8006f1a:	88fb      	ldrh	r3, [r7, #6]
 8006f1c:	2b00      	cmp	r3, #0
 8006f1e:	d101      	bne.n	8006f24 <HAL_UART_Receive_IT+0x2a>
 8006f20:	2301      	movs	r3, #1
 8006f22:	e00b      	b.n	8006f3c <HAL_UART_Receive_IT+0x42>
 8006f24:	68fb      	ldr	r3, [r7, #12]
 8006f26:	2200      	movs	r2, #0
 8006f28:	631a      	str	r2, [r3, #48]	@ 0x30
 8006f2a:	88fb      	ldrh	r3, [r7, #6]
 8006f2c:	461a      	mov	r2, r3
 8006f2e:	68b9      	ldr	r1, [r7, #8]
 8006f30:	68f8      	ldr	r0, [r7, #12]
 8006f32:	f000 fb12 	bl	800755a <UART_Start_Receive_IT>
 8006f36:	4603      	mov	r3, r0
 8006f38:	e000      	b.n	8006f3c <HAL_UART_Receive_IT+0x42>
 8006f3a:	2302      	movs	r3, #2
 8006f3c:	4618      	mov	r0, r3
 8006f3e:	3710      	adds	r7, #16
 8006f40:	46bd      	mov	sp, r7
 8006f42:	bd80      	pop	{r7, pc}

08006f44 <HAL_UART_IRQHandler>:
 8006f44:	b580      	push	{r7, lr}
 8006f46:	b0ba      	sub	sp, #232	@ 0xe8
 8006f48:	af00      	add	r7, sp, #0
 8006f4a:	6078      	str	r0, [r7, #4]
 8006f4c:	687b      	ldr	r3, [r7, #4]
 8006f4e:	681b      	ldr	r3, [r3, #0]
 8006f50:	681b      	ldr	r3, [r3, #0]
 8006f52:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8006f56:	687b      	ldr	r3, [r7, #4]
 8006f58:	681b      	ldr	r3, [r3, #0]
 8006f5a:	68db      	ldr	r3, [r3, #12]
 8006f5c:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8006f60:	687b      	ldr	r3, [r7, #4]
 8006f62:	681b      	ldr	r3, [r3, #0]
 8006f64:	695b      	ldr	r3, [r3, #20]
 8006f66:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 8006f6a:	2300      	movs	r3, #0
 8006f6c:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8006f70:	2300      	movs	r3, #0
 8006f72:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8006f76:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006f7a:	f003 030f 	and.w	r3, r3, #15
 8006f7e:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8006f82:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8006f86:	2b00      	cmp	r3, #0
 8006f88:	d10f      	bne.n	8006faa <HAL_UART_IRQHandler+0x66>
 8006f8a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006f8e:	f003 0320 	and.w	r3, r3, #32
 8006f92:	2b00      	cmp	r3, #0
 8006f94:	d009      	beq.n	8006faa <HAL_UART_IRQHandler+0x66>
 8006f96:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006f9a:	f003 0320 	and.w	r3, r3, #32
 8006f9e:	2b00      	cmp	r3, #0
 8006fa0:	d003      	beq.n	8006faa <HAL_UART_IRQHandler+0x66>
 8006fa2:	6878      	ldr	r0, [r7, #4]
 8006fa4:	f000 fbf2 	bl	800778c <UART_Receive_IT>
 8006fa8:	e25b      	b.n	8007462 <HAL_UART_IRQHandler+0x51e>
 8006faa:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8006fae:	2b00      	cmp	r3, #0
 8006fb0:	f000 80de 	beq.w	8007170 <HAL_UART_IRQHandler+0x22c>
 8006fb4:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8006fb8:	f003 0301 	and.w	r3, r3, #1
 8006fbc:	2b00      	cmp	r3, #0
 8006fbe:	d106      	bne.n	8006fce <HAL_UART_IRQHandler+0x8a>
 8006fc0:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006fc4:	f403 7390 	and.w	r3, r3, #288	@ 0x120
 8006fc8:	2b00      	cmp	r3, #0
 8006fca:	f000 80d1 	beq.w	8007170 <HAL_UART_IRQHandler+0x22c>
 8006fce:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006fd2:	f003 0301 	and.w	r3, r3, #1
 8006fd6:	2b00      	cmp	r3, #0
 8006fd8:	d00b      	beq.n	8006ff2 <HAL_UART_IRQHandler+0xae>
 8006fda:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8006fde:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006fe2:	2b00      	cmp	r3, #0
 8006fe4:	d005      	beq.n	8006ff2 <HAL_UART_IRQHandler+0xae>
 8006fe6:	687b      	ldr	r3, [r7, #4]
 8006fe8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8006fea:	f043 0201 	orr.w	r2, r3, #1
 8006fee:	687b      	ldr	r3, [r7, #4]
 8006ff0:	645a      	str	r2, [r3, #68]	@ 0x44
 8006ff2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8006ff6:	f003 0304 	and.w	r3, r3, #4
 8006ffa:	2b00      	cmp	r3, #0
 8006ffc:	d00b      	beq.n	8007016 <HAL_UART_IRQHandler+0xd2>
 8006ffe:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8007002:	f003 0301 	and.w	r3, r3, #1
 8007006:	2b00      	cmp	r3, #0
 8007008:	d005      	beq.n	8007016 <HAL_UART_IRQHandler+0xd2>
 800700a:	687b      	ldr	r3, [r7, #4]
 800700c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800700e:	f043 0202 	orr.w	r2, r3, #2
 8007012:	687b      	ldr	r3, [r7, #4]
 8007014:	645a      	str	r2, [r3, #68]	@ 0x44
 8007016:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800701a:	f003 0302 	and.w	r3, r3, #2
 800701e:	2b00      	cmp	r3, #0
 8007020:	d00b      	beq.n	800703a <HAL_UART_IRQHandler+0xf6>
 8007022:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8007026:	f003 0301 	and.w	r3, r3, #1
 800702a:	2b00      	cmp	r3, #0
 800702c:	d005      	beq.n	800703a <HAL_UART_IRQHandler+0xf6>
 800702e:	687b      	ldr	r3, [r7, #4]
 8007030:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8007032:	f043 0204 	orr.w	r2, r3, #4
 8007036:	687b      	ldr	r3, [r7, #4]
 8007038:	645a      	str	r2, [r3, #68]	@ 0x44
 800703a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800703e:	f003 0308 	and.w	r3, r3, #8
 8007042:	2b00      	cmp	r3, #0
 8007044:	d011      	beq.n	800706a <HAL_UART_IRQHandler+0x126>
 8007046:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800704a:	f003 0320 	and.w	r3, r3, #32
 800704e:	2b00      	cmp	r3, #0
 8007050:	d105      	bne.n	800705e <HAL_UART_IRQHandler+0x11a>
 8007052:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8007056:	f003 0301 	and.w	r3, r3, #1
 800705a:	2b00      	cmp	r3, #0
 800705c:	d005      	beq.n	800706a <HAL_UART_IRQHandler+0x126>
 800705e:	687b      	ldr	r3, [r7, #4]
 8007060:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8007062:	f043 0208 	orr.w	r2, r3, #8
 8007066:	687b      	ldr	r3, [r7, #4]
 8007068:	645a      	str	r2, [r3, #68]	@ 0x44
 800706a:	687b      	ldr	r3, [r7, #4]
 800706c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800706e:	2b00      	cmp	r3, #0
 8007070:	f000 81f2 	beq.w	8007458 <HAL_UART_IRQHandler+0x514>
 8007074:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8007078:	f003 0320 	and.w	r3, r3, #32
 800707c:	2b00      	cmp	r3, #0
 800707e:	d008      	beq.n	8007092 <HAL_UART_IRQHandler+0x14e>
 8007080:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8007084:	f003 0320 	and.w	r3, r3, #32
 8007088:	2b00      	cmp	r3, #0
 800708a:	d002      	beq.n	8007092 <HAL_UART_IRQHandler+0x14e>
 800708c:	6878      	ldr	r0, [r7, #4]
 800708e:	f000 fb7d 	bl	800778c <UART_Receive_IT>
 8007092:	687b      	ldr	r3, [r7, #4]
 8007094:	681b      	ldr	r3, [r3, #0]
 8007096:	695b      	ldr	r3, [r3, #20]
 8007098:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800709c:	2b40      	cmp	r3, #64	@ 0x40
 800709e:	bf0c      	ite	eq
 80070a0:	2301      	moveq	r3, #1
 80070a2:	2300      	movne	r3, #0
 80070a4:	b2db      	uxtb	r3, r3
 80070a6:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 80070aa:	687b      	ldr	r3, [r7, #4]
 80070ac:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80070ae:	f003 0308 	and.w	r3, r3, #8
 80070b2:	2b00      	cmp	r3, #0
 80070b4:	d103      	bne.n	80070be <HAL_UART_IRQHandler+0x17a>
 80070b6:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 80070ba:	2b00      	cmp	r3, #0
 80070bc:	d04f      	beq.n	800715e <HAL_UART_IRQHandler+0x21a>
 80070be:	6878      	ldr	r0, [r7, #4]
 80070c0:	f000 fa85 	bl	80075ce <UART_EndRxTransfer>
 80070c4:	687b      	ldr	r3, [r7, #4]
 80070c6:	681b      	ldr	r3, [r3, #0]
 80070c8:	695b      	ldr	r3, [r3, #20]
 80070ca:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80070ce:	2b40      	cmp	r3, #64	@ 0x40
 80070d0:	d141      	bne.n	8007156 <HAL_UART_IRQHandler+0x212>
 80070d2:	687b      	ldr	r3, [r7, #4]
 80070d4:	681b      	ldr	r3, [r3, #0]
 80070d6:	3314      	adds	r3, #20
 80070d8:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 80070dc:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 80070e0:	e853 3f00 	ldrex	r3, [r3]
 80070e4:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 80070e8:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 80070ec:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80070f0:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 80070f4:	687b      	ldr	r3, [r7, #4]
 80070f6:	681b      	ldr	r3, [r3, #0]
 80070f8:	3314      	adds	r3, #20
 80070fa:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 80070fe:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 8007102:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8007106:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 800710a:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 800710e:	e841 2300 	strex	r3, r2, [r1]
 8007112:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8007116:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 800711a:	2b00      	cmp	r3, #0
 800711c:	d1d9      	bne.n	80070d2 <HAL_UART_IRQHandler+0x18e>
 800711e:	687b      	ldr	r3, [r7, #4]
 8007120:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8007122:	2b00      	cmp	r3, #0
 8007124:	d013      	beq.n	800714e <HAL_UART_IRQHandler+0x20a>
 8007126:	687b      	ldr	r3, [r7, #4]
 8007128:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800712a:	4a7e      	ldr	r2, [pc, #504]	@ (8007324 <HAL_UART_IRQHandler+0x3e0>)
 800712c:	651a      	str	r2, [r3, #80]	@ 0x50
 800712e:	687b      	ldr	r3, [r7, #4]
 8007130:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8007132:	4618      	mov	r0, r3
 8007134:	f7fc fd85 	bl	8003c42 <HAL_DMA_Abort_IT>
 8007138:	4603      	mov	r3, r0
 800713a:	2b00      	cmp	r3, #0
 800713c:	d016      	beq.n	800716c <HAL_UART_IRQHandler+0x228>
 800713e:	687b      	ldr	r3, [r7, #4]
 8007140:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8007142:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8007144:	687a      	ldr	r2, [r7, #4]
 8007146:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 8007148:	4610      	mov	r0, r2
 800714a:	4798      	blx	r3
 800714c:	e00e      	b.n	800716c <HAL_UART_IRQHandler+0x228>
 800714e:	6878      	ldr	r0, [r7, #4]
 8007150:	f000 f994 	bl	800747c <HAL_UART_ErrorCallback>
 8007154:	e00a      	b.n	800716c <HAL_UART_IRQHandler+0x228>
 8007156:	6878      	ldr	r0, [r7, #4]
 8007158:	f000 f990 	bl	800747c <HAL_UART_ErrorCallback>
 800715c:	e006      	b.n	800716c <HAL_UART_IRQHandler+0x228>
 800715e:	6878      	ldr	r0, [r7, #4]
 8007160:	f000 f98c 	bl	800747c <HAL_UART_ErrorCallback>
 8007164:	687b      	ldr	r3, [r7, #4]
 8007166:	2200      	movs	r2, #0
 8007168:	645a      	str	r2, [r3, #68]	@ 0x44
 800716a:	e175      	b.n	8007458 <HAL_UART_IRQHandler+0x514>
 800716c:	bf00      	nop
 800716e:	e173      	b.n	8007458 <HAL_UART_IRQHandler+0x514>
 8007170:	687b      	ldr	r3, [r7, #4]
 8007172:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007174:	2b01      	cmp	r3, #1
 8007176:	f040 814f 	bne.w	8007418 <HAL_UART_IRQHandler+0x4d4>
 800717a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800717e:	f003 0310 	and.w	r3, r3, #16
 8007182:	2b00      	cmp	r3, #0
 8007184:	f000 8148 	beq.w	8007418 <HAL_UART_IRQHandler+0x4d4>
 8007188:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800718c:	f003 0310 	and.w	r3, r3, #16
 8007190:	2b00      	cmp	r3, #0
 8007192:	f000 8141 	beq.w	8007418 <HAL_UART_IRQHandler+0x4d4>
 8007196:	2300      	movs	r3, #0
 8007198:	60bb      	str	r3, [r7, #8]
 800719a:	687b      	ldr	r3, [r7, #4]
 800719c:	681b      	ldr	r3, [r3, #0]
 800719e:	681b      	ldr	r3, [r3, #0]
 80071a0:	60bb      	str	r3, [r7, #8]
 80071a2:	687b      	ldr	r3, [r7, #4]
 80071a4:	681b      	ldr	r3, [r3, #0]
 80071a6:	685b      	ldr	r3, [r3, #4]
 80071a8:	60bb      	str	r3, [r7, #8]
 80071aa:	68bb      	ldr	r3, [r7, #8]
 80071ac:	687b      	ldr	r3, [r7, #4]
 80071ae:	681b      	ldr	r3, [r3, #0]
 80071b0:	695b      	ldr	r3, [r3, #20]
 80071b2:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80071b6:	2b40      	cmp	r3, #64	@ 0x40
 80071b8:	f040 80b6 	bne.w	8007328 <HAL_UART_IRQHandler+0x3e4>
 80071bc:	687b      	ldr	r3, [r7, #4]
 80071be:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80071c0:	681b      	ldr	r3, [r3, #0]
 80071c2:	685b      	ldr	r3, [r3, #4]
 80071c4:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 80071c8:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 80071cc:	2b00      	cmp	r3, #0
 80071ce:	f000 8145 	beq.w	800745c <HAL_UART_IRQHandler+0x518>
 80071d2:	687b      	ldr	r3, [r7, #4]
 80071d4:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 80071d6:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 80071da:	429a      	cmp	r2, r3
 80071dc:	f080 813e 	bcs.w	800745c <HAL_UART_IRQHandler+0x518>
 80071e0:	687b      	ldr	r3, [r7, #4]
 80071e2:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 80071e6:	85da      	strh	r2, [r3, #46]	@ 0x2e
 80071e8:	687b      	ldr	r3, [r7, #4]
 80071ea:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80071ec:	69db      	ldr	r3, [r3, #28]
 80071ee:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80071f2:	f000 8088 	beq.w	8007306 <HAL_UART_IRQHandler+0x3c2>
 80071f6:	687b      	ldr	r3, [r7, #4]
 80071f8:	681b      	ldr	r3, [r3, #0]
 80071fa:	330c      	adds	r3, #12
 80071fc:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8007200:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8007204:	e853 3f00 	ldrex	r3, [r3]
 8007208:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 800720c:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8007210:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8007214:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8007218:	687b      	ldr	r3, [r7, #4]
 800721a:	681b      	ldr	r3, [r3, #0]
 800721c:	330c      	adds	r3, #12
 800721e:	f8d7 20b8 	ldr.w	r2, [r7, #184]	@ 0xb8
 8007222:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8007226:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800722a:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 800722e:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 8007232:	e841 2300 	strex	r3, r2, [r1]
 8007236:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 800723a:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800723e:	2b00      	cmp	r3, #0
 8007240:	d1d9      	bne.n	80071f6 <HAL_UART_IRQHandler+0x2b2>
 8007242:	687b      	ldr	r3, [r7, #4]
 8007244:	681b      	ldr	r3, [r3, #0]
 8007246:	3314      	adds	r3, #20
 8007248:	677b      	str	r3, [r7, #116]	@ 0x74
 800724a:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 800724c:	e853 3f00 	ldrex	r3, [r3]
 8007250:	673b      	str	r3, [r7, #112]	@ 0x70
 8007252:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8007254:	f023 0301 	bic.w	r3, r3, #1
 8007258:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 800725c:	687b      	ldr	r3, [r7, #4]
 800725e:	681b      	ldr	r3, [r3, #0]
 8007260:	3314      	adds	r3, #20
 8007262:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8007266:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 800726a:	67fb      	str	r3, [r7, #124]	@ 0x7c
 800726c:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 800726e:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 8007272:	e841 2300 	strex	r3, r2, [r1]
 8007276:	67bb      	str	r3, [r7, #120]	@ 0x78
 8007278:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800727a:	2b00      	cmp	r3, #0
 800727c:	d1e1      	bne.n	8007242 <HAL_UART_IRQHandler+0x2fe>
 800727e:	687b      	ldr	r3, [r7, #4]
 8007280:	681b      	ldr	r3, [r3, #0]
 8007282:	3314      	adds	r3, #20
 8007284:	663b      	str	r3, [r7, #96]	@ 0x60
 8007286:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8007288:	e853 3f00 	ldrex	r3, [r3]
 800728c:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800728e:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8007290:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8007294:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8007298:	687b      	ldr	r3, [r7, #4]
 800729a:	681b      	ldr	r3, [r3, #0]
 800729c:	3314      	adds	r3, #20
 800729e:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 80072a2:	66fa      	str	r2, [r7, #108]	@ 0x6c
 80072a4:	66bb      	str	r3, [r7, #104]	@ 0x68
 80072a6:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 80072a8:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 80072aa:	e841 2300 	strex	r3, r2, [r1]
 80072ae:	667b      	str	r3, [r7, #100]	@ 0x64
 80072b0:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 80072b2:	2b00      	cmp	r3, #0
 80072b4:	d1e3      	bne.n	800727e <HAL_UART_IRQHandler+0x33a>
 80072b6:	687b      	ldr	r3, [r7, #4]
 80072b8:	2220      	movs	r2, #32
 80072ba:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80072be:	687b      	ldr	r3, [r7, #4]
 80072c0:	2200      	movs	r2, #0
 80072c2:	631a      	str	r2, [r3, #48]	@ 0x30
 80072c4:	687b      	ldr	r3, [r7, #4]
 80072c6:	681b      	ldr	r3, [r3, #0]
 80072c8:	330c      	adds	r3, #12
 80072ca:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80072cc:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 80072ce:	e853 3f00 	ldrex	r3, [r3]
 80072d2:	64bb      	str	r3, [r7, #72]	@ 0x48
 80072d4:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 80072d6:	f023 0310 	bic.w	r3, r3, #16
 80072da:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 80072de:	687b      	ldr	r3, [r7, #4]
 80072e0:	681b      	ldr	r3, [r3, #0]
 80072e2:	330c      	adds	r3, #12
 80072e4:	f8d7 20ac 	ldr.w	r2, [r7, #172]	@ 0xac
 80072e8:	65ba      	str	r2, [r7, #88]	@ 0x58
 80072ea:	657b      	str	r3, [r7, #84]	@ 0x54
 80072ec:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 80072ee:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 80072f0:	e841 2300 	strex	r3, r2, [r1]
 80072f4:	653b      	str	r3, [r7, #80]	@ 0x50
 80072f6:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 80072f8:	2b00      	cmp	r3, #0
 80072fa:	d1e3      	bne.n	80072c4 <HAL_UART_IRQHandler+0x380>
 80072fc:	687b      	ldr	r3, [r7, #4]
 80072fe:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8007300:	4618      	mov	r0, r3
 8007302:	f7fc fc2e 	bl	8003b62 <HAL_DMA_Abort>
 8007306:	687b      	ldr	r3, [r7, #4]
 8007308:	2202      	movs	r2, #2
 800730a:	635a      	str	r2, [r3, #52]	@ 0x34
 800730c:	687b      	ldr	r3, [r7, #4]
 800730e:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8007310:	687b      	ldr	r3, [r7, #4]
 8007312:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8007314:	b29b      	uxth	r3, r3
 8007316:	1ad3      	subs	r3, r2, r3
 8007318:	b29b      	uxth	r3, r3
 800731a:	4619      	mov	r1, r3
 800731c:	6878      	ldr	r0, [r7, #4]
 800731e:	f000 f8b7 	bl	8007490 <HAL_UARTEx_RxEventCallback>
 8007322:	e09b      	b.n	800745c <HAL_UART_IRQHandler+0x518>
 8007324:	08007695 	.word	0x08007695
 8007328:	687b      	ldr	r3, [r7, #4]
 800732a:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 800732c:	687b      	ldr	r3, [r7, #4]
 800732e:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8007330:	b29b      	uxth	r3, r3
 8007332:	1ad3      	subs	r3, r2, r3
 8007334:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 8007338:	687b      	ldr	r3, [r7, #4]
 800733a:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 800733c:	b29b      	uxth	r3, r3
 800733e:	2b00      	cmp	r3, #0
 8007340:	f000 808e 	beq.w	8007460 <HAL_UART_IRQHandler+0x51c>
 8007344:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8007348:	2b00      	cmp	r3, #0
 800734a:	f000 8089 	beq.w	8007460 <HAL_UART_IRQHandler+0x51c>
 800734e:	687b      	ldr	r3, [r7, #4]
 8007350:	681b      	ldr	r3, [r3, #0]
 8007352:	330c      	adds	r3, #12
 8007354:	63bb      	str	r3, [r7, #56]	@ 0x38
 8007356:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8007358:	e853 3f00 	ldrex	r3, [r3]
 800735c:	637b      	str	r3, [r7, #52]	@ 0x34
 800735e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8007360:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8007364:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8007368:	687b      	ldr	r3, [r7, #4]
 800736a:	681b      	ldr	r3, [r3, #0]
 800736c:	330c      	adds	r3, #12
 800736e:	f8d7 20c8 	ldr.w	r2, [r7, #200]	@ 0xc8
 8007372:	647a      	str	r2, [r7, #68]	@ 0x44
 8007374:	643b      	str	r3, [r7, #64]	@ 0x40
 8007376:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8007378:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800737a:	e841 2300 	strex	r3, r2, [r1]
 800737e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8007380:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8007382:	2b00      	cmp	r3, #0
 8007384:	d1e3      	bne.n	800734e <HAL_UART_IRQHandler+0x40a>
 8007386:	687b      	ldr	r3, [r7, #4]
 8007388:	681b      	ldr	r3, [r3, #0]
 800738a:	3314      	adds	r3, #20
 800738c:	627b      	str	r3, [r7, #36]	@ 0x24
 800738e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007390:	e853 3f00 	ldrex	r3, [r3]
 8007394:	623b      	str	r3, [r7, #32]
 8007396:	6a3b      	ldr	r3, [r7, #32]
 8007398:	f023 0301 	bic.w	r3, r3, #1
 800739c:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 80073a0:	687b      	ldr	r3, [r7, #4]
 80073a2:	681b      	ldr	r3, [r3, #0]
 80073a4:	3314      	adds	r3, #20
 80073a6:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 80073aa:	633a      	str	r2, [r7, #48]	@ 0x30
 80073ac:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80073ae:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 80073b0:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80073b2:	e841 2300 	strex	r3, r2, [r1]
 80073b6:	62bb      	str	r3, [r7, #40]	@ 0x28
 80073b8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80073ba:	2b00      	cmp	r3, #0
 80073bc:	d1e3      	bne.n	8007386 <HAL_UART_IRQHandler+0x442>
 80073be:	687b      	ldr	r3, [r7, #4]
 80073c0:	2220      	movs	r2, #32
 80073c2:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80073c6:	687b      	ldr	r3, [r7, #4]
 80073c8:	2200      	movs	r2, #0
 80073ca:	631a      	str	r2, [r3, #48]	@ 0x30
 80073cc:	687b      	ldr	r3, [r7, #4]
 80073ce:	681b      	ldr	r3, [r3, #0]
 80073d0:	330c      	adds	r3, #12
 80073d2:	613b      	str	r3, [r7, #16]
 80073d4:	693b      	ldr	r3, [r7, #16]
 80073d6:	e853 3f00 	ldrex	r3, [r3]
 80073da:	60fb      	str	r3, [r7, #12]
 80073dc:	68fb      	ldr	r3, [r7, #12]
 80073de:	f023 0310 	bic.w	r3, r3, #16
 80073e2:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 80073e6:	687b      	ldr	r3, [r7, #4]
 80073e8:	681b      	ldr	r3, [r3, #0]
 80073ea:	330c      	adds	r3, #12
 80073ec:	f8d7 20c0 	ldr.w	r2, [r7, #192]	@ 0xc0
 80073f0:	61fa      	str	r2, [r7, #28]
 80073f2:	61bb      	str	r3, [r7, #24]
 80073f4:	69b9      	ldr	r1, [r7, #24]
 80073f6:	69fa      	ldr	r2, [r7, #28]
 80073f8:	e841 2300 	strex	r3, r2, [r1]
 80073fc:	617b      	str	r3, [r7, #20]
 80073fe:	697b      	ldr	r3, [r7, #20]
 8007400:	2b00      	cmp	r3, #0
 8007402:	d1e3      	bne.n	80073cc <HAL_UART_IRQHandler+0x488>
 8007404:	687b      	ldr	r3, [r7, #4]
 8007406:	2202      	movs	r2, #2
 8007408:	635a      	str	r2, [r3, #52]	@ 0x34
 800740a:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 800740e:	4619      	mov	r1, r3
 8007410:	6878      	ldr	r0, [r7, #4]
 8007412:	f000 f83d 	bl	8007490 <HAL_UARTEx_RxEventCallback>
 8007416:	e023      	b.n	8007460 <HAL_UART_IRQHandler+0x51c>
 8007418:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800741c:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8007420:	2b00      	cmp	r3, #0
 8007422:	d009      	beq.n	8007438 <HAL_UART_IRQHandler+0x4f4>
 8007424:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8007428:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800742c:	2b00      	cmp	r3, #0
 800742e:	d003      	beq.n	8007438 <HAL_UART_IRQHandler+0x4f4>
 8007430:	6878      	ldr	r0, [r7, #4]
 8007432:	f000 f943 	bl	80076bc <UART_Transmit_IT>
 8007436:	e014      	b.n	8007462 <HAL_UART_IRQHandler+0x51e>
 8007438:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800743c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007440:	2b00      	cmp	r3, #0
 8007442:	d00e      	beq.n	8007462 <HAL_UART_IRQHandler+0x51e>
 8007444:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8007448:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800744c:	2b00      	cmp	r3, #0
 800744e:	d008      	beq.n	8007462 <HAL_UART_IRQHandler+0x51e>
 8007450:	6878      	ldr	r0, [r7, #4]
 8007452:	f000 f983 	bl	800775c <UART_EndTransmit_IT>
 8007456:	e004      	b.n	8007462 <HAL_UART_IRQHandler+0x51e>
 8007458:	bf00      	nop
 800745a:	e002      	b.n	8007462 <HAL_UART_IRQHandler+0x51e>
 800745c:	bf00      	nop
 800745e:	e000      	b.n	8007462 <HAL_UART_IRQHandler+0x51e>
 8007460:	bf00      	nop
 8007462:	37e8      	adds	r7, #232	@ 0xe8
 8007464:	46bd      	mov	sp, r7
 8007466:	bd80      	pop	{r7, pc}

08007468 <HAL_UART_TxCpltCallback>:
 8007468:	b480      	push	{r7}
 800746a:	b083      	sub	sp, #12
 800746c:	af00      	add	r7, sp, #0
 800746e:	6078      	str	r0, [r7, #4]
 8007470:	bf00      	nop
 8007472:	370c      	adds	r7, #12
 8007474:	46bd      	mov	sp, r7
 8007476:	f85d 7b04 	ldr.w	r7, [sp], #4
 800747a:	4770      	bx	lr

0800747c <HAL_UART_ErrorCallback>:
 800747c:	b480      	push	{r7}
 800747e:	b083      	sub	sp, #12
 8007480:	af00      	add	r7, sp, #0
 8007482:	6078      	str	r0, [r7, #4]
 8007484:	bf00      	nop
 8007486:	370c      	adds	r7, #12
 8007488:	46bd      	mov	sp, r7
 800748a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800748e:	4770      	bx	lr

08007490 <HAL_UARTEx_RxEventCallback>:
 8007490:	b480      	push	{r7}
 8007492:	b083      	sub	sp, #12
 8007494:	af00      	add	r7, sp, #0
 8007496:	6078      	str	r0, [r7, #4]
 8007498:	460b      	mov	r3, r1
 800749a:	807b      	strh	r3, [r7, #2]
 800749c:	bf00      	nop
 800749e:	370c      	adds	r7, #12
 80074a0:	46bd      	mov	sp, r7
 80074a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074a6:	4770      	bx	lr

080074a8 <UART_WaitOnFlagUntilTimeout>:
 80074a8:	b580      	push	{r7, lr}
 80074aa:	b086      	sub	sp, #24
 80074ac:	af00      	add	r7, sp, #0
 80074ae:	60f8      	str	r0, [r7, #12]
 80074b0:	60b9      	str	r1, [r7, #8]
 80074b2:	603b      	str	r3, [r7, #0]
 80074b4:	4613      	mov	r3, r2
 80074b6:	71fb      	strb	r3, [r7, #7]
 80074b8:	e03b      	b.n	8007532 <UART_WaitOnFlagUntilTimeout+0x8a>
 80074ba:	6a3b      	ldr	r3, [r7, #32]
 80074bc:	f1b3 3fff 	cmp.w	r3, #4294967295
 80074c0:	d037      	beq.n	8007532 <UART_WaitOnFlagUntilTimeout+0x8a>
 80074c2:	f7fb fdfd 	bl	80030c0 <HAL_GetTick>
 80074c6:	4602      	mov	r2, r0
 80074c8:	683b      	ldr	r3, [r7, #0]
 80074ca:	1ad3      	subs	r3, r2, r3
 80074cc:	6a3a      	ldr	r2, [r7, #32]
 80074ce:	429a      	cmp	r2, r3
 80074d0:	d302      	bcc.n	80074d8 <UART_WaitOnFlagUntilTimeout+0x30>
 80074d2:	6a3b      	ldr	r3, [r7, #32]
 80074d4:	2b00      	cmp	r3, #0
 80074d6:	d101      	bne.n	80074dc <UART_WaitOnFlagUntilTimeout+0x34>
 80074d8:	2303      	movs	r3, #3
 80074da:	e03a      	b.n	8007552 <UART_WaitOnFlagUntilTimeout+0xaa>
 80074dc:	68fb      	ldr	r3, [r7, #12]
 80074de:	681b      	ldr	r3, [r3, #0]
 80074e0:	68db      	ldr	r3, [r3, #12]
 80074e2:	f003 0304 	and.w	r3, r3, #4
 80074e6:	2b00      	cmp	r3, #0
 80074e8:	d023      	beq.n	8007532 <UART_WaitOnFlagUntilTimeout+0x8a>
 80074ea:	68bb      	ldr	r3, [r7, #8]
 80074ec:	2b80      	cmp	r3, #128	@ 0x80
 80074ee:	d020      	beq.n	8007532 <UART_WaitOnFlagUntilTimeout+0x8a>
 80074f0:	68bb      	ldr	r3, [r7, #8]
 80074f2:	2b40      	cmp	r3, #64	@ 0x40
 80074f4:	d01d      	beq.n	8007532 <UART_WaitOnFlagUntilTimeout+0x8a>
 80074f6:	68fb      	ldr	r3, [r7, #12]
 80074f8:	681b      	ldr	r3, [r3, #0]
 80074fa:	681b      	ldr	r3, [r3, #0]
 80074fc:	f003 0308 	and.w	r3, r3, #8
 8007500:	2b08      	cmp	r3, #8
 8007502:	d116      	bne.n	8007532 <UART_WaitOnFlagUntilTimeout+0x8a>
 8007504:	2300      	movs	r3, #0
 8007506:	617b      	str	r3, [r7, #20]
 8007508:	68fb      	ldr	r3, [r7, #12]
 800750a:	681b      	ldr	r3, [r3, #0]
 800750c:	681b      	ldr	r3, [r3, #0]
 800750e:	617b      	str	r3, [r7, #20]
 8007510:	68fb      	ldr	r3, [r7, #12]
 8007512:	681b      	ldr	r3, [r3, #0]
 8007514:	685b      	ldr	r3, [r3, #4]
 8007516:	617b      	str	r3, [r7, #20]
 8007518:	697b      	ldr	r3, [r7, #20]
 800751a:	68f8      	ldr	r0, [r7, #12]
 800751c:	f000 f857 	bl	80075ce <UART_EndRxTransfer>
 8007520:	68fb      	ldr	r3, [r7, #12]
 8007522:	2208      	movs	r2, #8
 8007524:	645a      	str	r2, [r3, #68]	@ 0x44
 8007526:	68fb      	ldr	r3, [r7, #12]
 8007528:	2200      	movs	r2, #0
 800752a:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800752e:	2301      	movs	r3, #1
 8007530:	e00f      	b.n	8007552 <UART_WaitOnFlagUntilTimeout+0xaa>
 8007532:	68fb      	ldr	r3, [r7, #12]
 8007534:	681b      	ldr	r3, [r3, #0]
 8007536:	681a      	ldr	r2, [r3, #0]
 8007538:	68bb      	ldr	r3, [r7, #8]
 800753a:	4013      	ands	r3, r2
 800753c:	68ba      	ldr	r2, [r7, #8]
 800753e:	429a      	cmp	r2, r3
 8007540:	bf0c      	ite	eq
 8007542:	2301      	moveq	r3, #1
 8007544:	2300      	movne	r3, #0
 8007546:	b2db      	uxtb	r3, r3
 8007548:	461a      	mov	r2, r3
 800754a:	79fb      	ldrb	r3, [r7, #7]
 800754c:	429a      	cmp	r2, r3
 800754e:	d0b4      	beq.n	80074ba <UART_WaitOnFlagUntilTimeout+0x12>
 8007550:	2300      	movs	r3, #0
 8007552:	4618      	mov	r0, r3
 8007554:	3718      	adds	r7, #24
 8007556:	46bd      	mov	sp, r7
 8007558:	bd80      	pop	{r7, pc}

0800755a <UART_Start_Receive_IT>:
 800755a:	b480      	push	{r7}
 800755c:	b085      	sub	sp, #20
 800755e:	af00      	add	r7, sp, #0
 8007560:	60f8      	str	r0, [r7, #12]
 8007562:	60b9      	str	r1, [r7, #8]
 8007564:	4613      	mov	r3, r2
 8007566:	80fb      	strh	r3, [r7, #6]
 8007568:	68fb      	ldr	r3, [r7, #12]
 800756a:	68ba      	ldr	r2, [r7, #8]
 800756c:	629a      	str	r2, [r3, #40]	@ 0x28
 800756e:	68fb      	ldr	r3, [r7, #12]
 8007570:	88fa      	ldrh	r2, [r7, #6]
 8007572:	859a      	strh	r2, [r3, #44]	@ 0x2c
 8007574:	68fb      	ldr	r3, [r7, #12]
 8007576:	88fa      	ldrh	r2, [r7, #6]
 8007578:	85da      	strh	r2, [r3, #46]	@ 0x2e
 800757a:	68fb      	ldr	r3, [r7, #12]
 800757c:	2200      	movs	r2, #0
 800757e:	645a      	str	r2, [r3, #68]	@ 0x44
 8007580:	68fb      	ldr	r3, [r7, #12]
 8007582:	2222      	movs	r2, #34	@ 0x22
 8007584:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8007588:	68fb      	ldr	r3, [r7, #12]
 800758a:	691b      	ldr	r3, [r3, #16]
 800758c:	2b00      	cmp	r3, #0
 800758e:	d007      	beq.n	80075a0 <UART_Start_Receive_IT+0x46>
 8007590:	68fb      	ldr	r3, [r7, #12]
 8007592:	681b      	ldr	r3, [r3, #0]
 8007594:	68da      	ldr	r2, [r3, #12]
 8007596:	68fb      	ldr	r3, [r7, #12]
 8007598:	681b      	ldr	r3, [r3, #0]
 800759a:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800759e:	60da      	str	r2, [r3, #12]
 80075a0:	68fb      	ldr	r3, [r7, #12]
 80075a2:	681b      	ldr	r3, [r3, #0]
 80075a4:	695a      	ldr	r2, [r3, #20]
 80075a6:	68fb      	ldr	r3, [r7, #12]
 80075a8:	681b      	ldr	r3, [r3, #0]
 80075aa:	f042 0201 	orr.w	r2, r2, #1
 80075ae:	615a      	str	r2, [r3, #20]
 80075b0:	68fb      	ldr	r3, [r7, #12]
 80075b2:	681b      	ldr	r3, [r3, #0]
 80075b4:	68da      	ldr	r2, [r3, #12]
 80075b6:	68fb      	ldr	r3, [r7, #12]
 80075b8:	681b      	ldr	r3, [r3, #0]
 80075ba:	f042 0220 	orr.w	r2, r2, #32
 80075be:	60da      	str	r2, [r3, #12]
 80075c0:	2300      	movs	r3, #0
 80075c2:	4618      	mov	r0, r3
 80075c4:	3714      	adds	r7, #20
 80075c6:	46bd      	mov	sp, r7
 80075c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075cc:	4770      	bx	lr

080075ce <UART_EndRxTransfer>:
 80075ce:	b480      	push	{r7}
 80075d0:	b095      	sub	sp, #84	@ 0x54
 80075d2:	af00      	add	r7, sp, #0
 80075d4:	6078      	str	r0, [r7, #4]
 80075d6:	687b      	ldr	r3, [r7, #4]
 80075d8:	681b      	ldr	r3, [r3, #0]
 80075da:	330c      	adds	r3, #12
 80075dc:	637b      	str	r3, [r7, #52]	@ 0x34
 80075de:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80075e0:	e853 3f00 	ldrex	r3, [r3]
 80075e4:	633b      	str	r3, [r7, #48]	@ 0x30
 80075e6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80075e8:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 80075ec:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80075ee:	687b      	ldr	r3, [r7, #4]
 80075f0:	681b      	ldr	r3, [r3, #0]
 80075f2:	330c      	adds	r3, #12
 80075f4:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 80075f6:	643a      	str	r2, [r7, #64]	@ 0x40
 80075f8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80075fa:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 80075fc:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 80075fe:	e841 2300 	strex	r3, r2, [r1]
 8007602:	63bb      	str	r3, [r7, #56]	@ 0x38
 8007604:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8007606:	2b00      	cmp	r3, #0
 8007608:	d1e5      	bne.n	80075d6 <UART_EndRxTransfer+0x8>
 800760a:	687b      	ldr	r3, [r7, #4]
 800760c:	681b      	ldr	r3, [r3, #0]
 800760e:	3314      	adds	r3, #20
 8007610:	623b      	str	r3, [r7, #32]
 8007612:	6a3b      	ldr	r3, [r7, #32]
 8007614:	e853 3f00 	ldrex	r3, [r3]
 8007618:	61fb      	str	r3, [r7, #28]
 800761a:	69fb      	ldr	r3, [r7, #28]
 800761c:	f023 0301 	bic.w	r3, r3, #1
 8007620:	64bb      	str	r3, [r7, #72]	@ 0x48
 8007622:	687b      	ldr	r3, [r7, #4]
 8007624:	681b      	ldr	r3, [r3, #0]
 8007626:	3314      	adds	r3, #20
 8007628:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 800762a:	62fa      	str	r2, [r7, #44]	@ 0x2c
 800762c:	62bb      	str	r3, [r7, #40]	@ 0x28
 800762e:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8007630:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8007632:	e841 2300 	strex	r3, r2, [r1]
 8007636:	627b      	str	r3, [r7, #36]	@ 0x24
 8007638:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800763a:	2b00      	cmp	r3, #0
 800763c:	d1e5      	bne.n	800760a <UART_EndRxTransfer+0x3c>
 800763e:	687b      	ldr	r3, [r7, #4]
 8007640:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007642:	2b01      	cmp	r3, #1
 8007644:	d119      	bne.n	800767a <UART_EndRxTransfer+0xac>
 8007646:	687b      	ldr	r3, [r7, #4]
 8007648:	681b      	ldr	r3, [r3, #0]
 800764a:	330c      	adds	r3, #12
 800764c:	60fb      	str	r3, [r7, #12]
 800764e:	68fb      	ldr	r3, [r7, #12]
 8007650:	e853 3f00 	ldrex	r3, [r3]
 8007654:	60bb      	str	r3, [r7, #8]
 8007656:	68bb      	ldr	r3, [r7, #8]
 8007658:	f023 0310 	bic.w	r3, r3, #16
 800765c:	647b      	str	r3, [r7, #68]	@ 0x44
 800765e:	687b      	ldr	r3, [r7, #4]
 8007660:	681b      	ldr	r3, [r3, #0]
 8007662:	330c      	adds	r3, #12
 8007664:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8007666:	61ba      	str	r2, [r7, #24]
 8007668:	617b      	str	r3, [r7, #20]
 800766a:	6979      	ldr	r1, [r7, #20]
 800766c:	69ba      	ldr	r2, [r7, #24]
 800766e:	e841 2300 	strex	r3, r2, [r1]
 8007672:	613b      	str	r3, [r7, #16]
 8007674:	693b      	ldr	r3, [r7, #16]
 8007676:	2b00      	cmp	r3, #0
 8007678:	d1e5      	bne.n	8007646 <UART_EndRxTransfer+0x78>
 800767a:	687b      	ldr	r3, [r7, #4]
 800767c:	2220      	movs	r2, #32
 800767e:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8007682:	687b      	ldr	r3, [r7, #4]
 8007684:	2200      	movs	r2, #0
 8007686:	631a      	str	r2, [r3, #48]	@ 0x30
 8007688:	bf00      	nop
 800768a:	3754      	adds	r7, #84	@ 0x54
 800768c:	46bd      	mov	sp, r7
 800768e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007692:	4770      	bx	lr

08007694 <UART_DMAAbortOnError>:
 8007694:	b580      	push	{r7, lr}
 8007696:	b084      	sub	sp, #16
 8007698:	af00      	add	r7, sp, #0
 800769a:	6078      	str	r0, [r7, #4]
 800769c:	687b      	ldr	r3, [r7, #4]
 800769e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80076a0:	60fb      	str	r3, [r7, #12]
 80076a2:	68fb      	ldr	r3, [r7, #12]
 80076a4:	2200      	movs	r2, #0
 80076a6:	85da      	strh	r2, [r3, #46]	@ 0x2e
 80076a8:	68fb      	ldr	r3, [r7, #12]
 80076aa:	2200      	movs	r2, #0
 80076ac:	84da      	strh	r2, [r3, #38]	@ 0x26
 80076ae:	68f8      	ldr	r0, [r7, #12]
 80076b0:	f7ff fee4 	bl	800747c <HAL_UART_ErrorCallback>
 80076b4:	bf00      	nop
 80076b6:	3710      	adds	r7, #16
 80076b8:	46bd      	mov	sp, r7
 80076ba:	bd80      	pop	{r7, pc}

080076bc <UART_Transmit_IT>:
 80076bc:	b480      	push	{r7}
 80076be:	b085      	sub	sp, #20
 80076c0:	af00      	add	r7, sp, #0
 80076c2:	6078      	str	r0, [r7, #4]
 80076c4:	687b      	ldr	r3, [r7, #4]
 80076c6:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80076ca:	b2db      	uxtb	r3, r3
 80076cc:	2b21      	cmp	r3, #33	@ 0x21
 80076ce:	d13e      	bne.n	800774e <UART_Transmit_IT+0x92>
 80076d0:	687b      	ldr	r3, [r7, #4]
 80076d2:	689b      	ldr	r3, [r3, #8]
 80076d4:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80076d8:	d114      	bne.n	8007704 <UART_Transmit_IT+0x48>
 80076da:	687b      	ldr	r3, [r7, #4]
 80076dc:	691b      	ldr	r3, [r3, #16]
 80076de:	2b00      	cmp	r3, #0
 80076e0:	d110      	bne.n	8007704 <UART_Transmit_IT+0x48>
 80076e2:	687b      	ldr	r3, [r7, #4]
 80076e4:	6a1b      	ldr	r3, [r3, #32]
 80076e6:	60fb      	str	r3, [r7, #12]
 80076e8:	68fb      	ldr	r3, [r7, #12]
 80076ea:	881b      	ldrh	r3, [r3, #0]
 80076ec:	461a      	mov	r2, r3
 80076ee:	687b      	ldr	r3, [r7, #4]
 80076f0:	681b      	ldr	r3, [r3, #0]
 80076f2:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80076f6:	605a      	str	r2, [r3, #4]
 80076f8:	687b      	ldr	r3, [r7, #4]
 80076fa:	6a1b      	ldr	r3, [r3, #32]
 80076fc:	1c9a      	adds	r2, r3, #2
 80076fe:	687b      	ldr	r3, [r7, #4]
 8007700:	621a      	str	r2, [r3, #32]
 8007702:	e008      	b.n	8007716 <UART_Transmit_IT+0x5a>
 8007704:	687b      	ldr	r3, [r7, #4]
 8007706:	6a1b      	ldr	r3, [r3, #32]
 8007708:	1c59      	adds	r1, r3, #1
 800770a:	687a      	ldr	r2, [r7, #4]
 800770c:	6211      	str	r1, [r2, #32]
 800770e:	781a      	ldrb	r2, [r3, #0]
 8007710:	687b      	ldr	r3, [r7, #4]
 8007712:	681b      	ldr	r3, [r3, #0]
 8007714:	605a      	str	r2, [r3, #4]
 8007716:	687b      	ldr	r3, [r7, #4]
 8007718:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 800771a:	b29b      	uxth	r3, r3
 800771c:	3b01      	subs	r3, #1
 800771e:	b29b      	uxth	r3, r3
 8007720:	687a      	ldr	r2, [r7, #4]
 8007722:	4619      	mov	r1, r3
 8007724:	84d1      	strh	r1, [r2, #38]	@ 0x26
 8007726:	2b00      	cmp	r3, #0
 8007728:	d10f      	bne.n	800774a <UART_Transmit_IT+0x8e>
 800772a:	687b      	ldr	r3, [r7, #4]
 800772c:	681b      	ldr	r3, [r3, #0]
 800772e:	68da      	ldr	r2, [r3, #12]
 8007730:	687b      	ldr	r3, [r7, #4]
 8007732:	681b      	ldr	r3, [r3, #0]
 8007734:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8007738:	60da      	str	r2, [r3, #12]
 800773a:	687b      	ldr	r3, [r7, #4]
 800773c:	681b      	ldr	r3, [r3, #0]
 800773e:	68da      	ldr	r2, [r3, #12]
 8007740:	687b      	ldr	r3, [r7, #4]
 8007742:	681b      	ldr	r3, [r3, #0]
 8007744:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8007748:	60da      	str	r2, [r3, #12]
 800774a:	2300      	movs	r3, #0
 800774c:	e000      	b.n	8007750 <UART_Transmit_IT+0x94>
 800774e:	2302      	movs	r3, #2
 8007750:	4618      	mov	r0, r3
 8007752:	3714      	adds	r7, #20
 8007754:	46bd      	mov	sp, r7
 8007756:	f85d 7b04 	ldr.w	r7, [sp], #4
 800775a:	4770      	bx	lr

0800775c <UART_EndTransmit_IT>:
 800775c:	b580      	push	{r7, lr}
 800775e:	b082      	sub	sp, #8
 8007760:	af00      	add	r7, sp, #0
 8007762:	6078      	str	r0, [r7, #4]
 8007764:	687b      	ldr	r3, [r7, #4]
 8007766:	681b      	ldr	r3, [r3, #0]
 8007768:	68da      	ldr	r2, [r3, #12]
 800776a:	687b      	ldr	r3, [r7, #4]
 800776c:	681b      	ldr	r3, [r3, #0]
 800776e:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8007772:	60da      	str	r2, [r3, #12]
 8007774:	687b      	ldr	r3, [r7, #4]
 8007776:	2220      	movs	r2, #32
 8007778:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800777c:	6878      	ldr	r0, [r7, #4]
 800777e:	f7ff fe73 	bl	8007468 <HAL_UART_TxCpltCallback>
 8007782:	2300      	movs	r3, #0
 8007784:	4618      	mov	r0, r3
 8007786:	3708      	adds	r7, #8
 8007788:	46bd      	mov	sp, r7
 800778a:	bd80      	pop	{r7, pc}

0800778c <UART_Receive_IT>:
 800778c:	b580      	push	{r7, lr}
 800778e:	b08c      	sub	sp, #48	@ 0x30
 8007790:	af00      	add	r7, sp, #0
 8007792:	6078      	str	r0, [r7, #4]
 8007794:	687b      	ldr	r3, [r7, #4]
 8007796:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 800779a:	b2db      	uxtb	r3, r3
 800779c:	2b22      	cmp	r3, #34	@ 0x22
 800779e:	f040 80ae 	bne.w	80078fe <UART_Receive_IT+0x172>
 80077a2:	687b      	ldr	r3, [r7, #4]
 80077a4:	689b      	ldr	r3, [r3, #8]
 80077a6:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80077aa:	d117      	bne.n	80077dc <UART_Receive_IT+0x50>
 80077ac:	687b      	ldr	r3, [r7, #4]
 80077ae:	691b      	ldr	r3, [r3, #16]
 80077b0:	2b00      	cmp	r3, #0
 80077b2:	d113      	bne.n	80077dc <UART_Receive_IT+0x50>
 80077b4:	2300      	movs	r3, #0
 80077b6:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80077b8:	687b      	ldr	r3, [r7, #4]
 80077ba:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80077bc:	62bb      	str	r3, [r7, #40]	@ 0x28
 80077be:	687b      	ldr	r3, [r7, #4]
 80077c0:	681b      	ldr	r3, [r3, #0]
 80077c2:	685b      	ldr	r3, [r3, #4]
 80077c4:	b29b      	uxth	r3, r3
 80077c6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80077ca:	b29a      	uxth	r2, r3
 80077cc:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80077ce:	801a      	strh	r2, [r3, #0]
 80077d0:	687b      	ldr	r3, [r7, #4]
 80077d2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80077d4:	1c9a      	adds	r2, r3, #2
 80077d6:	687b      	ldr	r3, [r7, #4]
 80077d8:	629a      	str	r2, [r3, #40]	@ 0x28
 80077da:	e026      	b.n	800782a <UART_Receive_IT+0x9e>
 80077dc:	687b      	ldr	r3, [r7, #4]
 80077de:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80077e0:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80077e2:	2300      	movs	r3, #0
 80077e4:	62bb      	str	r3, [r7, #40]	@ 0x28
 80077e6:	687b      	ldr	r3, [r7, #4]
 80077e8:	689b      	ldr	r3, [r3, #8]
 80077ea:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80077ee:	d007      	beq.n	8007800 <UART_Receive_IT+0x74>
 80077f0:	687b      	ldr	r3, [r7, #4]
 80077f2:	689b      	ldr	r3, [r3, #8]
 80077f4:	2b00      	cmp	r3, #0
 80077f6:	d10a      	bne.n	800780e <UART_Receive_IT+0x82>
 80077f8:	687b      	ldr	r3, [r7, #4]
 80077fa:	691b      	ldr	r3, [r3, #16]
 80077fc:	2b00      	cmp	r3, #0
 80077fe:	d106      	bne.n	800780e <UART_Receive_IT+0x82>
 8007800:	687b      	ldr	r3, [r7, #4]
 8007802:	681b      	ldr	r3, [r3, #0]
 8007804:	685b      	ldr	r3, [r3, #4]
 8007806:	b2da      	uxtb	r2, r3
 8007808:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800780a:	701a      	strb	r2, [r3, #0]
 800780c:	e008      	b.n	8007820 <UART_Receive_IT+0x94>
 800780e:	687b      	ldr	r3, [r7, #4]
 8007810:	681b      	ldr	r3, [r3, #0]
 8007812:	685b      	ldr	r3, [r3, #4]
 8007814:	b2db      	uxtb	r3, r3
 8007816:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800781a:	b2da      	uxtb	r2, r3
 800781c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800781e:	701a      	strb	r2, [r3, #0]
 8007820:	687b      	ldr	r3, [r7, #4]
 8007822:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007824:	1c5a      	adds	r2, r3, #1
 8007826:	687b      	ldr	r3, [r7, #4]
 8007828:	629a      	str	r2, [r3, #40]	@ 0x28
 800782a:	687b      	ldr	r3, [r7, #4]
 800782c:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 800782e:	b29b      	uxth	r3, r3
 8007830:	3b01      	subs	r3, #1
 8007832:	b29b      	uxth	r3, r3
 8007834:	687a      	ldr	r2, [r7, #4]
 8007836:	4619      	mov	r1, r3
 8007838:	85d1      	strh	r1, [r2, #46]	@ 0x2e
 800783a:	2b00      	cmp	r3, #0
 800783c:	d15d      	bne.n	80078fa <UART_Receive_IT+0x16e>
 800783e:	687b      	ldr	r3, [r7, #4]
 8007840:	681b      	ldr	r3, [r3, #0]
 8007842:	68da      	ldr	r2, [r3, #12]
 8007844:	687b      	ldr	r3, [r7, #4]
 8007846:	681b      	ldr	r3, [r3, #0]
 8007848:	f022 0220 	bic.w	r2, r2, #32
 800784c:	60da      	str	r2, [r3, #12]
 800784e:	687b      	ldr	r3, [r7, #4]
 8007850:	681b      	ldr	r3, [r3, #0]
 8007852:	68da      	ldr	r2, [r3, #12]
 8007854:	687b      	ldr	r3, [r7, #4]
 8007856:	681b      	ldr	r3, [r3, #0]
 8007858:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 800785c:	60da      	str	r2, [r3, #12]
 800785e:	687b      	ldr	r3, [r7, #4]
 8007860:	681b      	ldr	r3, [r3, #0]
 8007862:	695a      	ldr	r2, [r3, #20]
 8007864:	687b      	ldr	r3, [r7, #4]
 8007866:	681b      	ldr	r3, [r3, #0]
 8007868:	f022 0201 	bic.w	r2, r2, #1
 800786c:	615a      	str	r2, [r3, #20]
 800786e:	687b      	ldr	r3, [r7, #4]
 8007870:	2220      	movs	r2, #32
 8007872:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8007876:	687b      	ldr	r3, [r7, #4]
 8007878:	2200      	movs	r2, #0
 800787a:	635a      	str	r2, [r3, #52]	@ 0x34
 800787c:	687b      	ldr	r3, [r7, #4]
 800787e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007880:	2b01      	cmp	r3, #1
 8007882:	d135      	bne.n	80078f0 <UART_Receive_IT+0x164>
 8007884:	687b      	ldr	r3, [r7, #4]
 8007886:	2200      	movs	r2, #0
 8007888:	631a      	str	r2, [r3, #48]	@ 0x30
 800788a:	687b      	ldr	r3, [r7, #4]
 800788c:	681b      	ldr	r3, [r3, #0]
 800788e:	330c      	adds	r3, #12
 8007890:	617b      	str	r3, [r7, #20]
 8007892:	697b      	ldr	r3, [r7, #20]
 8007894:	e853 3f00 	ldrex	r3, [r3]
 8007898:	613b      	str	r3, [r7, #16]
 800789a:	693b      	ldr	r3, [r7, #16]
 800789c:	f023 0310 	bic.w	r3, r3, #16
 80078a0:	627b      	str	r3, [r7, #36]	@ 0x24
 80078a2:	687b      	ldr	r3, [r7, #4]
 80078a4:	681b      	ldr	r3, [r3, #0]
 80078a6:	330c      	adds	r3, #12
 80078a8:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80078aa:	623a      	str	r2, [r7, #32]
 80078ac:	61fb      	str	r3, [r7, #28]
 80078ae:	69f9      	ldr	r1, [r7, #28]
 80078b0:	6a3a      	ldr	r2, [r7, #32]
 80078b2:	e841 2300 	strex	r3, r2, [r1]
 80078b6:	61bb      	str	r3, [r7, #24]
 80078b8:	69bb      	ldr	r3, [r7, #24]
 80078ba:	2b00      	cmp	r3, #0
 80078bc:	d1e5      	bne.n	800788a <UART_Receive_IT+0xfe>
 80078be:	687b      	ldr	r3, [r7, #4]
 80078c0:	681b      	ldr	r3, [r3, #0]
 80078c2:	681b      	ldr	r3, [r3, #0]
 80078c4:	f003 0310 	and.w	r3, r3, #16
 80078c8:	2b10      	cmp	r3, #16
 80078ca:	d10a      	bne.n	80078e2 <UART_Receive_IT+0x156>
 80078cc:	2300      	movs	r3, #0
 80078ce:	60fb      	str	r3, [r7, #12]
 80078d0:	687b      	ldr	r3, [r7, #4]
 80078d2:	681b      	ldr	r3, [r3, #0]
 80078d4:	681b      	ldr	r3, [r3, #0]
 80078d6:	60fb      	str	r3, [r7, #12]
 80078d8:	687b      	ldr	r3, [r7, #4]
 80078da:	681b      	ldr	r3, [r3, #0]
 80078dc:	685b      	ldr	r3, [r3, #4]
 80078de:	60fb      	str	r3, [r7, #12]
 80078e0:	68fb      	ldr	r3, [r7, #12]
 80078e2:	687b      	ldr	r3, [r7, #4]
 80078e4:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 80078e6:	4619      	mov	r1, r3
 80078e8:	6878      	ldr	r0, [r7, #4]
 80078ea:	f7ff fdd1 	bl	8007490 <HAL_UARTEx_RxEventCallback>
 80078ee:	e002      	b.n	80078f6 <UART_Receive_IT+0x16a>
 80078f0:	6878      	ldr	r0, [r7, #4]
 80078f2:	f7fa f97f 	bl	8001bf4 <HAL_UART_RxCpltCallback>
 80078f6:	2300      	movs	r3, #0
 80078f8:	e002      	b.n	8007900 <UART_Receive_IT+0x174>
 80078fa:	2300      	movs	r3, #0
 80078fc:	e000      	b.n	8007900 <UART_Receive_IT+0x174>
 80078fe:	2302      	movs	r3, #2
 8007900:	4618      	mov	r0, r3
 8007902:	3730      	adds	r7, #48	@ 0x30
 8007904:	46bd      	mov	sp, r7
 8007906:	bd80      	pop	{r7, pc}

08007908 <UART_SetConfig>:
 8007908:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800790c:	b0c0      	sub	sp, #256	@ 0x100
 800790e:	af00      	add	r7, sp, #0
 8007910:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
 8007914:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007918:	681b      	ldr	r3, [r3, #0]
 800791a:	691b      	ldr	r3, [r3, #16]
 800791c:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 8007920:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007924:	68d9      	ldr	r1, [r3, #12]
 8007926:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800792a:	681a      	ldr	r2, [r3, #0]
 800792c:	ea40 0301 	orr.w	r3, r0, r1
 8007930:	6113      	str	r3, [r2, #16]
 8007932:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007936:	689a      	ldr	r2, [r3, #8]
 8007938:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800793c:	691b      	ldr	r3, [r3, #16]
 800793e:	431a      	orrs	r2, r3
 8007940:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007944:	695b      	ldr	r3, [r3, #20]
 8007946:	431a      	orrs	r2, r3
 8007948:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800794c:	69db      	ldr	r3, [r3, #28]
 800794e:	4313      	orrs	r3, r2
 8007950:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 8007954:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007958:	681b      	ldr	r3, [r3, #0]
 800795a:	68db      	ldr	r3, [r3, #12]
 800795c:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 8007960:	f021 010c 	bic.w	r1, r1, #12
 8007964:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007968:	681a      	ldr	r2, [r3, #0]
 800796a:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 800796e:	430b      	orrs	r3, r1
 8007970:	60d3      	str	r3, [r2, #12]
 8007972:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007976:	681b      	ldr	r3, [r3, #0]
 8007978:	695b      	ldr	r3, [r3, #20]
 800797a:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 800797e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007982:	6999      	ldr	r1, [r3, #24]
 8007984:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007988:	681a      	ldr	r2, [r3, #0]
 800798a:	ea40 0301 	orr.w	r3, r0, r1
 800798e:	6153      	str	r3, [r2, #20]
 8007990:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007994:	681a      	ldr	r2, [r3, #0]
 8007996:	4b8f      	ldr	r3, [pc, #572]	@ (8007bd4 <UART_SetConfig+0x2cc>)
 8007998:	429a      	cmp	r2, r3
 800799a:	d005      	beq.n	80079a8 <UART_SetConfig+0xa0>
 800799c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80079a0:	681a      	ldr	r2, [r3, #0]
 80079a2:	4b8d      	ldr	r3, [pc, #564]	@ (8007bd8 <UART_SetConfig+0x2d0>)
 80079a4:	429a      	cmp	r2, r3
 80079a6:	d104      	bne.n	80079b2 <UART_SetConfig+0xaa>
 80079a8:	f7fd fc5e 	bl	8005268 <HAL_RCC_GetPCLK2Freq>
 80079ac:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 80079b0:	e003      	b.n	80079ba <UART_SetConfig+0xb2>
 80079b2:	f7fd fc45 	bl	8005240 <HAL_RCC_GetPCLK1Freq>
 80079b6:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 80079ba:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80079be:	69db      	ldr	r3, [r3, #28]
 80079c0:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80079c4:	f040 810c 	bne.w	8007be0 <UART_SetConfig+0x2d8>
 80079c8:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80079cc:	2200      	movs	r2, #0
 80079ce:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 80079d2:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 80079d6:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 80079da:	4622      	mov	r2, r4
 80079dc:	462b      	mov	r3, r5
 80079de:	1891      	adds	r1, r2, r2
 80079e0:	65b9      	str	r1, [r7, #88]	@ 0x58
 80079e2:	415b      	adcs	r3, r3
 80079e4:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80079e6:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 80079ea:	4621      	mov	r1, r4
 80079ec:	eb12 0801 	adds.w	r8, r2, r1
 80079f0:	4629      	mov	r1, r5
 80079f2:	eb43 0901 	adc.w	r9, r3, r1
 80079f6:	f04f 0200 	mov.w	r2, #0
 80079fa:	f04f 0300 	mov.w	r3, #0
 80079fe:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8007a02:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8007a06:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8007a0a:	4690      	mov	r8, r2
 8007a0c:	4699      	mov	r9, r3
 8007a0e:	4623      	mov	r3, r4
 8007a10:	eb18 0303 	adds.w	r3, r8, r3
 8007a14:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8007a18:	462b      	mov	r3, r5
 8007a1a:	eb49 0303 	adc.w	r3, r9, r3
 8007a1e:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8007a22:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007a26:	685b      	ldr	r3, [r3, #4]
 8007a28:	2200      	movs	r2, #0
 8007a2a:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8007a2e:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 8007a32:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 8007a36:	460b      	mov	r3, r1
 8007a38:	18db      	adds	r3, r3, r3
 8007a3a:	653b      	str	r3, [r7, #80]	@ 0x50
 8007a3c:	4613      	mov	r3, r2
 8007a3e:	eb42 0303 	adc.w	r3, r2, r3
 8007a42:	657b      	str	r3, [r7, #84]	@ 0x54
 8007a44:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 8007a48:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 8007a4c:	f7f9 f93c 	bl	8000cc8 <__aeabi_uldivmod>
 8007a50:	4602      	mov	r2, r0
 8007a52:	460b      	mov	r3, r1
 8007a54:	4b61      	ldr	r3, [pc, #388]	@ (8007bdc <UART_SetConfig+0x2d4>)
 8007a56:	fba3 2302 	umull	r2, r3, r3, r2
 8007a5a:	095b      	lsrs	r3, r3, #5
 8007a5c:	011c      	lsls	r4, r3, #4
 8007a5e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8007a62:	2200      	movs	r2, #0
 8007a64:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8007a68:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 8007a6c:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 8007a70:	4642      	mov	r2, r8
 8007a72:	464b      	mov	r3, r9
 8007a74:	1891      	adds	r1, r2, r2
 8007a76:	64b9      	str	r1, [r7, #72]	@ 0x48
 8007a78:	415b      	adcs	r3, r3
 8007a7a:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8007a7c:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8007a80:	4641      	mov	r1, r8
 8007a82:	eb12 0a01 	adds.w	sl, r2, r1
 8007a86:	4649      	mov	r1, r9
 8007a88:	eb43 0b01 	adc.w	fp, r3, r1
 8007a8c:	f04f 0200 	mov.w	r2, #0
 8007a90:	f04f 0300 	mov.w	r3, #0
 8007a94:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8007a98:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8007a9c:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8007aa0:	4692      	mov	sl, r2
 8007aa2:	469b      	mov	fp, r3
 8007aa4:	4643      	mov	r3, r8
 8007aa6:	eb1a 0303 	adds.w	r3, sl, r3
 8007aaa:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8007aae:	464b      	mov	r3, r9
 8007ab0:	eb4b 0303 	adc.w	r3, fp, r3
 8007ab4:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 8007ab8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007abc:	685b      	ldr	r3, [r3, #4]
 8007abe:	2200      	movs	r2, #0
 8007ac0:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8007ac4:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 8007ac8:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 8007acc:	460b      	mov	r3, r1
 8007ace:	18db      	adds	r3, r3, r3
 8007ad0:	643b      	str	r3, [r7, #64]	@ 0x40
 8007ad2:	4613      	mov	r3, r2
 8007ad4:	eb42 0303 	adc.w	r3, r2, r3
 8007ad8:	647b      	str	r3, [r7, #68]	@ 0x44
 8007ada:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8007ade:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 8007ae2:	f7f9 f8f1 	bl	8000cc8 <__aeabi_uldivmod>
 8007ae6:	4602      	mov	r2, r0
 8007ae8:	460b      	mov	r3, r1
 8007aea:	4611      	mov	r1, r2
 8007aec:	4b3b      	ldr	r3, [pc, #236]	@ (8007bdc <UART_SetConfig+0x2d4>)
 8007aee:	fba3 2301 	umull	r2, r3, r3, r1
 8007af2:	095b      	lsrs	r3, r3, #5
 8007af4:	2264      	movs	r2, #100	@ 0x64
 8007af6:	fb02 f303 	mul.w	r3, r2, r3
 8007afa:	1acb      	subs	r3, r1, r3
 8007afc:	00db      	lsls	r3, r3, #3
 8007afe:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 8007b02:	4b36      	ldr	r3, [pc, #216]	@ (8007bdc <UART_SetConfig+0x2d4>)
 8007b04:	fba3 2302 	umull	r2, r3, r3, r2
 8007b08:	095b      	lsrs	r3, r3, #5
 8007b0a:	005b      	lsls	r3, r3, #1
 8007b0c:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 8007b10:	441c      	add	r4, r3
 8007b12:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8007b16:	2200      	movs	r2, #0
 8007b18:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8007b1c:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 8007b20:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 8007b24:	4642      	mov	r2, r8
 8007b26:	464b      	mov	r3, r9
 8007b28:	1891      	adds	r1, r2, r2
 8007b2a:	63b9      	str	r1, [r7, #56]	@ 0x38
 8007b2c:	415b      	adcs	r3, r3
 8007b2e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8007b30:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8007b34:	4641      	mov	r1, r8
 8007b36:	1851      	adds	r1, r2, r1
 8007b38:	6339      	str	r1, [r7, #48]	@ 0x30
 8007b3a:	4649      	mov	r1, r9
 8007b3c:	414b      	adcs	r3, r1
 8007b3e:	637b      	str	r3, [r7, #52]	@ 0x34
 8007b40:	f04f 0200 	mov.w	r2, #0
 8007b44:	f04f 0300 	mov.w	r3, #0
 8007b48:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 8007b4c:	4659      	mov	r1, fp
 8007b4e:	00cb      	lsls	r3, r1, #3
 8007b50:	4651      	mov	r1, sl
 8007b52:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8007b56:	4651      	mov	r1, sl
 8007b58:	00ca      	lsls	r2, r1, #3
 8007b5a:	4610      	mov	r0, r2
 8007b5c:	4619      	mov	r1, r3
 8007b5e:	4603      	mov	r3, r0
 8007b60:	4642      	mov	r2, r8
 8007b62:	189b      	adds	r3, r3, r2
 8007b64:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8007b68:	464b      	mov	r3, r9
 8007b6a:	460a      	mov	r2, r1
 8007b6c:	eb42 0303 	adc.w	r3, r2, r3
 8007b70:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8007b74:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007b78:	685b      	ldr	r3, [r3, #4]
 8007b7a:	2200      	movs	r2, #0
 8007b7c:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8007b80:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 8007b84:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 8007b88:	460b      	mov	r3, r1
 8007b8a:	18db      	adds	r3, r3, r3
 8007b8c:	62bb      	str	r3, [r7, #40]	@ 0x28
 8007b8e:	4613      	mov	r3, r2
 8007b90:	eb42 0303 	adc.w	r3, r2, r3
 8007b94:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8007b96:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8007b9a:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 8007b9e:	f7f9 f893 	bl	8000cc8 <__aeabi_uldivmod>
 8007ba2:	4602      	mov	r2, r0
 8007ba4:	460b      	mov	r3, r1
 8007ba6:	4b0d      	ldr	r3, [pc, #52]	@ (8007bdc <UART_SetConfig+0x2d4>)
 8007ba8:	fba3 1302 	umull	r1, r3, r3, r2
 8007bac:	095b      	lsrs	r3, r3, #5
 8007bae:	2164      	movs	r1, #100	@ 0x64
 8007bb0:	fb01 f303 	mul.w	r3, r1, r3
 8007bb4:	1ad3      	subs	r3, r2, r3
 8007bb6:	00db      	lsls	r3, r3, #3
 8007bb8:	3332      	adds	r3, #50	@ 0x32
 8007bba:	4a08      	ldr	r2, [pc, #32]	@ (8007bdc <UART_SetConfig+0x2d4>)
 8007bbc:	fba2 2303 	umull	r2, r3, r2, r3
 8007bc0:	095b      	lsrs	r3, r3, #5
 8007bc2:	f003 0207 	and.w	r2, r3, #7
 8007bc6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007bca:	681b      	ldr	r3, [r3, #0]
 8007bcc:	4422      	add	r2, r4
 8007bce:	609a      	str	r2, [r3, #8]
 8007bd0:	e106      	b.n	8007de0 <UART_SetConfig+0x4d8>
 8007bd2:	bf00      	nop
 8007bd4:	40011000 	.word	0x40011000
 8007bd8:	40011400 	.word	0x40011400
 8007bdc:	51eb851f 	.word	0x51eb851f
 8007be0:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8007be4:	2200      	movs	r2, #0
 8007be6:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8007bea:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 8007bee:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 8007bf2:	4642      	mov	r2, r8
 8007bf4:	464b      	mov	r3, r9
 8007bf6:	1891      	adds	r1, r2, r2
 8007bf8:	6239      	str	r1, [r7, #32]
 8007bfa:	415b      	adcs	r3, r3
 8007bfc:	627b      	str	r3, [r7, #36]	@ 0x24
 8007bfe:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8007c02:	4641      	mov	r1, r8
 8007c04:	1854      	adds	r4, r2, r1
 8007c06:	4649      	mov	r1, r9
 8007c08:	eb43 0501 	adc.w	r5, r3, r1
 8007c0c:	f04f 0200 	mov.w	r2, #0
 8007c10:	f04f 0300 	mov.w	r3, #0
 8007c14:	00eb      	lsls	r3, r5, #3
 8007c16:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8007c1a:	00e2      	lsls	r2, r4, #3
 8007c1c:	4614      	mov	r4, r2
 8007c1e:	461d      	mov	r5, r3
 8007c20:	4643      	mov	r3, r8
 8007c22:	18e3      	adds	r3, r4, r3
 8007c24:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8007c28:	464b      	mov	r3, r9
 8007c2a:	eb45 0303 	adc.w	r3, r5, r3
 8007c2e:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8007c32:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007c36:	685b      	ldr	r3, [r3, #4]
 8007c38:	2200      	movs	r2, #0
 8007c3a:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8007c3e:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8007c42:	f04f 0200 	mov.w	r2, #0
 8007c46:	f04f 0300 	mov.w	r3, #0
 8007c4a:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 8007c4e:	4629      	mov	r1, r5
 8007c50:	008b      	lsls	r3, r1, #2
 8007c52:	4621      	mov	r1, r4
 8007c54:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8007c58:	4621      	mov	r1, r4
 8007c5a:	008a      	lsls	r2, r1, #2
 8007c5c:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 8007c60:	f7f9 f832 	bl	8000cc8 <__aeabi_uldivmod>
 8007c64:	4602      	mov	r2, r0
 8007c66:	460b      	mov	r3, r1
 8007c68:	4b60      	ldr	r3, [pc, #384]	@ (8007dec <UART_SetConfig+0x4e4>)
 8007c6a:	fba3 2302 	umull	r2, r3, r3, r2
 8007c6e:	095b      	lsrs	r3, r3, #5
 8007c70:	011c      	lsls	r4, r3, #4
 8007c72:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8007c76:	2200      	movs	r2, #0
 8007c78:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8007c7c:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 8007c80:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 8007c84:	4642      	mov	r2, r8
 8007c86:	464b      	mov	r3, r9
 8007c88:	1891      	adds	r1, r2, r2
 8007c8a:	61b9      	str	r1, [r7, #24]
 8007c8c:	415b      	adcs	r3, r3
 8007c8e:	61fb      	str	r3, [r7, #28]
 8007c90:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8007c94:	4641      	mov	r1, r8
 8007c96:	1851      	adds	r1, r2, r1
 8007c98:	6139      	str	r1, [r7, #16]
 8007c9a:	4649      	mov	r1, r9
 8007c9c:	414b      	adcs	r3, r1
 8007c9e:	617b      	str	r3, [r7, #20]
 8007ca0:	f04f 0200 	mov.w	r2, #0
 8007ca4:	f04f 0300 	mov.w	r3, #0
 8007ca8:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8007cac:	4659      	mov	r1, fp
 8007cae:	00cb      	lsls	r3, r1, #3
 8007cb0:	4651      	mov	r1, sl
 8007cb2:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8007cb6:	4651      	mov	r1, sl
 8007cb8:	00ca      	lsls	r2, r1, #3
 8007cba:	4610      	mov	r0, r2
 8007cbc:	4619      	mov	r1, r3
 8007cbe:	4603      	mov	r3, r0
 8007cc0:	4642      	mov	r2, r8
 8007cc2:	189b      	adds	r3, r3, r2
 8007cc4:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8007cc8:	464b      	mov	r3, r9
 8007cca:	460a      	mov	r2, r1
 8007ccc:	eb42 0303 	adc.w	r3, r2, r3
 8007cd0:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8007cd4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007cd8:	685b      	ldr	r3, [r3, #4]
 8007cda:	2200      	movs	r2, #0
 8007cdc:	67bb      	str	r3, [r7, #120]	@ 0x78
 8007cde:	67fa      	str	r2, [r7, #124]	@ 0x7c
 8007ce0:	f04f 0200 	mov.w	r2, #0
 8007ce4:	f04f 0300 	mov.w	r3, #0
 8007ce8:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 8007cec:	4649      	mov	r1, r9
 8007cee:	008b      	lsls	r3, r1, #2
 8007cf0:	4641      	mov	r1, r8
 8007cf2:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8007cf6:	4641      	mov	r1, r8
 8007cf8:	008a      	lsls	r2, r1, #2
 8007cfa:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 8007cfe:	f7f8 ffe3 	bl	8000cc8 <__aeabi_uldivmod>
 8007d02:	4602      	mov	r2, r0
 8007d04:	460b      	mov	r3, r1
 8007d06:	4611      	mov	r1, r2
 8007d08:	4b38      	ldr	r3, [pc, #224]	@ (8007dec <UART_SetConfig+0x4e4>)
 8007d0a:	fba3 2301 	umull	r2, r3, r3, r1
 8007d0e:	095b      	lsrs	r3, r3, #5
 8007d10:	2264      	movs	r2, #100	@ 0x64
 8007d12:	fb02 f303 	mul.w	r3, r2, r3
 8007d16:	1acb      	subs	r3, r1, r3
 8007d18:	011b      	lsls	r3, r3, #4
 8007d1a:	3332      	adds	r3, #50	@ 0x32
 8007d1c:	4a33      	ldr	r2, [pc, #204]	@ (8007dec <UART_SetConfig+0x4e4>)
 8007d1e:	fba2 2303 	umull	r2, r3, r2, r3
 8007d22:	095b      	lsrs	r3, r3, #5
 8007d24:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8007d28:	441c      	add	r4, r3
 8007d2a:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8007d2e:	2200      	movs	r2, #0
 8007d30:	673b      	str	r3, [r7, #112]	@ 0x70
 8007d32:	677a      	str	r2, [r7, #116]	@ 0x74
 8007d34:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 8007d38:	4642      	mov	r2, r8
 8007d3a:	464b      	mov	r3, r9
 8007d3c:	1891      	adds	r1, r2, r2
 8007d3e:	60b9      	str	r1, [r7, #8]
 8007d40:	415b      	adcs	r3, r3
 8007d42:	60fb      	str	r3, [r7, #12]
 8007d44:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8007d48:	4641      	mov	r1, r8
 8007d4a:	1851      	adds	r1, r2, r1
 8007d4c:	6039      	str	r1, [r7, #0]
 8007d4e:	4649      	mov	r1, r9
 8007d50:	414b      	adcs	r3, r1
 8007d52:	607b      	str	r3, [r7, #4]
 8007d54:	f04f 0200 	mov.w	r2, #0
 8007d58:	f04f 0300 	mov.w	r3, #0
 8007d5c:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8007d60:	4659      	mov	r1, fp
 8007d62:	00cb      	lsls	r3, r1, #3
 8007d64:	4651      	mov	r1, sl
 8007d66:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8007d6a:	4651      	mov	r1, sl
 8007d6c:	00ca      	lsls	r2, r1, #3
 8007d6e:	4610      	mov	r0, r2
 8007d70:	4619      	mov	r1, r3
 8007d72:	4603      	mov	r3, r0
 8007d74:	4642      	mov	r2, r8
 8007d76:	189b      	adds	r3, r3, r2
 8007d78:	66bb      	str	r3, [r7, #104]	@ 0x68
 8007d7a:	464b      	mov	r3, r9
 8007d7c:	460a      	mov	r2, r1
 8007d7e:	eb42 0303 	adc.w	r3, r2, r3
 8007d82:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8007d84:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007d88:	685b      	ldr	r3, [r3, #4]
 8007d8a:	2200      	movs	r2, #0
 8007d8c:	663b      	str	r3, [r7, #96]	@ 0x60
 8007d8e:	667a      	str	r2, [r7, #100]	@ 0x64
 8007d90:	f04f 0200 	mov.w	r2, #0
 8007d94:	f04f 0300 	mov.w	r3, #0
 8007d98:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 8007d9c:	4649      	mov	r1, r9
 8007d9e:	008b      	lsls	r3, r1, #2
 8007da0:	4641      	mov	r1, r8
 8007da2:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8007da6:	4641      	mov	r1, r8
 8007da8:	008a      	lsls	r2, r1, #2
 8007daa:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 8007dae:	f7f8 ff8b 	bl	8000cc8 <__aeabi_uldivmod>
 8007db2:	4602      	mov	r2, r0
 8007db4:	460b      	mov	r3, r1
 8007db6:	4b0d      	ldr	r3, [pc, #52]	@ (8007dec <UART_SetConfig+0x4e4>)
 8007db8:	fba3 1302 	umull	r1, r3, r3, r2
 8007dbc:	095b      	lsrs	r3, r3, #5
 8007dbe:	2164      	movs	r1, #100	@ 0x64
 8007dc0:	fb01 f303 	mul.w	r3, r1, r3
 8007dc4:	1ad3      	subs	r3, r2, r3
 8007dc6:	011b      	lsls	r3, r3, #4
 8007dc8:	3332      	adds	r3, #50	@ 0x32
 8007dca:	4a08      	ldr	r2, [pc, #32]	@ (8007dec <UART_SetConfig+0x4e4>)
 8007dcc:	fba2 2303 	umull	r2, r3, r2, r3
 8007dd0:	095b      	lsrs	r3, r3, #5
 8007dd2:	f003 020f 	and.w	r2, r3, #15
 8007dd6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8007dda:	681b      	ldr	r3, [r3, #0]
 8007ddc:	4422      	add	r2, r4
 8007dde:	609a      	str	r2, [r3, #8]
 8007de0:	bf00      	nop
 8007de2:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 8007de6:	46bd      	mov	sp, r7
 8007de8:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8007dec:	51eb851f 	.word	0x51eb851f

08007df0 <__NVIC_SetPriority>:
 8007df0:	b480      	push	{r7}
 8007df2:	b083      	sub	sp, #12
 8007df4:	af00      	add	r7, sp, #0
 8007df6:	4603      	mov	r3, r0
 8007df8:	6039      	str	r1, [r7, #0]
 8007dfa:	71fb      	strb	r3, [r7, #7]
 8007dfc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8007e00:	2b00      	cmp	r3, #0
 8007e02:	db0a      	blt.n	8007e1a <__NVIC_SetPriority+0x2a>
 8007e04:	683b      	ldr	r3, [r7, #0]
 8007e06:	b2da      	uxtb	r2, r3
 8007e08:	490c      	ldr	r1, [pc, #48]	@ (8007e3c <__NVIC_SetPriority+0x4c>)
 8007e0a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8007e0e:	0112      	lsls	r2, r2, #4
 8007e10:	b2d2      	uxtb	r2, r2
 8007e12:	440b      	add	r3, r1
 8007e14:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8007e18:	e00a      	b.n	8007e30 <__NVIC_SetPriority+0x40>
 8007e1a:	683b      	ldr	r3, [r7, #0]
 8007e1c:	b2da      	uxtb	r2, r3
 8007e1e:	4908      	ldr	r1, [pc, #32]	@ (8007e40 <__NVIC_SetPriority+0x50>)
 8007e20:	79fb      	ldrb	r3, [r7, #7]
 8007e22:	f003 030f 	and.w	r3, r3, #15
 8007e26:	3b04      	subs	r3, #4
 8007e28:	0112      	lsls	r2, r2, #4
 8007e2a:	b2d2      	uxtb	r2, r2
 8007e2c:	440b      	add	r3, r1
 8007e2e:	761a      	strb	r2, [r3, #24]
 8007e30:	bf00      	nop
 8007e32:	370c      	adds	r7, #12
 8007e34:	46bd      	mov	sp, r7
 8007e36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e3a:	4770      	bx	lr
 8007e3c:	e000e100 	.word	0xe000e100
 8007e40:	e000ed00 	.word	0xe000ed00

08007e44 <SVC_Setup>:
 8007e44:	b580      	push	{r7, lr}
 8007e46:	af00      	add	r7, sp, #0
 8007e48:	2100      	movs	r1, #0
 8007e4a:	f06f 0004 	mvn.w	r0, #4
 8007e4e:	f7ff ffcf 	bl	8007df0 <__NVIC_SetPriority>
 8007e52:	bf00      	nop
 8007e54:	bd80      	pop	{r7, pc}
	...

08007e58 <osKernelInitialize>:
 8007e58:	b480      	push	{r7}
 8007e5a:	b083      	sub	sp, #12
 8007e5c:	af00      	add	r7, sp, #0
 8007e5e:	f3ef 8305 	mrs	r3, IPSR
 8007e62:	603b      	str	r3, [r7, #0]
 8007e64:	683b      	ldr	r3, [r7, #0]
 8007e66:	2b00      	cmp	r3, #0
 8007e68:	d003      	beq.n	8007e72 <osKernelInitialize+0x1a>
 8007e6a:	f06f 0305 	mvn.w	r3, #5
 8007e6e:	607b      	str	r3, [r7, #4]
 8007e70:	e00c      	b.n	8007e8c <osKernelInitialize+0x34>
 8007e72:	4b0a      	ldr	r3, [pc, #40]	@ (8007e9c <osKernelInitialize+0x44>)
 8007e74:	681b      	ldr	r3, [r3, #0]
 8007e76:	2b00      	cmp	r3, #0
 8007e78:	d105      	bne.n	8007e86 <osKernelInitialize+0x2e>
 8007e7a:	4b08      	ldr	r3, [pc, #32]	@ (8007e9c <osKernelInitialize+0x44>)
 8007e7c:	2201      	movs	r2, #1
 8007e7e:	601a      	str	r2, [r3, #0]
 8007e80:	2300      	movs	r3, #0
 8007e82:	607b      	str	r3, [r7, #4]
 8007e84:	e002      	b.n	8007e8c <osKernelInitialize+0x34>
 8007e86:	f04f 33ff 	mov.w	r3, #4294967295
 8007e8a:	607b      	str	r3, [r7, #4]
 8007e8c:	687b      	ldr	r3, [r7, #4]
 8007e8e:	4618      	mov	r0, r3
 8007e90:	370c      	adds	r7, #12
 8007e92:	46bd      	mov	sp, r7
 8007e94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e98:	4770      	bx	lr
 8007e9a:	bf00      	nop
 8007e9c:	200004dc 	.word	0x200004dc

08007ea0 <osKernelStart>:
 8007ea0:	b580      	push	{r7, lr}
 8007ea2:	b082      	sub	sp, #8
 8007ea4:	af00      	add	r7, sp, #0
 8007ea6:	f3ef 8305 	mrs	r3, IPSR
 8007eaa:	603b      	str	r3, [r7, #0]
 8007eac:	683b      	ldr	r3, [r7, #0]
 8007eae:	2b00      	cmp	r3, #0
 8007eb0:	d003      	beq.n	8007eba <osKernelStart+0x1a>
 8007eb2:	f06f 0305 	mvn.w	r3, #5
 8007eb6:	607b      	str	r3, [r7, #4]
 8007eb8:	e010      	b.n	8007edc <osKernelStart+0x3c>
 8007eba:	4b0b      	ldr	r3, [pc, #44]	@ (8007ee8 <osKernelStart+0x48>)
 8007ebc:	681b      	ldr	r3, [r3, #0]
 8007ebe:	2b01      	cmp	r3, #1
 8007ec0:	d109      	bne.n	8007ed6 <osKernelStart+0x36>
 8007ec2:	f7ff ffbf 	bl	8007e44 <SVC_Setup>
 8007ec6:	4b08      	ldr	r3, [pc, #32]	@ (8007ee8 <osKernelStart+0x48>)
 8007ec8:	2202      	movs	r2, #2
 8007eca:	601a      	str	r2, [r3, #0]
 8007ecc:	f001 fa80 	bl	80093d0 <vTaskStartScheduler>
 8007ed0:	2300      	movs	r3, #0
 8007ed2:	607b      	str	r3, [r7, #4]
 8007ed4:	e002      	b.n	8007edc <osKernelStart+0x3c>
 8007ed6:	f04f 33ff 	mov.w	r3, #4294967295
 8007eda:	607b      	str	r3, [r7, #4]
 8007edc:	687b      	ldr	r3, [r7, #4]
 8007ede:	4618      	mov	r0, r3
 8007ee0:	3708      	adds	r7, #8
 8007ee2:	46bd      	mov	sp, r7
 8007ee4:	bd80      	pop	{r7, pc}
 8007ee6:	bf00      	nop
 8007ee8:	200004dc 	.word	0x200004dc

08007eec <osThreadNew>:
 8007eec:	b580      	push	{r7, lr}
 8007eee:	b08e      	sub	sp, #56	@ 0x38
 8007ef0:	af04      	add	r7, sp, #16
 8007ef2:	60f8      	str	r0, [r7, #12]
 8007ef4:	60b9      	str	r1, [r7, #8]
 8007ef6:	607a      	str	r2, [r7, #4]
 8007ef8:	2300      	movs	r3, #0
 8007efa:	613b      	str	r3, [r7, #16]
 8007efc:	f3ef 8305 	mrs	r3, IPSR
 8007f00:	617b      	str	r3, [r7, #20]
 8007f02:	697b      	ldr	r3, [r7, #20]
 8007f04:	2b00      	cmp	r3, #0
 8007f06:	d17e      	bne.n	8008006 <osThreadNew+0x11a>
 8007f08:	68fb      	ldr	r3, [r7, #12]
 8007f0a:	2b00      	cmp	r3, #0
 8007f0c:	d07b      	beq.n	8008006 <osThreadNew+0x11a>
 8007f0e:	2380      	movs	r3, #128	@ 0x80
 8007f10:	623b      	str	r3, [r7, #32]
 8007f12:	2318      	movs	r3, #24
 8007f14:	61fb      	str	r3, [r7, #28]
 8007f16:	2300      	movs	r3, #0
 8007f18:	627b      	str	r3, [r7, #36]	@ 0x24
 8007f1a:	f04f 33ff 	mov.w	r3, #4294967295
 8007f1e:	61bb      	str	r3, [r7, #24]
 8007f20:	687b      	ldr	r3, [r7, #4]
 8007f22:	2b00      	cmp	r3, #0
 8007f24:	d045      	beq.n	8007fb2 <osThreadNew+0xc6>
 8007f26:	687b      	ldr	r3, [r7, #4]
 8007f28:	681b      	ldr	r3, [r3, #0]
 8007f2a:	2b00      	cmp	r3, #0
 8007f2c:	d002      	beq.n	8007f34 <osThreadNew+0x48>
 8007f2e:	687b      	ldr	r3, [r7, #4]
 8007f30:	681b      	ldr	r3, [r3, #0]
 8007f32:	627b      	str	r3, [r7, #36]	@ 0x24
 8007f34:	687b      	ldr	r3, [r7, #4]
 8007f36:	699b      	ldr	r3, [r3, #24]
 8007f38:	2b00      	cmp	r3, #0
 8007f3a:	d002      	beq.n	8007f42 <osThreadNew+0x56>
 8007f3c:	687b      	ldr	r3, [r7, #4]
 8007f3e:	699b      	ldr	r3, [r3, #24]
 8007f40:	61fb      	str	r3, [r7, #28]
 8007f42:	69fb      	ldr	r3, [r7, #28]
 8007f44:	2b00      	cmp	r3, #0
 8007f46:	d008      	beq.n	8007f5a <osThreadNew+0x6e>
 8007f48:	69fb      	ldr	r3, [r7, #28]
 8007f4a:	2b38      	cmp	r3, #56	@ 0x38
 8007f4c:	d805      	bhi.n	8007f5a <osThreadNew+0x6e>
 8007f4e:	687b      	ldr	r3, [r7, #4]
 8007f50:	685b      	ldr	r3, [r3, #4]
 8007f52:	f003 0301 	and.w	r3, r3, #1
 8007f56:	2b00      	cmp	r3, #0
 8007f58:	d001      	beq.n	8007f5e <osThreadNew+0x72>
 8007f5a:	2300      	movs	r3, #0
 8007f5c:	e054      	b.n	8008008 <osThreadNew+0x11c>
 8007f5e:	687b      	ldr	r3, [r7, #4]
 8007f60:	695b      	ldr	r3, [r3, #20]
 8007f62:	2b00      	cmp	r3, #0
 8007f64:	d003      	beq.n	8007f6e <osThreadNew+0x82>
 8007f66:	687b      	ldr	r3, [r7, #4]
 8007f68:	695b      	ldr	r3, [r3, #20]
 8007f6a:	089b      	lsrs	r3, r3, #2
 8007f6c:	623b      	str	r3, [r7, #32]
 8007f6e:	687b      	ldr	r3, [r7, #4]
 8007f70:	689b      	ldr	r3, [r3, #8]
 8007f72:	2b00      	cmp	r3, #0
 8007f74:	d00e      	beq.n	8007f94 <osThreadNew+0xa8>
 8007f76:	687b      	ldr	r3, [r7, #4]
 8007f78:	68db      	ldr	r3, [r3, #12]
 8007f7a:	2ba7      	cmp	r3, #167	@ 0xa7
 8007f7c:	d90a      	bls.n	8007f94 <osThreadNew+0xa8>
 8007f7e:	687b      	ldr	r3, [r7, #4]
 8007f80:	691b      	ldr	r3, [r3, #16]
 8007f82:	2b00      	cmp	r3, #0
 8007f84:	d006      	beq.n	8007f94 <osThreadNew+0xa8>
 8007f86:	687b      	ldr	r3, [r7, #4]
 8007f88:	695b      	ldr	r3, [r3, #20]
 8007f8a:	2b00      	cmp	r3, #0
 8007f8c:	d002      	beq.n	8007f94 <osThreadNew+0xa8>
 8007f8e:	2301      	movs	r3, #1
 8007f90:	61bb      	str	r3, [r7, #24]
 8007f92:	e010      	b.n	8007fb6 <osThreadNew+0xca>
 8007f94:	687b      	ldr	r3, [r7, #4]
 8007f96:	689b      	ldr	r3, [r3, #8]
 8007f98:	2b00      	cmp	r3, #0
 8007f9a:	d10c      	bne.n	8007fb6 <osThreadNew+0xca>
 8007f9c:	687b      	ldr	r3, [r7, #4]
 8007f9e:	68db      	ldr	r3, [r3, #12]
 8007fa0:	2b00      	cmp	r3, #0
 8007fa2:	d108      	bne.n	8007fb6 <osThreadNew+0xca>
 8007fa4:	687b      	ldr	r3, [r7, #4]
 8007fa6:	691b      	ldr	r3, [r3, #16]
 8007fa8:	2b00      	cmp	r3, #0
 8007faa:	d104      	bne.n	8007fb6 <osThreadNew+0xca>
 8007fac:	2300      	movs	r3, #0
 8007fae:	61bb      	str	r3, [r7, #24]
 8007fb0:	e001      	b.n	8007fb6 <osThreadNew+0xca>
 8007fb2:	2300      	movs	r3, #0
 8007fb4:	61bb      	str	r3, [r7, #24]
 8007fb6:	69bb      	ldr	r3, [r7, #24]
 8007fb8:	2b01      	cmp	r3, #1
 8007fba:	d110      	bne.n	8007fde <osThreadNew+0xf2>
 8007fbc:	687b      	ldr	r3, [r7, #4]
 8007fbe:	691b      	ldr	r3, [r3, #16]
 8007fc0:	687a      	ldr	r2, [r7, #4]
 8007fc2:	6892      	ldr	r2, [r2, #8]
 8007fc4:	9202      	str	r2, [sp, #8]
 8007fc6:	9301      	str	r3, [sp, #4]
 8007fc8:	69fb      	ldr	r3, [r7, #28]
 8007fca:	9300      	str	r3, [sp, #0]
 8007fcc:	68bb      	ldr	r3, [r7, #8]
 8007fce:	6a3a      	ldr	r2, [r7, #32]
 8007fd0:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8007fd2:	68f8      	ldr	r0, [r7, #12]
 8007fd4:	f001 f808 	bl	8008fe8 <xTaskCreateStatic>
 8007fd8:	4603      	mov	r3, r0
 8007fda:	613b      	str	r3, [r7, #16]
 8007fdc:	e013      	b.n	8008006 <osThreadNew+0x11a>
 8007fde:	69bb      	ldr	r3, [r7, #24]
 8007fe0:	2b00      	cmp	r3, #0
 8007fe2:	d110      	bne.n	8008006 <osThreadNew+0x11a>
 8007fe4:	6a3b      	ldr	r3, [r7, #32]
 8007fe6:	b29a      	uxth	r2, r3
 8007fe8:	f107 0310 	add.w	r3, r7, #16
 8007fec:	9301      	str	r3, [sp, #4]
 8007fee:	69fb      	ldr	r3, [r7, #28]
 8007ff0:	9300      	str	r3, [sp, #0]
 8007ff2:	68bb      	ldr	r3, [r7, #8]
 8007ff4:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8007ff6:	68f8      	ldr	r0, [r7, #12]
 8007ff8:	f001 f856 	bl	80090a8 <xTaskCreate>
 8007ffc:	4603      	mov	r3, r0
 8007ffe:	2b01      	cmp	r3, #1
 8008000:	d001      	beq.n	8008006 <osThreadNew+0x11a>
 8008002:	2300      	movs	r3, #0
 8008004:	613b      	str	r3, [r7, #16]
 8008006:	693b      	ldr	r3, [r7, #16]
 8008008:	4618      	mov	r0, r3
 800800a:	3728      	adds	r7, #40	@ 0x28
 800800c:	46bd      	mov	sp, r7
 800800e:	bd80      	pop	{r7, pc}

08008010 <osDelay>:
 8008010:	b580      	push	{r7, lr}
 8008012:	b084      	sub	sp, #16
 8008014:	af00      	add	r7, sp, #0
 8008016:	6078      	str	r0, [r7, #4]
 8008018:	f3ef 8305 	mrs	r3, IPSR
 800801c:	60bb      	str	r3, [r7, #8]
 800801e:	68bb      	ldr	r3, [r7, #8]
 8008020:	2b00      	cmp	r3, #0
 8008022:	d003      	beq.n	800802c <osDelay+0x1c>
 8008024:	f06f 0305 	mvn.w	r3, #5
 8008028:	60fb      	str	r3, [r7, #12]
 800802a:	e007      	b.n	800803c <osDelay+0x2c>
 800802c:	2300      	movs	r3, #0
 800802e:	60fb      	str	r3, [r7, #12]
 8008030:	687b      	ldr	r3, [r7, #4]
 8008032:	2b00      	cmp	r3, #0
 8008034:	d002      	beq.n	800803c <osDelay+0x2c>
 8008036:	6878      	ldr	r0, [r7, #4]
 8008038:	f001 f994 	bl	8009364 <vTaskDelay>
 800803c:	68fb      	ldr	r3, [r7, #12]
 800803e:	4618      	mov	r0, r3
 8008040:	3710      	adds	r7, #16
 8008042:	46bd      	mov	sp, r7
 8008044:	bd80      	pop	{r7, pc}

08008046 <osMessageQueueNew>:
 8008046:	b580      	push	{r7, lr}
 8008048:	b08a      	sub	sp, #40	@ 0x28
 800804a:	af02      	add	r7, sp, #8
 800804c:	60f8      	str	r0, [r7, #12]
 800804e:	60b9      	str	r1, [r7, #8]
 8008050:	607a      	str	r2, [r7, #4]
 8008052:	2300      	movs	r3, #0
 8008054:	61fb      	str	r3, [r7, #28]
 8008056:	f3ef 8305 	mrs	r3, IPSR
 800805a:	613b      	str	r3, [r7, #16]
 800805c:	693b      	ldr	r3, [r7, #16]
 800805e:	2b00      	cmp	r3, #0
 8008060:	d15f      	bne.n	8008122 <osMessageQueueNew+0xdc>
 8008062:	68fb      	ldr	r3, [r7, #12]
 8008064:	2b00      	cmp	r3, #0
 8008066:	d05c      	beq.n	8008122 <osMessageQueueNew+0xdc>
 8008068:	68bb      	ldr	r3, [r7, #8]
 800806a:	2b00      	cmp	r3, #0
 800806c:	d059      	beq.n	8008122 <osMessageQueueNew+0xdc>
 800806e:	f04f 33ff 	mov.w	r3, #4294967295
 8008072:	61bb      	str	r3, [r7, #24]
 8008074:	687b      	ldr	r3, [r7, #4]
 8008076:	2b00      	cmp	r3, #0
 8008078:	d029      	beq.n	80080ce <osMessageQueueNew+0x88>
 800807a:	687b      	ldr	r3, [r7, #4]
 800807c:	689b      	ldr	r3, [r3, #8]
 800807e:	2b00      	cmp	r3, #0
 8008080:	d012      	beq.n	80080a8 <osMessageQueueNew+0x62>
 8008082:	687b      	ldr	r3, [r7, #4]
 8008084:	68db      	ldr	r3, [r3, #12]
 8008086:	2b4f      	cmp	r3, #79	@ 0x4f
 8008088:	d90e      	bls.n	80080a8 <osMessageQueueNew+0x62>
 800808a:	687b      	ldr	r3, [r7, #4]
 800808c:	691b      	ldr	r3, [r3, #16]
 800808e:	2b00      	cmp	r3, #0
 8008090:	d00a      	beq.n	80080a8 <osMessageQueueNew+0x62>
 8008092:	687b      	ldr	r3, [r7, #4]
 8008094:	695a      	ldr	r2, [r3, #20]
 8008096:	68fb      	ldr	r3, [r7, #12]
 8008098:	68b9      	ldr	r1, [r7, #8]
 800809a:	fb01 f303 	mul.w	r3, r1, r3
 800809e:	429a      	cmp	r2, r3
 80080a0:	d302      	bcc.n	80080a8 <osMessageQueueNew+0x62>
 80080a2:	2301      	movs	r3, #1
 80080a4:	61bb      	str	r3, [r7, #24]
 80080a6:	e014      	b.n	80080d2 <osMessageQueueNew+0x8c>
 80080a8:	687b      	ldr	r3, [r7, #4]
 80080aa:	689b      	ldr	r3, [r3, #8]
 80080ac:	2b00      	cmp	r3, #0
 80080ae:	d110      	bne.n	80080d2 <osMessageQueueNew+0x8c>
 80080b0:	687b      	ldr	r3, [r7, #4]
 80080b2:	68db      	ldr	r3, [r3, #12]
 80080b4:	2b00      	cmp	r3, #0
 80080b6:	d10c      	bne.n	80080d2 <osMessageQueueNew+0x8c>
 80080b8:	687b      	ldr	r3, [r7, #4]
 80080ba:	691b      	ldr	r3, [r3, #16]
 80080bc:	2b00      	cmp	r3, #0
 80080be:	d108      	bne.n	80080d2 <osMessageQueueNew+0x8c>
 80080c0:	687b      	ldr	r3, [r7, #4]
 80080c2:	695b      	ldr	r3, [r3, #20]
 80080c4:	2b00      	cmp	r3, #0
 80080c6:	d104      	bne.n	80080d2 <osMessageQueueNew+0x8c>
 80080c8:	2300      	movs	r3, #0
 80080ca:	61bb      	str	r3, [r7, #24]
 80080cc:	e001      	b.n	80080d2 <osMessageQueueNew+0x8c>
 80080ce:	2300      	movs	r3, #0
 80080d0:	61bb      	str	r3, [r7, #24]
 80080d2:	69bb      	ldr	r3, [r7, #24]
 80080d4:	2b01      	cmp	r3, #1
 80080d6:	d10b      	bne.n	80080f0 <osMessageQueueNew+0xaa>
 80080d8:	687b      	ldr	r3, [r7, #4]
 80080da:	691a      	ldr	r2, [r3, #16]
 80080dc:	687b      	ldr	r3, [r7, #4]
 80080de:	689b      	ldr	r3, [r3, #8]
 80080e0:	2100      	movs	r1, #0
 80080e2:	9100      	str	r1, [sp, #0]
 80080e4:	68b9      	ldr	r1, [r7, #8]
 80080e6:	68f8      	ldr	r0, [r7, #12]
 80080e8:	f000 fa30 	bl	800854c <xQueueGenericCreateStatic>
 80080ec:	61f8      	str	r0, [r7, #28]
 80080ee:	e008      	b.n	8008102 <osMessageQueueNew+0xbc>
 80080f0:	69bb      	ldr	r3, [r7, #24]
 80080f2:	2b00      	cmp	r3, #0
 80080f4:	d105      	bne.n	8008102 <osMessageQueueNew+0xbc>
 80080f6:	2200      	movs	r2, #0
 80080f8:	68b9      	ldr	r1, [r7, #8]
 80080fa:	68f8      	ldr	r0, [r7, #12]
 80080fc:	f000 faa3 	bl	8008646 <xQueueGenericCreate>
 8008100:	61f8      	str	r0, [r7, #28]
 8008102:	69fb      	ldr	r3, [r7, #28]
 8008104:	2b00      	cmp	r3, #0
 8008106:	d00c      	beq.n	8008122 <osMessageQueueNew+0xdc>
 8008108:	687b      	ldr	r3, [r7, #4]
 800810a:	2b00      	cmp	r3, #0
 800810c:	d003      	beq.n	8008116 <osMessageQueueNew+0xd0>
 800810e:	687b      	ldr	r3, [r7, #4]
 8008110:	681b      	ldr	r3, [r3, #0]
 8008112:	617b      	str	r3, [r7, #20]
 8008114:	e001      	b.n	800811a <osMessageQueueNew+0xd4>
 8008116:	2300      	movs	r3, #0
 8008118:	617b      	str	r3, [r7, #20]
 800811a:	6979      	ldr	r1, [r7, #20]
 800811c:	69f8      	ldr	r0, [r7, #28]
 800811e:	f000 ff05 	bl	8008f2c <vQueueAddToRegistry>
 8008122:	69fb      	ldr	r3, [r7, #28]
 8008124:	4618      	mov	r0, r3
 8008126:	3720      	adds	r7, #32
 8008128:	46bd      	mov	sp, r7
 800812a:	bd80      	pop	{r7, pc}

0800812c <osMessageQueuePut>:
 800812c:	b580      	push	{r7, lr}
 800812e:	b088      	sub	sp, #32
 8008130:	af00      	add	r7, sp, #0
 8008132:	60f8      	str	r0, [r7, #12]
 8008134:	60b9      	str	r1, [r7, #8]
 8008136:	603b      	str	r3, [r7, #0]
 8008138:	4613      	mov	r3, r2
 800813a:	71fb      	strb	r3, [r7, #7]
 800813c:	68fb      	ldr	r3, [r7, #12]
 800813e:	61bb      	str	r3, [r7, #24]
 8008140:	2300      	movs	r3, #0
 8008142:	61fb      	str	r3, [r7, #28]
 8008144:	f3ef 8305 	mrs	r3, IPSR
 8008148:	617b      	str	r3, [r7, #20]
 800814a:	697b      	ldr	r3, [r7, #20]
 800814c:	2b00      	cmp	r3, #0
 800814e:	d028      	beq.n	80081a2 <osMessageQueuePut+0x76>
 8008150:	69bb      	ldr	r3, [r7, #24]
 8008152:	2b00      	cmp	r3, #0
 8008154:	d005      	beq.n	8008162 <osMessageQueuePut+0x36>
 8008156:	68bb      	ldr	r3, [r7, #8]
 8008158:	2b00      	cmp	r3, #0
 800815a:	d002      	beq.n	8008162 <osMessageQueuePut+0x36>
 800815c:	683b      	ldr	r3, [r7, #0]
 800815e:	2b00      	cmp	r3, #0
 8008160:	d003      	beq.n	800816a <osMessageQueuePut+0x3e>
 8008162:	f06f 0303 	mvn.w	r3, #3
 8008166:	61fb      	str	r3, [r7, #28]
 8008168:	e038      	b.n	80081dc <osMessageQueuePut+0xb0>
 800816a:	2300      	movs	r3, #0
 800816c:	613b      	str	r3, [r7, #16]
 800816e:	f107 0210 	add.w	r2, r7, #16
 8008172:	2300      	movs	r3, #0
 8008174:	68b9      	ldr	r1, [r7, #8]
 8008176:	69b8      	ldr	r0, [r7, #24]
 8008178:	f000 fbc6 	bl	8008908 <xQueueGenericSendFromISR>
 800817c:	4603      	mov	r3, r0
 800817e:	2b01      	cmp	r3, #1
 8008180:	d003      	beq.n	800818a <osMessageQueuePut+0x5e>
 8008182:	f06f 0302 	mvn.w	r3, #2
 8008186:	61fb      	str	r3, [r7, #28]
 8008188:	e028      	b.n	80081dc <osMessageQueuePut+0xb0>
 800818a:	693b      	ldr	r3, [r7, #16]
 800818c:	2b00      	cmp	r3, #0
 800818e:	d025      	beq.n	80081dc <osMessageQueuePut+0xb0>
 8008190:	4b15      	ldr	r3, [pc, #84]	@ (80081e8 <osMessageQueuePut+0xbc>)
 8008192:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008196:	601a      	str	r2, [r3, #0]
 8008198:	f3bf 8f4f 	dsb	sy
 800819c:	f3bf 8f6f 	isb	sy
 80081a0:	e01c      	b.n	80081dc <osMessageQueuePut+0xb0>
 80081a2:	69bb      	ldr	r3, [r7, #24]
 80081a4:	2b00      	cmp	r3, #0
 80081a6:	d002      	beq.n	80081ae <osMessageQueuePut+0x82>
 80081a8:	68bb      	ldr	r3, [r7, #8]
 80081aa:	2b00      	cmp	r3, #0
 80081ac:	d103      	bne.n	80081b6 <osMessageQueuePut+0x8a>
 80081ae:	f06f 0303 	mvn.w	r3, #3
 80081b2:	61fb      	str	r3, [r7, #28]
 80081b4:	e012      	b.n	80081dc <osMessageQueuePut+0xb0>
 80081b6:	2300      	movs	r3, #0
 80081b8:	683a      	ldr	r2, [r7, #0]
 80081ba:	68b9      	ldr	r1, [r7, #8]
 80081bc:	69b8      	ldr	r0, [r7, #24]
 80081be:	f000 faa1 	bl	8008704 <xQueueGenericSend>
 80081c2:	4603      	mov	r3, r0
 80081c4:	2b01      	cmp	r3, #1
 80081c6:	d009      	beq.n	80081dc <osMessageQueuePut+0xb0>
 80081c8:	683b      	ldr	r3, [r7, #0]
 80081ca:	2b00      	cmp	r3, #0
 80081cc:	d003      	beq.n	80081d6 <osMessageQueuePut+0xaa>
 80081ce:	f06f 0301 	mvn.w	r3, #1
 80081d2:	61fb      	str	r3, [r7, #28]
 80081d4:	e002      	b.n	80081dc <osMessageQueuePut+0xb0>
 80081d6:	f06f 0302 	mvn.w	r3, #2
 80081da:	61fb      	str	r3, [r7, #28]
 80081dc:	69fb      	ldr	r3, [r7, #28]
 80081de:	4618      	mov	r0, r3
 80081e0:	3720      	adds	r7, #32
 80081e2:	46bd      	mov	sp, r7
 80081e4:	bd80      	pop	{r7, pc}
 80081e6:	bf00      	nop
 80081e8:	e000ed04 	.word	0xe000ed04

080081ec <osMessageQueueGet>:
 80081ec:	b580      	push	{r7, lr}
 80081ee:	b088      	sub	sp, #32
 80081f0:	af00      	add	r7, sp, #0
 80081f2:	60f8      	str	r0, [r7, #12]
 80081f4:	60b9      	str	r1, [r7, #8]
 80081f6:	607a      	str	r2, [r7, #4]
 80081f8:	603b      	str	r3, [r7, #0]
 80081fa:	68fb      	ldr	r3, [r7, #12]
 80081fc:	61bb      	str	r3, [r7, #24]
 80081fe:	2300      	movs	r3, #0
 8008200:	61fb      	str	r3, [r7, #28]
 8008202:	f3ef 8305 	mrs	r3, IPSR
 8008206:	617b      	str	r3, [r7, #20]
 8008208:	697b      	ldr	r3, [r7, #20]
 800820a:	2b00      	cmp	r3, #0
 800820c:	d028      	beq.n	8008260 <osMessageQueueGet+0x74>
 800820e:	69bb      	ldr	r3, [r7, #24]
 8008210:	2b00      	cmp	r3, #0
 8008212:	d005      	beq.n	8008220 <osMessageQueueGet+0x34>
 8008214:	68bb      	ldr	r3, [r7, #8]
 8008216:	2b00      	cmp	r3, #0
 8008218:	d002      	beq.n	8008220 <osMessageQueueGet+0x34>
 800821a:	683b      	ldr	r3, [r7, #0]
 800821c:	2b00      	cmp	r3, #0
 800821e:	d003      	beq.n	8008228 <osMessageQueueGet+0x3c>
 8008220:	f06f 0303 	mvn.w	r3, #3
 8008224:	61fb      	str	r3, [r7, #28]
 8008226:	e037      	b.n	8008298 <osMessageQueueGet+0xac>
 8008228:	2300      	movs	r3, #0
 800822a:	613b      	str	r3, [r7, #16]
 800822c:	f107 0310 	add.w	r3, r7, #16
 8008230:	461a      	mov	r2, r3
 8008232:	68b9      	ldr	r1, [r7, #8]
 8008234:	69b8      	ldr	r0, [r7, #24]
 8008236:	f000 fce7 	bl	8008c08 <xQueueReceiveFromISR>
 800823a:	4603      	mov	r3, r0
 800823c:	2b01      	cmp	r3, #1
 800823e:	d003      	beq.n	8008248 <osMessageQueueGet+0x5c>
 8008240:	f06f 0302 	mvn.w	r3, #2
 8008244:	61fb      	str	r3, [r7, #28]
 8008246:	e027      	b.n	8008298 <osMessageQueueGet+0xac>
 8008248:	693b      	ldr	r3, [r7, #16]
 800824a:	2b00      	cmp	r3, #0
 800824c:	d024      	beq.n	8008298 <osMessageQueueGet+0xac>
 800824e:	4b15      	ldr	r3, [pc, #84]	@ (80082a4 <osMessageQueueGet+0xb8>)
 8008250:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008254:	601a      	str	r2, [r3, #0]
 8008256:	f3bf 8f4f 	dsb	sy
 800825a:	f3bf 8f6f 	isb	sy
 800825e:	e01b      	b.n	8008298 <osMessageQueueGet+0xac>
 8008260:	69bb      	ldr	r3, [r7, #24]
 8008262:	2b00      	cmp	r3, #0
 8008264:	d002      	beq.n	800826c <osMessageQueueGet+0x80>
 8008266:	68bb      	ldr	r3, [r7, #8]
 8008268:	2b00      	cmp	r3, #0
 800826a:	d103      	bne.n	8008274 <osMessageQueueGet+0x88>
 800826c:	f06f 0303 	mvn.w	r3, #3
 8008270:	61fb      	str	r3, [r7, #28]
 8008272:	e011      	b.n	8008298 <osMessageQueueGet+0xac>
 8008274:	683a      	ldr	r2, [r7, #0]
 8008276:	68b9      	ldr	r1, [r7, #8]
 8008278:	69b8      	ldr	r0, [r7, #24]
 800827a:	f000 fbe3 	bl	8008a44 <xQueueReceive>
 800827e:	4603      	mov	r3, r0
 8008280:	2b01      	cmp	r3, #1
 8008282:	d009      	beq.n	8008298 <osMessageQueueGet+0xac>
 8008284:	683b      	ldr	r3, [r7, #0]
 8008286:	2b00      	cmp	r3, #0
 8008288:	d003      	beq.n	8008292 <osMessageQueueGet+0xa6>
 800828a:	f06f 0301 	mvn.w	r3, #1
 800828e:	61fb      	str	r3, [r7, #28]
 8008290:	e002      	b.n	8008298 <osMessageQueueGet+0xac>
 8008292:	f06f 0302 	mvn.w	r3, #2
 8008296:	61fb      	str	r3, [r7, #28]
 8008298:	69fb      	ldr	r3, [r7, #28]
 800829a:	4618      	mov	r0, r3
 800829c:	3720      	adds	r7, #32
 800829e:	46bd      	mov	sp, r7
 80082a0:	bd80      	pop	{r7, pc}
 80082a2:	bf00      	nop
 80082a4:	e000ed04 	.word	0xe000ed04

080082a8 <vApplicationGetIdleTaskMemory>:
 80082a8:	b480      	push	{r7}
 80082aa:	b085      	sub	sp, #20
 80082ac:	af00      	add	r7, sp, #0
 80082ae:	60f8      	str	r0, [r7, #12]
 80082b0:	60b9      	str	r1, [r7, #8]
 80082b2:	607a      	str	r2, [r7, #4]
 80082b4:	68fb      	ldr	r3, [r7, #12]
 80082b6:	4a07      	ldr	r2, [pc, #28]	@ (80082d4 <vApplicationGetIdleTaskMemory+0x2c>)
 80082b8:	601a      	str	r2, [r3, #0]
 80082ba:	68bb      	ldr	r3, [r7, #8]
 80082bc:	4a06      	ldr	r2, [pc, #24]	@ (80082d8 <vApplicationGetIdleTaskMemory+0x30>)
 80082be:	601a      	str	r2, [r3, #0]
 80082c0:	687b      	ldr	r3, [r7, #4]
 80082c2:	2280      	movs	r2, #128	@ 0x80
 80082c4:	601a      	str	r2, [r3, #0]
 80082c6:	bf00      	nop
 80082c8:	3714      	adds	r7, #20
 80082ca:	46bd      	mov	sp, r7
 80082cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80082d0:	4770      	bx	lr
 80082d2:	bf00      	nop
 80082d4:	200004e0 	.word	0x200004e0
 80082d8:	20000588 	.word	0x20000588

080082dc <vApplicationGetTimerTaskMemory>:
 80082dc:	b480      	push	{r7}
 80082de:	b085      	sub	sp, #20
 80082e0:	af00      	add	r7, sp, #0
 80082e2:	60f8      	str	r0, [r7, #12]
 80082e4:	60b9      	str	r1, [r7, #8]
 80082e6:	607a      	str	r2, [r7, #4]
 80082e8:	68fb      	ldr	r3, [r7, #12]
 80082ea:	4a07      	ldr	r2, [pc, #28]	@ (8008308 <vApplicationGetTimerTaskMemory+0x2c>)
 80082ec:	601a      	str	r2, [r3, #0]
 80082ee:	68bb      	ldr	r3, [r7, #8]
 80082f0:	4a06      	ldr	r2, [pc, #24]	@ (800830c <vApplicationGetTimerTaskMemory+0x30>)
 80082f2:	601a      	str	r2, [r3, #0]
 80082f4:	687b      	ldr	r3, [r7, #4]
 80082f6:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80082fa:	601a      	str	r2, [r3, #0]
 80082fc:	bf00      	nop
 80082fe:	3714      	adds	r7, #20
 8008300:	46bd      	mov	sp, r7
 8008302:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008306:	4770      	bx	lr
 8008308:	20000788 	.word	0x20000788
 800830c:	20000830 	.word	0x20000830

08008310 <vListInitialise>:
 8008310:	b480      	push	{r7}
 8008312:	b083      	sub	sp, #12
 8008314:	af00      	add	r7, sp, #0
 8008316:	6078      	str	r0, [r7, #4]
 8008318:	687b      	ldr	r3, [r7, #4]
 800831a:	f103 0208 	add.w	r2, r3, #8
 800831e:	687b      	ldr	r3, [r7, #4]
 8008320:	605a      	str	r2, [r3, #4]
 8008322:	687b      	ldr	r3, [r7, #4]
 8008324:	f04f 32ff 	mov.w	r2, #4294967295
 8008328:	609a      	str	r2, [r3, #8]
 800832a:	687b      	ldr	r3, [r7, #4]
 800832c:	f103 0208 	add.w	r2, r3, #8
 8008330:	687b      	ldr	r3, [r7, #4]
 8008332:	60da      	str	r2, [r3, #12]
 8008334:	687b      	ldr	r3, [r7, #4]
 8008336:	f103 0208 	add.w	r2, r3, #8
 800833a:	687b      	ldr	r3, [r7, #4]
 800833c:	611a      	str	r2, [r3, #16]
 800833e:	687b      	ldr	r3, [r7, #4]
 8008340:	2200      	movs	r2, #0
 8008342:	601a      	str	r2, [r3, #0]
 8008344:	bf00      	nop
 8008346:	370c      	adds	r7, #12
 8008348:	46bd      	mov	sp, r7
 800834a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800834e:	4770      	bx	lr

08008350 <vListInitialiseItem>:
 8008350:	b480      	push	{r7}
 8008352:	b083      	sub	sp, #12
 8008354:	af00      	add	r7, sp, #0
 8008356:	6078      	str	r0, [r7, #4]
 8008358:	687b      	ldr	r3, [r7, #4]
 800835a:	2200      	movs	r2, #0
 800835c:	611a      	str	r2, [r3, #16]
 800835e:	bf00      	nop
 8008360:	370c      	adds	r7, #12
 8008362:	46bd      	mov	sp, r7
 8008364:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008368:	4770      	bx	lr

0800836a <vListInsertEnd>:
 800836a:	b480      	push	{r7}
 800836c:	b085      	sub	sp, #20
 800836e:	af00      	add	r7, sp, #0
 8008370:	6078      	str	r0, [r7, #4]
 8008372:	6039      	str	r1, [r7, #0]
 8008374:	687b      	ldr	r3, [r7, #4]
 8008376:	685b      	ldr	r3, [r3, #4]
 8008378:	60fb      	str	r3, [r7, #12]
 800837a:	683b      	ldr	r3, [r7, #0]
 800837c:	68fa      	ldr	r2, [r7, #12]
 800837e:	605a      	str	r2, [r3, #4]
 8008380:	68fb      	ldr	r3, [r7, #12]
 8008382:	689a      	ldr	r2, [r3, #8]
 8008384:	683b      	ldr	r3, [r7, #0]
 8008386:	609a      	str	r2, [r3, #8]
 8008388:	68fb      	ldr	r3, [r7, #12]
 800838a:	689b      	ldr	r3, [r3, #8]
 800838c:	683a      	ldr	r2, [r7, #0]
 800838e:	605a      	str	r2, [r3, #4]
 8008390:	68fb      	ldr	r3, [r7, #12]
 8008392:	683a      	ldr	r2, [r7, #0]
 8008394:	609a      	str	r2, [r3, #8]
 8008396:	683b      	ldr	r3, [r7, #0]
 8008398:	687a      	ldr	r2, [r7, #4]
 800839a:	611a      	str	r2, [r3, #16]
 800839c:	687b      	ldr	r3, [r7, #4]
 800839e:	681b      	ldr	r3, [r3, #0]
 80083a0:	1c5a      	adds	r2, r3, #1
 80083a2:	687b      	ldr	r3, [r7, #4]
 80083a4:	601a      	str	r2, [r3, #0]
 80083a6:	bf00      	nop
 80083a8:	3714      	adds	r7, #20
 80083aa:	46bd      	mov	sp, r7
 80083ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80083b0:	4770      	bx	lr

080083b2 <vListInsert>:
 80083b2:	b480      	push	{r7}
 80083b4:	b085      	sub	sp, #20
 80083b6:	af00      	add	r7, sp, #0
 80083b8:	6078      	str	r0, [r7, #4]
 80083ba:	6039      	str	r1, [r7, #0]
 80083bc:	683b      	ldr	r3, [r7, #0]
 80083be:	681b      	ldr	r3, [r3, #0]
 80083c0:	60bb      	str	r3, [r7, #8]
 80083c2:	68bb      	ldr	r3, [r7, #8]
 80083c4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80083c8:	d103      	bne.n	80083d2 <vListInsert+0x20>
 80083ca:	687b      	ldr	r3, [r7, #4]
 80083cc:	691b      	ldr	r3, [r3, #16]
 80083ce:	60fb      	str	r3, [r7, #12]
 80083d0:	e00c      	b.n	80083ec <vListInsert+0x3a>
 80083d2:	687b      	ldr	r3, [r7, #4]
 80083d4:	3308      	adds	r3, #8
 80083d6:	60fb      	str	r3, [r7, #12]
 80083d8:	e002      	b.n	80083e0 <vListInsert+0x2e>
 80083da:	68fb      	ldr	r3, [r7, #12]
 80083dc:	685b      	ldr	r3, [r3, #4]
 80083de:	60fb      	str	r3, [r7, #12]
 80083e0:	68fb      	ldr	r3, [r7, #12]
 80083e2:	685b      	ldr	r3, [r3, #4]
 80083e4:	681b      	ldr	r3, [r3, #0]
 80083e6:	68ba      	ldr	r2, [r7, #8]
 80083e8:	429a      	cmp	r2, r3
 80083ea:	d2f6      	bcs.n	80083da <vListInsert+0x28>
 80083ec:	68fb      	ldr	r3, [r7, #12]
 80083ee:	685a      	ldr	r2, [r3, #4]
 80083f0:	683b      	ldr	r3, [r7, #0]
 80083f2:	605a      	str	r2, [r3, #4]
 80083f4:	683b      	ldr	r3, [r7, #0]
 80083f6:	685b      	ldr	r3, [r3, #4]
 80083f8:	683a      	ldr	r2, [r7, #0]
 80083fa:	609a      	str	r2, [r3, #8]
 80083fc:	683b      	ldr	r3, [r7, #0]
 80083fe:	68fa      	ldr	r2, [r7, #12]
 8008400:	609a      	str	r2, [r3, #8]
 8008402:	68fb      	ldr	r3, [r7, #12]
 8008404:	683a      	ldr	r2, [r7, #0]
 8008406:	605a      	str	r2, [r3, #4]
 8008408:	683b      	ldr	r3, [r7, #0]
 800840a:	687a      	ldr	r2, [r7, #4]
 800840c:	611a      	str	r2, [r3, #16]
 800840e:	687b      	ldr	r3, [r7, #4]
 8008410:	681b      	ldr	r3, [r3, #0]
 8008412:	1c5a      	adds	r2, r3, #1
 8008414:	687b      	ldr	r3, [r7, #4]
 8008416:	601a      	str	r2, [r3, #0]
 8008418:	bf00      	nop
 800841a:	3714      	adds	r7, #20
 800841c:	46bd      	mov	sp, r7
 800841e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008422:	4770      	bx	lr

08008424 <uxListRemove>:
 8008424:	b480      	push	{r7}
 8008426:	b085      	sub	sp, #20
 8008428:	af00      	add	r7, sp, #0
 800842a:	6078      	str	r0, [r7, #4]
 800842c:	687b      	ldr	r3, [r7, #4]
 800842e:	691b      	ldr	r3, [r3, #16]
 8008430:	60fb      	str	r3, [r7, #12]
 8008432:	687b      	ldr	r3, [r7, #4]
 8008434:	685b      	ldr	r3, [r3, #4]
 8008436:	687a      	ldr	r2, [r7, #4]
 8008438:	6892      	ldr	r2, [r2, #8]
 800843a:	609a      	str	r2, [r3, #8]
 800843c:	687b      	ldr	r3, [r7, #4]
 800843e:	689b      	ldr	r3, [r3, #8]
 8008440:	687a      	ldr	r2, [r7, #4]
 8008442:	6852      	ldr	r2, [r2, #4]
 8008444:	605a      	str	r2, [r3, #4]
 8008446:	68fb      	ldr	r3, [r7, #12]
 8008448:	685b      	ldr	r3, [r3, #4]
 800844a:	687a      	ldr	r2, [r7, #4]
 800844c:	429a      	cmp	r2, r3
 800844e:	d103      	bne.n	8008458 <uxListRemove+0x34>
 8008450:	687b      	ldr	r3, [r7, #4]
 8008452:	689a      	ldr	r2, [r3, #8]
 8008454:	68fb      	ldr	r3, [r7, #12]
 8008456:	605a      	str	r2, [r3, #4]
 8008458:	687b      	ldr	r3, [r7, #4]
 800845a:	2200      	movs	r2, #0
 800845c:	611a      	str	r2, [r3, #16]
 800845e:	68fb      	ldr	r3, [r7, #12]
 8008460:	681b      	ldr	r3, [r3, #0]
 8008462:	1e5a      	subs	r2, r3, #1
 8008464:	68fb      	ldr	r3, [r7, #12]
 8008466:	601a      	str	r2, [r3, #0]
 8008468:	68fb      	ldr	r3, [r7, #12]
 800846a:	681b      	ldr	r3, [r3, #0]
 800846c:	4618      	mov	r0, r3
 800846e:	3714      	adds	r7, #20
 8008470:	46bd      	mov	sp, r7
 8008472:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008476:	4770      	bx	lr

08008478 <xQueueGenericReset>:
 8008478:	b580      	push	{r7, lr}
 800847a:	b084      	sub	sp, #16
 800847c:	af00      	add	r7, sp, #0
 800847e:	6078      	str	r0, [r7, #4]
 8008480:	6039      	str	r1, [r7, #0]
 8008482:	687b      	ldr	r3, [r7, #4]
 8008484:	60fb      	str	r3, [r7, #12]
 8008486:	68fb      	ldr	r3, [r7, #12]
 8008488:	2b00      	cmp	r3, #0
 800848a:	d10b      	bne.n	80084a4 <xQueueGenericReset+0x2c>
 800848c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008490:	f383 8811 	msr	BASEPRI, r3
 8008494:	f3bf 8f6f 	isb	sy
 8008498:	f3bf 8f4f 	dsb	sy
 800849c:	60bb      	str	r3, [r7, #8]
 800849e:	bf00      	nop
 80084a0:	bf00      	nop
 80084a2:	e7fd      	b.n	80084a0 <xQueueGenericReset+0x28>
 80084a4:	f002 f968 	bl	800a778 <vPortEnterCritical>
 80084a8:	68fb      	ldr	r3, [r7, #12]
 80084aa:	681a      	ldr	r2, [r3, #0]
 80084ac:	68fb      	ldr	r3, [r7, #12]
 80084ae:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80084b0:	68f9      	ldr	r1, [r7, #12]
 80084b2:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 80084b4:	fb01 f303 	mul.w	r3, r1, r3
 80084b8:	441a      	add	r2, r3
 80084ba:	68fb      	ldr	r3, [r7, #12]
 80084bc:	609a      	str	r2, [r3, #8]
 80084be:	68fb      	ldr	r3, [r7, #12]
 80084c0:	2200      	movs	r2, #0
 80084c2:	639a      	str	r2, [r3, #56]	@ 0x38
 80084c4:	68fb      	ldr	r3, [r7, #12]
 80084c6:	681a      	ldr	r2, [r3, #0]
 80084c8:	68fb      	ldr	r3, [r7, #12]
 80084ca:	605a      	str	r2, [r3, #4]
 80084cc:	68fb      	ldr	r3, [r7, #12]
 80084ce:	681a      	ldr	r2, [r3, #0]
 80084d0:	68fb      	ldr	r3, [r7, #12]
 80084d2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80084d4:	3b01      	subs	r3, #1
 80084d6:	68f9      	ldr	r1, [r7, #12]
 80084d8:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 80084da:	fb01 f303 	mul.w	r3, r1, r3
 80084de:	441a      	add	r2, r3
 80084e0:	68fb      	ldr	r3, [r7, #12]
 80084e2:	60da      	str	r2, [r3, #12]
 80084e4:	68fb      	ldr	r3, [r7, #12]
 80084e6:	22ff      	movs	r2, #255	@ 0xff
 80084e8:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80084ec:	68fb      	ldr	r3, [r7, #12]
 80084ee:	22ff      	movs	r2, #255	@ 0xff
 80084f0:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80084f4:	683b      	ldr	r3, [r7, #0]
 80084f6:	2b00      	cmp	r3, #0
 80084f8:	d114      	bne.n	8008524 <xQueueGenericReset+0xac>
 80084fa:	68fb      	ldr	r3, [r7, #12]
 80084fc:	691b      	ldr	r3, [r3, #16]
 80084fe:	2b00      	cmp	r3, #0
 8008500:	d01a      	beq.n	8008538 <xQueueGenericReset+0xc0>
 8008502:	68fb      	ldr	r3, [r7, #12]
 8008504:	3310      	adds	r3, #16
 8008506:	4618      	mov	r0, r3
 8008508:	f001 fa00 	bl	800990c <xTaskRemoveFromEventList>
 800850c:	4603      	mov	r3, r0
 800850e:	2b00      	cmp	r3, #0
 8008510:	d012      	beq.n	8008538 <xQueueGenericReset+0xc0>
 8008512:	4b0d      	ldr	r3, [pc, #52]	@ (8008548 <xQueueGenericReset+0xd0>)
 8008514:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008518:	601a      	str	r2, [r3, #0]
 800851a:	f3bf 8f4f 	dsb	sy
 800851e:	f3bf 8f6f 	isb	sy
 8008522:	e009      	b.n	8008538 <xQueueGenericReset+0xc0>
 8008524:	68fb      	ldr	r3, [r7, #12]
 8008526:	3310      	adds	r3, #16
 8008528:	4618      	mov	r0, r3
 800852a:	f7ff fef1 	bl	8008310 <vListInitialise>
 800852e:	68fb      	ldr	r3, [r7, #12]
 8008530:	3324      	adds	r3, #36	@ 0x24
 8008532:	4618      	mov	r0, r3
 8008534:	f7ff feec 	bl	8008310 <vListInitialise>
 8008538:	f002 f950 	bl	800a7dc <vPortExitCritical>
 800853c:	2301      	movs	r3, #1
 800853e:	4618      	mov	r0, r3
 8008540:	3710      	adds	r7, #16
 8008542:	46bd      	mov	sp, r7
 8008544:	bd80      	pop	{r7, pc}
 8008546:	bf00      	nop
 8008548:	e000ed04 	.word	0xe000ed04

0800854c <xQueueGenericCreateStatic>:
 800854c:	b580      	push	{r7, lr}
 800854e:	b08e      	sub	sp, #56	@ 0x38
 8008550:	af02      	add	r7, sp, #8
 8008552:	60f8      	str	r0, [r7, #12]
 8008554:	60b9      	str	r1, [r7, #8]
 8008556:	607a      	str	r2, [r7, #4]
 8008558:	603b      	str	r3, [r7, #0]
 800855a:	68fb      	ldr	r3, [r7, #12]
 800855c:	2b00      	cmp	r3, #0
 800855e:	d10b      	bne.n	8008578 <xQueueGenericCreateStatic+0x2c>
 8008560:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008564:	f383 8811 	msr	BASEPRI, r3
 8008568:	f3bf 8f6f 	isb	sy
 800856c:	f3bf 8f4f 	dsb	sy
 8008570:	62bb      	str	r3, [r7, #40]	@ 0x28
 8008572:	bf00      	nop
 8008574:	bf00      	nop
 8008576:	e7fd      	b.n	8008574 <xQueueGenericCreateStatic+0x28>
 8008578:	683b      	ldr	r3, [r7, #0]
 800857a:	2b00      	cmp	r3, #0
 800857c:	d10b      	bne.n	8008596 <xQueueGenericCreateStatic+0x4a>
 800857e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008582:	f383 8811 	msr	BASEPRI, r3
 8008586:	f3bf 8f6f 	isb	sy
 800858a:	f3bf 8f4f 	dsb	sy
 800858e:	627b      	str	r3, [r7, #36]	@ 0x24
 8008590:	bf00      	nop
 8008592:	bf00      	nop
 8008594:	e7fd      	b.n	8008592 <xQueueGenericCreateStatic+0x46>
 8008596:	687b      	ldr	r3, [r7, #4]
 8008598:	2b00      	cmp	r3, #0
 800859a:	d002      	beq.n	80085a2 <xQueueGenericCreateStatic+0x56>
 800859c:	68bb      	ldr	r3, [r7, #8]
 800859e:	2b00      	cmp	r3, #0
 80085a0:	d001      	beq.n	80085a6 <xQueueGenericCreateStatic+0x5a>
 80085a2:	2301      	movs	r3, #1
 80085a4:	e000      	b.n	80085a8 <xQueueGenericCreateStatic+0x5c>
 80085a6:	2300      	movs	r3, #0
 80085a8:	2b00      	cmp	r3, #0
 80085aa:	d10b      	bne.n	80085c4 <xQueueGenericCreateStatic+0x78>
 80085ac:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80085b0:	f383 8811 	msr	BASEPRI, r3
 80085b4:	f3bf 8f6f 	isb	sy
 80085b8:	f3bf 8f4f 	dsb	sy
 80085bc:	623b      	str	r3, [r7, #32]
 80085be:	bf00      	nop
 80085c0:	bf00      	nop
 80085c2:	e7fd      	b.n	80085c0 <xQueueGenericCreateStatic+0x74>
 80085c4:	687b      	ldr	r3, [r7, #4]
 80085c6:	2b00      	cmp	r3, #0
 80085c8:	d102      	bne.n	80085d0 <xQueueGenericCreateStatic+0x84>
 80085ca:	68bb      	ldr	r3, [r7, #8]
 80085cc:	2b00      	cmp	r3, #0
 80085ce:	d101      	bne.n	80085d4 <xQueueGenericCreateStatic+0x88>
 80085d0:	2301      	movs	r3, #1
 80085d2:	e000      	b.n	80085d6 <xQueueGenericCreateStatic+0x8a>
 80085d4:	2300      	movs	r3, #0
 80085d6:	2b00      	cmp	r3, #0
 80085d8:	d10b      	bne.n	80085f2 <xQueueGenericCreateStatic+0xa6>
 80085da:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80085de:	f383 8811 	msr	BASEPRI, r3
 80085e2:	f3bf 8f6f 	isb	sy
 80085e6:	f3bf 8f4f 	dsb	sy
 80085ea:	61fb      	str	r3, [r7, #28]
 80085ec:	bf00      	nop
 80085ee:	bf00      	nop
 80085f0:	e7fd      	b.n	80085ee <xQueueGenericCreateStatic+0xa2>
 80085f2:	2350      	movs	r3, #80	@ 0x50
 80085f4:	617b      	str	r3, [r7, #20]
 80085f6:	697b      	ldr	r3, [r7, #20]
 80085f8:	2b50      	cmp	r3, #80	@ 0x50
 80085fa:	d00b      	beq.n	8008614 <xQueueGenericCreateStatic+0xc8>
 80085fc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008600:	f383 8811 	msr	BASEPRI, r3
 8008604:	f3bf 8f6f 	isb	sy
 8008608:	f3bf 8f4f 	dsb	sy
 800860c:	61bb      	str	r3, [r7, #24]
 800860e:	bf00      	nop
 8008610:	bf00      	nop
 8008612:	e7fd      	b.n	8008610 <xQueueGenericCreateStatic+0xc4>
 8008614:	697b      	ldr	r3, [r7, #20]
 8008616:	683b      	ldr	r3, [r7, #0]
 8008618:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800861a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800861c:	2b00      	cmp	r3, #0
 800861e:	d00d      	beq.n	800863c <xQueueGenericCreateStatic+0xf0>
 8008620:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008622:	2201      	movs	r2, #1
 8008624:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8008628:	f897 2038 	ldrb.w	r2, [r7, #56]	@ 0x38
 800862c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800862e:	9300      	str	r3, [sp, #0]
 8008630:	4613      	mov	r3, r2
 8008632:	687a      	ldr	r2, [r7, #4]
 8008634:	68b9      	ldr	r1, [r7, #8]
 8008636:	68f8      	ldr	r0, [r7, #12]
 8008638:	f000 f840 	bl	80086bc <prvInitialiseNewQueue>
 800863c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800863e:	4618      	mov	r0, r3
 8008640:	3730      	adds	r7, #48	@ 0x30
 8008642:	46bd      	mov	sp, r7
 8008644:	bd80      	pop	{r7, pc}

08008646 <xQueueGenericCreate>:
 8008646:	b580      	push	{r7, lr}
 8008648:	b08a      	sub	sp, #40	@ 0x28
 800864a:	af02      	add	r7, sp, #8
 800864c:	60f8      	str	r0, [r7, #12]
 800864e:	60b9      	str	r1, [r7, #8]
 8008650:	4613      	mov	r3, r2
 8008652:	71fb      	strb	r3, [r7, #7]
 8008654:	68fb      	ldr	r3, [r7, #12]
 8008656:	2b00      	cmp	r3, #0
 8008658:	d10b      	bne.n	8008672 <xQueueGenericCreate+0x2c>
 800865a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800865e:	f383 8811 	msr	BASEPRI, r3
 8008662:	f3bf 8f6f 	isb	sy
 8008666:	f3bf 8f4f 	dsb	sy
 800866a:	613b      	str	r3, [r7, #16]
 800866c:	bf00      	nop
 800866e:	bf00      	nop
 8008670:	e7fd      	b.n	800866e <xQueueGenericCreate+0x28>
 8008672:	68fb      	ldr	r3, [r7, #12]
 8008674:	68ba      	ldr	r2, [r7, #8]
 8008676:	fb02 f303 	mul.w	r3, r2, r3
 800867a:	61fb      	str	r3, [r7, #28]
 800867c:	69fb      	ldr	r3, [r7, #28]
 800867e:	3350      	adds	r3, #80	@ 0x50
 8008680:	4618      	mov	r0, r3
 8008682:	f002 f99b 	bl	800a9bc <pvPortMalloc>
 8008686:	61b8      	str	r0, [r7, #24]
 8008688:	69bb      	ldr	r3, [r7, #24]
 800868a:	2b00      	cmp	r3, #0
 800868c:	d011      	beq.n	80086b2 <xQueueGenericCreate+0x6c>
 800868e:	69bb      	ldr	r3, [r7, #24]
 8008690:	617b      	str	r3, [r7, #20]
 8008692:	697b      	ldr	r3, [r7, #20]
 8008694:	3350      	adds	r3, #80	@ 0x50
 8008696:	617b      	str	r3, [r7, #20]
 8008698:	69bb      	ldr	r3, [r7, #24]
 800869a:	2200      	movs	r2, #0
 800869c:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 80086a0:	79fa      	ldrb	r2, [r7, #7]
 80086a2:	69bb      	ldr	r3, [r7, #24]
 80086a4:	9300      	str	r3, [sp, #0]
 80086a6:	4613      	mov	r3, r2
 80086a8:	697a      	ldr	r2, [r7, #20]
 80086aa:	68b9      	ldr	r1, [r7, #8]
 80086ac:	68f8      	ldr	r0, [r7, #12]
 80086ae:	f000 f805 	bl	80086bc <prvInitialiseNewQueue>
 80086b2:	69bb      	ldr	r3, [r7, #24]
 80086b4:	4618      	mov	r0, r3
 80086b6:	3720      	adds	r7, #32
 80086b8:	46bd      	mov	sp, r7
 80086ba:	bd80      	pop	{r7, pc}

080086bc <prvInitialiseNewQueue>:
 80086bc:	b580      	push	{r7, lr}
 80086be:	b084      	sub	sp, #16
 80086c0:	af00      	add	r7, sp, #0
 80086c2:	60f8      	str	r0, [r7, #12]
 80086c4:	60b9      	str	r1, [r7, #8]
 80086c6:	607a      	str	r2, [r7, #4]
 80086c8:	70fb      	strb	r3, [r7, #3]
 80086ca:	68bb      	ldr	r3, [r7, #8]
 80086cc:	2b00      	cmp	r3, #0
 80086ce:	d103      	bne.n	80086d8 <prvInitialiseNewQueue+0x1c>
 80086d0:	69bb      	ldr	r3, [r7, #24]
 80086d2:	69ba      	ldr	r2, [r7, #24]
 80086d4:	601a      	str	r2, [r3, #0]
 80086d6:	e002      	b.n	80086de <prvInitialiseNewQueue+0x22>
 80086d8:	69bb      	ldr	r3, [r7, #24]
 80086da:	687a      	ldr	r2, [r7, #4]
 80086dc:	601a      	str	r2, [r3, #0]
 80086de:	69bb      	ldr	r3, [r7, #24]
 80086e0:	68fa      	ldr	r2, [r7, #12]
 80086e2:	63da      	str	r2, [r3, #60]	@ 0x3c
 80086e4:	69bb      	ldr	r3, [r7, #24]
 80086e6:	68ba      	ldr	r2, [r7, #8]
 80086e8:	641a      	str	r2, [r3, #64]	@ 0x40
 80086ea:	2101      	movs	r1, #1
 80086ec:	69b8      	ldr	r0, [r7, #24]
 80086ee:	f7ff fec3 	bl	8008478 <xQueueGenericReset>
 80086f2:	69bb      	ldr	r3, [r7, #24]
 80086f4:	78fa      	ldrb	r2, [r7, #3]
 80086f6:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c
 80086fa:	bf00      	nop
 80086fc:	3710      	adds	r7, #16
 80086fe:	46bd      	mov	sp, r7
 8008700:	bd80      	pop	{r7, pc}
	...

08008704 <xQueueGenericSend>:
 8008704:	b580      	push	{r7, lr}
 8008706:	b08e      	sub	sp, #56	@ 0x38
 8008708:	af00      	add	r7, sp, #0
 800870a:	60f8      	str	r0, [r7, #12]
 800870c:	60b9      	str	r1, [r7, #8]
 800870e:	607a      	str	r2, [r7, #4]
 8008710:	603b      	str	r3, [r7, #0]
 8008712:	2300      	movs	r3, #0
 8008714:	637b      	str	r3, [r7, #52]	@ 0x34
 8008716:	68fb      	ldr	r3, [r7, #12]
 8008718:	633b      	str	r3, [r7, #48]	@ 0x30
 800871a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800871c:	2b00      	cmp	r3, #0
 800871e:	d10b      	bne.n	8008738 <xQueueGenericSend+0x34>
 8008720:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008724:	f383 8811 	msr	BASEPRI, r3
 8008728:	f3bf 8f6f 	isb	sy
 800872c:	f3bf 8f4f 	dsb	sy
 8008730:	62bb      	str	r3, [r7, #40]	@ 0x28
 8008732:	bf00      	nop
 8008734:	bf00      	nop
 8008736:	e7fd      	b.n	8008734 <xQueueGenericSend+0x30>
 8008738:	68bb      	ldr	r3, [r7, #8]
 800873a:	2b00      	cmp	r3, #0
 800873c:	d103      	bne.n	8008746 <xQueueGenericSend+0x42>
 800873e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008740:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8008742:	2b00      	cmp	r3, #0
 8008744:	d101      	bne.n	800874a <xQueueGenericSend+0x46>
 8008746:	2301      	movs	r3, #1
 8008748:	e000      	b.n	800874c <xQueueGenericSend+0x48>
 800874a:	2300      	movs	r3, #0
 800874c:	2b00      	cmp	r3, #0
 800874e:	d10b      	bne.n	8008768 <xQueueGenericSend+0x64>
 8008750:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008754:	f383 8811 	msr	BASEPRI, r3
 8008758:	f3bf 8f6f 	isb	sy
 800875c:	f3bf 8f4f 	dsb	sy
 8008760:	627b      	str	r3, [r7, #36]	@ 0x24
 8008762:	bf00      	nop
 8008764:	bf00      	nop
 8008766:	e7fd      	b.n	8008764 <xQueueGenericSend+0x60>
 8008768:	683b      	ldr	r3, [r7, #0]
 800876a:	2b02      	cmp	r3, #2
 800876c:	d103      	bne.n	8008776 <xQueueGenericSend+0x72>
 800876e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008770:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8008772:	2b01      	cmp	r3, #1
 8008774:	d101      	bne.n	800877a <xQueueGenericSend+0x76>
 8008776:	2301      	movs	r3, #1
 8008778:	e000      	b.n	800877c <xQueueGenericSend+0x78>
 800877a:	2300      	movs	r3, #0
 800877c:	2b00      	cmp	r3, #0
 800877e:	d10b      	bne.n	8008798 <xQueueGenericSend+0x94>
 8008780:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008784:	f383 8811 	msr	BASEPRI, r3
 8008788:	f3bf 8f6f 	isb	sy
 800878c:	f3bf 8f4f 	dsb	sy
 8008790:	623b      	str	r3, [r7, #32]
 8008792:	bf00      	nop
 8008794:	bf00      	nop
 8008796:	e7fd      	b.n	8008794 <xQueueGenericSend+0x90>
 8008798:	f001 fa7e 	bl	8009c98 <xTaskGetSchedulerState>
 800879c:	4603      	mov	r3, r0
 800879e:	2b00      	cmp	r3, #0
 80087a0:	d102      	bne.n	80087a8 <xQueueGenericSend+0xa4>
 80087a2:	687b      	ldr	r3, [r7, #4]
 80087a4:	2b00      	cmp	r3, #0
 80087a6:	d101      	bne.n	80087ac <xQueueGenericSend+0xa8>
 80087a8:	2301      	movs	r3, #1
 80087aa:	e000      	b.n	80087ae <xQueueGenericSend+0xaa>
 80087ac:	2300      	movs	r3, #0
 80087ae:	2b00      	cmp	r3, #0
 80087b0:	d10b      	bne.n	80087ca <xQueueGenericSend+0xc6>
 80087b2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80087b6:	f383 8811 	msr	BASEPRI, r3
 80087ba:	f3bf 8f6f 	isb	sy
 80087be:	f3bf 8f4f 	dsb	sy
 80087c2:	61fb      	str	r3, [r7, #28]
 80087c4:	bf00      	nop
 80087c6:	bf00      	nop
 80087c8:	e7fd      	b.n	80087c6 <xQueueGenericSend+0xc2>
 80087ca:	f001 ffd5 	bl	800a778 <vPortEnterCritical>
 80087ce:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80087d0:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80087d2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80087d4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80087d6:	429a      	cmp	r2, r3
 80087d8:	d302      	bcc.n	80087e0 <xQueueGenericSend+0xdc>
 80087da:	683b      	ldr	r3, [r7, #0]
 80087dc:	2b02      	cmp	r3, #2
 80087de:	d129      	bne.n	8008834 <xQueueGenericSend+0x130>
 80087e0:	683a      	ldr	r2, [r7, #0]
 80087e2:	68b9      	ldr	r1, [r7, #8]
 80087e4:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 80087e6:	f000 fa91 	bl	8008d0c <prvCopyDataToQueue>
 80087ea:	62f8      	str	r0, [r7, #44]	@ 0x2c
 80087ec:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80087ee:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80087f0:	2b00      	cmp	r3, #0
 80087f2:	d010      	beq.n	8008816 <xQueueGenericSend+0x112>
 80087f4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80087f6:	3324      	adds	r3, #36	@ 0x24
 80087f8:	4618      	mov	r0, r3
 80087fa:	f001 f887 	bl	800990c <xTaskRemoveFromEventList>
 80087fe:	4603      	mov	r3, r0
 8008800:	2b00      	cmp	r3, #0
 8008802:	d013      	beq.n	800882c <xQueueGenericSend+0x128>
 8008804:	4b3f      	ldr	r3, [pc, #252]	@ (8008904 <xQueueGenericSend+0x200>)
 8008806:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800880a:	601a      	str	r2, [r3, #0]
 800880c:	f3bf 8f4f 	dsb	sy
 8008810:	f3bf 8f6f 	isb	sy
 8008814:	e00a      	b.n	800882c <xQueueGenericSend+0x128>
 8008816:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008818:	2b00      	cmp	r3, #0
 800881a:	d007      	beq.n	800882c <xQueueGenericSend+0x128>
 800881c:	4b39      	ldr	r3, [pc, #228]	@ (8008904 <xQueueGenericSend+0x200>)
 800881e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008822:	601a      	str	r2, [r3, #0]
 8008824:	f3bf 8f4f 	dsb	sy
 8008828:	f3bf 8f6f 	isb	sy
 800882c:	f001 ffd6 	bl	800a7dc <vPortExitCritical>
 8008830:	2301      	movs	r3, #1
 8008832:	e063      	b.n	80088fc <xQueueGenericSend+0x1f8>
 8008834:	687b      	ldr	r3, [r7, #4]
 8008836:	2b00      	cmp	r3, #0
 8008838:	d103      	bne.n	8008842 <xQueueGenericSend+0x13e>
 800883a:	f001 ffcf 	bl	800a7dc <vPortExitCritical>
 800883e:	2300      	movs	r3, #0
 8008840:	e05c      	b.n	80088fc <xQueueGenericSend+0x1f8>
 8008842:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8008844:	2b00      	cmp	r3, #0
 8008846:	d106      	bne.n	8008856 <xQueueGenericSend+0x152>
 8008848:	f107 0314 	add.w	r3, r7, #20
 800884c:	4618      	mov	r0, r3
 800884e:	f001 f8c1 	bl	80099d4 <vTaskInternalSetTimeOutState>
 8008852:	2301      	movs	r3, #1
 8008854:	637b      	str	r3, [r7, #52]	@ 0x34
 8008856:	f001 ffc1 	bl	800a7dc <vPortExitCritical>
 800885a:	f000 fe29 	bl	80094b0 <vTaskSuspendAll>
 800885e:	f001 ff8b 	bl	800a778 <vPortEnterCritical>
 8008862:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008864:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8008868:	b25b      	sxtb	r3, r3
 800886a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800886e:	d103      	bne.n	8008878 <xQueueGenericSend+0x174>
 8008870:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008872:	2200      	movs	r2, #0
 8008874:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8008878:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800887a:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 800887e:	b25b      	sxtb	r3, r3
 8008880:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008884:	d103      	bne.n	800888e <xQueueGenericSend+0x18a>
 8008886:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008888:	2200      	movs	r2, #0
 800888a:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800888e:	f001 ffa5 	bl	800a7dc <vPortExitCritical>
 8008892:	1d3a      	adds	r2, r7, #4
 8008894:	f107 0314 	add.w	r3, r7, #20
 8008898:	4611      	mov	r1, r2
 800889a:	4618      	mov	r0, r3
 800889c:	f001 f8b0 	bl	8009a00 <xTaskCheckForTimeOut>
 80088a0:	4603      	mov	r3, r0
 80088a2:	2b00      	cmp	r3, #0
 80088a4:	d124      	bne.n	80088f0 <xQueueGenericSend+0x1ec>
 80088a6:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 80088a8:	f000 fb28 	bl	8008efc <prvIsQueueFull>
 80088ac:	4603      	mov	r3, r0
 80088ae:	2b00      	cmp	r3, #0
 80088b0:	d018      	beq.n	80088e4 <xQueueGenericSend+0x1e0>
 80088b2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80088b4:	3310      	adds	r3, #16
 80088b6:	687a      	ldr	r2, [r7, #4]
 80088b8:	4611      	mov	r1, r2
 80088ba:	4618      	mov	r0, r3
 80088bc:	f000 ffd4 	bl	8009868 <vTaskPlaceOnEventList>
 80088c0:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 80088c2:	f000 fab3 	bl	8008e2c <prvUnlockQueue>
 80088c6:	f000 fe01 	bl	80094cc <xTaskResumeAll>
 80088ca:	4603      	mov	r3, r0
 80088cc:	2b00      	cmp	r3, #0
 80088ce:	f47f af7c 	bne.w	80087ca <xQueueGenericSend+0xc6>
 80088d2:	4b0c      	ldr	r3, [pc, #48]	@ (8008904 <xQueueGenericSend+0x200>)
 80088d4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80088d8:	601a      	str	r2, [r3, #0]
 80088da:	f3bf 8f4f 	dsb	sy
 80088de:	f3bf 8f6f 	isb	sy
 80088e2:	e772      	b.n	80087ca <xQueueGenericSend+0xc6>
 80088e4:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 80088e6:	f000 faa1 	bl	8008e2c <prvUnlockQueue>
 80088ea:	f000 fdef 	bl	80094cc <xTaskResumeAll>
 80088ee:	e76c      	b.n	80087ca <xQueueGenericSend+0xc6>
 80088f0:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 80088f2:	f000 fa9b 	bl	8008e2c <prvUnlockQueue>
 80088f6:	f000 fde9 	bl	80094cc <xTaskResumeAll>
 80088fa:	2300      	movs	r3, #0
 80088fc:	4618      	mov	r0, r3
 80088fe:	3738      	adds	r7, #56	@ 0x38
 8008900:	46bd      	mov	sp, r7
 8008902:	bd80      	pop	{r7, pc}
 8008904:	e000ed04 	.word	0xe000ed04

08008908 <xQueueGenericSendFromISR>:
 8008908:	b580      	push	{r7, lr}
 800890a:	b090      	sub	sp, #64	@ 0x40
 800890c:	af00      	add	r7, sp, #0
 800890e:	60f8      	str	r0, [r7, #12]
 8008910:	60b9      	str	r1, [r7, #8]
 8008912:	607a      	str	r2, [r7, #4]
 8008914:	603b      	str	r3, [r7, #0]
 8008916:	68fb      	ldr	r3, [r7, #12]
 8008918:	63bb      	str	r3, [r7, #56]	@ 0x38
 800891a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800891c:	2b00      	cmp	r3, #0
 800891e:	d10b      	bne.n	8008938 <xQueueGenericSendFromISR+0x30>
 8008920:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008924:	f383 8811 	msr	BASEPRI, r3
 8008928:	f3bf 8f6f 	isb	sy
 800892c:	f3bf 8f4f 	dsb	sy
 8008930:	62bb      	str	r3, [r7, #40]	@ 0x28
 8008932:	bf00      	nop
 8008934:	bf00      	nop
 8008936:	e7fd      	b.n	8008934 <xQueueGenericSendFromISR+0x2c>
 8008938:	68bb      	ldr	r3, [r7, #8]
 800893a:	2b00      	cmp	r3, #0
 800893c:	d103      	bne.n	8008946 <xQueueGenericSendFromISR+0x3e>
 800893e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8008940:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8008942:	2b00      	cmp	r3, #0
 8008944:	d101      	bne.n	800894a <xQueueGenericSendFromISR+0x42>
 8008946:	2301      	movs	r3, #1
 8008948:	e000      	b.n	800894c <xQueueGenericSendFromISR+0x44>
 800894a:	2300      	movs	r3, #0
 800894c:	2b00      	cmp	r3, #0
 800894e:	d10b      	bne.n	8008968 <xQueueGenericSendFromISR+0x60>
 8008950:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008954:	f383 8811 	msr	BASEPRI, r3
 8008958:	f3bf 8f6f 	isb	sy
 800895c:	f3bf 8f4f 	dsb	sy
 8008960:	627b      	str	r3, [r7, #36]	@ 0x24
 8008962:	bf00      	nop
 8008964:	bf00      	nop
 8008966:	e7fd      	b.n	8008964 <xQueueGenericSendFromISR+0x5c>
 8008968:	683b      	ldr	r3, [r7, #0]
 800896a:	2b02      	cmp	r3, #2
 800896c:	d103      	bne.n	8008976 <xQueueGenericSendFromISR+0x6e>
 800896e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8008970:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8008972:	2b01      	cmp	r3, #1
 8008974:	d101      	bne.n	800897a <xQueueGenericSendFromISR+0x72>
 8008976:	2301      	movs	r3, #1
 8008978:	e000      	b.n	800897c <xQueueGenericSendFromISR+0x74>
 800897a:	2300      	movs	r3, #0
 800897c:	2b00      	cmp	r3, #0
 800897e:	d10b      	bne.n	8008998 <xQueueGenericSendFromISR+0x90>
 8008980:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008984:	f383 8811 	msr	BASEPRI, r3
 8008988:	f3bf 8f6f 	isb	sy
 800898c:	f3bf 8f4f 	dsb	sy
 8008990:	623b      	str	r3, [r7, #32]
 8008992:	bf00      	nop
 8008994:	bf00      	nop
 8008996:	e7fd      	b.n	8008994 <xQueueGenericSendFromISR+0x8c>
 8008998:	f001 ffce 	bl	800a938 <vPortValidateInterruptPriority>
 800899c:	f3ef 8211 	mrs	r2, BASEPRI
 80089a0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80089a4:	f383 8811 	msr	BASEPRI, r3
 80089a8:	f3bf 8f6f 	isb	sy
 80089ac:	f3bf 8f4f 	dsb	sy
 80089b0:	61fa      	str	r2, [r7, #28]
 80089b2:	61bb      	str	r3, [r7, #24]
 80089b4:	69fb      	ldr	r3, [r7, #28]
 80089b6:	637b      	str	r3, [r7, #52]	@ 0x34
 80089b8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80089ba:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80089bc:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80089be:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80089c0:	429a      	cmp	r2, r3
 80089c2:	d302      	bcc.n	80089ca <xQueueGenericSendFromISR+0xc2>
 80089c4:	683b      	ldr	r3, [r7, #0]
 80089c6:	2b02      	cmp	r3, #2
 80089c8:	d12f      	bne.n	8008a2a <xQueueGenericSendFromISR+0x122>
 80089ca:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80089cc:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 80089d0:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
 80089d4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80089d6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80089d8:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80089da:	683a      	ldr	r2, [r7, #0]
 80089dc:	68b9      	ldr	r1, [r7, #8]
 80089de:	6bb8      	ldr	r0, [r7, #56]	@ 0x38
 80089e0:	f000 f994 	bl	8008d0c <prvCopyDataToQueue>
 80089e4:	f997 3033 	ldrsb.w	r3, [r7, #51]	@ 0x33
 80089e8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80089ec:	d112      	bne.n	8008a14 <xQueueGenericSendFromISR+0x10c>
 80089ee:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80089f0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80089f2:	2b00      	cmp	r3, #0
 80089f4:	d016      	beq.n	8008a24 <xQueueGenericSendFromISR+0x11c>
 80089f6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80089f8:	3324      	adds	r3, #36	@ 0x24
 80089fa:	4618      	mov	r0, r3
 80089fc:	f000 ff86 	bl	800990c <xTaskRemoveFromEventList>
 8008a00:	4603      	mov	r3, r0
 8008a02:	2b00      	cmp	r3, #0
 8008a04:	d00e      	beq.n	8008a24 <xQueueGenericSendFromISR+0x11c>
 8008a06:	687b      	ldr	r3, [r7, #4]
 8008a08:	2b00      	cmp	r3, #0
 8008a0a:	d00b      	beq.n	8008a24 <xQueueGenericSendFromISR+0x11c>
 8008a0c:	687b      	ldr	r3, [r7, #4]
 8008a0e:	2201      	movs	r2, #1
 8008a10:	601a      	str	r2, [r3, #0]
 8008a12:	e007      	b.n	8008a24 <xQueueGenericSendFromISR+0x11c>
 8008a14:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 8008a18:	3301      	adds	r3, #1
 8008a1a:	b2db      	uxtb	r3, r3
 8008a1c:	b25a      	sxtb	r2, r3
 8008a1e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8008a20:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8008a24:	2301      	movs	r3, #1
 8008a26:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8008a28:	e001      	b.n	8008a2e <xQueueGenericSendFromISR+0x126>
 8008a2a:	2300      	movs	r3, #0
 8008a2c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8008a2e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8008a30:	617b      	str	r3, [r7, #20]
 8008a32:	697b      	ldr	r3, [r7, #20]
 8008a34:	f383 8811 	msr	BASEPRI, r3
 8008a38:	bf00      	nop
 8008a3a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8008a3c:	4618      	mov	r0, r3
 8008a3e:	3740      	adds	r7, #64	@ 0x40
 8008a40:	46bd      	mov	sp, r7
 8008a42:	bd80      	pop	{r7, pc}

08008a44 <xQueueReceive>:
 8008a44:	b580      	push	{r7, lr}
 8008a46:	b08c      	sub	sp, #48	@ 0x30
 8008a48:	af00      	add	r7, sp, #0
 8008a4a:	60f8      	str	r0, [r7, #12]
 8008a4c:	60b9      	str	r1, [r7, #8]
 8008a4e:	607a      	str	r2, [r7, #4]
 8008a50:	2300      	movs	r3, #0
 8008a52:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8008a54:	68fb      	ldr	r3, [r7, #12]
 8008a56:	62bb      	str	r3, [r7, #40]	@ 0x28
 8008a58:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008a5a:	2b00      	cmp	r3, #0
 8008a5c:	d10b      	bne.n	8008a76 <xQueueReceive+0x32>
 8008a5e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008a62:	f383 8811 	msr	BASEPRI, r3
 8008a66:	f3bf 8f6f 	isb	sy
 8008a6a:	f3bf 8f4f 	dsb	sy
 8008a6e:	623b      	str	r3, [r7, #32]
 8008a70:	bf00      	nop
 8008a72:	bf00      	nop
 8008a74:	e7fd      	b.n	8008a72 <xQueueReceive+0x2e>
 8008a76:	68bb      	ldr	r3, [r7, #8]
 8008a78:	2b00      	cmp	r3, #0
 8008a7a:	d103      	bne.n	8008a84 <xQueueReceive+0x40>
 8008a7c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008a7e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8008a80:	2b00      	cmp	r3, #0
 8008a82:	d101      	bne.n	8008a88 <xQueueReceive+0x44>
 8008a84:	2301      	movs	r3, #1
 8008a86:	e000      	b.n	8008a8a <xQueueReceive+0x46>
 8008a88:	2300      	movs	r3, #0
 8008a8a:	2b00      	cmp	r3, #0
 8008a8c:	d10b      	bne.n	8008aa6 <xQueueReceive+0x62>
 8008a8e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008a92:	f383 8811 	msr	BASEPRI, r3
 8008a96:	f3bf 8f6f 	isb	sy
 8008a9a:	f3bf 8f4f 	dsb	sy
 8008a9e:	61fb      	str	r3, [r7, #28]
 8008aa0:	bf00      	nop
 8008aa2:	bf00      	nop
 8008aa4:	e7fd      	b.n	8008aa2 <xQueueReceive+0x5e>
 8008aa6:	f001 f8f7 	bl	8009c98 <xTaskGetSchedulerState>
 8008aaa:	4603      	mov	r3, r0
 8008aac:	2b00      	cmp	r3, #0
 8008aae:	d102      	bne.n	8008ab6 <xQueueReceive+0x72>
 8008ab0:	687b      	ldr	r3, [r7, #4]
 8008ab2:	2b00      	cmp	r3, #0
 8008ab4:	d101      	bne.n	8008aba <xQueueReceive+0x76>
 8008ab6:	2301      	movs	r3, #1
 8008ab8:	e000      	b.n	8008abc <xQueueReceive+0x78>
 8008aba:	2300      	movs	r3, #0
 8008abc:	2b00      	cmp	r3, #0
 8008abe:	d10b      	bne.n	8008ad8 <xQueueReceive+0x94>
 8008ac0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008ac4:	f383 8811 	msr	BASEPRI, r3
 8008ac8:	f3bf 8f6f 	isb	sy
 8008acc:	f3bf 8f4f 	dsb	sy
 8008ad0:	61bb      	str	r3, [r7, #24]
 8008ad2:	bf00      	nop
 8008ad4:	bf00      	nop
 8008ad6:	e7fd      	b.n	8008ad4 <xQueueReceive+0x90>
 8008ad8:	f001 fe4e 	bl	800a778 <vPortEnterCritical>
 8008adc:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008ade:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8008ae0:	627b      	str	r3, [r7, #36]	@ 0x24
 8008ae2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008ae4:	2b00      	cmp	r3, #0
 8008ae6:	d01f      	beq.n	8008b28 <xQueueReceive+0xe4>
 8008ae8:	68b9      	ldr	r1, [r7, #8]
 8008aea:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8008aec:	f000 f978 	bl	8008de0 <prvCopyDataFromQueue>
 8008af0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008af2:	1e5a      	subs	r2, r3, #1
 8008af4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008af6:	639a      	str	r2, [r3, #56]	@ 0x38
 8008af8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008afa:	691b      	ldr	r3, [r3, #16]
 8008afc:	2b00      	cmp	r3, #0
 8008afe:	d00f      	beq.n	8008b20 <xQueueReceive+0xdc>
 8008b00:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008b02:	3310      	adds	r3, #16
 8008b04:	4618      	mov	r0, r3
 8008b06:	f000 ff01 	bl	800990c <xTaskRemoveFromEventList>
 8008b0a:	4603      	mov	r3, r0
 8008b0c:	2b00      	cmp	r3, #0
 8008b0e:	d007      	beq.n	8008b20 <xQueueReceive+0xdc>
 8008b10:	4b3c      	ldr	r3, [pc, #240]	@ (8008c04 <xQueueReceive+0x1c0>)
 8008b12:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008b16:	601a      	str	r2, [r3, #0]
 8008b18:	f3bf 8f4f 	dsb	sy
 8008b1c:	f3bf 8f6f 	isb	sy
 8008b20:	f001 fe5c 	bl	800a7dc <vPortExitCritical>
 8008b24:	2301      	movs	r3, #1
 8008b26:	e069      	b.n	8008bfc <xQueueReceive+0x1b8>
 8008b28:	687b      	ldr	r3, [r7, #4]
 8008b2a:	2b00      	cmp	r3, #0
 8008b2c:	d103      	bne.n	8008b36 <xQueueReceive+0xf2>
 8008b2e:	f001 fe55 	bl	800a7dc <vPortExitCritical>
 8008b32:	2300      	movs	r3, #0
 8008b34:	e062      	b.n	8008bfc <xQueueReceive+0x1b8>
 8008b36:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008b38:	2b00      	cmp	r3, #0
 8008b3a:	d106      	bne.n	8008b4a <xQueueReceive+0x106>
 8008b3c:	f107 0310 	add.w	r3, r7, #16
 8008b40:	4618      	mov	r0, r3
 8008b42:	f000 ff47 	bl	80099d4 <vTaskInternalSetTimeOutState>
 8008b46:	2301      	movs	r3, #1
 8008b48:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8008b4a:	f001 fe47 	bl	800a7dc <vPortExitCritical>
 8008b4e:	f000 fcaf 	bl	80094b0 <vTaskSuspendAll>
 8008b52:	f001 fe11 	bl	800a778 <vPortEnterCritical>
 8008b56:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008b58:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8008b5c:	b25b      	sxtb	r3, r3
 8008b5e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008b62:	d103      	bne.n	8008b6c <xQueueReceive+0x128>
 8008b64:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008b66:	2200      	movs	r2, #0
 8008b68:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8008b6c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008b6e:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8008b72:	b25b      	sxtb	r3, r3
 8008b74:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008b78:	d103      	bne.n	8008b82 <xQueueReceive+0x13e>
 8008b7a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008b7c:	2200      	movs	r2, #0
 8008b7e:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8008b82:	f001 fe2b 	bl	800a7dc <vPortExitCritical>
 8008b86:	1d3a      	adds	r2, r7, #4
 8008b88:	f107 0310 	add.w	r3, r7, #16
 8008b8c:	4611      	mov	r1, r2
 8008b8e:	4618      	mov	r0, r3
 8008b90:	f000 ff36 	bl	8009a00 <xTaskCheckForTimeOut>
 8008b94:	4603      	mov	r3, r0
 8008b96:	2b00      	cmp	r3, #0
 8008b98:	d123      	bne.n	8008be2 <xQueueReceive+0x19e>
 8008b9a:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8008b9c:	f000 f998 	bl	8008ed0 <prvIsQueueEmpty>
 8008ba0:	4603      	mov	r3, r0
 8008ba2:	2b00      	cmp	r3, #0
 8008ba4:	d017      	beq.n	8008bd6 <xQueueReceive+0x192>
 8008ba6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008ba8:	3324      	adds	r3, #36	@ 0x24
 8008baa:	687a      	ldr	r2, [r7, #4]
 8008bac:	4611      	mov	r1, r2
 8008bae:	4618      	mov	r0, r3
 8008bb0:	f000 fe5a 	bl	8009868 <vTaskPlaceOnEventList>
 8008bb4:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8008bb6:	f000 f939 	bl	8008e2c <prvUnlockQueue>
 8008bba:	f000 fc87 	bl	80094cc <xTaskResumeAll>
 8008bbe:	4603      	mov	r3, r0
 8008bc0:	2b00      	cmp	r3, #0
 8008bc2:	d189      	bne.n	8008ad8 <xQueueReceive+0x94>
 8008bc4:	4b0f      	ldr	r3, [pc, #60]	@ (8008c04 <xQueueReceive+0x1c0>)
 8008bc6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008bca:	601a      	str	r2, [r3, #0]
 8008bcc:	f3bf 8f4f 	dsb	sy
 8008bd0:	f3bf 8f6f 	isb	sy
 8008bd4:	e780      	b.n	8008ad8 <xQueueReceive+0x94>
 8008bd6:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8008bd8:	f000 f928 	bl	8008e2c <prvUnlockQueue>
 8008bdc:	f000 fc76 	bl	80094cc <xTaskResumeAll>
 8008be0:	e77a      	b.n	8008ad8 <xQueueReceive+0x94>
 8008be2:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8008be4:	f000 f922 	bl	8008e2c <prvUnlockQueue>
 8008be8:	f000 fc70 	bl	80094cc <xTaskResumeAll>
 8008bec:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8008bee:	f000 f96f 	bl	8008ed0 <prvIsQueueEmpty>
 8008bf2:	4603      	mov	r3, r0
 8008bf4:	2b00      	cmp	r3, #0
 8008bf6:	f43f af6f 	beq.w	8008ad8 <xQueueReceive+0x94>
 8008bfa:	2300      	movs	r3, #0
 8008bfc:	4618      	mov	r0, r3
 8008bfe:	3730      	adds	r7, #48	@ 0x30
 8008c00:	46bd      	mov	sp, r7
 8008c02:	bd80      	pop	{r7, pc}
 8008c04:	e000ed04 	.word	0xe000ed04

08008c08 <xQueueReceiveFromISR>:
 8008c08:	b580      	push	{r7, lr}
 8008c0a:	b08e      	sub	sp, #56	@ 0x38
 8008c0c:	af00      	add	r7, sp, #0
 8008c0e:	60f8      	str	r0, [r7, #12]
 8008c10:	60b9      	str	r1, [r7, #8]
 8008c12:	607a      	str	r2, [r7, #4]
 8008c14:	68fb      	ldr	r3, [r7, #12]
 8008c16:	633b      	str	r3, [r7, #48]	@ 0x30
 8008c18:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008c1a:	2b00      	cmp	r3, #0
 8008c1c:	d10b      	bne.n	8008c36 <xQueueReceiveFromISR+0x2e>
 8008c1e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008c22:	f383 8811 	msr	BASEPRI, r3
 8008c26:	f3bf 8f6f 	isb	sy
 8008c2a:	f3bf 8f4f 	dsb	sy
 8008c2e:	623b      	str	r3, [r7, #32]
 8008c30:	bf00      	nop
 8008c32:	bf00      	nop
 8008c34:	e7fd      	b.n	8008c32 <xQueueReceiveFromISR+0x2a>
 8008c36:	68bb      	ldr	r3, [r7, #8]
 8008c38:	2b00      	cmp	r3, #0
 8008c3a:	d103      	bne.n	8008c44 <xQueueReceiveFromISR+0x3c>
 8008c3c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008c3e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8008c40:	2b00      	cmp	r3, #0
 8008c42:	d101      	bne.n	8008c48 <xQueueReceiveFromISR+0x40>
 8008c44:	2301      	movs	r3, #1
 8008c46:	e000      	b.n	8008c4a <xQueueReceiveFromISR+0x42>
 8008c48:	2300      	movs	r3, #0
 8008c4a:	2b00      	cmp	r3, #0
 8008c4c:	d10b      	bne.n	8008c66 <xQueueReceiveFromISR+0x5e>
 8008c4e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008c52:	f383 8811 	msr	BASEPRI, r3
 8008c56:	f3bf 8f6f 	isb	sy
 8008c5a:	f3bf 8f4f 	dsb	sy
 8008c5e:	61fb      	str	r3, [r7, #28]
 8008c60:	bf00      	nop
 8008c62:	bf00      	nop
 8008c64:	e7fd      	b.n	8008c62 <xQueueReceiveFromISR+0x5a>
 8008c66:	f001 fe67 	bl	800a938 <vPortValidateInterruptPriority>
 8008c6a:	f3ef 8211 	mrs	r2, BASEPRI
 8008c6e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008c72:	f383 8811 	msr	BASEPRI, r3
 8008c76:	f3bf 8f6f 	isb	sy
 8008c7a:	f3bf 8f4f 	dsb	sy
 8008c7e:	61ba      	str	r2, [r7, #24]
 8008c80:	617b      	str	r3, [r7, #20]
 8008c82:	69bb      	ldr	r3, [r7, #24]
 8008c84:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8008c86:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008c88:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8008c8a:	62bb      	str	r3, [r7, #40]	@ 0x28
 8008c8c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008c8e:	2b00      	cmp	r3, #0
 8008c90:	d02f      	beq.n	8008cf2 <xQueueReceiveFromISR+0xea>
 8008c92:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008c94:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8008c98:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8008c9c:	68b9      	ldr	r1, [r7, #8]
 8008c9e:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 8008ca0:	f000 f89e 	bl	8008de0 <prvCopyDataFromQueue>
 8008ca4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008ca6:	1e5a      	subs	r2, r3, #1
 8008ca8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008caa:	639a      	str	r2, [r3, #56]	@ 0x38
 8008cac:	f997 3027 	ldrsb.w	r3, [r7, #39]	@ 0x27
 8008cb0:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008cb4:	d112      	bne.n	8008cdc <xQueueReceiveFromISR+0xd4>
 8008cb6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008cb8:	691b      	ldr	r3, [r3, #16]
 8008cba:	2b00      	cmp	r3, #0
 8008cbc:	d016      	beq.n	8008cec <xQueueReceiveFromISR+0xe4>
 8008cbe:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008cc0:	3310      	adds	r3, #16
 8008cc2:	4618      	mov	r0, r3
 8008cc4:	f000 fe22 	bl	800990c <xTaskRemoveFromEventList>
 8008cc8:	4603      	mov	r3, r0
 8008cca:	2b00      	cmp	r3, #0
 8008ccc:	d00e      	beq.n	8008cec <xQueueReceiveFromISR+0xe4>
 8008cce:	687b      	ldr	r3, [r7, #4]
 8008cd0:	2b00      	cmp	r3, #0
 8008cd2:	d00b      	beq.n	8008cec <xQueueReceiveFromISR+0xe4>
 8008cd4:	687b      	ldr	r3, [r7, #4]
 8008cd6:	2201      	movs	r2, #1
 8008cd8:	601a      	str	r2, [r3, #0]
 8008cda:	e007      	b.n	8008cec <xQueueReceiveFromISR+0xe4>
 8008cdc:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8008ce0:	3301      	adds	r3, #1
 8008ce2:	b2db      	uxtb	r3, r3
 8008ce4:	b25a      	sxtb	r2, r3
 8008ce6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008ce8:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8008cec:	2301      	movs	r3, #1
 8008cee:	637b      	str	r3, [r7, #52]	@ 0x34
 8008cf0:	e001      	b.n	8008cf6 <xQueueReceiveFromISR+0xee>
 8008cf2:	2300      	movs	r3, #0
 8008cf4:	637b      	str	r3, [r7, #52]	@ 0x34
 8008cf6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008cf8:	613b      	str	r3, [r7, #16]
 8008cfa:	693b      	ldr	r3, [r7, #16]
 8008cfc:	f383 8811 	msr	BASEPRI, r3
 8008d00:	bf00      	nop
 8008d02:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8008d04:	4618      	mov	r0, r3
 8008d06:	3738      	adds	r7, #56	@ 0x38
 8008d08:	46bd      	mov	sp, r7
 8008d0a:	bd80      	pop	{r7, pc}

08008d0c <prvCopyDataToQueue>:
 8008d0c:	b580      	push	{r7, lr}
 8008d0e:	b086      	sub	sp, #24
 8008d10:	af00      	add	r7, sp, #0
 8008d12:	60f8      	str	r0, [r7, #12]
 8008d14:	60b9      	str	r1, [r7, #8]
 8008d16:	607a      	str	r2, [r7, #4]
 8008d18:	2300      	movs	r3, #0
 8008d1a:	617b      	str	r3, [r7, #20]
 8008d1c:	68fb      	ldr	r3, [r7, #12]
 8008d1e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8008d20:	613b      	str	r3, [r7, #16]
 8008d22:	68fb      	ldr	r3, [r7, #12]
 8008d24:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8008d26:	2b00      	cmp	r3, #0
 8008d28:	d10d      	bne.n	8008d46 <prvCopyDataToQueue+0x3a>
 8008d2a:	68fb      	ldr	r3, [r7, #12]
 8008d2c:	681b      	ldr	r3, [r3, #0]
 8008d2e:	2b00      	cmp	r3, #0
 8008d30:	d14d      	bne.n	8008dce <prvCopyDataToQueue+0xc2>
 8008d32:	68fb      	ldr	r3, [r7, #12]
 8008d34:	689b      	ldr	r3, [r3, #8]
 8008d36:	4618      	mov	r0, r3
 8008d38:	f000 ffcc 	bl	8009cd4 <xTaskPriorityDisinherit>
 8008d3c:	6178      	str	r0, [r7, #20]
 8008d3e:	68fb      	ldr	r3, [r7, #12]
 8008d40:	2200      	movs	r2, #0
 8008d42:	609a      	str	r2, [r3, #8]
 8008d44:	e043      	b.n	8008dce <prvCopyDataToQueue+0xc2>
 8008d46:	687b      	ldr	r3, [r7, #4]
 8008d48:	2b00      	cmp	r3, #0
 8008d4a:	d119      	bne.n	8008d80 <prvCopyDataToQueue+0x74>
 8008d4c:	68fb      	ldr	r3, [r7, #12]
 8008d4e:	6858      	ldr	r0, [r3, #4]
 8008d50:	68fb      	ldr	r3, [r7, #12]
 8008d52:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8008d54:	461a      	mov	r2, r3
 8008d56:	68b9      	ldr	r1, [r7, #8]
 8008d58:	f002 feaf 	bl	800baba <memcpy>
 8008d5c:	68fb      	ldr	r3, [r7, #12]
 8008d5e:	685a      	ldr	r2, [r3, #4]
 8008d60:	68fb      	ldr	r3, [r7, #12]
 8008d62:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8008d64:	441a      	add	r2, r3
 8008d66:	68fb      	ldr	r3, [r7, #12]
 8008d68:	605a      	str	r2, [r3, #4]
 8008d6a:	68fb      	ldr	r3, [r7, #12]
 8008d6c:	685a      	ldr	r2, [r3, #4]
 8008d6e:	68fb      	ldr	r3, [r7, #12]
 8008d70:	689b      	ldr	r3, [r3, #8]
 8008d72:	429a      	cmp	r2, r3
 8008d74:	d32b      	bcc.n	8008dce <prvCopyDataToQueue+0xc2>
 8008d76:	68fb      	ldr	r3, [r7, #12]
 8008d78:	681a      	ldr	r2, [r3, #0]
 8008d7a:	68fb      	ldr	r3, [r7, #12]
 8008d7c:	605a      	str	r2, [r3, #4]
 8008d7e:	e026      	b.n	8008dce <prvCopyDataToQueue+0xc2>
 8008d80:	68fb      	ldr	r3, [r7, #12]
 8008d82:	68d8      	ldr	r0, [r3, #12]
 8008d84:	68fb      	ldr	r3, [r7, #12]
 8008d86:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8008d88:	461a      	mov	r2, r3
 8008d8a:	68b9      	ldr	r1, [r7, #8]
 8008d8c:	f002 fe95 	bl	800baba <memcpy>
 8008d90:	68fb      	ldr	r3, [r7, #12]
 8008d92:	68da      	ldr	r2, [r3, #12]
 8008d94:	68fb      	ldr	r3, [r7, #12]
 8008d96:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8008d98:	425b      	negs	r3, r3
 8008d9a:	441a      	add	r2, r3
 8008d9c:	68fb      	ldr	r3, [r7, #12]
 8008d9e:	60da      	str	r2, [r3, #12]
 8008da0:	68fb      	ldr	r3, [r7, #12]
 8008da2:	68da      	ldr	r2, [r3, #12]
 8008da4:	68fb      	ldr	r3, [r7, #12]
 8008da6:	681b      	ldr	r3, [r3, #0]
 8008da8:	429a      	cmp	r2, r3
 8008daa:	d207      	bcs.n	8008dbc <prvCopyDataToQueue+0xb0>
 8008dac:	68fb      	ldr	r3, [r7, #12]
 8008dae:	689a      	ldr	r2, [r3, #8]
 8008db0:	68fb      	ldr	r3, [r7, #12]
 8008db2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8008db4:	425b      	negs	r3, r3
 8008db6:	441a      	add	r2, r3
 8008db8:	68fb      	ldr	r3, [r7, #12]
 8008dba:	60da      	str	r2, [r3, #12]
 8008dbc:	687b      	ldr	r3, [r7, #4]
 8008dbe:	2b02      	cmp	r3, #2
 8008dc0:	d105      	bne.n	8008dce <prvCopyDataToQueue+0xc2>
 8008dc2:	693b      	ldr	r3, [r7, #16]
 8008dc4:	2b00      	cmp	r3, #0
 8008dc6:	d002      	beq.n	8008dce <prvCopyDataToQueue+0xc2>
 8008dc8:	693b      	ldr	r3, [r7, #16]
 8008dca:	3b01      	subs	r3, #1
 8008dcc:	613b      	str	r3, [r7, #16]
 8008dce:	693b      	ldr	r3, [r7, #16]
 8008dd0:	1c5a      	adds	r2, r3, #1
 8008dd2:	68fb      	ldr	r3, [r7, #12]
 8008dd4:	639a      	str	r2, [r3, #56]	@ 0x38
 8008dd6:	697b      	ldr	r3, [r7, #20]
 8008dd8:	4618      	mov	r0, r3
 8008dda:	3718      	adds	r7, #24
 8008ddc:	46bd      	mov	sp, r7
 8008dde:	bd80      	pop	{r7, pc}

08008de0 <prvCopyDataFromQueue>:
 8008de0:	b580      	push	{r7, lr}
 8008de2:	b082      	sub	sp, #8
 8008de4:	af00      	add	r7, sp, #0
 8008de6:	6078      	str	r0, [r7, #4]
 8008de8:	6039      	str	r1, [r7, #0]
 8008dea:	687b      	ldr	r3, [r7, #4]
 8008dec:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8008dee:	2b00      	cmp	r3, #0
 8008df0:	d018      	beq.n	8008e24 <prvCopyDataFromQueue+0x44>
 8008df2:	687b      	ldr	r3, [r7, #4]
 8008df4:	68da      	ldr	r2, [r3, #12]
 8008df6:	687b      	ldr	r3, [r7, #4]
 8008df8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8008dfa:	441a      	add	r2, r3
 8008dfc:	687b      	ldr	r3, [r7, #4]
 8008dfe:	60da      	str	r2, [r3, #12]
 8008e00:	687b      	ldr	r3, [r7, #4]
 8008e02:	68da      	ldr	r2, [r3, #12]
 8008e04:	687b      	ldr	r3, [r7, #4]
 8008e06:	689b      	ldr	r3, [r3, #8]
 8008e08:	429a      	cmp	r2, r3
 8008e0a:	d303      	bcc.n	8008e14 <prvCopyDataFromQueue+0x34>
 8008e0c:	687b      	ldr	r3, [r7, #4]
 8008e0e:	681a      	ldr	r2, [r3, #0]
 8008e10:	687b      	ldr	r3, [r7, #4]
 8008e12:	60da      	str	r2, [r3, #12]
 8008e14:	687b      	ldr	r3, [r7, #4]
 8008e16:	68d9      	ldr	r1, [r3, #12]
 8008e18:	687b      	ldr	r3, [r7, #4]
 8008e1a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8008e1c:	461a      	mov	r2, r3
 8008e1e:	6838      	ldr	r0, [r7, #0]
 8008e20:	f002 fe4b 	bl	800baba <memcpy>
 8008e24:	bf00      	nop
 8008e26:	3708      	adds	r7, #8
 8008e28:	46bd      	mov	sp, r7
 8008e2a:	bd80      	pop	{r7, pc}

08008e2c <prvUnlockQueue>:
 8008e2c:	b580      	push	{r7, lr}
 8008e2e:	b084      	sub	sp, #16
 8008e30:	af00      	add	r7, sp, #0
 8008e32:	6078      	str	r0, [r7, #4]
 8008e34:	f001 fca0 	bl	800a778 <vPortEnterCritical>
 8008e38:	687b      	ldr	r3, [r7, #4]
 8008e3a:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8008e3e:	73fb      	strb	r3, [r7, #15]
 8008e40:	e011      	b.n	8008e66 <prvUnlockQueue+0x3a>
 8008e42:	687b      	ldr	r3, [r7, #4]
 8008e44:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8008e46:	2b00      	cmp	r3, #0
 8008e48:	d012      	beq.n	8008e70 <prvUnlockQueue+0x44>
 8008e4a:	687b      	ldr	r3, [r7, #4]
 8008e4c:	3324      	adds	r3, #36	@ 0x24
 8008e4e:	4618      	mov	r0, r3
 8008e50:	f000 fd5c 	bl	800990c <xTaskRemoveFromEventList>
 8008e54:	4603      	mov	r3, r0
 8008e56:	2b00      	cmp	r3, #0
 8008e58:	d001      	beq.n	8008e5e <prvUnlockQueue+0x32>
 8008e5a:	f000 fe35 	bl	8009ac8 <vTaskMissedYield>
 8008e5e:	7bfb      	ldrb	r3, [r7, #15]
 8008e60:	3b01      	subs	r3, #1
 8008e62:	b2db      	uxtb	r3, r3
 8008e64:	73fb      	strb	r3, [r7, #15]
 8008e66:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8008e6a:	2b00      	cmp	r3, #0
 8008e6c:	dce9      	bgt.n	8008e42 <prvUnlockQueue+0x16>
 8008e6e:	e000      	b.n	8008e72 <prvUnlockQueue+0x46>
 8008e70:	bf00      	nop
 8008e72:	687b      	ldr	r3, [r7, #4]
 8008e74:	22ff      	movs	r2, #255	@ 0xff
 8008e76:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8008e7a:	f001 fcaf 	bl	800a7dc <vPortExitCritical>
 8008e7e:	f001 fc7b 	bl	800a778 <vPortEnterCritical>
 8008e82:	687b      	ldr	r3, [r7, #4]
 8008e84:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8008e88:	73bb      	strb	r3, [r7, #14]
 8008e8a:	e011      	b.n	8008eb0 <prvUnlockQueue+0x84>
 8008e8c:	687b      	ldr	r3, [r7, #4]
 8008e8e:	691b      	ldr	r3, [r3, #16]
 8008e90:	2b00      	cmp	r3, #0
 8008e92:	d012      	beq.n	8008eba <prvUnlockQueue+0x8e>
 8008e94:	687b      	ldr	r3, [r7, #4]
 8008e96:	3310      	adds	r3, #16
 8008e98:	4618      	mov	r0, r3
 8008e9a:	f000 fd37 	bl	800990c <xTaskRemoveFromEventList>
 8008e9e:	4603      	mov	r3, r0
 8008ea0:	2b00      	cmp	r3, #0
 8008ea2:	d001      	beq.n	8008ea8 <prvUnlockQueue+0x7c>
 8008ea4:	f000 fe10 	bl	8009ac8 <vTaskMissedYield>
 8008ea8:	7bbb      	ldrb	r3, [r7, #14]
 8008eaa:	3b01      	subs	r3, #1
 8008eac:	b2db      	uxtb	r3, r3
 8008eae:	73bb      	strb	r3, [r7, #14]
 8008eb0:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8008eb4:	2b00      	cmp	r3, #0
 8008eb6:	dce9      	bgt.n	8008e8c <prvUnlockQueue+0x60>
 8008eb8:	e000      	b.n	8008ebc <prvUnlockQueue+0x90>
 8008eba:	bf00      	nop
 8008ebc:	687b      	ldr	r3, [r7, #4]
 8008ebe:	22ff      	movs	r2, #255	@ 0xff
 8008ec0:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8008ec4:	f001 fc8a 	bl	800a7dc <vPortExitCritical>
 8008ec8:	bf00      	nop
 8008eca:	3710      	adds	r7, #16
 8008ecc:	46bd      	mov	sp, r7
 8008ece:	bd80      	pop	{r7, pc}

08008ed0 <prvIsQueueEmpty>:
 8008ed0:	b580      	push	{r7, lr}
 8008ed2:	b084      	sub	sp, #16
 8008ed4:	af00      	add	r7, sp, #0
 8008ed6:	6078      	str	r0, [r7, #4]
 8008ed8:	f001 fc4e 	bl	800a778 <vPortEnterCritical>
 8008edc:	687b      	ldr	r3, [r7, #4]
 8008ede:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8008ee0:	2b00      	cmp	r3, #0
 8008ee2:	d102      	bne.n	8008eea <prvIsQueueEmpty+0x1a>
 8008ee4:	2301      	movs	r3, #1
 8008ee6:	60fb      	str	r3, [r7, #12]
 8008ee8:	e001      	b.n	8008eee <prvIsQueueEmpty+0x1e>
 8008eea:	2300      	movs	r3, #0
 8008eec:	60fb      	str	r3, [r7, #12]
 8008eee:	f001 fc75 	bl	800a7dc <vPortExitCritical>
 8008ef2:	68fb      	ldr	r3, [r7, #12]
 8008ef4:	4618      	mov	r0, r3
 8008ef6:	3710      	adds	r7, #16
 8008ef8:	46bd      	mov	sp, r7
 8008efa:	bd80      	pop	{r7, pc}

08008efc <prvIsQueueFull>:
 8008efc:	b580      	push	{r7, lr}
 8008efe:	b084      	sub	sp, #16
 8008f00:	af00      	add	r7, sp, #0
 8008f02:	6078      	str	r0, [r7, #4]
 8008f04:	f001 fc38 	bl	800a778 <vPortEnterCritical>
 8008f08:	687b      	ldr	r3, [r7, #4]
 8008f0a:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8008f0c:	687b      	ldr	r3, [r7, #4]
 8008f0e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8008f10:	429a      	cmp	r2, r3
 8008f12:	d102      	bne.n	8008f1a <prvIsQueueFull+0x1e>
 8008f14:	2301      	movs	r3, #1
 8008f16:	60fb      	str	r3, [r7, #12]
 8008f18:	e001      	b.n	8008f1e <prvIsQueueFull+0x22>
 8008f1a:	2300      	movs	r3, #0
 8008f1c:	60fb      	str	r3, [r7, #12]
 8008f1e:	f001 fc5d 	bl	800a7dc <vPortExitCritical>
 8008f22:	68fb      	ldr	r3, [r7, #12]
 8008f24:	4618      	mov	r0, r3
 8008f26:	3710      	adds	r7, #16
 8008f28:	46bd      	mov	sp, r7
 8008f2a:	bd80      	pop	{r7, pc}

08008f2c <vQueueAddToRegistry>:
 8008f2c:	b480      	push	{r7}
 8008f2e:	b085      	sub	sp, #20
 8008f30:	af00      	add	r7, sp, #0
 8008f32:	6078      	str	r0, [r7, #4]
 8008f34:	6039      	str	r1, [r7, #0]
 8008f36:	2300      	movs	r3, #0
 8008f38:	60fb      	str	r3, [r7, #12]
 8008f3a:	e014      	b.n	8008f66 <vQueueAddToRegistry+0x3a>
 8008f3c:	4a0f      	ldr	r2, [pc, #60]	@ (8008f7c <vQueueAddToRegistry+0x50>)
 8008f3e:	68fb      	ldr	r3, [r7, #12]
 8008f40:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 8008f44:	2b00      	cmp	r3, #0
 8008f46:	d10b      	bne.n	8008f60 <vQueueAddToRegistry+0x34>
 8008f48:	490c      	ldr	r1, [pc, #48]	@ (8008f7c <vQueueAddToRegistry+0x50>)
 8008f4a:	68fb      	ldr	r3, [r7, #12]
 8008f4c:	683a      	ldr	r2, [r7, #0]
 8008f4e:	f841 2033 	str.w	r2, [r1, r3, lsl #3]
 8008f52:	4a0a      	ldr	r2, [pc, #40]	@ (8008f7c <vQueueAddToRegistry+0x50>)
 8008f54:	68fb      	ldr	r3, [r7, #12]
 8008f56:	00db      	lsls	r3, r3, #3
 8008f58:	4413      	add	r3, r2
 8008f5a:	687a      	ldr	r2, [r7, #4]
 8008f5c:	605a      	str	r2, [r3, #4]
 8008f5e:	e006      	b.n	8008f6e <vQueueAddToRegistry+0x42>
 8008f60:	68fb      	ldr	r3, [r7, #12]
 8008f62:	3301      	adds	r3, #1
 8008f64:	60fb      	str	r3, [r7, #12]
 8008f66:	68fb      	ldr	r3, [r7, #12]
 8008f68:	2b07      	cmp	r3, #7
 8008f6a:	d9e7      	bls.n	8008f3c <vQueueAddToRegistry+0x10>
 8008f6c:	bf00      	nop
 8008f6e:	bf00      	nop
 8008f70:	3714      	adds	r7, #20
 8008f72:	46bd      	mov	sp, r7
 8008f74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f78:	4770      	bx	lr
 8008f7a:	bf00      	nop
 8008f7c:	20000c30 	.word	0x20000c30

08008f80 <vQueueWaitForMessageRestricted>:
 8008f80:	b580      	push	{r7, lr}
 8008f82:	b086      	sub	sp, #24
 8008f84:	af00      	add	r7, sp, #0
 8008f86:	60f8      	str	r0, [r7, #12]
 8008f88:	60b9      	str	r1, [r7, #8]
 8008f8a:	607a      	str	r2, [r7, #4]
 8008f8c:	68fb      	ldr	r3, [r7, #12]
 8008f8e:	617b      	str	r3, [r7, #20]
 8008f90:	f001 fbf2 	bl	800a778 <vPortEnterCritical>
 8008f94:	697b      	ldr	r3, [r7, #20]
 8008f96:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8008f9a:	b25b      	sxtb	r3, r3
 8008f9c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008fa0:	d103      	bne.n	8008faa <vQueueWaitForMessageRestricted+0x2a>
 8008fa2:	697b      	ldr	r3, [r7, #20]
 8008fa4:	2200      	movs	r2, #0
 8008fa6:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8008faa:	697b      	ldr	r3, [r7, #20]
 8008fac:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8008fb0:	b25b      	sxtb	r3, r3
 8008fb2:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008fb6:	d103      	bne.n	8008fc0 <vQueueWaitForMessageRestricted+0x40>
 8008fb8:	697b      	ldr	r3, [r7, #20]
 8008fba:	2200      	movs	r2, #0
 8008fbc:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8008fc0:	f001 fc0c 	bl	800a7dc <vPortExitCritical>
 8008fc4:	697b      	ldr	r3, [r7, #20]
 8008fc6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8008fc8:	2b00      	cmp	r3, #0
 8008fca:	d106      	bne.n	8008fda <vQueueWaitForMessageRestricted+0x5a>
 8008fcc:	697b      	ldr	r3, [r7, #20]
 8008fce:	3324      	adds	r3, #36	@ 0x24
 8008fd0:	687a      	ldr	r2, [r7, #4]
 8008fd2:	68b9      	ldr	r1, [r7, #8]
 8008fd4:	4618      	mov	r0, r3
 8008fd6:	f000 fc6d 	bl	80098b4 <vTaskPlaceOnEventListRestricted>
 8008fda:	6978      	ldr	r0, [r7, #20]
 8008fdc:	f7ff ff26 	bl	8008e2c <prvUnlockQueue>
 8008fe0:	bf00      	nop
 8008fe2:	3718      	adds	r7, #24
 8008fe4:	46bd      	mov	sp, r7
 8008fe6:	bd80      	pop	{r7, pc}

08008fe8 <xTaskCreateStatic>:
 8008fe8:	b580      	push	{r7, lr}
 8008fea:	b08e      	sub	sp, #56	@ 0x38
 8008fec:	af04      	add	r7, sp, #16
 8008fee:	60f8      	str	r0, [r7, #12]
 8008ff0:	60b9      	str	r1, [r7, #8]
 8008ff2:	607a      	str	r2, [r7, #4]
 8008ff4:	603b      	str	r3, [r7, #0]
 8008ff6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8008ff8:	2b00      	cmp	r3, #0
 8008ffa:	d10b      	bne.n	8009014 <xTaskCreateStatic+0x2c>
 8008ffc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009000:	f383 8811 	msr	BASEPRI, r3
 8009004:	f3bf 8f6f 	isb	sy
 8009008:	f3bf 8f4f 	dsb	sy
 800900c:	623b      	str	r3, [r7, #32]
 800900e:	bf00      	nop
 8009010:	bf00      	nop
 8009012:	e7fd      	b.n	8009010 <xTaskCreateStatic+0x28>
 8009014:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009016:	2b00      	cmp	r3, #0
 8009018:	d10b      	bne.n	8009032 <xTaskCreateStatic+0x4a>
 800901a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800901e:	f383 8811 	msr	BASEPRI, r3
 8009022:	f3bf 8f6f 	isb	sy
 8009026:	f3bf 8f4f 	dsb	sy
 800902a:	61fb      	str	r3, [r7, #28]
 800902c:	bf00      	nop
 800902e:	bf00      	nop
 8009030:	e7fd      	b.n	800902e <xTaskCreateStatic+0x46>
 8009032:	23a8      	movs	r3, #168	@ 0xa8
 8009034:	613b      	str	r3, [r7, #16]
 8009036:	693b      	ldr	r3, [r7, #16]
 8009038:	2ba8      	cmp	r3, #168	@ 0xa8
 800903a:	d00b      	beq.n	8009054 <xTaskCreateStatic+0x6c>
 800903c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009040:	f383 8811 	msr	BASEPRI, r3
 8009044:	f3bf 8f6f 	isb	sy
 8009048:	f3bf 8f4f 	dsb	sy
 800904c:	61bb      	str	r3, [r7, #24]
 800904e:	bf00      	nop
 8009050:	bf00      	nop
 8009052:	e7fd      	b.n	8009050 <xTaskCreateStatic+0x68>
 8009054:	693b      	ldr	r3, [r7, #16]
 8009056:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009058:	2b00      	cmp	r3, #0
 800905a:	d01e      	beq.n	800909a <xTaskCreateStatic+0xb2>
 800905c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800905e:	2b00      	cmp	r3, #0
 8009060:	d01b      	beq.n	800909a <xTaskCreateStatic+0xb2>
 8009062:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009064:	627b      	str	r3, [r7, #36]	@ 0x24
 8009066:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009068:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 800906a:	631a      	str	r2, [r3, #48]	@ 0x30
 800906c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800906e:	2202      	movs	r2, #2
 8009070:	f883 20a5 	strb.w	r2, [r3, #165]	@ 0xa5
 8009074:	2300      	movs	r3, #0
 8009076:	9303      	str	r3, [sp, #12]
 8009078:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800907a:	9302      	str	r3, [sp, #8]
 800907c:	f107 0314 	add.w	r3, r7, #20
 8009080:	9301      	str	r3, [sp, #4]
 8009082:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009084:	9300      	str	r3, [sp, #0]
 8009086:	683b      	ldr	r3, [r7, #0]
 8009088:	687a      	ldr	r2, [r7, #4]
 800908a:	68b9      	ldr	r1, [r7, #8]
 800908c:	68f8      	ldr	r0, [r7, #12]
 800908e:	f000 f851 	bl	8009134 <prvInitialiseNewTask>
 8009092:	6a78      	ldr	r0, [r7, #36]	@ 0x24
 8009094:	f000 f8f6 	bl	8009284 <prvAddNewTaskToReadyList>
 8009098:	e001      	b.n	800909e <xTaskCreateStatic+0xb6>
 800909a:	2300      	movs	r3, #0
 800909c:	617b      	str	r3, [r7, #20]
 800909e:	697b      	ldr	r3, [r7, #20]
 80090a0:	4618      	mov	r0, r3
 80090a2:	3728      	adds	r7, #40	@ 0x28
 80090a4:	46bd      	mov	sp, r7
 80090a6:	bd80      	pop	{r7, pc}

080090a8 <xTaskCreate>:
 80090a8:	b580      	push	{r7, lr}
 80090aa:	b08c      	sub	sp, #48	@ 0x30
 80090ac:	af04      	add	r7, sp, #16
 80090ae:	60f8      	str	r0, [r7, #12]
 80090b0:	60b9      	str	r1, [r7, #8]
 80090b2:	603b      	str	r3, [r7, #0]
 80090b4:	4613      	mov	r3, r2
 80090b6:	80fb      	strh	r3, [r7, #6]
 80090b8:	88fb      	ldrh	r3, [r7, #6]
 80090ba:	009b      	lsls	r3, r3, #2
 80090bc:	4618      	mov	r0, r3
 80090be:	f001 fc7d 	bl	800a9bc <pvPortMalloc>
 80090c2:	6178      	str	r0, [r7, #20]
 80090c4:	697b      	ldr	r3, [r7, #20]
 80090c6:	2b00      	cmp	r3, #0
 80090c8:	d00e      	beq.n	80090e8 <xTaskCreate+0x40>
 80090ca:	20a8      	movs	r0, #168	@ 0xa8
 80090cc:	f001 fc76 	bl	800a9bc <pvPortMalloc>
 80090d0:	61f8      	str	r0, [r7, #28]
 80090d2:	69fb      	ldr	r3, [r7, #28]
 80090d4:	2b00      	cmp	r3, #0
 80090d6:	d003      	beq.n	80090e0 <xTaskCreate+0x38>
 80090d8:	69fb      	ldr	r3, [r7, #28]
 80090da:	697a      	ldr	r2, [r7, #20]
 80090dc:	631a      	str	r2, [r3, #48]	@ 0x30
 80090de:	e005      	b.n	80090ec <xTaskCreate+0x44>
 80090e0:	6978      	ldr	r0, [r7, #20]
 80090e2:	f001 fd39 	bl	800ab58 <vPortFree>
 80090e6:	e001      	b.n	80090ec <xTaskCreate+0x44>
 80090e8:	2300      	movs	r3, #0
 80090ea:	61fb      	str	r3, [r7, #28]
 80090ec:	69fb      	ldr	r3, [r7, #28]
 80090ee:	2b00      	cmp	r3, #0
 80090f0:	d017      	beq.n	8009122 <xTaskCreate+0x7a>
 80090f2:	69fb      	ldr	r3, [r7, #28]
 80090f4:	2200      	movs	r2, #0
 80090f6:	f883 20a5 	strb.w	r2, [r3, #165]	@ 0xa5
 80090fa:	88fa      	ldrh	r2, [r7, #6]
 80090fc:	2300      	movs	r3, #0
 80090fe:	9303      	str	r3, [sp, #12]
 8009100:	69fb      	ldr	r3, [r7, #28]
 8009102:	9302      	str	r3, [sp, #8]
 8009104:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8009106:	9301      	str	r3, [sp, #4]
 8009108:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800910a:	9300      	str	r3, [sp, #0]
 800910c:	683b      	ldr	r3, [r7, #0]
 800910e:	68b9      	ldr	r1, [r7, #8]
 8009110:	68f8      	ldr	r0, [r7, #12]
 8009112:	f000 f80f 	bl	8009134 <prvInitialiseNewTask>
 8009116:	69f8      	ldr	r0, [r7, #28]
 8009118:	f000 f8b4 	bl	8009284 <prvAddNewTaskToReadyList>
 800911c:	2301      	movs	r3, #1
 800911e:	61bb      	str	r3, [r7, #24]
 8009120:	e002      	b.n	8009128 <xTaskCreate+0x80>
 8009122:	f04f 33ff 	mov.w	r3, #4294967295
 8009126:	61bb      	str	r3, [r7, #24]
 8009128:	69bb      	ldr	r3, [r7, #24]
 800912a:	4618      	mov	r0, r3
 800912c:	3720      	adds	r7, #32
 800912e:	46bd      	mov	sp, r7
 8009130:	bd80      	pop	{r7, pc}
	...

08009134 <prvInitialiseNewTask>:
 8009134:	b580      	push	{r7, lr}
 8009136:	b088      	sub	sp, #32
 8009138:	af00      	add	r7, sp, #0
 800913a:	60f8      	str	r0, [r7, #12]
 800913c:	60b9      	str	r1, [r7, #8]
 800913e:	607a      	str	r2, [r7, #4]
 8009140:	603b      	str	r3, [r7, #0]
 8009142:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009144:	6b18      	ldr	r0, [r3, #48]	@ 0x30
 8009146:	687b      	ldr	r3, [r7, #4]
 8009148:	009b      	lsls	r3, r3, #2
 800914a:	461a      	mov	r2, r3
 800914c:	21a5      	movs	r1, #165	@ 0xa5
 800914e:	f002 fbd6 	bl	800b8fe <memset>
 8009152:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009154:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8009156:	687b      	ldr	r3, [r7, #4]
 8009158:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 800915c:	3b01      	subs	r3, #1
 800915e:	009b      	lsls	r3, r3, #2
 8009160:	4413      	add	r3, r2
 8009162:	61bb      	str	r3, [r7, #24]
 8009164:	69bb      	ldr	r3, [r7, #24]
 8009166:	f023 0307 	bic.w	r3, r3, #7
 800916a:	61bb      	str	r3, [r7, #24]
 800916c:	69bb      	ldr	r3, [r7, #24]
 800916e:	f003 0307 	and.w	r3, r3, #7
 8009172:	2b00      	cmp	r3, #0
 8009174:	d00b      	beq.n	800918e <prvInitialiseNewTask+0x5a>
 8009176:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800917a:	f383 8811 	msr	BASEPRI, r3
 800917e:	f3bf 8f6f 	isb	sy
 8009182:	f3bf 8f4f 	dsb	sy
 8009186:	617b      	str	r3, [r7, #20]
 8009188:	bf00      	nop
 800918a:	bf00      	nop
 800918c:	e7fd      	b.n	800918a <prvInitialiseNewTask+0x56>
 800918e:	68bb      	ldr	r3, [r7, #8]
 8009190:	2b00      	cmp	r3, #0
 8009192:	d01f      	beq.n	80091d4 <prvInitialiseNewTask+0xa0>
 8009194:	2300      	movs	r3, #0
 8009196:	61fb      	str	r3, [r7, #28]
 8009198:	e012      	b.n	80091c0 <prvInitialiseNewTask+0x8c>
 800919a:	68ba      	ldr	r2, [r7, #8]
 800919c:	69fb      	ldr	r3, [r7, #28]
 800919e:	4413      	add	r3, r2
 80091a0:	7819      	ldrb	r1, [r3, #0]
 80091a2:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80091a4:	69fb      	ldr	r3, [r7, #28]
 80091a6:	4413      	add	r3, r2
 80091a8:	3334      	adds	r3, #52	@ 0x34
 80091aa:	460a      	mov	r2, r1
 80091ac:	701a      	strb	r2, [r3, #0]
 80091ae:	68ba      	ldr	r2, [r7, #8]
 80091b0:	69fb      	ldr	r3, [r7, #28]
 80091b2:	4413      	add	r3, r2
 80091b4:	781b      	ldrb	r3, [r3, #0]
 80091b6:	2b00      	cmp	r3, #0
 80091b8:	d006      	beq.n	80091c8 <prvInitialiseNewTask+0x94>
 80091ba:	69fb      	ldr	r3, [r7, #28]
 80091bc:	3301      	adds	r3, #1
 80091be:	61fb      	str	r3, [r7, #28]
 80091c0:	69fb      	ldr	r3, [r7, #28]
 80091c2:	2b0f      	cmp	r3, #15
 80091c4:	d9e9      	bls.n	800919a <prvInitialiseNewTask+0x66>
 80091c6:	e000      	b.n	80091ca <prvInitialiseNewTask+0x96>
 80091c8:	bf00      	nop
 80091ca:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80091cc:	2200      	movs	r2, #0
 80091ce:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80091d2:	e003      	b.n	80091dc <prvInitialiseNewTask+0xa8>
 80091d4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80091d6:	2200      	movs	r2, #0
 80091d8:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80091dc:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80091de:	2b37      	cmp	r3, #55	@ 0x37
 80091e0:	d901      	bls.n	80091e6 <prvInitialiseNewTask+0xb2>
 80091e2:	2337      	movs	r3, #55	@ 0x37
 80091e4:	62bb      	str	r3, [r7, #40]	@ 0x28
 80091e6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80091e8:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 80091ea:	62da      	str	r2, [r3, #44]	@ 0x2c
 80091ec:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80091ee:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 80091f0:	64da      	str	r2, [r3, #76]	@ 0x4c
 80091f2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80091f4:	2200      	movs	r2, #0
 80091f6:	651a      	str	r2, [r3, #80]	@ 0x50
 80091f8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80091fa:	3304      	adds	r3, #4
 80091fc:	4618      	mov	r0, r3
 80091fe:	f7ff f8a7 	bl	8008350 <vListInitialiseItem>
 8009202:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009204:	3318      	adds	r3, #24
 8009206:	4618      	mov	r0, r3
 8009208:	f7ff f8a2 	bl	8008350 <vListInitialiseItem>
 800920c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800920e:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8009210:	611a      	str	r2, [r3, #16]
 8009212:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009214:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 8009218:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800921a:	619a      	str	r2, [r3, #24]
 800921c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800921e:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8009220:	625a      	str	r2, [r3, #36]	@ 0x24
 8009222:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009224:	2200      	movs	r2, #0
 8009226:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
 800922a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800922c:	2200      	movs	r2, #0
 800922e:	f883 20a4 	strb.w	r2, [r3, #164]	@ 0xa4
 8009232:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009234:	3354      	adds	r3, #84	@ 0x54
 8009236:	224c      	movs	r2, #76	@ 0x4c
 8009238:	2100      	movs	r1, #0
 800923a:	4618      	mov	r0, r3
 800923c:	f002 fb5f 	bl	800b8fe <memset>
 8009240:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009242:	4a0d      	ldr	r2, [pc, #52]	@ (8009278 <prvInitialiseNewTask+0x144>)
 8009244:	659a      	str	r2, [r3, #88]	@ 0x58
 8009246:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009248:	4a0c      	ldr	r2, [pc, #48]	@ (800927c <prvInitialiseNewTask+0x148>)
 800924a:	65da      	str	r2, [r3, #92]	@ 0x5c
 800924c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800924e:	4a0c      	ldr	r2, [pc, #48]	@ (8009280 <prvInitialiseNewTask+0x14c>)
 8009250:	661a      	str	r2, [r3, #96]	@ 0x60
 8009252:	683a      	ldr	r2, [r7, #0]
 8009254:	68f9      	ldr	r1, [r7, #12]
 8009256:	69b8      	ldr	r0, [r7, #24]
 8009258:	f001 f95a 	bl	800a510 <pxPortInitialiseStack>
 800925c:	4602      	mov	r2, r0
 800925e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009260:	601a      	str	r2, [r3, #0]
 8009262:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8009264:	2b00      	cmp	r3, #0
 8009266:	d002      	beq.n	800926e <prvInitialiseNewTask+0x13a>
 8009268:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800926a:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800926c:	601a      	str	r2, [r3, #0]
 800926e:	bf00      	nop
 8009270:	3720      	adds	r7, #32
 8009272:	46bd      	mov	sp, r7
 8009274:	bd80      	pop	{r7, pc}
 8009276:	bf00      	nop
 8009278:	20004ec4 	.word	0x20004ec4
 800927c:	20004f2c 	.word	0x20004f2c
 8009280:	20004f94 	.word	0x20004f94

08009284 <prvAddNewTaskToReadyList>:
 8009284:	b580      	push	{r7, lr}
 8009286:	b082      	sub	sp, #8
 8009288:	af00      	add	r7, sp, #0
 800928a:	6078      	str	r0, [r7, #4]
 800928c:	f001 fa74 	bl	800a778 <vPortEnterCritical>
 8009290:	4b2d      	ldr	r3, [pc, #180]	@ (8009348 <prvAddNewTaskToReadyList+0xc4>)
 8009292:	681b      	ldr	r3, [r3, #0]
 8009294:	3301      	adds	r3, #1
 8009296:	4a2c      	ldr	r2, [pc, #176]	@ (8009348 <prvAddNewTaskToReadyList+0xc4>)
 8009298:	6013      	str	r3, [r2, #0]
 800929a:	4b2c      	ldr	r3, [pc, #176]	@ (800934c <prvAddNewTaskToReadyList+0xc8>)
 800929c:	681b      	ldr	r3, [r3, #0]
 800929e:	2b00      	cmp	r3, #0
 80092a0:	d109      	bne.n	80092b6 <prvAddNewTaskToReadyList+0x32>
 80092a2:	4a2a      	ldr	r2, [pc, #168]	@ (800934c <prvAddNewTaskToReadyList+0xc8>)
 80092a4:	687b      	ldr	r3, [r7, #4]
 80092a6:	6013      	str	r3, [r2, #0]
 80092a8:	4b27      	ldr	r3, [pc, #156]	@ (8009348 <prvAddNewTaskToReadyList+0xc4>)
 80092aa:	681b      	ldr	r3, [r3, #0]
 80092ac:	2b01      	cmp	r3, #1
 80092ae:	d110      	bne.n	80092d2 <prvAddNewTaskToReadyList+0x4e>
 80092b0:	f000 fc2e 	bl	8009b10 <prvInitialiseTaskLists>
 80092b4:	e00d      	b.n	80092d2 <prvAddNewTaskToReadyList+0x4e>
 80092b6:	4b26      	ldr	r3, [pc, #152]	@ (8009350 <prvAddNewTaskToReadyList+0xcc>)
 80092b8:	681b      	ldr	r3, [r3, #0]
 80092ba:	2b00      	cmp	r3, #0
 80092bc:	d109      	bne.n	80092d2 <prvAddNewTaskToReadyList+0x4e>
 80092be:	4b23      	ldr	r3, [pc, #140]	@ (800934c <prvAddNewTaskToReadyList+0xc8>)
 80092c0:	681b      	ldr	r3, [r3, #0]
 80092c2:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80092c4:	687b      	ldr	r3, [r7, #4]
 80092c6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80092c8:	429a      	cmp	r2, r3
 80092ca:	d802      	bhi.n	80092d2 <prvAddNewTaskToReadyList+0x4e>
 80092cc:	4a1f      	ldr	r2, [pc, #124]	@ (800934c <prvAddNewTaskToReadyList+0xc8>)
 80092ce:	687b      	ldr	r3, [r7, #4]
 80092d0:	6013      	str	r3, [r2, #0]
 80092d2:	4b20      	ldr	r3, [pc, #128]	@ (8009354 <prvAddNewTaskToReadyList+0xd0>)
 80092d4:	681b      	ldr	r3, [r3, #0]
 80092d6:	3301      	adds	r3, #1
 80092d8:	4a1e      	ldr	r2, [pc, #120]	@ (8009354 <prvAddNewTaskToReadyList+0xd0>)
 80092da:	6013      	str	r3, [r2, #0]
 80092dc:	4b1d      	ldr	r3, [pc, #116]	@ (8009354 <prvAddNewTaskToReadyList+0xd0>)
 80092de:	681a      	ldr	r2, [r3, #0]
 80092e0:	687b      	ldr	r3, [r7, #4]
 80092e2:	645a      	str	r2, [r3, #68]	@ 0x44
 80092e4:	687b      	ldr	r3, [r7, #4]
 80092e6:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80092e8:	4b1b      	ldr	r3, [pc, #108]	@ (8009358 <prvAddNewTaskToReadyList+0xd4>)
 80092ea:	681b      	ldr	r3, [r3, #0]
 80092ec:	429a      	cmp	r2, r3
 80092ee:	d903      	bls.n	80092f8 <prvAddNewTaskToReadyList+0x74>
 80092f0:	687b      	ldr	r3, [r7, #4]
 80092f2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80092f4:	4a18      	ldr	r2, [pc, #96]	@ (8009358 <prvAddNewTaskToReadyList+0xd4>)
 80092f6:	6013      	str	r3, [r2, #0]
 80092f8:	687b      	ldr	r3, [r7, #4]
 80092fa:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80092fc:	4613      	mov	r3, r2
 80092fe:	009b      	lsls	r3, r3, #2
 8009300:	4413      	add	r3, r2
 8009302:	009b      	lsls	r3, r3, #2
 8009304:	4a15      	ldr	r2, [pc, #84]	@ (800935c <prvAddNewTaskToReadyList+0xd8>)
 8009306:	441a      	add	r2, r3
 8009308:	687b      	ldr	r3, [r7, #4]
 800930a:	3304      	adds	r3, #4
 800930c:	4619      	mov	r1, r3
 800930e:	4610      	mov	r0, r2
 8009310:	f7ff f82b 	bl	800836a <vListInsertEnd>
 8009314:	f001 fa62 	bl	800a7dc <vPortExitCritical>
 8009318:	4b0d      	ldr	r3, [pc, #52]	@ (8009350 <prvAddNewTaskToReadyList+0xcc>)
 800931a:	681b      	ldr	r3, [r3, #0]
 800931c:	2b00      	cmp	r3, #0
 800931e:	d00e      	beq.n	800933e <prvAddNewTaskToReadyList+0xba>
 8009320:	4b0a      	ldr	r3, [pc, #40]	@ (800934c <prvAddNewTaskToReadyList+0xc8>)
 8009322:	681b      	ldr	r3, [r3, #0]
 8009324:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8009326:	687b      	ldr	r3, [r7, #4]
 8009328:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800932a:	429a      	cmp	r2, r3
 800932c:	d207      	bcs.n	800933e <prvAddNewTaskToReadyList+0xba>
 800932e:	4b0c      	ldr	r3, [pc, #48]	@ (8009360 <prvAddNewTaskToReadyList+0xdc>)
 8009330:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009334:	601a      	str	r2, [r3, #0]
 8009336:	f3bf 8f4f 	dsb	sy
 800933a:	f3bf 8f6f 	isb	sy
 800933e:	bf00      	nop
 8009340:	3708      	adds	r7, #8
 8009342:	46bd      	mov	sp, r7
 8009344:	bd80      	pop	{r7, pc}
 8009346:	bf00      	nop
 8009348:	20001144 	.word	0x20001144
 800934c:	20000c70 	.word	0x20000c70
 8009350:	20001150 	.word	0x20001150
 8009354:	20001160 	.word	0x20001160
 8009358:	2000114c 	.word	0x2000114c
 800935c:	20000c74 	.word	0x20000c74
 8009360:	e000ed04 	.word	0xe000ed04

08009364 <vTaskDelay>:
 8009364:	b580      	push	{r7, lr}
 8009366:	b084      	sub	sp, #16
 8009368:	af00      	add	r7, sp, #0
 800936a:	6078      	str	r0, [r7, #4]
 800936c:	2300      	movs	r3, #0
 800936e:	60fb      	str	r3, [r7, #12]
 8009370:	687b      	ldr	r3, [r7, #4]
 8009372:	2b00      	cmp	r3, #0
 8009374:	d018      	beq.n	80093a8 <vTaskDelay+0x44>
 8009376:	4b14      	ldr	r3, [pc, #80]	@ (80093c8 <vTaskDelay+0x64>)
 8009378:	681b      	ldr	r3, [r3, #0]
 800937a:	2b00      	cmp	r3, #0
 800937c:	d00b      	beq.n	8009396 <vTaskDelay+0x32>
 800937e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009382:	f383 8811 	msr	BASEPRI, r3
 8009386:	f3bf 8f6f 	isb	sy
 800938a:	f3bf 8f4f 	dsb	sy
 800938e:	60bb      	str	r3, [r7, #8]
 8009390:	bf00      	nop
 8009392:	bf00      	nop
 8009394:	e7fd      	b.n	8009392 <vTaskDelay+0x2e>
 8009396:	f000 f88b 	bl	80094b0 <vTaskSuspendAll>
 800939a:	2100      	movs	r1, #0
 800939c:	6878      	ldr	r0, [r7, #4]
 800939e:	f000 fd09 	bl	8009db4 <prvAddCurrentTaskToDelayedList>
 80093a2:	f000 f893 	bl	80094cc <xTaskResumeAll>
 80093a6:	60f8      	str	r0, [r7, #12]
 80093a8:	68fb      	ldr	r3, [r7, #12]
 80093aa:	2b00      	cmp	r3, #0
 80093ac:	d107      	bne.n	80093be <vTaskDelay+0x5a>
 80093ae:	4b07      	ldr	r3, [pc, #28]	@ (80093cc <vTaskDelay+0x68>)
 80093b0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80093b4:	601a      	str	r2, [r3, #0]
 80093b6:	f3bf 8f4f 	dsb	sy
 80093ba:	f3bf 8f6f 	isb	sy
 80093be:	bf00      	nop
 80093c0:	3710      	adds	r7, #16
 80093c2:	46bd      	mov	sp, r7
 80093c4:	bd80      	pop	{r7, pc}
 80093c6:	bf00      	nop
 80093c8:	2000116c 	.word	0x2000116c
 80093cc:	e000ed04 	.word	0xe000ed04

080093d0 <vTaskStartScheduler>:
 80093d0:	b580      	push	{r7, lr}
 80093d2:	b08a      	sub	sp, #40	@ 0x28
 80093d4:	af04      	add	r7, sp, #16
 80093d6:	2300      	movs	r3, #0
 80093d8:	60bb      	str	r3, [r7, #8]
 80093da:	2300      	movs	r3, #0
 80093dc:	607b      	str	r3, [r7, #4]
 80093de:	463a      	mov	r2, r7
 80093e0:	1d39      	adds	r1, r7, #4
 80093e2:	f107 0308 	add.w	r3, r7, #8
 80093e6:	4618      	mov	r0, r3
 80093e8:	f7fe ff5e 	bl	80082a8 <vApplicationGetIdleTaskMemory>
 80093ec:	6839      	ldr	r1, [r7, #0]
 80093ee:	687b      	ldr	r3, [r7, #4]
 80093f0:	68ba      	ldr	r2, [r7, #8]
 80093f2:	9202      	str	r2, [sp, #8]
 80093f4:	9301      	str	r3, [sp, #4]
 80093f6:	2300      	movs	r3, #0
 80093f8:	9300      	str	r3, [sp, #0]
 80093fa:	2300      	movs	r3, #0
 80093fc:	460a      	mov	r2, r1
 80093fe:	4924      	ldr	r1, [pc, #144]	@ (8009490 <vTaskStartScheduler+0xc0>)
 8009400:	4824      	ldr	r0, [pc, #144]	@ (8009494 <vTaskStartScheduler+0xc4>)
 8009402:	f7ff fdf1 	bl	8008fe8 <xTaskCreateStatic>
 8009406:	4603      	mov	r3, r0
 8009408:	4a23      	ldr	r2, [pc, #140]	@ (8009498 <vTaskStartScheduler+0xc8>)
 800940a:	6013      	str	r3, [r2, #0]
 800940c:	4b22      	ldr	r3, [pc, #136]	@ (8009498 <vTaskStartScheduler+0xc8>)
 800940e:	681b      	ldr	r3, [r3, #0]
 8009410:	2b00      	cmp	r3, #0
 8009412:	d002      	beq.n	800941a <vTaskStartScheduler+0x4a>
 8009414:	2301      	movs	r3, #1
 8009416:	617b      	str	r3, [r7, #20]
 8009418:	e001      	b.n	800941e <vTaskStartScheduler+0x4e>
 800941a:	2300      	movs	r3, #0
 800941c:	617b      	str	r3, [r7, #20]
 800941e:	697b      	ldr	r3, [r7, #20]
 8009420:	2b01      	cmp	r3, #1
 8009422:	d102      	bne.n	800942a <vTaskStartScheduler+0x5a>
 8009424:	f000 fd1a 	bl	8009e5c <xTimerCreateTimerTask>
 8009428:	6178      	str	r0, [r7, #20]
 800942a:	697b      	ldr	r3, [r7, #20]
 800942c:	2b01      	cmp	r3, #1
 800942e:	d11b      	bne.n	8009468 <vTaskStartScheduler+0x98>
 8009430:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009434:	f383 8811 	msr	BASEPRI, r3
 8009438:	f3bf 8f6f 	isb	sy
 800943c:	f3bf 8f4f 	dsb	sy
 8009440:	613b      	str	r3, [r7, #16]
 8009442:	bf00      	nop
 8009444:	4b15      	ldr	r3, [pc, #84]	@ (800949c <vTaskStartScheduler+0xcc>)
 8009446:	681b      	ldr	r3, [r3, #0]
 8009448:	3354      	adds	r3, #84	@ 0x54
 800944a:	4a15      	ldr	r2, [pc, #84]	@ (80094a0 <vTaskStartScheduler+0xd0>)
 800944c:	6013      	str	r3, [r2, #0]
 800944e:	4b15      	ldr	r3, [pc, #84]	@ (80094a4 <vTaskStartScheduler+0xd4>)
 8009450:	f04f 32ff 	mov.w	r2, #4294967295
 8009454:	601a      	str	r2, [r3, #0]
 8009456:	4b14      	ldr	r3, [pc, #80]	@ (80094a8 <vTaskStartScheduler+0xd8>)
 8009458:	2201      	movs	r2, #1
 800945a:	601a      	str	r2, [r3, #0]
 800945c:	4b13      	ldr	r3, [pc, #76]	@ (80094ac <vTaskStartScheduler+0xdc>)
 800945e:	2200      	movs	r2, #0
 8009460:	601a      	str	r2, [r3, #0]
 8009462:	f001 f8e5 	bl	800a630 <xPortStartScheduler>
 8009466:	e00f      	b.n	8009488 <vTaskStartScheduler+0xb8>
 8009468:	697b      	ldr	r3, [r7, #20]
 800946a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800946e:	d10b      	bne.n	8009488 <vTaskStartScheduler+0xb8>
 8009470:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009474:	f383 8811 	msr	BASEPRI, r3
 8009478:	f3bf 8f6f 	isb	sy
 800947c:	f3bf 8f4f 	dsb	sy
 8009480:	60fb      	str	r3, [r7, #12]
 8009482:	bf00      	nop
 8009484:	bf00      	nop
 8009486:	e7fd      	b.n	8009484 <vTaskStartScheduler+0xb4>
 8009488:	bf00      	nop
 800948a:	3718      	adds	r7, #24
 800948c:	46bd      	mov	sp, r7
 800948e:	bd80      	pop	{r7, pc}
 8009490:	0800e0dc 	.word	0x0800e0dc
 8009494:	08009ae1 	.word	0x08009ae1
 8009498:	20001168 	.word	0x20001168
 800949c:	20000c70 	.word	0x20000c70
 80094a0:	20000020 	.word	0x20000020
 80094a4:	20001164 	.word	0x20001164
 80094a8:	20001150 	.word	0x20001150
 80094ac:	20001148 	.word	0x20001148

080094b0 <vTaskSuspendAll>:
 80094b0:	b480      	push	{r7}
 80094b2:	af00      	add	r7, sp, #0
 80094b4:	4b04      	ldr	r3, [pc, #16]	@ (80094c8 <vTaskSuspendAll+0x18>)
 80094b6:	681b      	ldr	r3, [r3, #0]
 80094b8:	3301      	adds	r3, #1
 80094ba:	4a03      	ldr	r2, [pc, #12]	@ (80094c8 <vTaskSuspendAll+0x18>)
 80094bc:	6013      	str	r3, [r2, #0]
 80094be:	bf00      	nop
 80094c0:	46bd      	mov	sp, r7
 80094c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80094c6:	4770      	bx	lr
 80094c8:	2000116c 	.word	0x2000116c

080094cc <xTaskResumeAll>:
 80094cc:	b580      	push	{r7, lr}
 80094ce:	b084      	sub	sp, #16
 80094d0:	af00      	add	r7, sp, #0
 80094d2:	2300      	movs	r3, #0
 80094d4:	60fb      	str	r3, [r7, #12]
 80094d6:	2300      	movs	r3, #0
 80094d8:	60bb      	str	r3, [r7, #8]
 80094da:	4b42      	ldr	r3, [pc, #264]	@ (80095e4 <xTaskResumeAll+0x118>)
 80094dc:	681b      	ldr	r3, [r3, #0]
 80094de:	2b00      	cmp	r3, #0
 80094e0:	d10b      	bne.n	80094fa <xTaskResumeAll+0x2e>
 80094e2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80094e6:	f383 8811 	msr	BASEPRI, r3
 80094ea:	f3bf 8f6f 	isb	sy
 80094ee:	f3bf 8f4f 	dsb	sy
 80094f2:	603b      	str	r3, [r7, #0]
 80094f4:	bf00      	nop
 80094f6:	bf00      	nop
 80094f8:	e7fd      	b.n	80094f6 <xTaskResumeAll+0x2a>
 80094fa:	f001 f93d 	bl	800a778 <vPortEnterCritical>
 80094fe:	4b39      	ldr	r3, [pc, #228]	@ (80095e4 <xTaskResumeAll+0x118>)
 8009500:	681b      	ldr	r3, [r3, #0]
 8009502:	3b01      	subs	r3, #1
 8009504:	4a37      	ldr	r2, [pc, #220]	@ (80095e4 <xTaskResumeAll+0x118>)
 8009506:	6013      	str	r3, [r2, #0]
 8009508:	4b36      	ldr	r3, [pc, #216]	@ (80095e4 <xTaskResumeAll+0x118>)
 800950a:	681b      	ldr	r3, [r3, #0]
 800950c:	2b00      	cmp	r3, #0
 800950e:	d162      	bne.n	80095d6 <xTaskResumeAll+0x10a>
 8009510:	4b35      	ldr	r3, [pc, #212]	@ (80095e8 <xTaskResumeAll+0x11c>)
 8009512:	681b      	ldr	r3, [r3, #0]
 8009514:	2b00      	cmp	r3, #0
 8009516:	d05e      	beq.n	80095d6 <xTaskResumeAll+0x10a>
 8009518:	e02f      	b.n	800957a <xTaskResumeAll+0xae>
 800951a:	4b34      	ldr	r3, [pc, #208]	@ (80095ec <xTaskResumeAll+0x120>)
 800951c:	68db      	ldr	r3, [r3, #12]
 800951e:	68db      	ldr	r3, [r3, #12]
 8009520:	60fb      	str	r3, [r7, #12]
 8009522:	68fb      	ldr	r3, [r7, #12]
 8009524:	3318      	adds	r3, #24
 8009526:	4618      	mov	r0, r3
 8009528:	f7fe ff7c 	bl	8008424 <uxListRemove>
 800952c:	68fb      	ldr	r3, [r7, #12]
 800952e:	3304      	adds	r3, #4
 8009530:	4618      	mov	r0, r3
 8009532:	f7fe ff77 	bl	8008424 <uxListRemove>
 8009536:	68fb      	ldr	r3, [r7, #12]
 8009538:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800953a:	4b2d      	ldr	r3, [pc, #180]	@ (80095f0 <xTaskResumeAll+0x124>)
 800953c:	681b      	ldr	r3, [r3, #0]
 800953e:	429a      	cmp	r2, r3
 8009540:	d903      	bls.n	800954a <xTaskResumeAll+0x7e>
 8009542:	68fb      	ldr	r3, [r7, #12]
 8009544:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009546:	4a2a      	ldr	r2, [pc, #168]	@ (80095f0 <xTaskResumeAll+0x124>)
 8009548:	6013      	str	r3, [r2, #0]
 800954a:	68fb      	ldr	r3, [r7, #12]
 800954c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800954e:	4613      	mov	r3, r2
 8009550:	009b      	lsls	r3, r3, #2
 8009552:	4413      	add	r3, r2
 8009554:	009b      	lsls	r3, r3, #2
 8009556:	4a27      	ldr	r2, [pc, #156]	@ (80095f4 <xTaskResumeAll+0x128>)
 8009558:	441a      	add	r2, r3
 800955a:	68fb      	ldr	r3, [r7, #12]
 800955c:	3304      	adds	r3, #4
 800955e:	4619      	mov	r1, r3
 8009560:	4610      	mov	r0, r2
 8009562:	f7fe ff02 	bl	800836a <vListInsertEnd>
 8009566:	68fb      	ldr	r3, [r7, #12]
 8009568:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800956a:	4b23      	ldr	r3, [pc, #140]	@ (80095f8 <xTaskResumeAll+0x12c>)
 800956c:	681b      	ldr	r3, [r3, #0]
 800956e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009570:	429a      	cmp	r2, r3
 8009572:	d302      	bcc.n	800957a <xTaskResumeAll+0xae>
 8009574:	4b21      	ldr	r3, [pc, #132]	@ (80095fc <xTaskResumeAll+0x130>)
 8009576:	2201      	movs	r2, #1
 8009578:	601a      	str	r2, [r3, #0]
 800957a:	4b1c      	ldr	r3, [pc, #112]	@ (80095ec <xTaskResumeAll+0x120>)
 800957c:	681b      	ldr	r3, [r3, #0]
 800957e:	2b00      	cmp	r3, #0
 8009580:	d1cb      	bne.n	800951a <xTaskResumeAll+0x4e>
 8009582:	68fb      	ldr	r3, [r7, #12]
 8009584:	2b00      	cmp	r3, #0
 8009586:	d001      	beq.n	800958c <xTaskResumeAll+0xc0>
 8009588:	f000 fb66 	bl	8009c58 <prvResetNextTaskUnblockTime>
 800958c:	4b1c      	ldr	r3, [pc, #112]	@ (8009600 <xTaskResumeAll+0x134>)
 800958e:	681b      	ldr	r3, [r3, #0]
 8009590:	607b      	str	r3, [r7, #4]
 8009592:	687b      	ldr	r3, [r7, #4]
 8009594:	2b00      	cmp	r3, #0
 8009596:	d010      	beq.n	80095ba <xTaskResumeAll+0xee>
 8009598:	f000 f846 	bl	8009628 <xTaskIncrementTick>
 800959c:	4603      	mov	r3, r0
 800959e:	2b00      	cmp	r3, #0
 80095a0:	d002      	beq.n	80095a8 <xTaskResumeAll+0xdc>
 80095a2:	4b16      	ldr	r3, [pc, #88]	@ (80095fc <xTaskResumeAll+0x130>)
 80095a4:	2201      	movs	r2, #1
 80095a6:	601a      	str	r2, [r3, #0]
 80095a8:	687b      	ldr	r3, [r7, #4]
 80095aa:	3b01      	subs	r3, #1
 80095ac:	607b      	str	r3, [r7, #4]
 80095ae:	687b      	ldr	r3, [r7, #4]
 80095b0:	2b00      	cmp	r3, #0
 80095b2:	d1f1      	bne.n	8009598 <xTaskResumeAll+0xcc>
 80095b4:	4b12      	ldr	r3, [pc, #72]	@ (8009600 <xTaskResumeAll+0x134>)
 80095b6:	2200      	movs	r2, #0
 80095b8:	601a      	str	r2, [r3, #0]
 80095ba:	4b10      	ldr	r3, [pc, #64]	@ (80095fc <xTaskResumeAll+0x130>)
 80095bc:	681b      	ldr	r3, [r3, #0]
 80095be:	2b00      	cmp	r3, #0
 80095c0:	d009      	beq.n	80095d6 <xTaskResumeAll+0x10a>
 80095c2:	2301      	movs	r3, #1
 80095c4:	60bb      	str	r3, [r7, #8]
 80095c6:	4b0f      	ldr	r3, [pc, #60]	@ (8009604 <xTaskResumeAll+0x138>)
 80095c8:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80095cc:	601a      	str	r2, [r3, #0]
 80095ce:	f3bf 8f4f 	dsb	sy
 80095d2:	f3bf 8f6f 	isb	sy
 80095d6:	f001 f901 	bl	800a7dc <vPortExitCritical>
 80095da:	68bb      	ldr	r3, [r7, #8]
 80095dc:	4618      	mov	r0, r3
 80095de:	3710      	adds	r7, #16
 80095e0:	46bd      	mov	sp, r7
 80095e2:	bd80      	pop	{r7, pc}
 80095e4:	2000116c 	.word	0x2000116c
 80095e8:	20001144 	.word	0x20001144
 80095ec:	20001104 	.word	0x20001104
 80095f0:	2000114c 	.word	0x2000114c
 80095f4:	20000c74 	.word	0x20000c74
 80095f8:	20000c70 	.word	0x20000c70
 80095fc:	20001158 	.word	0x20001158
 8009600:	20001154 	.word	0x20001154
 8009604:	e000ed04 	.word	0xe000ed04

08009608 <xTaskGetTickCount>:
 8009608:	b480      	push	{r7}
 800960a:	b083      	sub	sp, #12
 800960c:	af00      	add	r7, sp, #0
 800960e:	4b05      	ldr	r3, [pc, #20]	@ (8009624 <xTaskGetTickCount+0x1c>)
 8009610:	681b      	ldr	r3, [r3, #0]
 8009612:	607b      	str	r3, [r7, #4]
 8009614:	687b      	ldr	r3, [r7, #4]
 8009616:	4618      	mov	r0, r3
 8009618:	370c      	adds	r7, #12
 800961a:	46bd      	mov	sp, r7
 800961c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009620:	4770      	bx	lr
 8009622:	bf00      	nop
 8009624:	20001148 	.word	0x20001148

08009628 <xTaskIncrementTick>:
 8009628:	b580      	push	{r7, lr}
 800962a:	b086      	sub	sp, #24
 800962c:	af00      	add	r7, sp, #0
 800962e:	2300      	movs	r3, #0
 8009630:	617b      	str	r3, [r7, #20]
 8009632:	4b4f      	ldr	r3, [pc, #316]	@ (8009770 <xTaskIncrementTick+0x148>)
 8009634:	681b      	ldr	r3, [r3, #0]
 8009636:	2b00      	cmp	r3, #0
 8009638:	f040 8090 	bne.w	800975c <xTaskIncrementTick+0x134>
 800963c:	4b4d      	ldr	r3, [pc, #308]	@ (8009774 <xTaskIncrementTick+0x14c>)
 800963e:	681b      	ldr	r3, [r3, #0]
 8009640:	3301      	adds	r3, #1
 8009642:	613b      	str	r3, [r7, #16]
 8009644:	4a4b      	ldr	r2, [pc, #300]	@ (8009774 <xTaskIncrementTick+0x14c>)
 8009646:	693b      	ldr	r3, [r7, #16]
 8009648:	6013      	str	r3, [r2, #0]
 800964a:	693b      	ldr	r3, [r7, #16]
 800964c:	2b00      	cmp	r3, #0
 800964e:	d121      	bne.n	8009694 <xTaskIncrementTick+0x6c>
 8009650:	4b49      	ldr	r3, [pc, #292]	@ (8009778 <xTaskIncrementTick+0x150>)
 8009652:	681b      	ldr	r3, [r3, #0]
 8009654:	681b      	ldr	r3, [r3, #0]
 8009656:	2b00      	cmp	r3, #0
 8009658:	d00b      	beq.n	8009672 <xTaskIncrementTick+0x4a>
 800965a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800965e:	f383 8811 	msr	BASEPRI, r3
 8009662:	f3bf 8f6f 	isb	sy
 8009666:	f3bf 8f4f 	dsb	sy
 800966a:	603b      	str	r3, [r7, #0]
 800966c:	bf00      	nop
 800966e:	bf00      	nop
 8009670:	e7fd      	b.n	800966e <xTaskIncrementTick+0x46>
 8009672:	4b41      	ldr	r3, [pc, #260]	@ (8009778 <xTaskIncrementTick+0x150>)
 8009674:	681b      	ldr	r3, [r3, #0]
 8009676:	60fb      	str	r3, [r7, #12]
 8009678:	4b40      	ldr	r3, [pc, #256]	@ (800977c <xTaskIncrementTick+0x154>)
 800967a:	681b      	ldr	r3, [r3, #0]
 800967c:	4a3e      	ldr	r2, [pc, #248]	@ (8009778 <xTaskIncrementTick+0x150>)
 800967e:	6013      	str	r3, [r2, #0]
 8009680:	4a3e      	ldr	r2, [pc, #248]	@ (800977c <xTaskIncrementTick+0x154>)
 8009682:	68fb      	ldr	r3, [r7, #12]
 8009684:	6013      	str	r3, [r2, #0]
 8009686:	4b3e      	ldr	r3, [pc, #248]	@ (8009780 <xTaskIncrementTick+0x158>)
 8009688:	681b      	ldr	r3, [r3, #0]
 800968a:	3301      	adds	r3, #1
 800968c:	4a3c      	ldr	r2, [pc, #240]	@ (8009780 <xTaskIncrementTick+0x158>)
 800968e:	6013      	str	r3, [r2, #0]
 8009690:	f000 fae2 	bl	8009c58 <prvResetNextTaskUnblockTime>
 8009694:	4b3b      	ldr	r3, [pc, #236]	@ (8009784 <xTaskIncrementTick+0x15c>)
 8009696:	681b      	ldr	r3, [r3, #0]
 8009698:	693a      	ldr	r2, [r7, #16]
 800969a:	429a      	cmp	r2, r3
 800969c:	d349      	bcc.n	8009732 <xTaskIncrementTick+0x10a>
 800969e:	4b36      	ldr	r3, [pc, #216]	@ (8009778 <xTaskIncrementTick+0x150>)
 80096a0:	681b      	ldr	r3, [r3, #0]
 80096a2:	681b      	ldr	r3, [r3, #0]
 80096a4:	2b00      	cmp	r3, #0
 80096a6:	d104      	bne.n	80096b2 <xTaskIncrementTick+0x8a>
 80096a8:	4b36      	ldr	r3, [pc, #216]	@ (8009784 <xTaskIncrementTick+0x15c>)
 80096aa:	f04f 32ff 	mov.w	r2, #4294967295
 80096ae:	601a      	str	r2, [r3, #0]
 80096b0:	e03f      	b.n	8009732 <xTaskIncrementTick+0x10a>
 80096b2:	4b31      	ldr	r3, [pc, #196]	@ (8009778 <xTaskIncrementTick+0x150>)
 80096b4:	681b      	ldr	r3, [r3, #0]
 80096b6:	68db      	ldr	r3, [r3, #12]
 80096b8:	68db      	ldr	r3, [r3, #12]
 80096ba:	60bb      	str	r3, [r7, #8]
 80096bc:	68bb      	ldr	r3, [r7, #8]
 80096be:	685b      	ldr	r3, [r3, #4]
 80096c0:	607b      	str	r3, [r7, #4]
 80096c2:	693a      	ldr	r2, [r7, #16]
 80096c4:	687b      	ldr	r3, [r7, #4]
 80096c6:	429a      	cmp	r2, r3
 80096c8:	d203      	bcs.n	80096d2 <xTaskIncrementTick+0xaa>
 80096ca:	4a2e      	ldr	r2, [pc, #184]	@ (8009784 <xTaskIncrementTick+0x15c>)
 80096cc:	687b      	ldr	r3, [r7, #4]
 80096ce:	6013      	str	r3, [r2, #0]
 80096d0:	e02f      	b.n	8009732 <xTaskIncrementTick+0x10a>
 80096d2:	68bb      	ldr	r3, [r7, #8]
 80096d4:	3304      	adds	r3, #4
 80096d6:	4618      	mov	r0, r3
 80096d8:	f7fe fea4 	bl	8008424 <uxListRemove>
 80096dc:	68bb      	ldr	r3, [r7, #8]
 80096de:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80096e0:	2b00      	cmp	r3, #0
 80096e2:	d004      	beq.n	80096ee <xTaskIncrementTick+0xc6>
 80096e4:	68bb      	ldr	r3, [r7, #8]
 80096e6:	3318      	adds	r3, #24
 80096e8:	4618      	mov	r0, r3
 80096ea:	f7fe fe9b 	bl	8008424 <uxListRemove>
 80096ee:	68bb      	ldr	r3, [r7, #8]
 80096f0:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80096f2:	4b25      	ldr	r3, [pc, #148]	@ (8009788 <xTaskIncrementTick+0x160>)
 80096f4:	681b      	ldr	r3, [r3, #0]
 80096f6:	429a      	cmp	r2, r3
 80096f8:	d903      	bls.n	8009702 <xTaskIncrementTick+0xda>
 80096fa:	68bb      	ldr	r3, [r7, #8]
 80096fc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80096fe:	4a22      	ldr	r2, [pc, #136]	@ (8009788 <xTaskIncrementTick+0x160>)
 8009700:	6013      	str	r3, [r2, #0]
 8009702:	68bb      	ldr	r3, [r7, #8]
 8009704:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8009706:	4613      	mov	r3, r2
 8009708:	009b      	lsls	r3, r3, #2
 800970a:	4413      	add	r3, r2
 800970c:	009b      	lsls	r3, r3, #2
 800970e:	4a1f      	ldr	r2, [pc, #124]	@ (800978c <xTaskIncrementTick+0x164>)
 8009710:	441a      	add	r2, r3
 8009712:	68bb      	ldr	r3, [r7, #8]
 8009714:	3304      	adds	r3, #4
 8009716:	4619      	mov	r1, r3
 8009718:	4610      	mov	r0, r2
 800971a:	f7fe fe26 	bl	800836a <vListInsertEnd>
 800971e:	68bb      	ldr	r3, [r7, #8]
 8009720:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8009722:	4b1b      	ldr	r3, [pc, #108]	@ (8009790 <xTaskIncrementTick+0x168>)
 8009724:	681b      	ldr	r3, [r3, #0]
 8009726:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009728:	429a      	cmp	r2, r3
 800972a:	d3b8      	bcc.n	800969e <xTaskIncrementTick+0x76>
 800972c:	2301      	movs	r3, #1
 800972e:	617b      	str	r3, [r7, #20]
 8009730:	e7b5      	b.n	800969e <xTaskIncrementTick+0x76>
 8009732:	4b17      	ldr	r3, [pc, #92]	@ (8009790 <xTaskIncrementTick+0x168>)
 8009734:	681b      	ldr	r3, [r3, #0]
 8009736:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8009738:	4914      	ldr	r1, [pc, #80]	@ (800978c <xTaskIncrementTick+0x164>)
 800973a:	4613      	mov	r3, r2
 800973c:	009b      	lsls	r3, r3, #2
 800973e:	4413      	add	r3, r2
 8009740:	009b      	lsls	r3, r3, #2
 8009742:	440b      	add	r3, r1
 8009744:	681b      	ldr	r3, [r3, #0]
 8009746:	2b01      	cmp	r3, #1
 8009748:	d901      	bls.n	800974e <xTaskIncrementTick+0x126>
 800974a:	2301      	movs	r3, #1
 800974c:	617b      	str	r3, [r7, #20]
 800974e:	4b11      	ldr	r3, [pc, #68]	@ (8009794 <xTaskIncrementTick+0x16c>)
 8009750:	681b      	ldr	r3, [r3, #0]
 8009752:	2b00      	cmp	r3, #0
 8009754:	d007      	beq.n	8009766 <xTaskIncrementTick+0x13e>
 8009756:	2301      	movs	r3, #1
 8009758:	617b      	str	r3, [r7, #20]
 800975a:	e004      	b.n	8009766 <xTaskIncrementTick+0x13e>
 800975c:	4b0e      	ldr	r3, [pc, #56]	@ (8009798 <xTaskIncrementTick+0x170>)
 800975e:	681b      	ldr	r3, [r3, #0]
 8009760:	3301      	adds	r3, #1
 8009762:	4a0d      	ldr	r2, [pc, #52]	@ (8009798 <xTaskIncrementTick+0x170>)
 8009764:	6013      	str	r3, [r2, #0]
 8009766:	697b      	ldr	r3, [r7, #20]
 8009768:	4618      	mov	r0, r3
 800976a:	3718      	adds	r7, #24
 800976c:	46bd      	mov	sp, r7
 800976e:	bd80      	pop	{r7, pc}
 8009770:	2000116c 	.word	0x2000116c
 8009774:	20001148 	.word	0x20001148
 8009778:	200010fc 	.word	0x200010fc
 800977c:	20001100 	.word	0x20001100
 8009780:	2000115c 	.word	0x2000115c
 8009784:	20001164 	.word	0x20001164
 8009788:	2000114c 	.word	0x2000114c
 800978c:	20000c74 	.word	0x20000c74
 8009790:	20000c70 	.word	0x20000c70
 8009794:	20001158 	.word	0x20001158
 8009798:	20001154 	.word	0x20001154

0800979c <vTaskSwitchContext>:
 800979c:	b480      	push	{r7}
 800979e:	b085      	sub	sp, #20
 80097a0:	af00      	add	r7, sp, #0
 80097a2:	4b2b      	ldr	r3, [pc, #172]	@ (8009850 <vTaskSwitchContext+0xb4>)
 80097a4:	681b      	ldr	r3, [r3, #0]
 80097a6:	2b00      	cmp	r3, #0
 80097a8:	d003      	beq.n	80097b2 <vTaskSwitchContext+0x16>
 80097aa:	4b2a      	ldr	r3, [pc, #168]	@ (8009854 <vTaskSwitchContext+0xb8>)
 80097ac:	2201      	movs	r2, #1
 80097ae:	601a      	str	r2, [r3, #0]
 80097b0:	e047      	b.n	8009842 <vTaskSwitchContext+0xa6>
 80097b2:	4b28      	ldr	r3, [pc, #160]	@ (8009854 <vTaskSwitchContext+0xb8>)
 80097b4:	2200      	movs	r2, #0
 80097b6:	601a      	str	r2, [r3, #0]
 80097b8:	4b27      	ldr	r3, [pc, #156]	@ (8009858 <vTaskSwitchContext+0xbc>)
 80097ba:	681b      	ldr	r3, [r3, #0]
 80097bc:	60fb      	str	r3, [r7, #12]
 80097be:	e011      	b.n	80097e4 <vTaskSwitchContext+0x48>
 80097c0:	68fb      	ldr	r3, [r7, #12]
 80097c2:	2b00      	cmp	r3, #0
 80097c4:	d10b      	bne.n	80097de <vTaskSwitchContext+0x42>
 80097c6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80097ca:	f383 8811 	msr	BASEPRI, r3
 80097ce:	f3bf 8f6f 	isb	sy
 80097d2:	f3bf 8f4f 	dsb	sy
 80097d6:	607b      	str	r3, [r7, #4]
 80097d8:	bf00      	nop
 80097da:	bf00      	nop
 80097dc:	e7fd      	b.n	80097da <vTaskSwitchContext+0x3e>
 80097de:	68fb      	ldr	r3, [r7, #12]
 80097e0:	3b01      	subs	r3, #1
 80097e2:	60fb      	str	r3, [r7, #12]
 80097e4:	491d      	ldr	r1, [pc, #116]	@ (800985c <vTaskSwitchContext+0xc0>)
 80097e6:	68fa      	ldr	r2, [r7, #12]
 80097e8:	4613      	mov	r3, r2
 80097ea:	009b      	lsls	r3, r3, #2
 80097ec:	4413      	add	r3, r2
 80097ee:	009b      	lsls	r3, r3, #2
 80097f0:	440b      	add	r3, r1
 80097f2:	681b      	ldr	r3, [r3, #0]
 80097f4:	2b00      	cmp	r3, #0
 80097f6:	d0e3      	beq.n	80097c0 <vTaskSwitchContext+0x24>
 80097f8:	68fa      	ldr	r2, [r7, #12]
 80097fa:	4613      	mov	r3, r2
 80097fc:	009b      	lsls	r3, r3, #2
 80097fe:	4413      	add	r3, r2
 8009800:	009b      	lsls	r3, r3, #2
 8009802:	4a16      	ldr	r2, [pc, #88]	@ (800985c <vTaskSwitchContext+0xc0>)
 8009804:	4413      	add	r3, r2
 8009806:	60bb      	str	r3, [r7, #8]
 8009808:	68bb      	ldr	r3, [r7, #8]
 800980a:	685b      	ldr	r3, [r3, #4]
 800980c:	685a      	ldr	r2, [r3, #4]
 800980e:	68bb      	ldr	r3, [r7, #8]
 8009810:	605a      	str	r2, [r3, #4]
 8009812:	68bb      	ldr	r3, [r7, #8]
 8009814:	685a      	ldr	r2, [r3, #4]
 8009816:	68bb      	ldr	r3, [r7, #8]
 8009818:	3308      	adds	r3, #8
 800981a:	429a      	cmp	r2, r3
 800981c:	d104      	bne.n	8009828 <vTaskSwitchContext+0x8c>
 800981e:	68bb      	ldr	r3, [r7, #8]
 8009820:	685b      	ldr	r3, [r3, #4]
 8009822:	685a      	ldr	r2, [r3, #4]
 8009824:	68bb      	ldr	r3, [r7, #8]
 8009826:	605a      	str	r2, [r3, #4]
 8009828:	68bb      	ldr	r3, [r7, #8]
 800982a:	685b      	ldr	r3, [r3, #4]
 800982c:	68db      	ldr	r3, [r3, #12]
 800982e:	4a0c      	ldr	r2, [pc, #48]	@ (8009860 <vTaskSwitchContext+0xc4>)
 8009830:	6013      	str	r3, [r2, #0]
 8009832:	4a09      	ldr	r2, [pc, #36]	@ (8009858 <vTaskSwitchContext+0xbc>)
 8009834:	68fb      	ldr	r3, [r7, #12]
 8009836:	6013      	str	r3, [r2, #0]
 8009838:	4b09      	ldr	r3, [pc, #36]	@ (8009860 <vTaskSwitchContext+0xc4>)
 800983a:	681b      	ldr	r3, [r3, #0]
 800983c:	3354      	adds	r3, #84	@ 0x54
 800983e:	4a09      	ldr	r2, [pc, #36]	@ (8009864 <vTaskSwitchContext+0xc8>)
 8009840:	6013      	str	r3, [r2, #0]
 8009842:	bf00      	nop
 8009844:	3714      	adds	r7, #20
 8009846:	46bd      	mov	sp, r7
 8009848:	f85d 7b04 	ldr.w	r7, [sp], #4
 800984c:	4770      	bx	lr
 800984e:	bf00      	nop
 8009850:	2000116c 	.word	0x2000116c
 8009854:	20001158 	.word	0x20001158
 8009858:	2000114c 	.word	0x2000114c
 800985c:	20000c74 	.word	0x20000c74
 8009860:	20000c70 	.word	0x20000c70
 8009864:	20000020 	.word	0x20000020

08009868 <vTaskPlaceOnEventList>:
 8009868:	b580      	push	{r7, lr}
 800986a:	b084      	sub	sp, #16
 800986c:	af00      	add	r7, sp, #0
 800986e:	6078      	str	r0, [r7, #4]
 8009870:	6039      	str	r1, [r7, #0]
 8009872:	687b      	ldr	r3, [r7, #4]
 8009874:	2b00      	cmp	r3, #0
 8009876:	d10b      	bne.n	8009890 <vTaskPlaceOnEventList+0x28>
 8009878:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800987c:	f383 8811 	msr	BASEPRI, r3
 8009880:	f3bf 8f6f 	isb	sy
 8009884:	f3bf 8f4f 	dsb	sy
 8009888:	60fb      	str	r3, [r7, #12]
 800988a:	bf00      	nop
 800988c:	bf00      	nop
 800988e:	e7fd      	b.n	800988c <vTaskPlaceOnEventList+0x24>
 8009890:	4b07      	ldr	r3, [pc, #28]	@ (80098b0 <vTaskPlaceOnEventList+0x48>)
 8009892:	681b      	ldr	r3, [r3, #0]
 8009894:	3318      	adds	r3, #24
 8009896:	4619      	mov	r1, r3
 8009898:	6878      	ldr	r0, [r7, #4]
 800989a:	f7fe fd8a 	bl	80083b2 <vListInsert>
 800989e:	2101      	movs	r1, #1
 80098a0:	6838      	ldr	r0, [r7, #0]
 80098a2:	f000 fa87 	bl	8009db4 <prvAddCurrentTaskToDelayedList>
 80098a6:	bf00      	nop
 80098a8:	3710      	adds	r7, #16
 80098aa:	46bd      	mov	sp, r7
 80098ac:	bd80      	pop	{r7, pc}
 80098ae:	bf00      	nop
 80098b0:	20000c70 	.word	0x20000c70

080098b4 <vTaskPlaceOnEventListRestricted>:
 80098b4:	b580      	push	{r7, lr}
 80098b6:	b086      	sub	sp, #24
 80098b8:	af00      	add	r7, sp, #0
 80098ba:	60f8      	str	r0, [r7, #12]
 80098bc:	60b9      	str	r1, [r7, #8]
 80098be:	607a      	str	r2, [r7, #4]
 80098c0:	68fb      	ldr	r3, [r7, #12]
 80098c2:	2b00      	cmp	r3, #0
 80098c4:	d10b      	bne.n	80098de <vTaskPlaceOnEventListRestricted+0x2a>
 80098c6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80098ca:	f383 8811 	msr	BASEPRI, r3
 80098ce:	f3bf 8f6f 	isb	sy
 80098d2:	f3bf 8f4f 	dsb	sy
 80098d6:	617b      	str	r3, [r7, #20]
 80098d8:	bf00      	nop
 80098da:	bf00      	nop
 80098dc:	e7fd      	b.n	80098da <vTaskPlaceOnEventListRestricted+0x26>
 80098de:	4b0a      	ldr	r3, [pc, #40]	@ (8009908 <vTaskPlaceOnEventListRestricted+0x54>)
 80098e0:	681b      	ldr	r3, [r3, #0]
 80098e2:	3318      	adds	r3, #24
 80098e4:	4619      	mov	r1, r3
 80098e6:	68f8      	ldr	r0, [r7, #12]
 80098e8:	f7fe fd3f 	bl	800836a <vListInsertEnd>
 80098ec:	687b      	ldr	r3, [r7, #4]
 80098ee:	2b00      	cmp	r3, #0
 80098f0:	d002      	beq.n	80098f8 <vTaskPlaceOnEventListRestricted+0x44>
 80098f2:	f04f 33ff 	mov.w	r3, #4294967295
 80098f6:	60bb      	str	r3, [r7, #8]
 80098f8:	6879      	ldr	r1, [r7, #4]
 80098fa:	68b8      	ldr	r0, [r7, #8]
 80098fc:	f000 fa5a 	bl	8009db4 <prvAddCurrentTaskToDelayedList>
 8009900:	bf00      	nop
 8009902:	3718      	adds	r7, #24
 8009904:	46bd      	mov	sp, r7
 8009906:	bd80      	pop	{r7, pc}
 8009908:	20000c70 	.word	0x20000c70

0800990c <xTaskRemoveFromEventList>:
 800990c:	b580      	push	{r7, lr}
 800990e:	b086      	sub	sp, #24
 8009910:	af00      	add	r7, sp, #0
 8009912:	6078      	str	r0, [r7, #4]
 8009914:	687b      	ldr	r3, [r7, #4]
 8009916:	68db      	ldr	r3, [r3, #12]
 8009918:	68db      	ldr	r3, [r3, #12]
 800991a:	613b      	str	r3, [r7, #16]
 800991c:	693b      	ldr	r3, [r7, #16]
 800991e:	2b00      	cmp	r3, #0
 8009920:	d10b      	bne.n	800993a <xTaskRemoveFromEventList+0x2e>
 8009922:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009926:	f383 8811 	msr	BASEPRI, r3
 800992a:	f3bf 8f6f 	isb	sy
 800992e:	f3bf 8f4f 	dsb	sy
 8009932:	60fb      	str	r3, [r7, #12]
 8009934:	bf00      	nop
 8009936:	bf00      	nop
 8009938:	e7fd      	b.n	8009936 <xTaskRemoveFromEventList+0x2a>
 800993a:	693b      	ldr	r3, [r7, #16]
 800993c:	3318      	adds	r3, #24
 800993e:	4618      	mov	r0, r3
 8009940:	f7fe fd70 	bl	8008424 <uxListRemove>
 8009944:	4b1d      	ldr	r3, [pc, #116]	@ (80099bc <xTaskRemoveFromEventList+0xb0>)
 8009946:	681b      	ldr	r3, [r3, #0]
 8009948:	2b00      	cmp	r3, #0
 800994a:	d11d      	bne.n	8009988 <xTaskRemoveFromEventList+0x7c>
 800994c:	693b      	ldr	r3, [r7, #16]
 800994e:	3304      	adds	r3, #4
 8009950:	4618      	mov	r0, r3
 8009952:	f7fe fd67 	bl	8008424 <uxListRemove>
 8009956:	693b      	ldr	r3, [r7, #16]
 8009958:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800995a:	4b19      	ldr	r3, [pc, #100]	@ (80099c0 <xTaskRemoveFromEventList+0xb4>)
 800995c:	681b      	ldr	r3, [r3, #0]
 800995e:	429a      	cmp	r2, r3
 8009960:	d903      	bls.n	800996a <xTaskRemoveFromEventList+0x5e>
 8009962:	693b      	ldr	r3, [r7, #16]
 8009964:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009966:	4a16      	ldr	r2, [pc, #88]	@ (80099c0 <xTaskRemoveFromEventList+0xb4>)
 8009968:	6013      	str	r3, [r2, #0]
 800996a:	693b      	ldr	r3, [r7, #16]
 800996c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800996e:	4613      	mov	r3, r2
 8009970:	009b      	lsls	r3, r3, #2
 8009972:	4413      	add	r3, r2
 8009974:	009b      	lsls	r3, r3, #2
 8009976:	4a13      	ldr	r2, [pc, #76]	@ (80099c4 <xTaskRemoveFromEventList+0xb8>)
 8009978:	441a      	add	r2, r3
 800997a:	693b      	ldr	r3, [r7, #16]
 800997c:	3304      	adds	r3, #4
 800997e:	4619      	mov	r1, r3
 8009980:	4610      	mov	r0, r2
 8009982:	f7fe fcf2 	bl	800836a <vListInsertEnd>
 8009986:	e005      	b.n	8009994 <xTaskRemoveFromEventList+0x88>
 8009988:	693b      	ldr	r3, [r7, #16]
 800998a:	3318      	adds	r3, #24
 800998c:	4619      	mov	r1, r3
 800998e:	480e      	ldr	r0, [pc, #56]	@ (80099c8 <xTaskRemoveFromEventList+0xbc>)
 8009990:	f7fe fceb 	bl	800836a <vListInsertEnd>
 8009994:	693b      	ldr	r3, [r7, #16]
 8009996:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8009998:	4b0c      	ldr	r3, [pc, #48]	@ (80099cc <xTaskRemoveFromEventList+0xc0>)
 800999a:	681b      	ldr	r3, [r3, #0]
 800999c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800999e:	429a      	cmp	r2, r3
 80099a0:	d905      	bls.n	80099ae <xTaskRemoveFromEventList+0xa2>
 80099a2:	2301      	movs	r3, #1
 80099a4:	617b      	str	r3, [r7, #20]
 80099a6:	4b0a      	ldr	r3, [pc, #40]	@ (80099d0 <xTaskRemoveFromEventList+0xc4>)
 80099a8:	2201      	movs	r2, #1
 80099aa:	601a      	str	r2, [r3, #0]
 80099ac:	e001      	b.n	80099b2 <xTaskRemoveFromEventList+0xa6>
 80099ae:	2300      	movs	r3, #0
 80099b0:	617b      	str	r3, [r7, #20]
 80099b2:	697b      	ldr	r3, [r7, #20]
 80099b4:	4618      	mov	r0, r3
 80099b6:	3718      	adds	r7, #24
 80099b8:	46bd      	mov	sp, r7
 80099ba:	bd80      	pop	{r7, pc}
 80099bc:	2000116c 	.word	0x2000116c
 80099c0:	2000114c 	.word	0x2000114c
 80099c4:	20000c74 	.word	0x20000c74
 80099c8:	20001104 	.word	0x20001104
 80099cc:	20000c70 	.word	0x20000c70
 80099d0:	20001158 	.word	0x20001158

080099d4 <vTaskInternalSetTimeOutState>:
 80099d4:	b480      	push	{r7}
 80099d6:	b083      	sub	sp, #12
 80099d8:	af00      	add	r7, sp, #0
 80099da:	6078      	str	r0, [r7, #4]
 80099dc:	4b06      	ldr	r3, [pc, #24]	@ (80099f8 <vTaskInternalSetTimeOutState+0x24>)
 80099de:	681a      	ldr	r2, [r3, #0]
 80099e0:	687b      	ldr	r3, [r7, #4]
 80099e2:	601a      	str	r2, [r3, #0]
 80099e4:	4b05      	ldr	r3, [pc, #20]	@ (80099fc <vTaskInternalSetTimeOutState+0x28>)
 80099e6:	681a      	ldr	r2, [r3, #0]
 80099e8:	687b      	ldr	r3, [r7, #4]
 80099ea:	605a      	str	r2, [r3, #4]
 80099ec:	bf00      	nop
 80099ee:	370c      	adds	r7, #12
 80099f0:	46bd      	mov	sp, r7
 80099f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80099f6:	4770      	bx	lr
 80099f8:	2000115c 	.word	0x2000115c
 80099fc:	20001148 	.word	0x20001148

08009a00 <xTaskCheckForTimeOut>:
 8009a00:	b580      	push	{r7, lr}
 8009a02:	b088      	sub	sp, #32
 8009a04:	af00      	add	r7, sp, #0
 8009a06:	6078      	str	r0, [r7, #4]
 8009a08:	6039      	str	r1, [r7, #0]
 8009a0a:	687b      	ldr	r3, [r7, #4]
 8009a0c:	2b00      	cmp	r3, #0
 8009a0e:	d10b      	bne.n	8009a28 <xTaskCheckForTimeOut+0x28>
 8009a10:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009a14:	f383 8811 	msr	BASEPRI, r3
 8009a18:	f3bf 8f6f 	isb	sy
 8009a1c:	f3bf 8f4f 	dsb	sy
 8009a20:	613b      	str	r3, [r7, #16]
 8009a22:	bf00      	nop
 8009a24:	bf00      	nop
 8009a26:	e7fd      	b.n	8009a24 <xTaskCheckForTimeOut+0x24>
 8009a28:	683b      	ldr	r3, [r7, #0]
 8009a2a:	2b00      	cmp	r3, #0
 8009a2c:	d10b      	bne.n	8009a46 <xTaskCheckForTimeOut+0x46>
 8009a2e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009a32:	f383 8811 	msr	BASEPRI, r3
 8009a36:	f3bf 8f6f 	isb	sy
 8009a3a:	f3bf 8f4f 	dsb	sy
 8009a3e:	60fb      	str	r3, [r7, #12]
 8009a40:	bf00      	nop
 8009a42:	bf00      	nop
 8009a44:	e7fd      	b.n	8009a42 <xTaskCheckForTimeOut+0x42>
 8009a46:	f000 fe97 	bl	800a778 <vPortEnterCritical>
 8009a4a:	4b1d      	ldr	r3, [pc, #116]	@ (8009ac0 <xTaskCheckForTimeOut+0xc0>)
 8009a4c:	681b      	ldr	r3, [r3, #0]
 8009a4e:	61bb      	str	r3, [r7, #24]
 8009a50:	687b      	ldr	r3, [r7, #4]
 8009a52:	685b      	ldr	r3, [r3, #4]
 8009a54:	69ba      	ldr	r2, [r7, #24]
 8009a56:	1ad3      	subs	r3, r2, r3
 8009a58:	617b      	str	r3, [r7, #20]
 8009a5a:	683b      	ldr	r3, [r7, #0]
 8009a5c:	681b      	ldr	r3, [r3, #0]
 8009a5e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8009a62:	d102      	bne.n	8009a6a <xTaskCheckForTimeOut+0x6a>
 8009a64:	2300      	movs	r3, #0
 8009a66:	61fb      	str	r3, [r7, #28]
 8009a68:	e023      	b.n	8009ab2 <xTaskCheckForTimeOut+0xb2>
 8009a6a:	687b      	ldr	r3, [r7, #4]
 8009a6c:	681a      	ldr	r2, [r3, #0]
 8009a6e:	4b15      	ldr	r3, [pc, #84]	@ (8009ac4 <xTaskCheckForTimeOut+0xc4>)
 8009a70:	681b      	ldr	r3, [r3, #0]
 8009a72:	429a      	cmp	r2, r3
 8009a74:	d007      	beq.n	8009a86 <xTaskCheckForTimeOut+0x86>
 8009a76:	687b      	ldr	r3, [r7, #4]
 8009a78:	685b      	ldr	r3, [r3, #4]
 8009a7a:	69ba      	ldr	r2, [r7, #24]
 8009a7c:	429a      	cmp	r2, r3
 8009a7e:	d302      	bcc.n	8009a86 <xTaskCheckForTimeOut+0x86>
 8009a80:	2301      	movs	r3, #1
 8009a82:	61fb      	str	r3, [r7, #28]
 8009a84:	e015      	b.n	8009ab2 <xTaskCheckForTimeOut+0xb2>
 8009a86:	683b      	ldr	r3, [r7, #0]
 8009a88:	681b      	ldr	r3, [r3, #0]
 8009a8a:	697a      	ldr	r2, [r7, #20]
 8009a8c:	429a      	cmp	r2, r3
 8009a8e:	d20b      	bcs.n	8009aa8 <xTaskCheckForTimeOut+0xa8>
 8009a90:	683b      	ldr	r3, [r7, #0]
 8009a92:	681a      	ldr	r2, [r3, #0]
 8009a94:	697b      	ldr	r3, [r7, #20]
 8009a96:	1ad2      	subs	r2, r2, r3
 8009a98:	683b      	ldr	r3, [r7, #0]
 8009a9a:	601a      	str	r2, [r3, #0]
 8009a9c:	6878      	ldr	r0, [r7, #4]
 8009a9e:	f7ff ff99 	bl	80099d4 <vTaskInternalSetTimeOutState>
 8009aa2:	2300      	movs	r3, #0
 8009aa4:	61fb      	str	r3, [r7, #28]
 8009aa6:	e004      	b.n	8009ab2 <xTaskCheckForTimeOut+0xb2>
 8009aa8:	683b      	ldr	r3, [r7, #0]
 8009aaa:	2200      	movs	r2, #0
 8009aac:	601a      	str	r2, [r3, #0]
 8009aae:	2301      	movs	r3, #1
 8009ab0:	61fb      	str	r3, [r7, #28]
 8009ab2:	f000 fe93 	bl	800a7dc <vPortExitCritical>
 8009ab6:	69fb      	ldr	r3, [r7, #28]
 8009ab8:	4618      	mov	r0, r3
 8009aba:	3720      	adds	r7, #32
 8009abc:	46bd      	mov	sp, r7
 8009abe:	bd80      	pop	{r7, pc}
 8009ac0:	20001148 	.word	0x20001148
 8009ac4:	2000115c 	.word	0x2000115c

08009ac8 <vTaskMissedYield>:
 8009ac8:	b480      	push	{r7}
 8009aca:	af00      	add	r7, sp, #0
 8009acc:	4b03      	ldr	r3, [pc, #12]	@ (8009adc <vTaskMissedYield+0x14>)
 8009ace:	2201      	movs	r2, #1
 8009ad0:	601a      	str	r2, [r3, #0]
 8009ad2:	bf00      	nop
 8009ad4:	46bd      	mov	sp, r7
 8009ad6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ada:	4770      	bx	lr
 8009adc:	20001158 	.word	0x20001158

08009ae0 <prvIdleTask>:
 8009ae0:	b580      	push	{r7, lr}
 8009ae2:	b082      	sub	sp, #8
 8009ae4:	af00      	add	r7, sp, #0
 8009ae6:	6078      	str	r0, [r7, #4]
 8009ae8:	f000 f852 	bl	8009b90 <prvCheckTasksWaitingTermination>
 8009aec:	4b06      	ldr	r3, [pc, #24]	@ (8009b08 <prvIdleTask+0x28>)
 8009aee:	681b      	ldr	r3, [r3, #0]
 8009af0:	2b01      	cmp	r3, #1
 8009af2:	d9f9      	bls.n	8009ae8 <prvIdleTask+0x8>
 8009af4:	4b05      	ldr	r3, [pc, #20]	@ (8009b0c <prvIdleTask+0x2c>)
 8009af6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009afa:	601a      	str	r2, [r3, #0]
 8009afc:	f3bf 8f4f 	dsb	sy
 8009b00:	f3bf 8f6f 	isb	sy
 8009b04:	e7f0      	b.n	8009ae8 <prvIdleTask+0x8>
 8009b06:	bf00      	nop
 8009b08:	20000c74 	.word	0x20000c74
 8009b0c:	e000ed04 	.word	0xe000ed04

08009b10 <prvInitialiseTaskLists>:
 8009b10:	b580      	push	{r7, lr}
 8009b12:	b082      	sub	sp, #8
 8009b14:	af00      	add	r7, sp, #0
 8009b16:	2300      	movs	r3, #0
 8009b18:	607b      	str	r3, [r7, #4]
 8009b1a:	e00c      	b.n	8009b36 <prvInitialiseTaskLists+0x26>
 8009b1c:	687a      	ldr	r2, [r7, #4]
 8009b1e:	4613      	mov	r3, r2
 8009b20:	009b      	lsls	r3, r3, #2
 8009b22:	4413      	add	r3, r2
 8009b24:	009b      	lsls	r3, r3, #2
 8009b26:	4a12      	ldr	r2, [pc, #72]	@ (8009b70 <prvInitialiseTaskLists+0x60>)
 8009b28:	4413      	add	r3, r2
 8009b2a:	4618      	mov	r0, r3
 8009b2c:	f7fe fbf0 	bl	8008310 <vListInitialise>
 8009b30:	687b      	ldr	r3, [r7, #4]
 8009b32:	3301      	adds	r3, #1
 8009b34:	607b      	str	r3, [r7, #4]
 8009b36:	687b      	ldr	r3, [r7, #4]
 8009b38:	2b37      	cmp	r3, #55	@ 0x37
 8009b3a:	d9ef      	bls.n	8009b1c <prvInitialiseTaskLists+0xc>
 8009b3c:	480d      	ldr	r0, [pc, #52]	@ (8009b74 <prvInitialiseTaskLists+0x64>)
 8009b3e:	f7fe fbe7 	bl	8008310 <vListInitialise>
 8009b42:	480d      	ldr	r0, [pc, #52]	@ (8009b78 <prvInitialiseTaskLists+0x68>)
 8009b44:	f7fe fbe4 	bl	8008310 <vListInitialise>
 8009b48:	480c      	ldr	r0, [pc, #48]	@ (8009b7c <prvInitialiseTaskLists+0x6c>)
 8009b4a:	f7fe fbe1 	bl	8008310 <vListInitialise>
 8009b4e:	480c      	ldr	r0, [pc, #48]	@ (8009b80 <prvInitialiseTaskLists+0x70>)
 8009b50:	f7fe fbde 	bl	8008310 <vListInitialise>
 8009b54:	480b      	ldr	r0, [pc, #44]	@ (8009b84 <prvInitialiseTaskLists+0x74>)
 8009b56:	f7fe fbdb 	bl	8008310 <vListInitialise>
 8009b5a:	4b0b      	ldr	r3, [pc, #44]	@ (8009b88 <prvInitialiseTaskLists+0x78>)
 8009b5c:	4a05      	ldr	r2, [pc, #20]	@ (8009b74 <prvInitialiseTaskLists+0x64>)
 8009b5e:	601a      	str	r2, [r3, #0]
 8009b60:	4b0a      	ldr	r3, [pc, #40]	@ (8009b8c <prvInitialiseTaskLists+0x7c>)
 8009b62:	4a05      	ldr	r2, [pc, #20]	@ (8009b78 <prvInitialiseTaskLists+0x68>)
 8009b64:	601a      	str	r2, [r3, #0]
 8009b66:	bf00      	nop
 8009b68:	3708      	adds	r7, #8
 8009b6a:	46bd      	mov	sp, r7
 8009b6c:	bd80      	pop	{r7, pc}
 8009b6e:	bf00      	nop
 8009b70:	20000c74 	.word	0x20000c74
 8009b74:	200010d4 	.word	0x200010d4
 8009b78:	200010e8 	.word	0x200010e8
 8009b7c:	20001104 	.word	0x20001104
 8009b80:	20001118 	.word	0x20001118
 8009b84:	20001130 	.word	0x20001130
 8009b88:	200010fc 	.word	0x200010fc
 8009b8c:	20001100 	.word	0x20001100

08009b90 <prvCheckTasksWaitingTermination>:
 8009b90:	b580      	push	{r7, lr}
 8009b92:	b082      	sub	sp, #8
 8009b94:	af00      	add	r7, sp, #0
 8009b96:	e019      	b.n	8009bcc <prvCheckTasksWaitingTermination+0x3c>
 8009b98:	f000 fdee 	bl	800a778 <vPortEnterCritical>
 8009b9c:	4b10      	ldr	r3, [pc, #64]	@ (8009be0 <prvCheckTasksWaitingTermination+0x50>)
 8009b9e:	68db      	ldr	r3, [r3, #12]
 8009ba0:	68db      	ldr	r3, [r3, #12]
 8009ba2:	607b      	str	r3, [r7, #4]
 8009ba4:	687b      	ldr	r3, [r7, #4]
 8009ba6:	3304      	adds	r3, #4
 8009ba8:	4618      	mov	r0, r3
 8009baa:	f7fe fc3b 	bl	8008424 <uxListRemove>
 8009bae:	4b0d      	ldr	r3, [pc, #52]	@ (8009be4 <prvCheckTasksWaitingTermination+0x54>)
 8009bb0:	681b      	ldr	r3, [r3, #0]
 8009bb2:	3b01      	subs	r3, #1
 8009bb4:	4a0b      	ldr	r2, [pc, #44]	@ (8009be4 <prvCheckTasksWaitingTermination+0x54>)
 8009bb6:	6013      	str	r3, [r2, #0]
 8009bb8:	4b0b      	ldr	r3, [pc, #44]	@ (8009be8 <prvCheckTasksWaitingTermination+0x58>)
 8009bba:	681b      	ldr	r3, [r3, #0]
 8009bbc:	3b01      	subs	r3, #1
 8009bbe:	4a0a      	ldr	r2, [pc, #40]	@ (8009be8 <prvCheckTasksWaitingTermination+0x58>)
 8009bc0:	6013      	str	r3, [r2, #0]
 8009bc2:	f000 fe0b 	bl	800a7dc <vPortExitCritical>
 8009bc6:	6878      	ldr	r0, [r7, #4]
 8009bc8:	f000 f810 	bl	8009bec <prvDeleteTCB>
 8009bcc:	4b06      	ldr	r3, [pc, #24]	@ (8009be8 <prvCheckTasksWaitingTermination+0x58>)
 8009bce:	681b      	ldr	r3, [r3, #0]
 8009bd0:	2b00      	cmp	r3, #0
 8009bd2:	d1e1      	bne.n	8009b98 <prvCheckTasksWaitingTermination+0x8>
 8009bd4:	bf00      	nop
 8009bd6:	bf00      	nop
 8009bd8:	3708      	adds	r7, #8
 8009bda:	46bd      	mov	sp, r7
 8009bdc:	bd80      	pop	{r7, pc}
 8009bde:	bf00      	nop
 8009be0:	20001118 	.word	0x20001118
 8009be4:	20001144 	.word	0x20001144
 8009be8:	2000112c 	.word	0x2000112c

08009bec <prvDeleteTCB>:
 8009bec:	b580      	push	{r7, lr}
 8009bee:	b084      	sub	sp, #16
 8009bf0:	af00      	add	r7, sp, #0
 8009bf2:	6078      	str	r0, [r7, #4]
 8009bf4:	687b      	ldr	r3, [r7, #4]
 8009bf6:	3354      	adds	r3, #84	@ 0x54
 8009bf8:	4618      	mov	r0, r3
 8009bfa:	f001 fe9d 	bl	800b938 <_reclaim_reent>
 8009bfe:	687b      	ldr	r3, [r7, #4]
 8009c00:	f893 30a5 	ldrb.w	r3, [r3, #165]	@ 0xa5
 8009c04:	2b00      	cmp	r3, #0
 8009c06:	d108      	bne.n	8009c1a <prvDeleteTCB+0x2e>
 8009c08:	687b      	ldr	r3, [r7, #4]
 8009c0a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8009c0c:	4618      	mov	r0, r3
 8009c0e:	f000 ffa3 	bl	800ab58 <vPortFree>
 8009c12:	6878      	ldr	r0, [r7, #4]
 8009c14:	f000 ffa0 	bl	800ab58 <vPortFree>
 8009c18:	e019      	b.n	8009c4e <prvDeleteTCB+0x62>
 8009c1a:	687b      	ldr	r3, [r7, #4]
 8009c1c:	f893 30a5 	ldrb.w	r3, [r3, #165]	@ 0xa5
 8009c20:	2b01      	cmp	r3, #1
 8009c22:	d103      	bne.n	8009c2c <prvDeleteTCB+0x40>
 8009c24:	6878      	ldr	r0, [r7, #4]
 8009c26:	f000 ff97 	bl	800ab58 <vPortFree>
 8009c2a:	e010      	b.n	8009c4e <prvDeleteTCB+0x62>
 8009c2c:	687b      	ldr	r3, [r7, #4]
 8009c2e:	f893 30a5 	ldrb.w	r3, [r3, #165]	@ 0xa5
 8009c32:	2b02      	cmp	r3, #2
 8009c34:	d00b      	beq.n	8009c4e <prvDeleteTCB+0x62>
 8009c36:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009c3a:	f383 8811 	msr	BASEPRI, r3
 8009c3e:	f3bf 8f6f 	isb	sy
 8009c42:	f3bf 8f4f 	dsb	sy
 8009c46:	60fb      	str	r3, [r7, #12]
 8009c48:	bf00      	nop
 8009c4a:	bf00      	nop
 8009c4c:	e7fd      	b.n	8009c4a <prvDeleteTCB+0x5e>
 8009c4e:	bf00      	nop
 8009c50:	3710      	adds	r7, #16
 8009c52:	46bd      	mov	sp, r7
 8009c54:	bd80      	pop	{r7, pc}
	...

08009c58 <prvResetNextTaskUnblockTime>:
 8009c58:	b480      	push	{r7}
 8009c5a:	b083      	sub	sp, #12
 8009c5c:	af00      	add	r7, sp, #0
 8009c5e:	4b0c      	ldr	r3, [pc, #48]	@ (8009c90 <prvResetNextTaskUnblockTime+0x38>)
 8009c60:	681b      	ldr	r3, [r3, #0]
 8009c62:	681b      	ldr	r3, [r3, #0]
 8009c64:	2b00      	cmp	r3, #0
 8009c66:	d104      	bne.n	8009c72 <prvResetNextTaskUnblockTime+0x1a>
 8009c68:	4b0a      	ldr	r3, [pc, #40]	@ (8009c94 <prvResetNextTaskUnblockTime+0x3c>)
 8009c6a:	f04f 32ff 	mov.w	r2, #4294967295
 8009c6e:	601a      	str	r2, [r3, #0]
 8009c70:	e008      	b.n	8009c84 <prvResetNextTaskUnblockTime+0x2c>
 8009c72:	4b07      	ldr	r3, [pc, #28]	@ (8009c90 <prvResetNextTaskUnblockTime+0x38>)
 8009c74:	681b      	ldr	r3, [r3, #0]
 8009c76:	68db      	ldr	r3, [r3, #12]
 8009c78:	68db      	ldr	r3, [r3, #12]
 8009c7a:	607b      	str	r3, [r7, #4]
 8009c7c:	687b      	ldr	r3, [r7, #4]
 8009c7e:	685b      	ldr	r3, [r3, #4]
 8009c80:	4a04      	ldr	r2, [pc, #16]	@ (8009c94 <prvResetNextTaskUnblockTime+0x3c>)
 8009c82:	6013      	str	r3, [r2, #0]
 8009c84:	bf00      	nop
 8009c86:	370c      	adds	r7, #12
 8009c88:	46bd      	mov	sp, r7
 8009c8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c8e:	4770      	bx	lr
 8009c90:	200010fc 	.word	0x200010fc
 8009c94:	20001164 	.word	0x20001164

08009c98 <xTaskGetSchedulerState>:
 8009c98:	b480      	push	{r7}
 8009c9a:	b083      	sub	sp, #12
 8009c9c:	af00      	add	r7, sp, #0
 8009c9e:	4b0b      	ldr	r3, [pc, #44]	@ (8009ccc <xTaskGetSchedulerState+0x34>)
 8009ca0:	681b      	ldr	r3, [r3, #0]
 8009ca2:	2b00      	cmp	r3, #0
 8009ca4:	d102      	bne.n	8009cac <xTaskGetSchedulerState+0x14>
 8009ca6:	2301      	movs	r3, #1
 8009ca8:	607b      	str	r3, [r7, #4]
 8009caa:	e008      	b.n	8009cbe <xTaskGetSchedulerState+0x26>
 8009cac:	4b08      	ldr	r3, [pc, #32]	@ (8009cd0 <xTaskGetSchedulerState+0x38>)
 8009cae:	681b      	ldr	r3, [r3, #0]
 8009cb0:	2b00      	cmp	r3, #0
 8009cb2:	d102      	bne.n	8009cba <xTaskGetSchedulerState+0x22>
 8009cb4:	2302      	movs	r3, #2
 8009cb6:	607b      	str	r3, [r7, #4]
 8009cb8:	e001      	b.n	8009cbe <xTaskGetSchedulerState+0x26>
 8009cba:	2300      	movs	r3, #0
 8009cbc:	607b      	str	r3, [r7, #4]
 8009cbe:	687b      	ldr	r3, [r7, #4]
 8009cc0:	4618      	mov	r0, r3
 8009cc2:	370c      	adds	r7, #12
 8009cc4:	46bd      	mov	sp, r7
 8009cc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009cca:	4770      	bx	lr
 8009ccc:	20001150 	.word	0x20001150
 8009cd0:	2000116c 	.word	0x2000116c

08009cd4 <xTaskPriorityDisinherit>:
 8009cd4:	b580      	push	{r7, lr}
 8009cd6:	b086      	sub	sp, #24
 8009cd8:	af00      	add	r7, sp, #0
 8009cda:	6078      	str	r0, [r7, #4]
 8009cdc:	687b      	ldr	r3, [r7, #4]
 8009cde:	613b      	str	r3, [r7, #16]
 8009ce0:	2300      	movs	r3, #0
 8009ce2:	617b      	str	r3, [r7, #20]
 8009ce4:	687b      	ldr	r3, [r7, #4]
 8009ce6:	2b00      	cmp	r3, #0
 8009ce8:	d058      	beq.n	8009d9c <xTaskPriorityDisinherit+0xc8>
 8009cea:	4b2f      	ldr	r3, [pc, #188]	@ (8009da8 <xTaskPriorityDisinherit+0xd4>)
 8009cec:	681b      	ldr	r3, [r3, #0]
 8009cee:	693a      	ldr	r2, [r7, #16]
 8009cf0:	429a      	cmp	r2, r3
 8009cf2:	d00b      	beq.n	8009d0c <xTaskPriorityDisinherit+0x38>
 8009cf4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009cf8:	f383 8811 	msr	BASEPRI, r3
 8009cfc:	f3bf 8f6f 	isb	sy
 8009d00:	f3bf 8f4f 	dsb	sy
 8009d04:	60fb      	str	r3, [r7, #12]
 8009d06:	bf00      	nop
 8009d08:	bf00      	nop
 8009d0a:	e7fd      	b.n	8009d08 <xTaskPriorityDisinherit+0x34>
 8009d0c:	693b      	ldr	r3, [r7, #16]
 8009d0e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8009d10:	2b00      	cmp	r3, #0
 8009d12:	d10b      	bne.n	8009d2c <xTaskPriorityDisinherit+0x58>
 8009d14:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009d18:	f383 8811 	msr	BASEPRI, r3
 8009d1c:	f3bf 8f6f 	isb	sy
 8009d20:	f3bf 8f4f 	dsb	sy
 8009d24:	60bb      	str	r3, [r7, #8]
 8009d26:	bf00      	nop
 8009d28:	bf00      	nop
 8009d2a:	e7fd      	b.n	8009d28 <xTaskPriorityDisinherit+0x54>
 8009d2c:	693b      	ldr	r3, [r7, #16]
 8009d2e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8009d30:	1e5a      	subs	r2, r3, #1
 8009d32:	693b      	ldr	r3, [r7, #16]
 8009d34:	651a      	str	r2, [r3, #80]	@ 0x50
 8009d36:	693b      	ldr	r3, [r7, #16]
 8009d38:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8009d3a:	693b      	ldr	r3, [r7, #16]
 8009d3c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8009d3e:	429a      	cmp	r2, r3
 8009d40:	d02c      	beq.n	8009d9c <xTaskPriorityDisinherit+0xc8>
 8009d42:	693b      	ldr	r3, [r7, #16]
 8009d44:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8009d46:	2b00      	cmp	r3, #0
 8009d48:	d128      	bne.n	8009d9c <xTaskPriorityDisinherit+0xc8>
 8009d4a:	693b      	ldr	r3, [r7, #16]
 8009d4c:	3304      	adds	r3, #4
 8009d4e:	4618      	mov	r0, r3
 8009d50:	f7fe fb68 	bl	8008424 <uxListRemove>
 8009d54:	693b      	ldr	r3, [r7, #16]
 8009d56:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 8009d58:	693b      	ldr	r3, [r7, #16]
 8009d5a:	62da      	str	r2, [r3, #44]	@ 0x2c
 8009d5c:	693b      	ldr	r3, [r7, #16]
 8009d5e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009d60:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 8009d64:	693b      	ldr	r3, [r7, #16]
 8009d66:	619a      	str	r2, [r3, #24]
 8009d68:	693b      	ldr	r3, [r7, #16]
 8009d6a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8009d6c:	4b0f      	ldr	r3, [pc, #60]	@ (8009dac <xTaskPriorityDisinherit+0xd8>)
 8009d6e:	681b      	ldr	r3, [r3, #0]
 8009d70:	429a      	cmp	r2, r3
 8009d72:	d903      	bls.n	8009d7c <xTaskPriorityDisinherit+0xa8>
 8009d74:	693b      	ldr	r3, [r7, #16]
 8009d76:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009d78:	4a0c      	ldr	r2, [pc, #48]	@ (8009dac <xTaskPriorityDisinherit+0xd8>)
 8009d7a:	6013      	str	r3, [r2, #0]
 8009d7c:	693b      	ldr	r3, [r7, #16]
 8009d7e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8009d80:	4613      	mov	r3, r2
 8009d82:	009b      	lsls	r3, r3, #2
 8009d84:	4413      	add	r3, r2
 8009d86:	009b      	lsls	r3, r3, #2
 8009d88:	4a09      	ldr	r2, [pc, #36]	@ (8009db0 <xTaskPriorityDisinherit+0xdc>)
 8009d8a:	441a      	add	r2, r3
 8009d8c:	693b      	ldr	r3, [r7, #16]
 8009d8e:	3304      	adds	r3, #4
 8009d90:	4619      	mov	r1, r3
 8009d92:	4610      	mov	r0, r2
 8009d94:	f7fe fae9 	bl	800836a <vListInsertEnd>
 8009d98:	2301      	movs	r3, #1
 8009d9a:	617b      	str	r3, [r7, #20]
 8009d9c:	697b      	ldr	r3, [r7, #20]
 8009d9e:	4618      	mov	r0, r3
 8009da0:	3718      	adds	r7, #24
 8009da2:	46bd      	mov	sp, r7
 8009da4:	bd80      	pop	{r7, pc}
 8009da6:	bf00      	nop
 8009da8:	20000c70 	.word	0x20000c70
 8009dac:	2000114c 	.word	0x2000114c
 8009db0:	20000c74 	.word	0x20000c74

08009db4 <prvAddCurrentTaskToDelayedList>:
 8009db4:	b580      	push	{r7, lr}
 8009db6:	b084      	sub	sp, #16
 8009db8:	af00      	add	r7, sp, #0
 8009dba:	6078      	str	r0, [r7, #4]
 8009dbc:	6039      	str	r1, [r7, #0]
 8009dbe:	4b21      	ldr	r3, [pc, #132]	@ (8009e44 <prvAddCurrentTaskToDelayedList+0x90>)
 8009dc0:	681b      	ldr	r3, [r3, #0]
 8009dc2:	60fb      	str	r3, [r7, #12]
 8009dc4:	4b20      	ldr	r3, [pc, #128]	@ (8009e48 <prvAddCurrentTaskToDelayedList+0x94>)
 8009dc6:	681b      	ldr	r3, [r3, #0]
 8009dc8:	3304      	adds	r3, #4
 8009dca:	4618      	mov	r0, r3
 8009dcc:	f7fe fb2a 	bl	8008424 <uxListRemove>
 8009dd0:	687b      	ldr	r3, [r7, #4]
 8009dd2:	f1b3 3fff 	cmp.w	r3, #4294967295
 8009dd6:	d10a      	bne.n	8009dee <prvAddCurrentTaskToDelayedList+0x3a>
 8009dd8:	683b      	ldr	r3, [r7, #0]
 8009dda:	2b00      	cmp	r3, #0
 8009ddc:	d007      	beq.n	8009dee <prvAddCurrentTaskToDelayedList+0x3a>
 8009dde:	4b1a      	ldr	r3, [pc, #104]	@ (8009e48 <prvAddCurrentTaskToDelayedList+0x94>)
 8009de0:	681b      	ldr	r3, [r3, #0]
 8009de2:	3304      	adds	r3, #4
 8009de4:	4619      	mov	r1, r3
 8009de6:	4819      	ldr	r0, [pc, #100]	@ (8009e4c <prvAddCurrentTaskToDelayedList+0x98>)
 8009de8:	f7fe fabf 	bl	800836a <vListInsertEnd>
 8009dec:	e026      	b.n	8009e3c <prvAddCurrentTaskToDelayedList+0x88>
 8009dee:	68fa      	ldr	r2, [r7, #12]
 8009df0:	687b      	ldr	r3, [r7, #4]
 8009df2:	4413      	add	r3, r2
 8009df4:	60bb      	str	r3, [r7, #8]
 8009df6:	4b14      	ldr	r3, [pc, #80]	@ (8009e48 <prvAddCurrentTaskToDelayedList+0x94>)
 8009df8:	681b      	ldr	r3, [r3, #0]
 8009dfa:	68ba      	ldr	r2, [r7, #8]
 8009dfc:	605a      	str	r2, [r3, #4]
 8009dfe:	68ba      	ldr	r2, [r7, #8]
 8009e00:	68fb      	ldr	r3, [r7, #12]
 8009e02:	429a      	cmp	r2, r3
 8009e04:	d209      	bcs.n	8009e1a <prvAddCurrentTaskToDelayedList+0x66>
 8009e06:	4b12      	ldr	r3, [pc, #72]	@ (8009e50 <prvAddCurrentTaskToDelayedList+0x9c>)
 8009e08:	681a      	ldr	r2, [r3, #0]
 8009e0a:	4b0f      	ldr	r3, [pc, #60]	@ (8009e48 <prvAddCurrentTaskToDelayedList+0x94>)
 8009e0c:	681b      	ldr	r3, [r3, #0]
 8009e0e:	3304      	adds	r3, #4
 8009e10:	4619      	mov	r1, r3
 8009e12:	4610      	mov	r0, r2
 8009e14:	f7fe facd 	bl	80083b2 <vListInsert>
 8009e18:	e010      	b.n	8009e3c <prvAddCurrentTaskToDelayedList+0x88>
 8009e1a:	4b0e      	ldr	r3, [pc, #56]	@ (8009e54 <prvAddCurrentTaskToDelayedList+0xa0>)
 8009e1c:	681a      	ldr	r2, [r3, #0]
 8009e1e:	4b0a      	ldr	r3, [pc, #40]	@ (8009e48 <prvAddCurrentTaskToDelayedList+0x94>)
 8009e20:	681b      	ldr	r3, [r3, #0]
 8009e22:	3304      	adds	r3, #4
 8009e24:	4619      	mov	r1, r3
 8009e26:	4610      	mov	r0, r2
 8009e28:	f7fe fac3 	bl	80083b2 <vListInsert>
 8009e2c:	4b0a      	ldr	r3, [pc, #40]	@ (8009e58 <prvAddCurrentTaskToDelayedList+0xa4>)
 8009e2e:	681b      	ldr	r3, [r3, #0]
 8009e30:	68ba      	ldr	r2, [r7, #8]
 8009e32:	429a      	cmp	r2, r3
 8009e34:	d202      	bcs.n	8009e3c <prvAddCurrentTaskToDelayedList+0x88>
 8009e36:	4a08      	ldr	r2, [pc, #32]	@ (8009e58 <prvAddCurrentTaskToDelayedList+0xa4>)
 8009e38:	68bb      	ldr	r3, [r7, #8]
 8009e3a:	6013      	str	r3, [r2, #0]
 8009e3c:	bf00      	nop
 8009e3e:	3710      	adds	r7, #16
 8009e40:	46bd      	mov	sp, r7
 8009e42:	bd80      	pop	{r7, pc}
 8009e44:	20001148 	.word	0x20001148
 8009e48:	20000c70 	.word	0x20000c70
 8009e4c:	20001130 	.word	0x20001130
 8009e50:	20001100 	.word	0x20001100
 8009e54:	200010fc 	.word	0x200010fc
 8009e58:	20001164 	.word	0x20001164

08009e5c <xTimerCreateTimerTask>:
 8009e5c:	b580      	push	{r7, lr}
 8009e5e:	b08a      	sub	sp, #40	@ 0x28
 8009e60:	af04      	add	r7, sp, #16
 8009e62:	2300      	movs	r3, #0
 8009e64:	617b      	str	r3, [r7, #20]
 8009e66:	f000 fb13 	bl	800a490 <prvCheckForValidListAndQueue>
 8009e6a:	4b1d      	ldr	r3, [pc, #116]	@ (8009ee0 <xTimerCreateTimerTask+0x84>)
 8009e6c:	681b      	ldr	r3, [r3, #0]
 8009e6e:	2b00      	cmp	r3, #0
 8009e70:	d021      	beq.n	8009eb6 <xTimerCreateTimerTask+0x5a>
 8009e72:	2300      	movs	r3, #0
 8009e74:	60fb      	str	r3, [r7, #12]
 8009e76:	2300      	movs	r3, #0
 8009e78:	60bb      	str	r3, [r7, #8]
 8009e7a:	1d3a      	adds	r2, r7, #4
 8009e7c:	f107 0108 	add.w	r1, r7, #8
 8009e80:	f107 030c 	add.w	r3, r7, #12
 8009e84:	4618      	mov	r0, r3
 8009e86:	f7fe fa29 	bl	80082dc <vApplicationGetTimerTaskMemory>
 8009e8a:	6879      	ldr	r1, [r7, #4]
 8009e8c:	68bb      	ldr	r3, [r7, #8]
 8009e8e:	68fa      	ldr	r2, [r7, #12]
 8009e90:	9202      	str	r2, [sp, #8]
 8009e92:	9301      	str	r3, [sp, #4]
 8009e94:	2302      	movs	r3, #2
 8009e96:	9300      	str	r3, [sp, #0]
 8009e98:	2300      	movs	r3, #0
 8009e9a:	460a      	mov	r2, r1
 8009e9c:	4911      	ldr	r1, [pc, #68]	@ (8009ee4 <xTimerCreateTimerTask+0x88>)
 8009e9e:	4812      	ldr	r0, [pc, #72]	@ (8009ee8 <xTimerCreateTimerTask+0x8c>)
 8009ea0:	f7ff f8a2 	bl	8008fe8 <xTaskCreateStatic>
 8009ea4:	4603      	mov	r3, r0
 8009ea6:	4a11      	ldr	r2, [pc, #68]	@ (8009eec <xTimerCreateTimerTask+0x90>)
 8009ea8:	6013      	str	r3, [r2, #0]
 8009eaa:	4b10      	ldr	r3, [pc, #64]	@ (8009eec <xTimerCreateTimerTask+0x90>)
 8009eac:	681b      	ldr	r3, [r3, #0]
 8009eae:	2b00      	cmp	r3, #0
 8009eb0:	d001      	beq.n	8009eb6 <xTimerCreateTimerTask+0x5a>
 8009eb2:	2301      	movs	r3, #1
 8009eb4:	617b      	str	r3, [r7, #20]
 8009eb6:	697b      	ldr	r3, [r7, #20]
 8009eb8:	2b00      	cmp	r3, #0
 8009eba:	d10b      	bne.n	8009ed4 <xTimerCreateTimerTask+0x78>
 8009ebc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009ec0:	f383 8811 	msr	BASEPRI, r3
 8009ec4:	f3bf 8f6f 	isb	sy
 8009ec8:	f3bf 8f4f 	dsb	sy
 8009ecc:	613b      	str	r3, [r7, #16]
 8009ece:	bf00      	nop
 8009ed0:	bf00      	nop
 8009ed2:	e7fd      	b.n	8009ed0 <xTimerCreateTimerTask+0x74>
 8009ed4:	697b      	ldr	r3, [r7, #20]
 8009ed6:	4618      	mov	r0, r3
 8009ed8:	3718      	adds	r7, #24
 8009eda:	46bd      	mov	sp, r7
 8009edc:	bd80      	pop	{r7, pc}
 8009ede:	bf00      	nop
 8009ee0:	200011a0 	.word	0x200011a0
 8009ee4:	0800e0e4 	.word	0x0800e0e4
 8009ee8:	0800a029 	.word	0x0800a029
 8009eec:	200011a4 	.word	0x200011a4

08009ef0 <xTimerGenericCommand>:
 8009ef0:	b580      	push	{r7, lr}
 8009ef2:	b08a      	sub	sp, #40	@ 0x28
 8009ef4:	af00      	add	r7, sp, #0
 8009ef6:	60f8      	str	r0, [r7, #12]
 8009ef8:	60b9      	str	r1, [r7, #8]
 8009efa:	607a      	str	r2, [r7, #4]
 8009efc:	603b      	str	r3, [r7, #0]
 8009efe:	2300      	movs	r3, #0
 8009f00:	627b      	str	r3, [r7, #36]	@ 0x24
 8009f02:	68fb      	ldr	r3, [r7, #12]
 8009f04:	2b00      	cmp	r3, #0
 8009f06:	d10b      	bne.n	8009f20 <xTimerGenericCommand+0x30>
 8009f08:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009f0c:	f383 8811 	msr	BASEPRI, r3
 8009f10:	f3bf 8f6f 	isb	sy
 8009f14:	f3bf 8f4f 	dsb	sy
 8009f18:	623b      	str	r3, [r7, #32]
 8009f1a:	bf00      	nop
 8009f1c:	bf00      	nop
 8009f1e:	e7fd      	b.n	8009f1c <xTimerGenericCommand+0x2c>
 8009f20:	4b19      	ldr	r3, [pc, #100]	@ (8009f88 <xTimerGenericCommand+0x98>)
 8009f22:	681b      	ldr	r3, [r3, #0]
 8009f24:	2b00      	cmp	r3, #0
 8009f26:	d02a      	beq.n	8009f7e <xTimerGenericCommand+0x8e>
 8009f28:	68bb      	ldr	r3, [r7, #8]
 8009f2a:	613b      	str	r3, [r7, #16]
 8009f2c:	687b      	ldr	r3, [r7, #4]
 8009f2e:	617b      	str	r3, [r7, #20]
 8009f30:	68fb      	ldr	r3, [r7, #12]
 8009f32:	61bb      	str	r3, [r7, #24]
 8009f34:	68bb      	ldr	r3, [r7, #8]
 8009f36:	2b05      	cmp	r3, #5
 8009f38:	dc18      	bgt.n	8009f6c <xTimerGenericCommand+0x7c>
 8009f3a:	f7ff fead 	bl	8009c98 <xTaskGetSchedulerState>
 8009f3e:	4603      	mov	r3, r0
 8009f40:	2b02      	cmp	r3, #2
 8009f42:	d109      	bne.n	8009f58 <xTimerGenericCommand+0x68>
 8009f44:	4b10      	ldr	r3, [pc, #64]	@ (8009f88 <xTimerGenericCommand+0x98>)
 8009f46:	6818      	ldr	r0, [r3, #0]
 8009f48:	f107 0110 	add.w	r1, r7, #16
 8009f4c:	2300      	movs	r3, #0
 8009f4e:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8009f50:	f7fe fbd8 	bl	8008704 <xQueueGenericSend>
 8009f54:	6278      	str	r0, [r7, #36]	@ 0x24
 8009f56:	e012      	b.n	8009f7e <xTimerGenericCommand+0x8e>
 8009f58:	4b0b      	ldr	r3, [pc, #44]	@ (8009f88 <xTimerGenericCommand+0x98>)
 8009f5a:	6818      	ldr	r0, [r3, #0]
 8009f5c:	f107 0110 	add.w	r1, r7, #16
 8009f60:	2300      	movs	r3, #0
 8009f62:	2200      	movs	r2, #0
 8009f64:	f7fe fbce 	bl	8008704 <xQueueGenericSend>
 8009f68:	6278      	str	r0, [r7, #36]	@ 0x24
 8009f6a:	e008      	b.n	8009f7e <xTimerGenericCommand+0x8e>
 8009f6c:	4b06      	ldr	r3, [pc, #24]	@ (8009f88 <xTimerGenericCommand+0x98>)
 8009f6e:	6818      	ldr	r0, [r3, #0]
 8009f70:	f107 0110 	add.w	r1, r7, #16
 8009f74:	2300      	movs	r3, #0
 8009f76:	683a      	ldr	r2, [r7, #0]
 8009f78:	f7fe fcc6 	bl	8008908 <xQueueGenericSendFromISR>
 8009f7c:	6278      	str	r0, [r7, #36]	@ 0x24
 8009f7e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009f80:	4618      	mov	r0, r3
 8009f82:	3728      	adds	r7, #40	@ 0x28
 8009f84:	46bd      	mov	sp, r7
 8009f86:	bd80      	pop	{r7, pc}
 8009f88:	200011a0 	.word	0x200011a0

08009f8c <prvProcessExpiredTimer>:
 8009f8c:	b580      	push	{r7, lr}
 8009f8e:	b088      	sub	sp, #32
 8009f90:	af02      	add	r7, sp, #8
 8009f92:	6078      	str	r0, [r7, #4]
 8009f94:	6039      	str	r1, [r7, #0]
 8009f96:	4b23      	ldr	r3, [pc, #140]	@ (800a024 <prvProcessExpiredTimer+0x98>)
 8009f98:	681b      	ldr	r3, [r3, #0]
 8009f9a:	68db      	ldr	r3, [r3, #12]
 8009f9c:	68db      	ldr	r3, [r3, #12]
 8009f9e:	617b      	str	r3, [r7, #20]
 8009fa0:	697b      	ldr	r3, [r7, #20]
 8009fa2:	3304      	adds	r3, #4
 8009fa4:	4618      	mov	r0, r3
 8009fa6:	f7fe fa3d 	bl	8008424 <uxListRemove>
 8009faa:	697b      	ldr	r3, [r7, #20]
 8009fac:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8009fb0:	f003 0304 	and.w	r3, r3, #4
 8009fb4:	2b00      	cmp	r3, #0
 8009fb6:	d023      	beq.n	800a000 <prvProcessExpiredTimer+0x74>
 8009fb8:	697b      	ldr	r3, [r7, #20]
 8009fba:	699a      	ldr	r2, [r3, #24]
 8009fbc:	687b      	ldr	r3, [r7, #4]
 8009fbe:	18d1      	adds	r1, r2, r3
 8009fc0:	687b      	ldr	r3, [r7, #4]
 8009fc2:	683a      	ldr	r2, [r7, #0]
 8009fc4:	6978      	ldr	r0, [r7, #20]
 8009fc6:	f000 f8d5 	bl	800a174 <prvInsertTimerInActiveList>
 8009fca:	4603      	mov	r3, r0
 8009fcc:	2b00      	cmp	r3, #0
 8009fce:	d020      	beq.n	800a012 <prvProcessExpiredTimer+0x86>
 8009fd0:	2300      	movs	r3, #0
 8009fd2:	9300      	str	r3, [sp, #0]
 8009fd4:	2300      	movs	r3, #0
 8009fd6:	687a      	ldr	r2, [r7, #4]
 8009fd8:	2100      	movs	r1, #0
 8009fda:	6978      	ldr	r0, [r7, #20]
 8009fdc:	f7ff ff88 	bl	8009ef0 <xTimerGenericCommand>
 8009fe0:	6138      	str	r0, [r7, #16]
 8009fe2:	693b      	ldr	r3, [r7, #16]
 8009fe4:	2b00      	cmp	r3, #0
 8009fe6:	d114      	bne.n	800a012 <prvProcessExpiredTimer+0x86>
 8009fe8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009fec:	f383 8811 	msr	BASEPRI, r3
 8009ff0:	f3bf 8f6f 	isb	sy
 8009ff4:	f3bf 8f4f 	dsb	sy
 8009ff8:	60fb      	str	r3, [r7, #12]
 8009ffa:	bf00      	nop
 8009ffc:	bf00      	nop
 8009ffe:	e7fd      	b.n	8009ffc <prvProcessExpiredTimer+0x70>
 800a000:	697b      	ldr	r3, [r7, #20]
 800a002:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800a006:	f023 0301 	bic.w	r3, r3, #1
 800a00a:	b2da      	uxtb	r2, r3
 800a00c:	697b      	ldr	r3, [r7, #20]
 800a00e:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 800a012:	697b      	ldr	r3, [r7, #20]
 800a014:	6a1b      	ldr	r3, [r3, #32]
 800a016:	6978      	ldr	r0, [r7, #20]
 800a018:	4798      	blx	r3
 800a01a:	bf00      	nop
 800a01c:	3718      	adds	r7, #24
 800a01e:	46bd      	mov	sp, r7
 800a020:	bd80      	pop	{r7, pc}
 800a022:	bf00      	nop
 800a024:	20001198 	.word	0x20001198

0800a028 <prvTimerTask>:
 800a028:	b580      	push	{r7, lr}
 800a02a:	b084      	sub	sp, #16
 800a02c:	af00      	add	r7, sp, #0
 800a02e:	6078      	str	r0, [r7, #4]
 800a030:	f107 0308 	add.w	r3, r7, #8
 800a034:	4618      	mov	r0, r3
 800a036:	f000 f859 	bl	800a0ec <prvGetNextExpireTime>
 800a03a:	60f8      	str	r0, [r7, #12]
 800a03c:	68bb      	ldr	r3, [r7, #8]
 800a03e:	4619      	mov	r1, r3
 800a040:	68f8      	ldr	r0, [r7, #12]
 800a042:	f000 f805 	bl	800a050 <prvProcessTimerOrBlockTask>
 800a046:	f000 f8d7 	bl	800a1f8 <prvProcessReceivedCommands>
 800a04a:	bf00      	nop
 800a04c:	e7f0      	b.n	800a030 <prvTimerTask+0x8>
	...

0800a050 <prvProcessTimerOrBlockTask>:
 800a050:	b580      	push	{r7, lr}
 800a052:	b084      	sub	sp, #16
 800a054:	af00      	add	r7, sp, #0
 800a056:	6078      	str	r0, [r7, #4]
 800a058:	6039      	str	r1, [r7, #0]
 800a05a:	f7ff fa29 	bl	80094b0 <vTaskSuspendAll>
 800a05e:	f107 0308 	add.w	r3, r7, #8
 800a062:	4618      	mov	r0, r3
 800a064:	f000 f866 	bl	800a134 <prvSampleTimeNow>
 800a068:	60f8      	str	r0, [r7, #12]
 800a06a:	68bb      	ldr	r3, [r7, #8]
 800a06c:	2b00      	cmp	r3, #0
 800a06e:	d130      	bne.n	800a0d2 <prvProcessTimerOrBlockTask+0x82>
 800a070:	683b      	ldr	r3, [r7, #0]
 800a072:	2b00      	cmp	r3, #0
 800a074:	d10a      	bne.n	800a08c <prvProcessTimerOrBlockTask+0x3c>
 800a076:	687a      	ldr	r2, [r7, #4]
 800a078:	68fb      	ldr	r3, [r7, #12]
 800a07a:	429a      	cmp	r2, r3
 800a07c:	d806      	bhi.n	800a08c <prvProcessTimerOrBlockTask+0x3c>
 800a07e:	f7ff fa25 	bl	80094cc <xTaskResumeAll>
 800a082:	68f9      	ldr	r1, [r7, #12]
 800a084:	6878      	ldr	r0, [r7, #4]
 800a086:	f7ff ff81 	bl	8009f8c <prvProcessExpiredTimer>
 800a08a:	e024      	b.n	800a0d6 <prvProcessTimerOrBlockTask+0x86>
 800a08c:	683b      	ldr	r3, [r7, #0]
 800a08e:	2b00      	cmp	r3, #0
 800a090:	d008      	beq.n	800a0a4 <prvProcessTimerOrBlockTask+0x54>
 800a092:	4b13      	ldr	r3, [pc, #76]	@ (800a0e0 <prvProcessTimerOrBlockTask+0x90>)
 800a094:	681b      	ldr	r3, [r3, #0]
 800a096:	681b      	ldr	r3, [r3, #0]
 800a098:	2b00      	cmp	r3, #0
 800a09a:	d101      	bne.n	800a0a0 <prvProcessTimerOrBlockTask+0x50>
 800a09c:	2301      	movs	r3, #1
 800a09e:	e000      	b.n	800a0a2 <prvProcessTimerOrBlockTask+0x52>
 800a0a0:	2300      	movs	r3, #0
 800a0a2:	603b      	str	r3, [r7, #0]
 800a0a4:	4b0f      	ldr	r3, [pc, #60]	@ (800a0e4 <prvProcessTimerOrBlockTask+0x94>)
 800a0a6:	6818      	ldr	r0, [r3, #0]
 800a0a8:	687a      	ldr	r2, [r7, #4]
 800a0aa:	68fb      	ldr	r3, [r7, #12]
 800a0ac:	1ad3      	subs	r3, r2, r3
 800a0ae:	683a      	ldr	r2, [r7, #0]
 800a0b0:	4619      	mov	r1, r3
 800a0b2:	f7fe ff65 	bl	8008f80 <vQueueWaitForMessageRestricted>
 800a0b6:	f7ff fa09 	bl	80094cc <xTaskResumeAll>
 800a0ba:	4603      	mov	r3, r0
 800a0bc:	2b00      	cmp	r3, #0
 800a0be:	d10a      	bne.n	800a0d6 <prvProcessTimerOrBlockTask+0x86>
 800a0c0:	4b09      	ldr	r3, [pc, #36]	@ (800a0e8 <prvProcessTimerOrBlockTask+0x98>)
 800a0c2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800a0c6:	601a      	str	r2, [r3, #0]
 800a0c8:	f3bf 8f4f 	dsb	sy
 800a0cc:	f3bf 8f6f 	isb	sy
 800a0d0:	e001      	b.n	800a0d6 <prvProcessTimerOrBlockTask+0x86>
 800a0d2:	f7ff f9fb 	bl	80094cc <xTaskResumeAll>
 800a0d6:	bf00      	nop
 800a0d8:	3710      	adds	r7, #16
 800a0da:	46bd      	mov	sp, r7
 800a0dc:	bd80      	pop	{r7, pc}
 800a0de:	bf00      	nop
 800a0e0:	2000119c 	.word	0x2000119c
 800a0e4:	200011a0 	.word	0x200011a0
 800a0e8:	e000ed04 	.word	0xe000ed04

0800a0ec <prvGetNextExpireTime>:
 800a0ec:	b480      	push	{r7}
 800a0ee:	b085      	sub	sp, #20
 800a0f0:	af00      	add	r7, sp, #0
 800a0f2:	6078      	str	r0, [r7, #4]
 800a0f4:	4b0e      	ldr	r3, [pc, #56]	@ (800a130 <prvGetNextExpireTime+0x44>)
 800a0f6:	681b      	ldr	r3, [r3, #0]
 800a0f8:	681b      	ldr	r3, [r3, #0]
 800a0fa:	2b00      	cmp	r3, #0
 800a0fc:	d101      	bne.n	800a102 <prvGetNextExpireTime+0x16>
 800a0fe:	2201      	movs	r2, #1
 800a100:	e000      	b.n	800a104 <prvGetNextExpireTime+0x18>
 800a102:	2200      	movs	r2, #0
 800a104:	687b      	ldr	r3, [r7, #4]
 800a106:	601a      	str	r2, [r3, #0]
 800a108:	687b      	ldr	r3, [r7, #4]
 800a10a:	681b      	ldr	r3, [r3, #0]
 800a10c:	2b00      	cmp	r3, #0
 800a10e:	d105      	bne.n	800a11c <prvGetNextExpireTime+0x30>
 800a110:	4b07      	ldr	r3, [pc, #28]	@ (800a130 <prvGetNextExpireTime+0x44>)
 800a112:	681b      	ldr	r3, [r3, #0]
 800a114:	68db      	ldr	r3, [r3, #12]
 800a116:	681b      	ldr	r3, [r3, #0]
 800a118:	60fb      	str	r3, [r7, #12]
 800a11a:	e001      	b.n	800a120 <prvGetNextExpireTime+0x34>
 800a11c:	2300      	movs	r3, #0
 800a11e:	60fb      	str	r3, [r7, #12]
 800a120:	68fb      	ldr	r3, [r7, #12]
 800a122:	4618      	mov	r0, r3
 800a124:	3714      	adds	r7, #20
 800a126:	46bd      	mov	sp, r7
 800a128:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a12c:	4770      	bx	lr
 800a12e:	bf00      	nop
 800a130:	20001198 	.word	0x20001198

0800a134 <prvSampleTimeNow>:
 800a134:	b580      	push	{r7, lr}
 800a136:	b084      	sub	sp, #16
 800a138:	af00      	add	r7, sp, #0
 800a13a:	6078      	str	r0, [r7, #4]
 800a13c:	f7ff fa64 	bl	8009608 <xTaskGetTickCount>
 800a140:	60f8      	str	r0, [r7, #12]
 800a142:	4b0b      	ldr	r3, [pc, #44]	@ (800a170 <prvSampleTimeNow+0x3c>)
 800a144:	681b      	ldr	r3, [r3, #0]
 800a146:	68fa      	ldr	r2, [r7, #12]
 800a148:	429a      	cmp	r2, r3
 800a14a:	d205      	bcs.n	800a158 <prvSampleTimeNow+0x24>
 800a14c:	f000 f93a 	bl	800a3c4 <prvSwitchTimerLists>
 800a150:	687b      	ldr	r3, [r7, #4]
 800a152:	2201      	movs	r2, #1
 800a154:	601a      	str	r2, [r3, #0]
 800a156:	e002      	b.n	800a15e <prvSampleTimeNow+0x2a>
 800a158:	687b      	ldr	r3, [r7, #4]
 800a15a:	2200      	movs	r2, #0
 800a15c:	601a      	str	r2, [r3, #0]
 800a15e:	4a04      	ldr	r2, [pc, #16]	@ (800a170 <prvSampleTimeNow+0x3c>)
 800a160:	68fb      	ldr	r3, [r7, #12]
 800a162:	6013      	str	r3, [r2, #0]
 800a164:	68fb      	ldr	r3, [r7, #12]
 800a166:	4618      	mov	r0, r3
 800a168:	3710      	adds	r7, #16
 800a16a:	46bd      	mov	sp, r7
 800a16c:	bd80      	pop	{r7, pc}
 800a16e:	bf00      	nop
 800a170:	200011a8 	.word	0x200011a8

0800a174 <prvInsertTimerInActiveList>:
 800a174:	b580      	push	{r7, lr}
 800a176:	b086      	sub	sp, #24
 800a178:	af00      	add	r7, sp, #0
 800a17a:	60f8      	str	r0, [r7, #12]
 800a17c:	60b9      	str	r1, [r7, #8]
 800a17e:	607a      	str	r2, [r7, #4]
 800a180:	603b      	str	r3, [r7, #0]
 800a182:	2300      	movs	r3, #0
 800a184:	617b      	str	r3, [r7, #20]
 800a186:	68fb      	ldr	r3, [r7, #12]
 800a188:	68ba      	ldr	r2, [r7, #8]
 800a18a:	605a      	str	r2, [r3, #4]
 800a18c:	68fb      	ldr	r3, [r7, #12]
 800a18e:	68fa      	ldr	r2, [r7, #12]
 800a190:	611a      	str	r2, [r3, #16]
 800a192:	68ba      	ldr	r2, [r7, #8]
 800a194:	687b      	ldr	r3, [r7, #4]
 800a196:	429a      	cmp	r2, r3
 800a198:	d812      	bhi.n	800a1c0 <prvInsertTimerInActiveList+0x4c>
 800a19a:	687a      	ldr	r2, [r7, #4]
 800a19c:	683b      	ldr	r3, [r7, #0]
 800a19e:	1ad2      	subs	r2, r2, r3
 800a1a0:	68fb      	ldr	r3, [r7, #12]
 800a1a2:	699b      	ldr	r3, [r3, #24]
 800a1a4:	429a      	cmp	r2, r3
 800a1a6:	d302      	bcc.n	800a1ae <prvInsertTimerInActiveList+0x3a>
 800a1a8:	2301      	movs	r3, #1
 800a1aa:	617b      	str	r3, [r7, #20]
 800a1ac:	e01b      	b.n	800a1e6 <prvInsertTimerInActiveList+0x72>
 800a1ae:	4b10      	ldr	r3, [pc, #64]	@ (800a1f0 <prvInsertTimerInActiveList+0x7c>)
 800a1b0:	681a      	ldr	r2, [r3, #0]
 800a1b2:	68fb      	ldr	r3, [r7, #12]
 800a1b4:	3304      	adds	r3, #4
 800a1b6:	4619      	mov	r1, r3
 800a1b8:	4610      	mov	r0, r2
 800a1ba:	f7fe f8fa 	bl	80083b2 <vListInsert>
 800a1be:	e012      	b.n	800a1e6 <prvInsertTimerInActiveList+0x72>
 800a1c0:	687a      	ldr	r2, [r7, #4]
 800a1c2:	683b      	ldr	r3, [r7, #0]
 800a1c4:	429a      	cmp	r2, r3
 800a1c6:	d206      	bcs.n	800a1d6 <prvInsertTimerInActiveList+0x62>
 800a1c8:	68ba      	ldr	r2, [r7, #8]
 800a1ca:	683b      	ldr	r3, [r7, #0]
 800a1cc:	429a      	cmp	r2, r3
 800a1ce:	d302      	bcc.n	800a1d6 <prvInsertTimerInActiveList+0x62>
 800a1d0:	2301      	movs	r3, #1
 800a1d2:	617b      	str	r3, [r7, #20]
 800a1d4:	e007      	b.n	800a1e6 <prvInsertTimerInActiveList+0x72>
 800a1d6:	4b07      	ldr	r3, [pc, #28]	@ (800a1f4 <prvInsertTimerInActiveList+0x80>)
 800a1d8:	681a      	ldr	r2, [r3, #0]
 800a1da:	68fb      	ldr	r3, [r7, #12]
 800a1dc:	3304      	adds	r3, #4
 800a1de:	4619      	mov	r1, r3
 800a1e0:	4610      	mov	r0, r2
 800a1e2:	f7fe f8e6 	bl	80083b2 <vListInsert>
 800a1e6:	697b      	ldr	r3, [r7, #20]
 800a1e8:	4618      	mov	r0, r3
 800a1ea:	3718      	adds	r7, #24
 800a1ec:	46bd      	mov	sp, r7
 800a1ee:	bd80      	pop	{r7, pc}
 800a1f0:	2000119c 	.word	0x2000119c
 800a1f4:	20001198 	.word	0x20001198

0800a1f8 <prvProcessReceivedCommands>:
 800a1f8:	b580      	push	{r7, lr}
 800a1fa:	b08e      	sub	sp, #56	@ 0x38
 800a1fc:	af02      	add	r7, sp, #8
 800a1fe:	e0ce      	b.n	800a39e <prvProcessReceivedCommands+0x1a6>
 800a200:	687b      	ldr	r3, [r7, #4]
 800a202:	2b00      	cmp	r3, #0
 800a204:	da19      	bge.n	800a23a <prvProcessReceivedCommands+0x42>
 800a206:	1d3b      	adds	r3, r7, #4
 800a208:	3304      	adds	r3, #4
 800a20a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800a20c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a20e:	2b00      	cmp	r3, #0
 800a210:	d10b      	bne.n	800a22a <prvProcessReceivedCommands+0x32>
 800a212:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a216:	f383 8811 	msr	BASEPRI, r3
 800a21a:	f3bf 8f6f 	isb	sy
 800a21e:	f3bf 8f4f 	dsb	sy
 800a222:	61fb      	str	r3, [r7, #28]
 800a224:	bf00      	nop
 800a226:	bf00      	nop
 800a228:	e7fd      	b.n	800a226 <prvProcessReceivedCommands+0x2e>
 800a22a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a22c:	681b      	ldr	r3, [r3, #0]
 800a22e:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800a230:	6850      	ldr	r0, [r2, #4]
 800a232:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800a234:	6892      	ldr	r2, [r2, #8]
 800a236:	4611      	mov	r1, r2
 800a238:	4798      	blx	r3
 800a23a:	687b      	ldr	r3, [r7, #4]
 800a23c:	2b00      	cmp	r3, #0
 800a23e:	f2c0 80ae 	blt.w	800a39e <prvProcessReceivedCommands+0x1a6>
 800a242:	68fb      	ldr	r3, [r7, #12]
 800a244:	62bb      	str	r3, [r7, #40]	@ 0x28
 800a246:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a248:	695b      	ldr	r3, [r3, #20]
 800a24a:	2b00      	cmp	r3, #0
 800a24c:	d004      	beq.n	800a258 <prvProcessReceivedCommands+0x60>
 800a24e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a250:	3304      	adds	r3, #4
 800a252:	4618      	mov	r0, r3
 800a254:	f7fe f8e6 	bl	8008424 <uxListRemove>
 800a258:	463b      	mov	r3, r7
 800a25a:	4618      	mov	r0, r3
 800a25c:	f7ff ff6a 	bl	800a134 <prvSampleTimeNow>
 800a260:	6278      	str	r0, [r7, #36]	@ 0x24
 800a262:	687b      	ldr	r3, [r7, #4]
 800a264:	2b09      	cmp	r3, #9
 800a266:	f200 8097 	bhi.w	800a398 <prvProcessReceivedCommands+0x1a0>
 800a26a:	a201      	add	r2, pc, #4	@ (adr r2, 800a270 <prvProcessReceivedCommands+0x78>)
 800a26c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a270:	0800a299 	.word	0x0800a299
 800a274:	0800a299 	.word	0x0800a299
 800a278:	0800a299 	.word	0x0800a299
 800a27c:	0800a30f 	.word	0x0800a30f
 800a280:	0800a323 	.word	0x0800a323
 800a284:	0800a36f 	.word	0x0800a36f
 800a288:	0800a299 	.word	0x0800a299
 800a28c:	0800a299 	.word	0x0800a299
 800a290:	0800a30f 	.word	0x0800a30f
 800a294:	0800a323 	.word	0x0800a323
 800a298:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a29a:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800a29e:	f043 0301 	orr.w	r3, r3, #1
 800a2a2:	b2da      	uxtb	r2, r3
 800a2a4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a2a6:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 800a2aa:	68ba      	ldr	r2, [r7, #8]
 800a2ac:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a2ae:	699b      	ldr	r3, [r3, #24]
 800a2b0:	18d1      	adds	r1, r2, r3
 800a2b2:	68bb      	ldr	r3, [r7, #8]
 800a2b4:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800a2b6:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800a2b8:	f7ff ff5c 	bl	800a174 <prvInsertTimerInActiveList>
 800a2bc:	4603      	mov	r3, r0
 800a2be:	2b00      	cmp	r3, #0
 800a2c0:	d06c      	beq.n	800a39c <prvProcessReceivedCommands+0x1a4>
 800a2c2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a2c4:	6a1b      	ldr	r3, [r3, #32]
 800a2c6:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800a2c8:	4798      	blx	r3
 800a2ca:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a2cc:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800a2d0:	f003 0304 	and.w	r3, r3, #4
 800a2d4:	2b00      	cmp	r3, #0
 800a2d6:	d061      	beq.n	800a39c <prvProcessReceivedCommands+0x1a4>
 800a2d8:	68ba      	ldr	r2, [r7, #8]
 800a2da:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a2dc:	699b      	ldr	r3, [r3, #24]
 800a2de:	441a      	add	r2, r3
 800a2e0:	2300      	movs	r3, #0
 800a2e2:	9300      	str	r3, [sp, #0]
 800a2e4:	2300      	movs	r3, #0
 800a2e6:	2100      	movs	r1, #0
 800a2e8:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800a2ea:	f7ff fe01 	bl	8009ef0 <xTimerGenericCommand>
 800a2ee:	6238      	str	r0, [r7, #32]
 800a2f0:	6a3b      	ldr	r3, [r7, #32]
 800a2f2:	2b00      	cmp	r3, #0
 800a2f4:	d152      	bne.n	800a39c <prvProcessReceivedCommands+0x1a4>
 800a2f6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a2fa:	f383 8811 	msr	BASEPRI, r3
 800a2fe:	f3bf 8f6f 	isb	sy
 800a302:	f3bf 8f4f 	dsb	sy
 800a306:	61bb      	str	r3, [r7, #24]
 800a308:	bf00      	nop
 800a30a:	bf00      	nop
 800a30c:	e7fd      	b.n	800a30a <prvProcessReceivedCommands+0x112>
 800a30e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a310:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800a314:	f023 0301 	bic.w	r3, r3, #1
 800a318:	b2da      	uxtb	r2, r3
 800a31a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a31c:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 800a320:	e03d      	b.n	800a39e <prvProcessReceivedCommands+0x1a6>
 800a322:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a324:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800a328:	f043 0301 	orr.w	r3, r3, #1
 800a32c:	b2da      	uxtb	r2, r3
 800a32e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a330:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 800a334:	68ba      	ldr	r2, [r7, #8]
 800a336:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a338:	619a      	str	r2, [r3, #24]
 800a33a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a33c:	699b      	ldr	r3, [r3, #24]
 800a33e:	2b00      	cmp	r3, #0
 800a340:	d10b      	bne.n	800a35a <prvProcessReceivedCommands+0x162>
 800a342:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a346:	f383 8811 	msr	BASEPRI, r3
 800a34a:	f3bf 8f6f 	isb	sy
 800a34e:	f3bf 8f4f 	dsb	sy
 800a352:	617b      	str	r3, [r7, #20]
 800a354:	bf00      	nop
 800a356:	bf00      	nop
 800a358:	e7fd      	b.n	800a356 <prvProcessReceivedCommands+0x15e>
 800a35a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a35c:	699a      	ldr	r2, [r3, #24]
 800a35e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a360:	18d1      	adds	r1, r2, r3
 800a362:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a364:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800a366:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800a368:	f7ff ff04 	bl	800a174 <prvInsertTimerInActiveList>
 800a36c:	e017      	b.n	800a39e <prvProcessReceivedCommands+0x1a6>
 800a36e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a370:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800a374:	f003 0302 	and.w	r3, r3, #2
 800a378:	2b00      	cmp	r3, #0
 800a37a:	d103      	bne.n	800a384 <prvProcessReceivedCommands+0x18c>
 800a37c:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800a37e:	f000 fbeb 	bl	800ab58 <vPortFree>
 800a382:	e00c      	b.n	800a39e <prvProcessReceivedCommands+0x1a6>
 800a384:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a386:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800a38a:	f023 0301 	bic.w	r3, r3, #1
 800a38e:	b2da      	uxtb	r2, r3
 800a390:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a392:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 800a396:	e002      	b.n	800a39e <prvProcessReceivedCommands+0x1a6>
 800a398:	bf00      	nop
 800a39a:	e000      	b.n	800a39e <prvProcessReceivedCommands+0x1a6>
 800a39c:	bf00      	nop
 800a39e:	4b08      	ldr	r3, [pc, #32]	@ (800a3c0 <prvProcessReceivedCommands+0x1c8>)
 800a3a0:	681b      	ldr	r3, [r3, #0]
 800a3a2:	1d39      	adds	r1, r7, #4
 800a3a4:	2200      	movs	r2, #0
 800a3a6:	4618      	mov	r0, r3
 800a3a8:	f7fe fb4c 	bl	8008a44 <xQueueReceive>
 800a3ac:	4603      	mov	r3, r0
 800a3ae:	2b00      	cmp	r3, #0
 800a3b0:	f47f af26 	bne.w	800a200 <prvProcessReceivedCommands+0x8>
 800a3b4:	bf00      	nop
 800a3b6:	bf00      	nop
 800a3b8:	3730      	adds	r7, #48	@ 0x30
 800a3ba:	46bd      	mov	sp, r7
 800a3bc:	bd80      	pop	{r7, pc}
 800a3be:	bf00      	nop
 800a3c0:	200011a0 	.word	0x200011a0

0800a3c4 <prvSwitchTimerLists>:
 800a3c4:	b580      	push	{r7, lr}
 800a3c6:	b088      	sub	sp, #32
 800a3c8:	af02      	add	r7, sp, #8
 800a3ca:	e049      	b.n	800a460 <prvSwitchTimerLists+0x9c>
 800a3cc:	4b2e      	ldr	r3, [pc, #184]	@ (800a488 <prvSwitchTimerLists+0xc4>)
 800a3ce:	681b      	ldr	r3, [r3, #0]
 800a3d0:	68db      	ldr	r3, [r3, #12]
 800a3d2:	681b      	ldr	r3, [r3, #0]
 800a3d4:	613b      	str	r3, [r7, #16]
 800a3d6:	4b2c      	ldr	r3, [pc, #176]	@ (800a488 <prvSwitchTimerLists+0xc4>)
 800a3d8:	681b      	ldr	r3, [r3, #0]
 800a3da:	68db      	ldr	r3, [r3, #12]
 800a3dc:	68db      	ldr	r3, [r3, #12]
 800a3de:	60fb      	str	r3, [r7, #12]
 800a3e0:	68fb      	ldr	r3, [r7, #12]
 800a3e2:	3304      	adds	r3, #4
 800a3e4:	4618      	mov	r0, r3
 800a3e6:	f7fe f81d 	bl	8008424 <uxListRemove>
 800a3ea:	68fb      	ldr	r3, [r7, #12]
 800a3ec:	6a1b      	ldr	r3, [r3, #32]
 800a3ee:	68f8      	ldr	r0, [r7, #12]
 800a3f0:	4798      	blx	r3
 800a3f2:	68fb      	ldr	r3, [r7, #12]
 800a3f4:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800a3f8:	f003 0304 	and.w	r3, r3, #4
 800a3fc:	2b00      	cmp	r3, #0
 800a3fe:	d02f      	beq.n	800a460 <prvSwitchTimerLists+0x9c>
 800a400:	68fb      	ldr	r3, [r7, #12]
 800a402:	699b      	ldr	r3, [r3, #24]
 800a404:	693a      	ldr	r2, [r7, #16]
 800a406:	4413      	add	r3, r2
 800a408:	60bb      	str	r3, [r7, #8]
 800a40a:	68ba      	ldr	r2, [r7, #8]
 800a40c:	693b      	ldr	r3, [r7, #16]
 800a40e:	429a      	cmp	r2, r3
 800a410:	d90e      	bls.n	800a430 <prvSwitchTimerLists+0x6c>
 800a412:	68fb      	ldr	r3, [r7, #12]
 800a414:	68ba      	ldr	r2, [r7, #8]
 800a416:	605a      	str	r2, [r3, #4]
 800a418:	68fb      	ldr	r3, [r7, #12]
 800a41a:	68fa      	ldr	r2, [r7, #12]
 800a41c:	611a      	str	r2, [r3, #16]
 800a41e:	4b1a      	ldr	r3, [pc, #104]	@ (800a488 <prvSwitchTimerLists+0xc4>)
 800a420:	681a      	ldr	r2, [r3, #0]
 800a422:	68fb      	ldr	r3, [r7, #12]
 800a424:	3304      	adds	r3, #4
 800a426:	4619      	mov	r1, r3
 800a428:	4610      	mov	r0, r2
 800a42a:	f7fd ffc2 	bl	80083b2 <vListInsert>
 800a42e:	e017      	b.n	800a460 <prvSwitchTimerLists+0x9c>
 800a430:	2300      	movs	r3, #0
 800a432:	9300      	str	r3, [sp, #0]
 800a434:	2300      	movs	r3, #0
 800a436:	693a      	ldr	r2, [r7, #16]
 800a438:	2100      	movs	r1, #0
 800a43a:	68f8      	ldr	r0, [r7, #12]
 800a43c:	f7ff fd58 	bl	8009ef0 <xTimerGenericCommand>
 800a440:	6078      	str	r0, [r7, #4]
 800a442:	687b      	ldr	r3, [r7, #4]
 800a444:	2b00      	cmp	r3, #0
 800a446:	d10b      	bne.n	800a460 <prvSwitchTimerLists+0x9c>
 800a448:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a44c:	f383 8811 	msr	BASEPRI, r3
 800a450:	f3bf 8f6f 	isb	sy
 800a454:	f3bf 8f4f 	dsb	sy
 800a458:	603b      	str	r3, [r7, #0]
 800a45a:	bf00      	nop
 800a45c:	bf00      	nop
 800a45e:	e7fd      	b.n	800a45c <prvSwitchTimerLists+0x98>
 800a460:	4b09      	ldr	r3, [pc, #36]	@ (800a488 <prvSwitchTimerLists+0xc4>)
 800a462:	681b      	ldr	r3, [r3, #0]
 800a464:	681b      	ldr	r3, [r3, #0]
 800a466:	2b00      	cmp	r3, #0
 800a468:	d1b0      	bne.n	800a3cc <prvSwitchTimerLists+0x8>
 800a46a:	4b07      	ldr	r3, [pc, #28]	@ (800a488 <prvSwitchTimerLists+0xc4>)
 800a46c:	681b      	ldr	r3, [r3, #0]
 800a46e:	617b      	str	r3, [r7, #20]
 800a470:	4b06      	ldr	r3, [pc, #24]	@ (800a48c <prvSwitchTimerLists+0xc8>)
 800a472:	681b      	ldr	r3, [r3, #0]
 800a474:	4a04      	ldr	r2, [pc, #16]	@ (800a488 <prvSwitchTimerLists+0xc4>)
 800a476:	6013      	str	r3, [r2, #0]
 800a478:	4a04      	ldr	r2, [pc, #16]	@ (800a48c <prvSwitchTimerLists+0xc8>)
 800a47a:	697b      	ldr	r3, [r7, #20]
 800a47c:	6013      	str	r3, [r2, #0]
 800a47e:	bf00      	nop
 800a480:	3718      	adds	r7, #24
 800a482:	46bd      	mov	sp, r7
 800a484:	bd80      	pop	{r7, pc}
 800a486:	bf00      	nop
 800a488:	20001198 	.word	0x20001198
 800a48c:	2000119c 	.word	0x2000119c

0800a490 <prvCheckForValidListAndQueue>:
 800a490:	b580      	push	{r7, lr}
 800a492:	b082      	sub	sp, #8
 800a494:	af02      	add	r7, sp, #8
 800a496:	f000 f96f 	bl	800a778 <vPortEnterCritical>
 800a49a:	4b15      	ldr	r3, [pc, #84]	@ (800a4f0 <prvCheckForValidListAndQueue+0x60>)
 800a49c:	681b      	ldr	r3, [r3, #0]
 800a49e:	2b00      	cmp	r3, #0
 800a4a0:	d120      	bne.n	800a4e4 <prvCheckForValidListAndQueue+0x54>
 800a4a2:	4814      	ldr	r0, [pc, #80]	@ (800a4f4 <prvCheckForValidListAndQueue+0x64>)
 800a4a4:	f7fd ff34 	bl	8008310 <vListInitialise>
 800a4a8:	4813      	ldr	r0, [pc, #76]	@ (800a4f8 <prvCheckForValidListAndQueue+0x68>)
 800a4aa:	f7fd ff31 	bl	8008310 <vListInitialise>
 800a4ae:	4b13      	ldr	r3, [pc, #76]	@ (800a4fc <prvCheckForValidListAndQueue+0x6c>)
 800a4b0:	4a10      	ldr	r2, [pc, #64]	@ (800a4f4 <prvCheckForValidListAndQueue+0x64>)
 800a4b2:	601a      	str	r2, [r3, #0]
 800a4b4:	4b12      	ldr	r3, [pc, #72]	@ (800a500 <prvCheckForValidListAndQueue+0x70>)
 800a4b6:	4a10      	ldr	r2, [pc, #64]	@ (800a4f8 <prvCheckForValidListAndQueue+0x68>)
 800a4b8:	601a      	str	r2, [r3, #0]
 800a4ba:	2300      	movs	r3, #0
 800a4bc:	9300      	str	r3, [sp, #0]
 800a4be:	4b11      	ldr	r3, [pc, #68]	@ (800a504 <prvCheckForValidListAndQueue+0x74>)
 800a4c0:	4a11      	ldr	r2, [pc, #68]	@ (800a508 <prvCheckForValidListAndQueue+0x78>)
 800a4c2:	2110      	movs	r1, #16
 800a4c4:	200a      	movs	r0, #10
 800a4c6:	f7fe f841 	bl	800854c <xQueueGenericCreateStatic>
 800a4ca:	4603      	mov	r3, r0
 800a4cc:	4a08      	ldr	r2, [pc, #32]	@ (800a4f0 <prvCheckForValidListAndQueue+0x60>)
 800a4ce:	6013      	str	r3, [r2, #0]
 800a4d0:	4b07      	ldr	r3, [pc, #28]	@ (800a4f0 <prvCheckForValidListAndQueue+0x60>)
 800a4d2:	681b      	ldr	r3, [r3, #0]
 800a4d4:	2b00      	cmp	r3, #0
 800a4d6:	d005      	beq.n	800a4e4 <prvCheckForValidListAndQueue+0x54>
 800a4d8:	4b05      	ldr	r3, [pc, #20]	@ (800a4f0 <prvCheckForValidListAndQueue+0x60>)
 800a4da:	681b      	ldr	r3, [r3, #0]
 800a4dc:	490b      	ldr	r1, [pc, #44]	@ (800a50c <prvCheckForValidListAndQueue+0x7c>)
 800a4de:	4618      	mov	r0, r3
 800a4e0:	f7fe fd24 	bl	8008f2c <vQueueAddToRegistry>
 800a4e4:	f000 f97a 	bl	800a7dc <vPortExitCritical>
 800a4e8:	bf00      	nop
 800a4ea:	46bd      	mov	sp, r7
 800a4ec:	bd80      	pop	{r7, pc}
 800a4ee:	bf00      	nop
 800a4f0:	200011a0 	.word	0x200011a0
 800a4f4:	20001170 	.word	0x20001170
 800a4f8:	20001184 	.word	0x20001184
 800a4fc:	20001198 	.word	0x20001198
 800a500:	2000119c 	.word	0x2000119c
 800a504:	2000124c 	.word	0x2000124c
 800a508:	200011ac 	.word	0x200011ac
 800a50c:	0800e0ec 	.word	0x0800e0ec

0800a510 <pxPortInitialiseStack>:
 800a510:	b480      	push	{r7}
 800a512:	b085      	sub	sp, #20
 800a514:	af00      	add	r7, sp, #0
 800a516:	60f8      	str	r0, [r7, #12]
 800a518:	60b9      	str	r1, [r7, #8]
 800a51a:	607a      	str	r2, [r7, #4]
 800a51c:	68fb      	ldr	r3, [r7, #12]
 800a51e:	3b04      	subs	r3, #4
 800a520:	60fb      	str	r3, [r7, #12]
 800a522:	68fb      	ldr	r3, [r7, #12]
 800a524:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 800a528:	601a      	str	r2, [r3, #0]
 800a52a:	68fb      	ldr	r3, [r7, #12]
 800a52c:	3b04      	subs	r3, #4
 800a52e:	60fb      	str	r3, [r7, #12]
 800a530:	68bb      	ldr	r3, [r7, #8]
 800a532:	f023 0201 	bic.w	r2, r3, #1
 800a536:	68fb      	ldr	r3, [r7, #12]
 800a538:	601a      	str	r2, [r3, #0]
 800a53a:	68fb      	ldr	r3, [r7, #12]
 800a53c:	3b04      	subs	r3, #4
 800a53e:	60fb      	str	r3, [r7, #12]
 800a540:	4a0c      	ldr	r2, [pc, #48]	@ (800a574 <pxPortInitialiseStack+0x64>)
 800a542:	68fb      	ldr	r3, [r7, #12]
 800a544:	601a      	str	r2, [r3, #0]
 800a546:	68fb      	ldr	r3, [r7, #12]
 800a548:	3b14      	subs	r3, #20
 800a54a:	60fb      	str	r3, [r7, #12]
 800a54c:	687a      	ldr	r2, [r7, #4]
 800a54e:	68fb      	ldr	r3, [r7, #12]
 800a550:	601a      	str	r2, [r3, #0]
 800a552:	68fb      	ldr	r3, [r7, #12]
 800a554:	3b04      	subs	r3, #4
 800a556:	60fb      	str	r3, [r7, #12]
 800a558:	68fb      	ldr	r3, [r7, #12]
 800a55a:	f06f 0202 	mvn.w	r2, #2
 800a55e:	601a      	str	r2, [r3, #0]
 800a560:	68fb      	ldr	r3, [r7, #12]
 800a562:	3b20      	subs	r3, #32
 800a564:	60fb      	str	r3, [r7, #12]
 800a566:	68fb      	ldr	r3, [r7, #12]
 800a568:	4618      	mov	r0, r3
 800a56a:	3714      	adds	r7, #20
 800a56c:	46bd      	mov	sp, r7
 800a56e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a572:	4770      	bx	lr
 800a574:	0800a579 	.word	0x0800a579

0800a578 <prvTaskExitError>:
 800a578:	b480      	push	{r7}
 800a57a:	b085      	sub	sp, #20
 800a57c:	af00      	add	r7, sp, #0
 800a57e:	2300      	movs	r3, #0
 800a580:	607b      	str	r3, [r7, #4]
 800a582:	4b13      	ldr	r3, [pc, #76]	@ (800a5d0 <prvTaskExitError+0x58>)
 800a584:	681b      	ldr	r3, [r3, #0]
 800a586:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a58a:	d00b      	beq.n	800a5a4 <prvTaskExitError+0x2c>
 800a58c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a590:	f383 8811 	msr	BASEPRI, r3
 800a594:	f3bf 8f6f 	isb	sy
 800a598:	f3bf 8f4f 	dsb	sy
 800a59c:	60fb      	str	r3, [r7, #12]
 800a59e:	bf00      	nop
 800a5a0:	bf00      	nop
 800a5a2:	e7fd      	b.n	800a5a0 <prvTaskExitError+0x28>
 800a5a4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a5a8:	f383 8811 	msr	BASEPRI, r3
 800a5ac:	f3bf 8f6f 	isb	sy
 800a5b0:	f3bf 8f4f 	dsb	sy
 800a5b4:	60bb      	str	r3, [r7, #8]
 800a5b6:	bf00      	nop
 800a5b8:	bf00      	nop
 800a5ba:	687b      	ldr	r3, [r7, #4]
 800a5bc:	2b00      	cmp	r3, #0
 800a5be:	d0fc      	beq.n	800a5ba <prvTaskExitError+0x42>
 800a5c0:	bf00      	nop
 800a5c2:	bf00      	nop
 800a5c4:	3714      	adds	r7, #20
 800a5c6:	46bd      	mov	sp, r7
 800a5c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a5cc:	4770      	bx	lr
 800a5ce:	bf00      	nop
 800a5d0:	20000010 	.word	0x20000010
	...

0800a5e0 <SVC_Handler>:
 800a5e0:	4b07      	ldr	r3, [pc, #28]	@ (800a600 <pxCurrentTCBConst2>)
 800a5e2:	6819      	ldr	r1, [r3, #0]
 800a5e4:	6808      	ldr	r0, [r1, #0]
 800a5e6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a5ea:	f380 8809 	msr	PSP, r0
 800a5ee:	f3bf 8f6f 	isb	sy
 800a5f2:	f04f 0000 	mov.w	r0, #0
 800a5f6:	f380 8811 	msr	BASEPRI, r0
 800a5fa:	4770      	bx	lr
 800a5fc:	f3af 8000 	nop.w

0800a600 <pxCurrentTCBConst2>:
 800a600:	20000c70 	.word	0x20000c70
 800a604:	bf00      	nop
 800a606:	bf00      	nop

0800a608 <prvPortStartFirstTask>:
 800a608:	4808      	ldr	r0, [pc, #32]	@ (800a62c <prvPortStartFirstTask+0x24>)
 800a60a:	6800      	ldr	r0, [r0, #0]
 800a60c:	6800      	ldr	r0, [r0, #0]
 800a60e:	f380 8808 	msr	MSP, r0
 800a612:	f04f 0000 	mov.w	r0, #0
 800a616:	f380 8814 	msr	CONTROL, r0
 800a61a:	b662      	cpsie	i
 800a61c:	b661      	cpsie	f
 800a61e:	f3bf 8f4f 	dsb	sy
 800a622:	f3bf 8f6f 	isb	sy
 800a626:	df00      	svc	0
 800a628:	bf00      	nop
 800a62a:	bf00      	nop
 800a62c:	e000ed08 	.word	0xe000ed08

0800a630 <xPortStartScheduler>:
 800a630:	b580      	push	{r7, lr}
 800a632:	b086      	sub	sp, #24
 800a634:	af00      	add	r7, sp, #0
 800a636:	4b47      	ldr	r3, [pc, #284]	@ (800a754 <xPortStartScheduler+0x124>)
 800a638:	681b      	ldr	r3, [r3, #0]
 800a63a:	4a47      	ldr	r2, [pc, #284]	@ (800a758 <xPortStartScheduler+0x128>)
 800a63c:	4293      	cmp	r3, r2
 800a63e:	d10b      	bne.n	800a658 <xPortStartScheduler+0x28>
 800a640:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a644:	f383 8811 	msr	BASEPRI, r3
 800a648:	f3bf 8f6f 	isb	sy
 800a64c:	f3bf 8f4f 	dsb	sy
 800a650:	60fb      	str	r3, [r7, #12]
 800a652:	bf00      	nop
 800a654:	bf00      	nop
 800a656:	e7fd      	b.n	800a654 <xPortStartScheduler+0x24>
 800a658:	4b3e      	ldr	r3, [pc, #248]	@ (800a754 <xPortStartScheduler+0x124>)
 800a65a:	681b      	ldr	r3, [r3, #0]
 800a65c:	4a3f      	ldr	r2, [pc, #252]	@ (800a75c <xPortStartScheduler+0x12c>)
 800a65e:	4293      	cmp	r3, r2
 800a660:	d10b      	bne.n	800a67a <xPortStartScheduler+0x4a>
 800a662:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a666:	f383 8811 	msr	BASEPRI, r3
 800a66a:	f3bf 8f6f 	isb	sy
 800a66e:	f3bf 8f4f 	dsb	sy
 800a672:	613b      	str	r3, [r7, #16]
 800a674:	bf00      	nop
 800a676:	bf00      	nop
 800a678:	e7fd      	b.n	800a676 <xPortStartScheduler+0x46>
 800a67a:	4b39      	ldr	r3, [pc, #228]	@ (800a760 <xPortStartScheduler+0x130>)
 800a67c:	617b      	str	r3, [r7, #20]
 800a67e:	697b      	ldr	r3, [r7, #20]
 800a680:	781b      	ldrb	r3, [r3, #0]
 800a682:	b2db      	uxtb	r3, r3
 800a684:	607b      	str	r3, [r7, #4]
 800a686:	697b      	ldr	r3, [r7, #20]
 800a688:	22ff      	movs	r2, #255	@ 0xff
 800a68a:	701a      	strb	r2, [r3, #0]
 800a68c:	697b      	ldr	r3, [r7, #20]
 800a68e:	781b      	ldrb	r3, [r3, #0]
 800a690:	b2db      	uxtb	r3, r3
 800a692:	70fb      	strb	r3, [r7, #3]
 800a694:	78fb      	ldrb	r3, [r7, #3]
 800a696:	b2db      	uxtb	r3, r3
 800a698:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 800a69c:	b2da      	uxtb	r2, r3
 800a69e:	4b31      	ldr	r3, [pc, #196]	@ (800a764 <xPortStartScheduler+0x134>)
 800a6a0:	701a      	strb	r2, [r3, #0]
 800a6a2:	4b31      	ldr	r3, [pc, #196]	@ (800a768 <xPortStartScheduler+0x138>)
 800a6a4:	2207      	movs	r2, #7
 800a6a6:	601a      	str	r2, [r3, #0]
 800a6a8:	e009      	b.n	800a6be <xPortStartScheduler+0x8e>
 800a6aa:	4b2f      	ldr	r3, [pc, #188]	@ (800a768 <xPortStartScheduler+0x138>)
 800a6ac:	681b      	ldr	r3, [r3, #0]
 800a6ae:	3b01      	subs	r3, #1
 800a6b0:	4a2d      	ldr	r2, [pc, #180]	@ (800a768 <xPortStartScheduler+0x138>)
 800a6b2:	6013      	str	r3, [r2, #0]
 800a6b4:	78fb      	ldrb	r3, [r7, #3]
 800a6b6:	b2db      	uxtb	r3, r3
 800a6b8:	005b      	lsls	r3, r3, #1
 800a6ba:	b2db      	uxtb	r3, r3
 800a6bc:	70fb      	strb	r3, [r7, #3]
 800a6be:	78fb      	ldrb	r3, [r7, #3]
 800a6c0:	b2db      	uxtb	r3, r3
 800a6c2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800a6c6:	2b80      	cmp	r3, #128	@ 0x80
 800a6c8:	d0ef      	beq.n	800a6aa <xPortStartScheduler+0x7a>
 800a6ca:	4b27      	ldr	r3, [pc, #156]	@ (800a768 <xPortStartScheduler+0x138>)
 800a6cc:	681b      	ldr	r3, [r3, #0]
 800a6ce:	f1c3 0307 	rsb	r3, r3, #7
 800a6d2:	2b04      	cmp	r3, #4
 800a6d4:	d00b      	beq.n	800a6ee <xPortStartScheduler+0xbe>
 800a6d6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a6da:	f383 8811 	msr	BASEPRI, r3
 800a6de:	f3bf 8f6f 	isb	sy
 800a6e2:	f3bf 8f4f 	dsb	sy
 800a6e6:	60bb      	str	r3, [r7, #8]
 800a6e8:	bf00      	nop
 800a6ea:	bf00      	nop
 800a6ec:	e7fd      	b.n	800a6ea <xPortStartScheduler+0xba>
 800a6ee:	4b1e      	ldr	r3, [pc, #120]	@ (800a768 <xPortStartScheduler+0x138>)
 800a6f0:	681b      	ldr	r3, [r3, #0]
 800a6f2:	021b      	lsls	r3, r3, #8
 800a6f4:	4a1c      	ldr	r2, [pc, #112]	@ (800a768 <xPortStartScheduler+0x138>)
 800a6f6:	6013      	str	r3, [r2, #0]
 800a6f8:	4b1b      	ldr	r3, [pc, #108]	@ (800a768 <xPortStartScheduler+0x138>)
 800a6fa:	681b      	ldr	r3, [r3, #0]
 800a6fc:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 800a700:	4a19      	ldr	r2, [pc, #100]	@ (800a768 <xPortStartScheduler+0x138>)
 800a702:	6013      	str	r3, [r2, #0]
 800a704:	687b      	ldr	r3, [r7, #4]
 800a706:	b2da      	uxtb	r2, r3
 800a708:	697b      	ldr	r3, [r7, #20]
 800a70a:	701a      	strb	r2, [r3, #0]
 800a70c:	4b17      	ldr	r3, [pc, #92]	@ (800a76c <xPortStartScheduler+0x13c>)
 800a70e:	681b      	ldr	r3, [r3, #0]
 800a710:	4a16      	ldr	r2, [pc, #88]	@ (800a76c <xPortStartScheduler+0x13c>)
 800a712:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 800a716:	6013      	str	r3, [r2, #0]
 800a718:	4b14      	ldr	r3, [pc, #80]	@ (800a76c <xPortStartScheduler+0x13c>)
 800a71a:	681b      	ldr	r3, [r3, #0]
 800a71c:	4a13      	ldr	r2, [pc, #76]	@ (800a76c <xPortStartScheduler+0x13c>)
 800a71e:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 800a722:	6013      	str	r3, [r2, #0]
 800a724:	f000 f8da 	bl	800a8dc <vPortSetupTimerInterrupt>
 800a728:	4b11      	ldr	r3, [pc, #68]	@ (800a770 <xPortStartScheduler+0x140>)
 800a72a:	2200      	movs	r2, #0
 800a72c:	601a      	str	r2, [r3, #0]
 800a72e:	f000 f8f9 	bl	800a924 <vPortEnableVFP>
 800a732:	4b10      	ldr	r3, [pc, #64]	@ (800a774 <xPortStartScheduler+0x144>)
 800a734:	681b      	ldr	r3, [r3, #0]
 800a736:	4a0f      	ldr	r2, [pc, #60]	@ (800a774 <xPortStartScheduler+0x144>)
 800a738:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 800a73c:	6013      	str	r3, [r2, #0]
 800a73e:	f7ff ff63 	bl	800a608 <prvPortStartFirstTask>
 800a742:	f7ff f82b 	bl	800979c <vTaskSwitchContext>
 800a746:	f7ff ff17 	bl	800a578 <prvTaskExitError>
 800a74a:	2300      	movs	r3, #0
 800a74c:	4618      	mov	r0, r3
 800a74e:	3718      	adds	r7, #24
 800a750:	46bd      	mov	sp, r7
 800a752:	bd80      	pop	{r7, pc}
 800a754:	e000ed00 	.word	0xe000ed00
 800a758:	410fc271 	.word	0x410fc271
 800a75c:	410fc270 	.word	0x410fc270
 800a760:	e000e400 	.word	0xe000e400
 800a764:	2000129c 	.word	0x2000129c
 800a768:	200012a0 	.word	0x200012a0
 800a76c:	e000ed20 	.word	0xe000ed20
 800a770:	20000010 	.word	0x20000010
 800a774:	e000ef34 	.word	0xe000ef34

0800a778 <vPortEnterCritical>:
 800a778:	b480      	push	{r7}
 800a77a:	b083      	sub	sp, #12
 800a77c:	af00      	add	r7, sp, #0
 800a77e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a782:	f383 8811 	msr	BASEPRI, r3
 800a786:	f3bf 8f6f 	isb	sy
 800a78a:	f3bf 8f4f 	dsb	sy
 800a78e:	607b      	str	r3, [r7, #4]
 800a790:	bf00      	nop
 800a792:	4b10      	ldr	r3, [pc, #64]	@ (800a7d4 <vPortEnterCritical+0x5c>)
 800a794:	681b      	ldr	r3, [r3, #0]
 800a796:	3301      	adds	r3, #1
 800a798:	4a0e      	ldr	r2, [pc, #56]	@ (800a7d4 <vPortEnterCritical+0x5c>)
 800a79a:	6013      	str	r3, [r2, #0]
 800a79c:	4b0d      	ldr	r3, [pc, #52]	@ (800a7d4 <vPortEnterCritical+0x5c>)
 800a79e:	681b      	ldr	r3, [r3, #0]
 800a7a0:	2b01      	cmp	r3, #1
 800a7a2:	d110      	bne.n	800a7c6 <vPortEnterCritical+0x4e>
 800a7a4:	4b0c      	ldr	r3, [pc, #48]	@ (800a7d8 <vPortEnterCritical+0x60>)
 800a7a6:	681b      	ldr	r3, [r3, #0]
 800a7a8:	b2db      	uxtb	r3, r3
 800a7aa:	2b00      	cmp	r3, #0
 800a7ac:	d00b      	beq.n	800a7c6 <vPortEnterCritical+0x4e>
 800a7ae:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a7b2:	f383 8811 	msr	BASEPRI, r3
 800a7b6:	f3bf 8f6f 	isb	sy
 800a7ba:	f3bf 8f4f 	dsb	sy
 800a7be:	603b      	str	r3, [r7, #0]
 800a7c0:	bf00      	nop
 800a7c2:	bf00      	nop
 800a7c4:	e7fd      	b.n	800a7c2 <vPortEnterCritical+0x4a>
 800a7c6:	bf00      	nop
 800a7c8:	370c      	adds	r7, #12
 800a7ca:	46bd      	mov	sp, r7
 800a7cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a7d0:	4770      	bx	lr
 800a7d2:	bf00      	nop
 800a7d4:	20000010 	.word	0x20000010
 800a7d8:	e000ed04 	.word	0xe000ed04

0800a7dc <vPortExitCritical>:
 800a7dc:	b480      	push	{r7}
 800a7de:	b083      	sub	sp, #12
 800a7e0:	af00      	add	r7, sp, #0
 800a7e2:	4b12      	ldr	r3, [pc, #72]	@ (800a82c <vPortExitCritical+0x50>)
 800a7e4:	681b      	ldr	r3, [r3, #0]
 800a7e6:	2b00      	cmp	r3, #0
 800a7e8:	d10b      	bne.n	800a802 <vPortExitCritical+0x26>
 800a7ea:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a7ee:	f383 8811 	msr	BASEPRI, r3
 800a7f2:	f3bf 8f6f 	isb	sy
 800a7f6:	f3bf 8f4f 	dsb	sy
 800a7fa:	607b      	str	r3, [r7, #4]
 800a7fc:	bf00      	nop
 800a7fe:	bf00      	nop
 800a800:	e7fd      	b.n	800a7fe <vPortExitCritical+0x22>
 800a802:	4b0a      	ldr	r3, [pc, #40]	@ (800a82c <vPortExitCritical+0x50>)
 800a804:	681b      	ldr	r3, [r3, #0]
 800a806:	3b01      	subs	r3, #1
 800a808:	4a08      	ldr	r2, [pc, #32]	@ (800a82c <vPortExitCritical+0x50>)
 800a80a:	6013      	str	r3, [r2, #0]
 800a80c:	4b07      	ldr	r3, [pc, #28]	@ (800a82c <vPortExitCritical+0x50>)
 800a80e:	681b      	ldr	r3, [r3, #0]
 800a810:	2b00      	cmp	r3, #0
 800a812:	d105      	bne.n	800a820 <vPortExitCritical+0x44>
 800a814:	2300      	movs	r3, #0
 800a816:	603b      	str	r3, [r7, #0]
 800a818:	683b      	ldr	r3, [r7, #0]
 800a81a:	f383 8811 	msr	BASEPRI, r3
 800a81e:	bf00      	nop
 800a820:	bf00      	nop
 800a822:	370c      	adds	r7, #12
 800a824:	46bd      	mov	sp, r7
 800a826:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a82a:	4770      	bx	lr
 800a82c:	20000010 	.word	0x20000010

0800a830 <PendSV_Handler>:
 800a830:	f3ef 8009 	mrs	r0, PSP
 800a834:	f3bf 8f6f 	isb	sy
 800a838:	4b15      	ldr	r3, [pc, #84]	@ (800a890 <pxCurrentTCBConst>)
 800a83a:	681a      	ldr	r2, [r3, #0]
 800a83c:	f01e 0f10 	tst.w	lr, #16
 800a840:	bf08      	it	eq
 800a842:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800a846:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a84a:	6010      	str	r0, [r2, #0]
 800a84c:	e92d 0009 	stmdb	sp!, {r0, r3}
 800a850:	f04f 0050 	mov.w	r0, #80	@ 0x50
 800a854:	f380 8811 	msr	BASEPRI, r0
 800a858:	f3bf 8f4f 	dsb	sy
 800a85c:	f3bf 8f6f 	isb	sy
 800a860:	f7fe ff9c 	bl	800979c <vTaskSwitchContext>
 800a864:	f04f 0000 	mov.w	r0, #0
 800a868:	f380 8811 	msr	BASEPRI, r0
 800a86c:	bc09      	pop	{r0, r3}
 800a86e:	6819      	ldr	r1, [r3, #0]
 800a870:	6808      	ldr	r0, [r1, #0]
 800a872:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a876:	f01e 0f10 	tst.w	lr, #16
 800a87a:	bf08      	it	eq
 800a87c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800a880:	f380 8809 	msr	PSP, r0
 800a884:	f3bf 8f6f 	isb	sy
 800a888:	4770      	bx	lr
 800a88a:	bf00      	nop
 800a88c:	f3af 8000 	nop.w

0800a890 <pxCurrentTCBConst>:
 800a890:	20000c70 	.word	0x20000c70
 800a894:	bf00      	nop
 800a896:	bf00      	nop

0800a898 <xPortSysTickHandler>:
 800a898:	b580      	push	{r7, lr}
 800a89a:	b082      	sub	sp, #8
 800a89c:	af00      	add	r7, sp, #0
 800a89e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a8a2:	f383 8811 	msr	BASEPRI, r3
 800a8a6:	f3bf 8f6f 	isb	sy
 800a8aa:	f3bf 8f4f 	dsb	sy
 800a8ae:	607b      	str	r3, [r7, #4]
 800a8b0:	bf00      	nop
 800a8b2:	f7fe feb9 	bl	8009628 <xTaskIncrementTick>
 800a8b6:	4603      	mov	r3, r0
 800a8b8:	2b00      	cmp	r3, #0
 800a8ba:	d003      	beq.n	800a8c4 <xPortSysTickHandler+0x2c>
 800a8bc:	4b06      	ldr	r3, [pc, #24]	@ (800a8d8 <xPortSysTickHandler+0x40>)
 800a8be:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800a8c2:	601a      	str	r2, [r3, #0]
 800a8c4:	2300      	movs	r3, #0
 800a8c6:	603b      	str	r3, [r7, #0]
 800a8c8:	683b      	ldr	r3, [r7, #0]
 800a8ca:	f383 8811 	msr	BASEPRI, r3
 800a8ce:	bf00      	nop
 800a8d0:	bf00      	nop
 800a8d2:	3708      	adds	r7, #8
 800a8d4:	46bd      	mov	sp, r7
 800a8d6:	bd80      	pop	{r7, pc}
 800a8d8:	e000ed04 	.word	0xe000ed04

0800a8dc <vPortSetupTimerInterrupt>:
 800a8dc:	b480      	push	{r7}
 800a8de:	af00      	add	r7, sp, #0
 800a8e0:	4b0b      	ldr	r3, [pc, #44]	@ (800a910 <vPortSetupTimerInterrupt+0x34>)
 800a8e2:	2200      	movs	r2, #0
 800a8e4:	601a      	str	r2, [r3, #0]
 800a8e6:	4b0b      	ldr	r3, [pc, #44]	@ (800a914 <vPortSetupTimerInterrupt+0x38>)
 800a8e8:	2200      	movs	r2, #0
 800a8ea:	601a      	str	r2, [r3, #0]
 800a8ec:	4b0a      	ldr	r3, [pc, #40]	@ (800a918 <vPortSetupTimerInterrupt+0x3c>)
 800a8ee:	681b      	ldr	r3, [r3, #0]
 800a8f0:	4a0a      	ldr	r2, [pc, #40]	@ (800a91c <vPortSetupTimerInterrupt+0x40>)
 800a8f2:	fba2 2303 	umull	r2, r3, r2, r3
 800a8f6:	099b      	lsrs	r3, r3, #6
 800a8f8:	4a09      	ldr	r2, [pc, #36]	@ (800a920 <vPortSetupTimerInterrupt+0x44>)
 800a8fa:	3b01      	subs	r3, #1
 800a8fc:	6013      	str	r3, [r2, #0]
 800a8fe:	4b04      	ldr	r3, [pc, #16]	@ (800a910 <vPortSetupTimerInterrupt+0x34>)
 800a900:	2207      	movs	r2, #7
 800a902:	601a      	str	r2, [r3, #0]
 800a904:	bf00      	nop
 800a906:	46bd      	mov	sp, r7
 800a908:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a90c:	4770      	bx	lr
 800a90e:	bf00      	nop
 800a910:	e000e010 	.word	0xe000e010
 800a914:	e000e018 	.word	0xe000e018
 800a918:	20000004 	.word	0x20000004
 800a91c:	10624dd3 	.word	0x10624dd3
 800a920:	e000e014 	.word	0xe000e014

0800a924 <vPortEnableVFP>:
 800a924:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 800a934 <vPortEnableVFP+0x10>
 800a928:	6801      	ldr	r1, [r0, #0]
 800a92a:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800a92e:	6001      	str	r1, [r0, #0]
 800a930:	4770      	bx	lr
 800a932:	bf00      	nop
 800a934:	e000ed88 	.word	0xe000ed88

0800a938 <vPortValidateInterruptPriority>:
 800a938:	b480      	push	{r7}
 800a93a:	b085      	sub	sp, #20
 800a93c:	af00      	add	r7, sp, #0
 800a93e:	f3ef 8305 	mrs	r3, IPSR
 800a942:	60fb      	str	r3, [r7, #12]
 800a944:	68fb      	ldr	r3, [r7, #12]
 800a946:	2b0f      	cmp	r3, #15
 800a948:	d915      	bls.n	800a976 <vPortValidateInterruptPriority+0x3e>
 800a94a:	4a18      	ldr	r2, [pc, #96]	@ (800a9ac <vPortValidateInterruptPriority+0x74>)
 800a94c:	68fb      	ldr	r3, [r7, #12]
 800a94e:	4413      	add	r3, r2
 800a950:	781b      	ldrb	r3, [r3, #0]
 800a952:	72fb      	strb	r3, [r7, #11]
 800a954:	4b16      	ldr	r3, [pc, #88]	@ (800a9b0 <vPortValidateInterruptPriority+0x78>)
 800a956:	781b      	ldrb	r3, [r3, #0]
 800a958:	7afa      	ldrb	r2, [r7, #11]
 800a95a:	429a      	cmp	r2, r3
 800a95c:	d20b      	bcs.n	800a976 <vPortValidateInterruptPriority+0x3e>
 800a95e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a962:	f383 8811 	msr	BASEPRI, r3
 800a966:	f3bf 8f6f 	isb	sy
 800a96a:	f3bf 8f4f 	dsb	sy
 800a96e:	607b      	str	r3, [r7, #4]
 800a970:	bf00      	nop
 800a972:	bf00      	nop
 800a974:	e7fd      	b.n	800a972 <vPortValidateInterruptPriority+0x3a>
 800a976:	4b0f      	ldr	r3, [pc, #60]	@ (800a9b4 <vPortValidateInterruptPriority+0x7c>)
 800a978:	681b      	ldr	r3, [r3, #0]
 800a97a:	f403 62e0 	and.w	r2, r3, #1792	@ 0x700
 800a97e:	4b0e      	ldr	r3, [pc, #56]	@ (800a9b8 <vPortValidateInterruptPriority+0x80>)
 800a980:	681b      	ldr	r3, [r3, #0]
 800a982:	429a      	cmp	r2, r3
 800a984:	d90b      	bls.n	800a99e <vPortValidateInterruptPriority+0x66>
 800a986:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a98a:	f383 8811 	msr	BASEPRI, r3
 800a98e:	f3bf 8f6f 	isb	sy
 800a992:	f3bf 8f4f 	dsb	sy
 800a996:	603b      	str	r3, [r7, #0]
 800a998:	bf00      	nop
 800a99a:	bf00      	nop
 800a99c:	e7fd      	b.n	800a99a <vPortValidateInterruptPriority+0x62>
 800a99e:	bf00      	nop
 800a9a0:	3714      	adds	r7, #20
 800a9a2:	46bd      	mov	sp, r7
 800a9a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a9a8:	4770      	bx	lr
 800a9aa:	bf00      	nop
 800a9ac:	e000e3f0 	.word	0xe000e3f0
 800a9b0:	2000129c 	.word	0x2000129c
 800a9b4:	e000ed0c 	.word	0xe000ed0c
 800a9b8:	200012a0 	.word	0x200012a0

0800a9bc <pvPortMalloc>:
 800a9bc:	b580      	push	{r7, lr}
 800a9be:	b08a      	sub	sp, #40	@ 0x28
 800a9c0:	af00      	add	r7, sp, #0
 800a9c2:	6078      	str	r0, [r7, #4]
 800a9c4:	2300      	movs	r3, #0
 800a9c6:	61fb      	str	r3, [r7, #28]
 800a9c8:	f7fe fd72 	bl	80094b0 <vTaskSuspendAll>
 800a9cc:	4b5c      	ldr	r3, [pc, #368]	@ (800ab40 <pvPortMalloc+0x184>)
 800a9ce:	681b      	ldr	r3, [r3, #0]
 800a9d0:	2b00      	cmp	r3, #0
 800a9d2:	d101      	bne.n	800a9d8 <pvPortMalloc+0x1c>
 800a9d4:	f000 f924 	bl	800ac20 <prvHeapInit>
 800a9d8:	4b5a      	ldr	r3, [pc, #360]	@ (800ab44 <pvPortMalloc+0x188>)
 800a9da:	681a      	ldr	r2, [r3, #0]
 800a9dc:	687b      	ldr	r3, [r7, #4]
 800a9de:	4013      	ands	r3, r2
 800a9e0:	2b00      	cmp	r3, #0
 800a9e2:	f040 8095 	bne.w	800ab10 <pvPortMalloc+0x154>
 800a9e6:	687b      	ldr	r3, [r7, #4]
 800a9e8:	2b00      	cmp	r3, #0
 800a9ea:	d01e      	beq.n	800aa2a <pvPortMalloc+0x6e>
 800a9ec:	2208      	movs	r2, #8
 800a9ee:	687b      	ldr	r3, [r7, #4]
 800a9f0:	4413      	add	r3, r2
 800a9f2:	607b      	str	r3, [r7, #4]
 800a9f4:	687b      	ldr	r3, [r7, #4]
 800a9f6:	f003 0307 	and.w	r3, r3, #7
 800a9fa:	2b00      	cmp	r3, #0
 800a9fc:	d015      	beq.n	800aa2a <pvPortMalloc+0x6e>
 800a9fe:	687b      	ldr	r3, [r7, #4]
 800aa00:	f023 0307 	bic.w	r3, r3, #7
 800aa04:	3308      	adds	r3, #8
 800aa06:	607b      	str	r3, [r7, #4]
 800aa08:	687b      	ldr	r3, [r7, #4]
 800aa0a:	f003 0307 	and.w	r3, r3, #7
 800aa0e:	2b00      	cmp	r3, #0
 800aa10:	d00b      	beq.n	800aa2a <pvPortMalloc+0x6e>
 800aa12:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800aa16:	f383 8811 	msr	BASEPRI, r3
 800aa1a:	f3bf 8f6f 	isb	sy
 800aa1e:	f3bf 8f4f 	dsb	sy
 800aa22:	617b      	str	r3, [r7, #20]
 800aa24:	bf00      	nop
 800aa26:	bf00      	nop
 800aa28:	e7fd      	b.n	800aa26 <pvPortMalloc+0x6a>
 800aa2a:	687b      	ldr	r3, [r7, #4]
 800aa2c:	2b00      	cmp	r3, #0
 800aa2e:	d06f      	beq.n	800ab10 <pvPortMalloc+0x154>
 800aa30:	4b45      	ldr	r3, [pc, #276]	@ (800ab48 <pvPortMalloc+0x18c>)
 800aa32:	681b      	ldr	r3, [r3, #0]
 800aa34:	687a      	ldr	r2, [r7, #4]
 800aa36:	429a      	cmp	r2, r3
 800aa38:	d86a      	bhi.n	800ab10 <pvPortMalloc+0x154>
 800aa3a:	4b44      	ldr	r3, [pc, #272]	@ (800ab4c <pvPortMalloc+0x190>)
 800aa3c:	623b      	str	r3, [r7, #32]
 800aa3e:	4b43      	ldr	r3, [pc, #268]	@ (800ab4c <pvPortMalloc+0x190>)
 800aa40:	681b      	ldr	r3, [r3, #0]
 800aa42:	627b      	str	r3, [r7, #36]	@ 0x24
 800aa44:	e004      	b.n	800aa50 <pvPortMalloc+0x94>
 800aa46:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800aa48:	623b      	str	r3, [r7, #32]
 800aa4a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800aa4c:	681b      	ldr	r3, [r3, #0]
 800aa4e:	627b      	str	r3, [r7, #36]	@ 0x24
 800aa50:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800aa52:	685b      	ldr	r3, [r3, #4]
 800aa54:	687a      	ldr	r2, [r7, #4]
 800aa56:	429a      	cmp	r2, r3
 800aa58:	d903      	bls.n	800aa62 <pvPortMalloc+0xa6>
 800aa5a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800aa5c:	681b      	ldr	r3, [r3, #0]
 800aa5e:	2b00      	cmp	r3, #0
 800aa60:	d1f1      	bne.n	800aa46 <pvPortMalloc+0x8a>
 800aa62:	4b37      	ldr	r3, [pc, #220]	@ (800ab40 <pvPortMalloc+0x184>)
 800aa64:	681b      	ldr	r3, [r3, #0]
 800aa66:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800aa68:	429a      	cmp	r2, r3
 800aa6a:	d051      	beq.n	800ab10 <pvPortMalloc+0x154>
 800aa6c:	6a3b      	ldr	r3, [r7, #32]
 800aa6e:	681b      	ldr	r3, [r3, #0]
 800aa70:	2208      	movs	r2, #8
 800aa72:	4413      	add	r3, r2
 800aa74:	61fb      	str	r3, [r7, #28]
 800aa76:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800aa78:	681a      	ldr	r2, [r3, #0]
 800aa7a:	6a3b      	ldr	r3, [r7, #32]
 800aa7c:	601a      	str	r2, [r3, #0]
 800aa7e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800aa80:	685a      	ldr	r2, [r3, #4]
 800aa82:	687b      	ldr	r3, [r7, #4]
 800aa84:	1ad2      	subs	r2, r2, r3
 800aa86:	2308      	movs	r3, #8
 800aa88:	005b      	lsls	r3, r3, #1
 800aa8a:	429a      	cmp	r2, r3
 800aa8c:	d920      	bls.n	800aad0 <pvPortMalloc+0x114>
 800aa8e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800aa90:	687b      	ldr	r3, [r7, #4]
 800aa92:	4413      	add	r3, r2
 800aa94:	61bb      	str	r3, [r7, #24]
 800aa96:	69bb      	ldr	r3, [r7, #24]
 800aa98:	f003 0307 	and.w	r3, r3, #7
 800aa9c:	2b00      	cmp	r3, #0
 800aa9e:	d00b      	beq.n	800aab8 <pvPortMalloc+0xfc>
 800aaa0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800aaa4:	f383 8811 	msr	BASEPRI, r3
 800aaa8:	f3bf 8f6f 	isb	sy
 800aaac:	f3bf 8f4f 	dsb	sy
 800aab0:	613b      	str	r3, [r7, #16]
 800aab2:	bf00      	nop
 800aab4:	bf00      	nop
 800aab6:	e7fd      	b.n	800aab4 <pvPortMalloc+0xf8>
 800aab8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800aaba:	685a      	ldr	r2, [r3, #4]
 800aabc:	687b      	ldr	r3, [r7, #4]
 800aabe:	1ad2      	subs	r2, r2, r3
 800aac0:	69bb      	ldr	r3, [r7, #24]
 800aac2:	605a      	str	r2, [r3, #4]
 800aac4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800aac6:	687a      	ldr	r2, [r7, #4]
 800aac8:	605a      	str	r2, [r3, #4]
 800aaca:	69b8      	ldr	r0, [r7, #24]
 800aacc:	f000 f90a 	bl	800ace4 <prvInsertBlockIntoFreeList>
 800aad0:	4b1d      	ldr	r3, [pc, #116]	@ (800ab48 <pvPortMalloc+0x18c>)
 800aad2:	681a      	ldr	r2, [r3, #0]
 800aad4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800aad6:	685b      	ldr	r3, [r3, #4]
 800aad8:	1ad3      	subs	r3, r2, r3
 800aada:	4a1b      	ldr	r2, [pc, #108]	@ (800ab48 <pvPortMalloc+0x18c>)
 800aadc:	6013      	str	r3, [r2, #0]
 800aade:	4b1a      	ldr	r3, [pc, #104]	@ (800ab48 <pvPortMalloc+0x18c>)
 800aae0:	681a      	ldr	r2, [r3, #0]
 800aae2:	4b1b      	ldr	r3, [pc, #108]	@ (800ab50 <pvPortMalloc+0x194>)
 800aae4:	681b      	ldr	r3, [r3, #0]
 800aae6:	429a      	cmp	r2, r3
 800aae8:	d203      	bcs.n	800aaf2 <pvPortMalloc+0x136>
 800aaea:	4b17      	ldr	r3, [pc, #92]	@ (800ab48 <pvPortMalloc+0x18c>)
 800aaec:	681b      	ldr	r3, [r3, #0]
 800aaee:	4a18      	ldr	r2, [pc, #96]	@ (800ab50 <pvPortMalloc+0x194>)
 800aaf0:	6013      	str	r3, [r2, #0]
 800aaf2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800aaf4:	685a      	ldr	r2, [r3, #4]
 800aaf6:	4b13      	ldr	r3, [pc, #76]	@ (800ab44 <pvPortMalloc+0x188>)
 800aaf8:	681b      	ldr	r3, [r3, #0]
 800aafa:	431a      	orrs	r2, r3
 800aafc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800aafe:	605a      	str	r2, [r3, #4]
 800ab00:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800ab02:	2200      	movs	r2, #0
 800ab04:	601a      	str	r2, [r3, #0]
 800ab06:	4b13      	ldr	r3, [pc, #76]	@ (800ab54 <pvPortMalloc+0x198>)
 800ab08:	681b      	ldr	r3, [r3, #0]
 800ab0a:	3301      	adds	r3, #1
 800ab0c:	4a11      	ldr	r2, [pc, #68]	@ (800ab54 <pvPortMalloc+0x198>)
 800ab0e:	6013      	str	r3, [r2, #0]
 800ab10:	f7fe fcdc 	bl	80094cc <xTaskResumeAll>
 800ab14:	69fb      	ldr	r3, [r7, #28]
 800ab16:	f003 0307 	and.w	r3, r3, #7
 800ab1a:	2b00      	cmp	r3, #0
 800ab1c:	d00b      	beq.n	800ab36 <pvPortMalloc+0x17a>
 800ab1e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ab22:	f383 8811 	msr	BASEPRI, r3
 800ab26:	f3bf 8f6f 	isb	sy
 800ab2a:	f3bf 8f4f 	dsb	sy
 800ab2e:	60fb      	str	r3, [r7, #12]
 800ab30:	bf00      	nop
 800ab32:	bf00      	nop
 800ab34:	e7fd      	b.n	800ab32 <pvPortMalloc+0x176>
 800ab36:	69fb      	ldr	r3, [r7, #28]
 800ab38:	4618      	mov	r0, r3
 800ab3a:	3728      	adds	r7, #40	@ 0x28
 800ab3c:	46bd      	mov	sp, r7
 800ab3e:	bd80      	pop	{r7, pc}
 800ab40:	20004eac 	.word	0x20004eac
 800ab44:	20004ec0 	.word	0x20004ec0
 800ab48:	20004eb0 	.word	0x20004eb0
 800ab4c:	20004ea4 	.word	0x20004ea4
 800ab50:	20004eb4 	.word	0x20004eb4
 800ab54:	20004eb8 	.word	0x20004eb8

0800ab58 <vPortFree>:
 800ab58:	b580      	push	{r7, lr}
 800ab5a:	b086      	sub	sp, #24
 800ab5c:	af00      	add	r7, sp, #0
 800ab5e:	6078      	str	r0, [r7, #4]
 800ab60:	687b      	ldr	r3, [r7, #4]
 800ab62:	617b      	str	r3, [r7, #20]
 800ab64:	687b      	ldr	r3, [r7, #4]
 800ab66:	2b00      	cmp	r3, #0
 800ab68:	d04f      	beq.n	800ac0a <vPortFree+0xb2>
 800ab6a:	2308      	movs	r3, #8
 800ab6c:	425b      	negs	r3, r3
 800ab6e:	697a      	ldr	r2, [r7, #20]
 800ab70:	4413      	add	r3, r2
 800ab72:	617b      	str	r3, [r7, #20]
 800ab74:	697b      	ldr	r3, [r7, #20]
 800ab76:	613b      	str	r3, [r7, #16]
 800ab78:	693b      	ldr	r3, [r7, #16]
 800ab7a:	685a      	ldr	r2, [r3, #4]
 800ab7c:	4b25      	ldr	r3, [pc, #148]	@ (800ac14 <vPortFree+0xbc>)
 800ab7e:	681b      	ldr	r3, [r3, #0]
 800ab80:	4013      	ands	r3, r2
 800ab82:	2b00      	cmp	r3, #0
 800ab84:	d10b      	bne.n	800ab9e <vPortFree+0x46>
 800ab86:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ab8a:	f383 8811 	msr	BASEPRI, r3
 800ab8e:	f3bf 8f6f 	isb	sy
 800ab92:	f3bf 8f4f 	dsb	sy
 800ab96:	60fb      	str	r3, [r7, #12]
 800ab98:	bf00      	nop
 800ab9a:	bf00      	nop
 800ab9c:	e7fd      	b.n	800ab9a <vPortFree+0x42>
 800ab9e:	693b      	ldr	r3, [r7, #16]
 800aba0:	681b      	ldr	r3, [r3, #0]
 800aba2:	2b00      	cmp	r3, #0
 800aba4:	d00b      	beq.n	800abbe <vPortFree+0x66>
 800aba6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800abaa:	f383 8811 	msr	BASEPRI, r3
 800abae:	f3bf 8f6f 	isb	sy
 800abb2:	f3bf 8f4f 	dsb	sy
 800abb6:	60bb      	str	r3, [r7, #8]
 800abb8:	bf00      	nop
 800abba:	bf00      	nop
 800abbc:	e7fd      	b.n	800abba <vPortFree+0x62>
 800abbe:	693b      	ldr	r3, [r7, #16]
 800abc0:	685a      	ldr	r2, [r3, #4]
 800abc2:	4b14      	ldr	r3, [pc, #80]	@ (800ac14 <vPortFree+0xbc>)
 800abc4:	681b      	ldr	r3, [r3, #0]
 800abc6:	4013      	ands	r3, r2
 800abc8:	2b00      	cmp	r3, #0
 800abca:	d01e      	beq.n	800ac0a <vPortFree+0xb2>
 800abcc:	693b      	ldr	r3, [r7, #16]
 800abce:	681b      	ldr	r3, [r3, #0]
 800abd0:	2b00      	cmp	r3, #0
 800abd2:	d11a      	bne.n	800ac0a <vPortFree+0xb2>
 800abd4:	693b      	ldr	r3, [r7, #16]
 800abd6:	685a      	ldr	r2, [r3, #4]
 800abd8:	4b0e      	ldr	r3, [pc, #56]	@ (800ac14 <vPortFree+0xbc>)
 800abda:	681b      	ldr	r3, [r3, #0]
 800abdc:	43db      	mvns	r3, r3
 800abde:	401a      	ands	r2, r3
 800abe0:	693b      	ldr	r3, [r7, #16]
 800abe2:	605a      	str	r2, [r3, #4]
 800abe4:	f7fe fc64 	bl	80094b0 <vTaskSuspendAll>
 800abe8:	693b      	ldr	r3, [r7, #16]
 800abea:	685a      	ldr	r2, [r3, #4]
 800abec:	4b0a      	ldr	r3, [pc, #40]	@ (800ac18 <vPortFree+0xc0>)
 800abee:	681b      	ldr	r3, [r3, #0]
 800abf0:	4413      	add	r3, r2
 800abf2:	4a09      	ldr	r2, [pc, #36]	@ (800ac18 <vPortFree+0xc0>)
 800abf4:	6013      	str	r3, [r2, #0]
 800abf6:	6938      	ldr	r0, [r7, #16]
 800abf8:	f000 f874 	bl	800ace4 <prvInsertBlockIntoFreeList>
 800abfc:	4b07      	ldr	r3, [pc, #28]	@ (800ac1c <vPortFree+0xc4>)
 800abfe:	681b      	ldr	r3, [r3, #0]
 800ac00:	3301      	adds	r3, #1
 800ac02:	4a06      	ldr	r2, [pc, #24]	@ (800ac1c <vPortFree+0xc4>)
 800ac04:	6013      	str	r3, [r2, #0]
 800ac06:	f7fe fc61 	bl	80094cc <xTaskResumeAll>
 800ac0a:	bf00      	nop
 800ac0c:	3718      	adds	r7, #24
 800ac0e:	46bd      	mov	sp, r7
 800ac10:	bd80      	pop	{r7, pc}
 800ac12:	bf00      	nop
 800ac14:	20004ec0 	.word	0x20004ec0
 800ac18:	20004eb0 	.word	0x20004eb0
 800ac1c:	20004ebc 	.word	0x20004ebc

0800ac20 <prvHeapInit>:
 800ac20:	b480      	push	{r7}
 800ac22:	b085      	sub	sp, #20
 800ac24:	af00      	add	r7, sp, #0
 800ac26:	f44f 5370 	mov.w	r3, #15360	@ 0x3c00
 800ac2a:	60bb      	str	r3, [r7, #8]
 800ac2c:	4b27      	ldr	r3, [pc, #156]	@ (800accc <prvHeapInit+0xac>)
 800ac2e:	60fb      	str	r3, [r7, #12]
 800ac30:	68fb      	ldr	r3, [r7, #12]
 800ac32:	f003 0307 	and.w	r3, r3, #7
 800ac36:	2b00      	cmp	r3, #0
 800ac38:	d00c      	beq.n	800ac54 <prvHeapInit+0x34>
 800ac3a:	68fb      	ldr	r3, [r7, #12]
 800ac3c:	3307      	adds	r3, #7
 800ac3e:	60fb      	str	r3, [r7, #12]
 800ac40:	68fb      	ldr	r3, [r7, #12]
 800ac42:	f023 0307 	bic.w	r3, r3, #7
 800ac46:	60fb      	str	r3, [r7, #12]
 800ac48:	68ba      	ldr	r2, [r7, #8]
 800ac4a:	68fb      	ldr	r3, [r7, #12]
 800ac4c:	1ad3      	subs	r3, r2, r3
 800ac4e:	4a1f      	ldr	r2, [pc, #124]	@ (800accc <prvHeapInit+0xac>)
 800ac50:	4413      	add	r3, r2
 800ac52:	60bb      	str	r3, [r7, #8]
 800ac54:	68fb      	ldr	r3, [r7, #12]
 800ac56:	607b      	str	r3, [r7, #4]
 800ac58:	4a1d      	ldr	r2, [pc, #116]	@ (800acd0 <prvHeapInit+0xb0>)
 800ac5a:	687b      	ldr	r3, [r7, #4]
 800ac5c:	6013      	str	r3, [r2, #0]
 800ac5e:	4b1c      	ldr	r3, [pc, #112]	@ (800acd0 <prvHeapInit+0xb0>)
 800ac60:	2200      	movs	r2, #0
 800ac62:	605a      	str	r2, [r3, #4]
 800ac64:	687b      	ldr	r3, [r7, #4]
 800ac66:	68ba      	ldr	r2, [r7, #8]
 800ac68:	4413      	add	r3, r2
 800ac6a:	60fb      	str	r3, [r7, #12]
 800ac6c:	2208      	movs	r2, #8
 800ac6e:	68fb      	ldr	r3, [r7, #12]
 800ac70:	1a9b      	subs	r3, r3, r2
 800ac72:	60fb      	str	r3, [r7, #12]
 800ac74:	68fb      	ldr	r3, [r7, #12]
 800ac76:	f023 0307 	bic.w	r3, r3, #7
 800ac7a:	60fb      	str	r3, [r7, #12]
 800ac7c:	68fb      	ldr	r3, [r7, #12]
 800ac7e:	4a15      	ldr	r2, [pc, #84]	@ (800acd4 <prvHeapInit+0xb4>)
 800ac80:	6013      	str	r3, [r2, #0]
 800ac82:	4b14      	ldr	r3, [pc, #80]	@ (800acd4 <prvHeapInit+0xb4>)
 800ac84:	681b      	ldr	r3, [r3, #0]
 800ac86:	2200      	movs	r2, #0
 800ac88:	605a      	str	r2, [r3, #4]
 800ac8a:	4b12      	ldr	r3, [pc, #72]	@ (800acd4 <prvHeapInit+0xb4>)
 800ac8c:	681b      	ldr	r3, [r3, #0]
 800ac8e:	2200      	movs	r2, #0
 800ac90:	601a      	str	r2, [r3, #0]
 800ac92:	687b      	ldr	r3, [r7, #4]
 800ac94:	603b      	str	r3, [r7, #0]
 800ac96:	683b      	ldr	r3, [r7, #0]
 800ac98:	68fa      	ldr	r2, [r7, #12]
 800ac9a:	1ad2      	subs	r2, r2, r3
 800ac9c:	683b      	ldr	r3, [r7, #0]
 800ac9e:	605a      	str	r2, [r3, #4]
 800aca0:	4b0c      	ldr	r3, [pc, #48]	@ (800acd4 <prvHeapInit+0xb4>)
 800aca2:	681a      	ldr	r2, [r3, #0]
 800aca4:	683b      	ldr	r3, [r7, #0]
 800aca6:	601a      	str	r2, [r3, #0]
 800aca8:	683b      	ldr	r3, [r7, #0]
 800acaa:	685b      	ldr	r3, [r3, #4]
 800acac:	4a0a      	ldr	r2, [pc, #40]	@ (800acd8 <prvHeapInit+0xb8>)
 800acae:	6013      	str	r3, [r2, #0]
 800acb0:	683b      	ldr	r3, [r7, #0]
 800acb2:	685b      	ldr	r3, [r3, #4]
 800acb4:	4a09      	ldr	r2, [pc, #36]	@ (800acdc <prvHeapInit+0xbc>)
 800acb6:	6013      	str	r3, [r2, #0]
 800acb8:	4b09      	ldr	r3, [pc, #36]	@ (800ace0 <prvHeapInit+0xc0>)
 800acba:	f04f 4200 	mov.w	r2, #2147483648	@ 0x80000000
 800acbe:	601a      	str	r2, [r3, #0]
 800acc0:	bf00      	nop
 800acc2:	3714      	adds	r7, #20
 800acc4:	46bd      	mov	sp, r7
 800acc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800acca:	4770      	bx	lr
 800accc:	200012a4 	.word	0x200012a4
 800acd0:	20004ea4 	.word	0x20004ea4
 800acd4:	20004eac 	.word	0x20004eac
 800acd8:	20004eb4 	.word	0x20004eb4
 800acdc:	20004eb0 	.word	0x20004eb0
 800ace0:	20004ec0 	.word	0x20004ec0

0800ace4 <prvInsertBlockIntoFreeList>:
 800ace4:	b480      	push	{r7}
 800ace6:	b085      	sub	sp, #20
 800ace8:	af00      	add	r7, sp, #0
 800acea:	6078      	str	r0, [r7, #4]
 800acec:	4b28      	ldr	r3, [pc, #160]	@ (800ad90 <prvInsertBlockIntoFreeList+0xac>)
 800acee:	60fb      	str	r3, [r7, #12]
 800acf0:	e002      	b.n	800acf8 <prvInsertBlockIntoFreeList+0x14>
 800acf2:	68fb      	ldr	r3, [r7, #12]
 800acf4:	681b      	ldr	r3, [r3, #0]
 800acf6:	60fb      	str	r3, [r7, #12]
 800acf8:	68fb      	ldr	r3, [r7, #12]
 800acfa:	681b      	ldr	r3, [r3, #0]
 800acfc:	687a      	ldr	r2, [r7, #4]
 800acfe:	429a      	cmp	r2, r3
 800ad00:	d8f7      	bhi.n	800acf2 <prvInsertBlockIntoFreeList+0xe>
 800ad02:	68fb      	ldr	r3, [r7, #12]
 800ad04:	60bb      	str	r3, [r7, #8]
 800ad06:	68fb      	ldr	r3, [r7, #12]
 800ad08:	685b      	ldr	r3, [r3, #4]
 800ad0a:	68ba      	ldr	r2, [r7, #8]
 800ad0c:	4413      	add	r3, r2
 800ad0e:	687a      	ldr	r2, [r7, #4]
 800ad10:	429a      	cmp	r2, r3
 800ad12:	d108      	bne.n	800ad26 <prvInsertBlockIntoFreeList+0x42>
 800ad14:	68fb      	ldr	r3, [r7, #12]
 800ad16:	685a      	ldr	r2, [r3, #4]
 800ad18:	687b      	ldr	r3, [r7, #4]
 800ad1a:	685b      	ldr	r3, [r3, #4]
 800ad1c:	441a      	add	r2, r3
 800ad1e:	68fb      	ldr	r3, [r7, #12]
 800ad20:	605a      	str	r2, [r3, #4]
 800ad22:	68fb      	ldr	r3, [r7, #12]
 800ad24:	607b      	str	r3, [r7, #4]
 800ad26:	687b      	ldr	r3, [r7, #4]
 800ad28:	60bb      	str	r3, [r7, #8]
 800ad2a:	687b      	ldr	r3, [r7, #4]
 800ad2c:	685b      	ldr	r3, [r3, #4]
 800ad2e:	68ba      	ldr	r2, [r7, #8]
 800ad30:	441a      	add	r2, r3
 800ad32:	68fb      	ldr	r3, [r7, #12]
 800ad34:	681b      	ldr	r3, [r3, #0]
 800ad36:	429a      	cmp	r2, r3
 800ad38:	d118      	bne.n	800ad6c <prvInsertBlockIntoFreeList+0x88>
 800ad3a:	68fb      	ldr	r3, [r7, #12]
 800ad3c:	681a      	ldr	r2, [r3, #0]
 800ad3e:	4b15      	ldr	r3, [pc, #84]	@ (800ad94 <prvInsertBlockIntoFreeList+0xb0>)
 800ad40:	681b      	ldr	r3, [r3, #0]
 800ad42:	429a      	cmp	r2, r3
 800ad44:	d00d      	beq.n	800ad62 <prvInsertBlockIntoFreeList+0x7e>
 800ad46:	687b      	ldr	r3, [r7, #4]
 800ad48:	685a      	ldr	r2, [r3, #4]
 800ad4a:	68fb      	ldr	r3, [r7, #12]
 800ad4c:	681b      	ldr	r3, [r3, #0]
 800ad4e:	685b      	ldr	r3, [r3, #4]
 800ad50:	441a      	add	r2, r3
 800ad52:	687b      	ldr	r3, [r7, #4]
 800ad54:	605a      	str	r2, [r3, #4]
 800ad56:	68fb      	ldr	r3, [r7, #12]
 800ad58:	681b      	ldr	r3, [r3, #0]
 800ad5a:	681a      	ldr	r2, [r3, #0]
 800ad5c:	687b      	ldr	r3, [r7, #4]
 800ad5e:	601a      	str	r2, [r3, #0]
 800ad60:	e008      	b.n	800ad74 <prvInsertBlockIntoFreeList+0x90>
 800ad62:	4b0c      	ldr	r3, [pc, #48]	@ (800ad94 <prvInsertBlockIntoFreeList+0xb0>)
 800ad64:	681a      	ldr	r2, [r3, #0]
 800ad66:	687b      	ldr	r3, [r7, #4]
 800ad68:	601a      	str	r2, [r3, #0]
 800ad6a:	e003      	b.n	800ad74 <prvInsertBlockIntoFreeList+0x90>
 800ad6c:	68fb      	ldr	r3, [r7, #12]
 800ad6e:	681a      	ldr	r2, [r3, #0]
 800ad70:	687b      	ldr	r3, [r7, #4]
 800ad72:	601a      	str	r2, [r3, #0]
 800ad74:	68fa      	ldr	r2, [r7, #12]
 800ad76:	687b      	ldr	r3, [r7, #4]
 800ad78:	429a      	cmp	r2, r3
 800ad7a:	d002      	beq.n	800ad82 <prvInsertBlockIntoFreeList+0x9e>
 800ad7c:	68fb      	ldr	r3, [r7, #12]
 800ad7e:	687a      	ldr	r2, [r7, #4]
 800ad80:	601a      	str	r2, [r3, #0]
 800ad82:	bf00      	nop
 800ad84:	3714      	adds	r7, #20
 800ad86:	46bd      	mov	sp, r7
 800ad88:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad8c:	4770      	bx	lr
 800ad8e:	bf00      	nop
 800ad90:	20004ea4 	.word	0x20004ea4
 800ad94:	20004eac 	.word	0x20004eac

0800ad98 <__cvt>:
 800ad98:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800ad9c:	ec57 6b10 	vmov	r6, r7, d0
 800ada0:	2f00      	cmp	r7, #0
 800ada2:	460c      	mov	r4, r1
 800ada4:	4619      	mov	r1, r3
 800ada6:	463b      	mov	r3, r7
 800ada8:	bfbb      	ittet	lt
 800adaa:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 800adae:	461f      	movlt	r7, r3
 800adb0:	2300      	movge	r3, #0
 800adb2:	232d      	movlt	r3, #45	@ 0x2d
 800adb4:	700b      	strb	r3, [r1, #0]
 800adb6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800adb8:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 800adbc:	4691      	mov	r9, r2
 800adbe:	f023 0820 	bic.w	r8, r3, #32
 800adc2:	bfbc      	itt	lt
 800adc4:	4632      	movlt	r2, r6
 800adc6:	4616      	movlt	r6, r2
 800adc8:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 800adcc:	d005      	beq.n	800adda <__cvt+0x42>
 800adce:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 800add2:	d100      	bne.n	800add6 <__cvt+0x3e>
 800add4:	3401      	adds	r4, #1
 800add6:	2102      	movs	r1, #2
 800add8:	e000      	b.n	800addc <__cvt+0x44>
 800adda:	2103      	movs	r1, #3
 800addc:	ab03      	add	r3, sp, #12
 800adde:	9301      	str	r3, [sp, #4]
 800ade0:	ab02      	add	r3, sp, #8
 800ade2:	9300      	str	r3, [sp, #0]
 800ade4:	ec47 6b10 	vmov	d0, r6, r7
 800ade8:	4653      	mov	r3, sl
 800adea:	4622      	mov	r2, r4
 800adec:	f000 fefc 	bl	800bbe8 <_dtoa_r>
 800adf0:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 800adf4:	4605      	mov	r5, r0
 800adf6:	d119      	bne.n	800ae2c <__cvt+0x94>
 800adf8:	f019 0f01 	tst.w	r9, #1
 800adfc:	d00e      	beq.n	800ae1c <__cvt+0x84>
 800adfe:	eb00 0904 	add.w	r9, r0, r4
 800ae02:	2200      	movs	r2, #0
 800ae04:	2300      	movs	r3, #0
 800ae06:	4630      	mov	r0, r6
 800ae08:	4639      	mov	r1, r7
 800ae0a:	f7f5 fe7d 	bl	8000b08 <__aeabi_dcmpeq>
 800ae0e:	b108      	cbz	r0, 800ae14 <__cvt+0x7c>
 800ae10:	f8cd 900c 	str.w	r9, [sp, #12]
 800ae14:	2230      	movs	r2, #48	@ 0x30
 800ae16:	9b03      	ldr	r3, [sp, #12]
 800ae18:	454b      	cmp	r3, r9
 800ae1a:	d31e      	bcc.n	800ae5a <__cvt+0xc2>
 800ae1c:	9b03      	ldr	r3, [sp, #12]
 800ae1e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800ae20:	1b5b      	subs	r3, r3, r5
 800ae22:	4628      	mov	r0, r5
 800ae24:	6013      	str	r3, [r2, #0]
 800ae26:	b004      	add	sp, #16
 800ae28:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ae2c:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 800ae30:	eb00 0904 	add.w	r9, r0, r4
 800ae34:	d1e5      	bne.n	800ae02 <__cvt+0x6a>
 800ae36:	7803      	ldrb	r3, [r0, #0]
 800ae38:	2b30      	cmp	r3, #48	@ 0x30
 800ae3a:	d10a      	bne.n	800ae52 <__cvt+0xba>
 800ae3c:	2200      	movs	r2, #0
 800ae3e:	2300      	movs	r3, #0
 800ae40:	4630      	mov	r0, r6
 800ae42:	4639      	mov	r1, r7
 800ae44:	f7f5 fe60 	bl	8000b08 <__aeabi_dcmpeq>
 800ae48:	b918      	cbnz	r0, 800ae52 <__cvt+0xba>
 800ae4a:	f1c4 0401 	rsb	r4, r4, #1
 800ae4e:	f8ca 4000 	str.w	r4, [sl]
 800ae52:	f8da 3000 	ldr.w	r3, [sl]
 800ae56:	4499      	add	r9, r3
 800ae58:	e7d3      	b.n	800ae02 <__cvt+0x6a>
 800ae5a:	1c59      	adds	r1, r3, #1
 800ae5c:	9103      	str	r1, [sp, #12]
 800ae5e:	701a      	strb	r2, [r3, #0]
 800ae60:	e7d9      	b.n	800ae16 <__cvt+0x7e>

0800ae62 <__exponent>:
 800ae62:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ae64:	2900      	cmp	r1, #0
 800ae66:	bfba      	itte	lt
 800ae68:	4249      	neglt	r1, r1
 800ae6a:	232d      	movlt	r3, #45	@ 0x2d
 800ae6c:	232b      	movge	r3, #43	@ 0x2b
 800ae6e:	2909      	cmp	r1, #9
 800ae70:	7002      	strb	r2, [r0, #0]
 800ae72:	7043      	strb	r3, [r0, #1]
 800ae74:	dd29      	ble.n	800aeca <__exponent+0x68>
 800ae76:	f10d 0307 	add.w	r3, sp, #7
 800ae7a:	461d      	mov	r5, r3
 800ae7c:	270a      	movs	r7, #10
 800ae7e:	461a      	mov	r2, r3
 800ae80:	fbb1 f6f7 	udiv	r6, r1, r7
 800ae84:	fb07 1416 	mls	r4, r7, r6, r1
 800ae88:	3430      	adds	r4, #48	@ 0x30
 800ae8a:	f802 4c01 	strb.w	r4, [r2, #-1]
 800ae8e:	460c      	mov	r4, r1
 800ae90:	2c63      	cmp	r4, #99	@ 0x63
 800ae92:	f103 33ff 	add.w	r3, r3, #4294967295
 800ae96:	4631      	mov	r1, r6
 800ae98:	dcf1      	bgt.n	800ae7e <__exponent+0x1c>
 800ae9a:	3130      	adds	r1, #48	@ 0x30
 800ae9c:	1e94      	subs	r4, r2, #2
 800ae9e:	f803 1c01 	strb.w	r1, [r3, #-1]
 800aea2:	1c41      	adds	r1, r0, #1
 800aea4:	4623      	mov	r3, r4
 800aea6:	42ab      	cmp	r3, r5
 800aea8:	d30a      	bcc.n	800aec0 <__exponent+0x5e>
 800aeaa:	f10d 0309 	add.w	r3, sp, #9
 800aeae:	1a9b      	subs	r3, r3, r2
 800aeb0:	42ac      	cmp	r4, r5
 800aeb2:	bf88      	it	hi
 800aeb4:	2300      	movhi	r3, #0
 800aeb6:	3302      	adds	r3, #2
 800aeb8:	4403      	add	r3, r0
 800aeba:	1a18      	subs	r0, r3, r0
 800aebc:	b003      	add	sp, #12
 800aebe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800aec0:	f813 6b01 	ldrb.w	r6, [r3], #1
 800aec4:	f801 6f01 	strb.w	r6, [r1, #1]!
 800aec8:	e7ed      	b.n	800aea6 <__exponent+0x44>
 800aeca:	2330      	movs	r3, #48	@ 0x30
 800aecc:	3130      	adds	r1, #48	@ 0x30
 800aece:	7083      	strb	r3, [r0, #2]
 800aed0:	70c1      	strb	r1, [r0, #3]
 800aed2:	1d03      	adds	r3, r0, #4
 800aed4:	e7f1      	b.n	800aeba <__exponent+0x58>
	...

0800aed8 <_printf_float>:
 800aed8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aedc:	b08d      	sub	sp, #52	@ 0x34
 800aede:	460c      	mov	r4, r1
 800aee0:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 800aee4:	4616      	mov	r6, r2
 800aee6:	461f      	mov	r7, r3
 800aee8:	4605      	mov	r5, r0
 800aeea:	f000 fd11 	bl	800b910 <_localeconv_r>
 800aeee:	6803      	ldr	r3, [r0, #0]
 800aef0:	9304      	str	r3, [sp, #16]
 800aef2:	4618      	mov	r0, r3
 800aef4:	f7f5 f9dc 	bl	80002b0 <strlen>
 800aef8:	2300      	movs	r3, #0
 800aefa:	930a      	str	r3, [sp, #40]	@ 0x28
 800aefc:	f8d8 3000 	ldr.w	r3, [r8]
 800af00:	9005      	str	r0, [sp, #20]
 800af02:	3307      	adds	r3, #7
 800af04:	f023 0307 	bic.w	r3, r3, #7
 800af08:	f103 0208 	add.w	r2, r3, #8
 800af0c:	f894 a018 	ldrb.w	sl, [r4, #24]
 800af10:	f8d4 b000 	ldr.w	fp, [r4]
 800af14:	f8c8 2000 	str.w	r2, [r8]
 800af18:	e9d3 8900 	ldrd	r8, r9, [r3]
 800af1c:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 800af20:	9307      	str	r3, [sp, #28]
 800af22:	f8cd 8018 	str.w	r8, [sp, #24]
 800af26:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 800af2a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800af2e:	4b9c      	ldr	r3, [pc, #624]	@ (800b1a0 <_printf_float+0x2c8>)
 800af30:	f04f 32ff 	mov.w	r2, #4294967295
 800af34:	f7f5 fe1a 	bl	8000b6c <__aeabi_dcmpun>
 800af38:	bb70      	cbnz	r0, 800af98 <_printf_float+0xc0>
 800af3a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800af3e:	4b98      	ldr	r3, [pc, #608]	@ (800b1a0 <_printf_float+0x2c8>)
 800af40:	f04f 32ff 	mov.w	r2, #4294967295
 800af44:	f7f5 fdf4 	bl	8000b30 <__aeabi_dcmple>
 800af48:	bb30      	cbnz	r0, 800af98 <_printf_float+0xc0>
 800af4a:	2200      	movs	r2, #0
 800af4c:	2300      	movs	r3, #0
 800af4e:	4640      	mov	r0, r8
 800af50:	4649      	mov	r1, r9
 800af52:	f7f5 fde3 	bl	8000b1c <__aeabi_dcmplt>
 800af56:	b110      	cbz	r0, 800af5e <_printf_float+0x86>
 800af58:	232d      	movs	r3, #45	@ 0x2d
 800af5a:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800af5e:	4a91      	ldr	r2, [pc, #580]	@ (800b1a4 <_printf_float+0x2cc>)
 800af60:	4b91      	ldr	r3, [pc, #580]	@ (800b1a8 <_printf_float+0x2d0>)
 800af62:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 800af66:	bf8c      	ite	hi
 800af68:	4690      	movhi	r8, r2
 800af6a:	4698      	movls	r8, r3
 800af6c:	2303      	movs	r3, #3
 800af6e:	6123      	str	r3, [r4, #16]
 800af70:	f02b 0304 	bic.w	r3, fp, #4
 800af74:	6023      	str	r3, [r4, #0]
 800af76:	f04f 0900 	mov.w	r9, #0
 800af7a:	9700      	str	r7, [sp, #0]
 800af7c:	4633      	mov	r3, r6
 800af7e:	aa0b      	add	r2, sp, #44	@ 0x2c
 800af80:	4621      	mov	r1, r4
 800af82:	4628      	mov	r0, r5
 800af84:	f000 f9d2 	bl	800b32c <_printf_common>
 800af88:	3001      	adds	r0, #1
 800af8a:	f040 808d 	bne.w	800b0a8 <_printf_float+0x1d0>
 800af8e:	f04f 30ff 	mov.w	r0, #4294967295
 800af92:	b00d      	add	sp, #52	@ 0x34
 800af94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800af98:	4642      	mov	r2, r8
 800af9a:	464b      	mov	r3, r9
 800af9c:	4640      	mov	r0, r8
 800af9e:	4649      	mov	r1, r9
 800afa0:	f7f5 fde4 	bl	8000b6c <__aeabi_dcmpun>
 800afa4:	b140      	cbz	r0, 800afb8 <_printf_float+0xe0>
 800afa6:	464b      	mov	r3, r9
 800afa8:	2b00      	cmp	r3, #0
 800afaa:	bfbc      	itt	lt
 800afac:	232d      	movlt	r3, #45	@ 0x2d
 800afae:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 800afb2:	4a7e      	ldr	r2, [pc, #504]	@ (800b1ac <_printf_float+0x2d4>)
 800afb4:	4b7e      	ldr	r3, [pc, #504]	@ (800b1b0 <_printf_float+0x2d8>)
 800afb6:	e7d4      	b.n	800af62 <_printf_float+0x8a>
 800afb8:	6863      	ldr	r3, [r4, #4]
 800afba:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 800afbe:	9206      	str	r2, [sp, #24]
 800afc0:	1c5a      	adds	r2, r3, #1
 800afc2:	d13b      	bne.n	800b03c <_printf_float+0x164>
 800afc4:	2306      	movs	r3, #6
 800afc6:	6063      	str	r3, [r4, #4]
 800afc8:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 800afcc:	2300      	movs	r3, #0
 800afce:	6022      	str	r2, [r4, #0]
 800afd0:	9303      	str	r3, [sp, #12]
 800afd2:	ab0a      	add	r3, sp, #40	@ 0x28
 800afd4:	e9cd a301 	strd	sl, r3, [sp, #4]
 800afd8:	ab09      	add	r3, sp, #36	@ 0x24
 800afda:	9300      	str	r3, [sp, #0]
 800afdc:	6861      	ldr	r1, [r4, #4]
 800afde:	ec49 8b10 	vmov	d0, r8, r9
 800afe2:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 800afe6:	4628      	mov	r0, r5
 800afe8:	f7ff fed6 	bl	800ad98 <__cvt>
 800afec:	9b06      	ldr	r3, [sp, #24]
 800afee:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800aff0:	2b47      	cmp	r3, #71	@ 0x47
 800aff2:	4680      	mov	r8, r0
 800aff4:	d129      	bne.n	800b04a <_printf_float+0x172>
 800aff6:	1cc8      	adds	r0, r1, #3
 800aff8:	db02      	blt.n	800b000 <_printf_float+0x128>
 800affa:	6863      	ldr	r3, [r4, #4]
 800affc:	4299      	cmp	r1, r3
 800affe:	dd41      	ble.n	800b084 <_printf_float+0x1ac>
 800b000:	f1aa 0a02 	sub.w	sl, sl, #2
 800b004:	fa5f fa8a 	uxtb.w	sl, sl
 800b008:	3901      	subs	r1, #1
 800b00a:	4652      	mov	r2, sl
 800b00c:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 800b010:	9109      	str	r1, [sp, #36]	@ 0x24
 800b012:	f7ff ff26 	bl	800ae62 <__exponent>
 800b016:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800b018:	1813      	adds	r3, r2, r0
 800b01a:	2a01      	cmp	r2, #1
 800b01c:	4681      	mov	r9, r0
 800b01e:	6123      	str	r3, [r4, #16]
 800b020:	dc02      	bgt.n	800b028 <_printf_float+0x150>
 800b022:	6822      	ldr	r2, [r4, #0]
 800b024:	07d2      	lsls	r2, r2, #31
 800b026:	d501      	bpl.n	800b02c <_printf_float+0x154>
 800b028:	3301      	adds	r3, #1
 800b02a:	6123      	str	r3, [r4, #16]
 800b02c:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 800b030:	2b00      	cmp	r3, #0
 800b032:	d0a2      	beq.n	800af7a <_printf_float+0xa2>
 800b034:	232d      	movs	r3, #45	@ 0x2d
 800b036:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800b03a:	e79e      	b.n	800af7a <_printf_float+0xa2>
 800b03c:	9a06      	ldr	r2, [sp, #24]
 800b03e:	2a47      	cmp	r2, #71	@ 0x47
 800b040:	d1c2      	bne.n	800afc8 <_printf_float+0xf0>
 800b042:	2b00      	cmp	r3, #0
 800b044:	d1c0      	bne.n	800afc8 <_printf_float+0xf0>
 800b046:	2301      	movs	r3, #1
 800b048:	e7bd      	b.n	800afc6 <_printf_float+0xee>
 800b04a:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 800b04e:	d9db      	bls.n	800b008 <_printf_float+0x130>
 800b050:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 800b054:	d118      	bne.n	800b088 <_printf_float+0x1b0>
 800b056:	2900      	cmp	r1, #0
 800b058:	6863      	ldr	r3, [r4, #4]
 800b05a:	dd0b      	ble.n	800b074 <_printf_float+0x19c>
 800b05c:	6121      	str	r1, [r4, #16]
 800b05e:	b913      	cbnz	r3, 800b066 <_printf_float+0x18e>
 800b060:	6822      	ldr	r2, [r4, #0]
 800b062:	07d0      	lsls	r0, r2, #31
 800b064:	d502      	bpl.n	800b06c <_printf_float+0x194>
 800b066:	3301      	adds	r3, #1
 800b068:	440b      	add	r3, r1
 800b06a:	6123      	str	r3, [r4, #16]
 800b06c:	65a1      	str	r1, [r4, #88]	@ 0x58
 800b06e:	f04f 0900 	mov.w	r9, #0
 800b072:	e7db      	b.n	800b02c <_printf_float+0x154>
 800b074:	b913      	cbnz	r3, 800b07c <_printf_float+0x1a4>
 800b076:	6822      	ldr	r2, [r4, #0]
 800b078:	07d2      	lsls	r2, r2, #31
 800b07a:	d501      	bpl.n	800b080 <_printf_float+0x1a8>
 800b07c:	3302      	adds	r3, #2
 800b07e:	e7f4      	b.n	800b06a <_printf_float+0x192>
 800b080:	2301      	movs	r3, #1
 800b082:	e7f2      	b.n	800b06a <_printf_float+0x192>
 800b084:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 800b088:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800b08a:	4299      	cmp	r1, r3
 800b08c:	db05      	blt.n	800b09a <_printf_float+0x1c2>
 800b08e:	6823      	ldr	r3, [r4, #0]
 800b090:	6121      	str	r1, [r4, #16]
 800b092:	07d8      	lsls	r0, r3, #31
 800b094:	d5ea      	bpl.n	800b06c <_printf_float+0x194>
 800b096:	1c4b      	adds	r3, r1, #1
 800b098:	e7e7      	b.n	800b06a <_printf_float+0x192>
 800b09a:	2900      	cmp	r1, #0
 800b09c:	bfd4      	ite	le
 800b09e:	f1c1 0202 	rsble	r2, r1, #2
 800b0a2:	2201      	movgt	r2, #1
 800b0a4:	4413      	add	r3, r2
 800b0a6:	e7e0      	b.n	800b06a <_printf_float+0x192>
 800b0a8:	6823      	ldr	r3, [r4, #0]
 800b0aa:	055a      	lsls	r2, r3, #21
 800b0ac:	d407      	bmi.n	800b0be <_printf_float+0x1e6>
 800b0ae:	6923      	ldr	r3, [r4, #16]
 800b0b0:	4642      	mov	r2, r8
 800b0b2:	4631      	mov	r1, r6
 800b0b4:	4628      	mov	r0, r5
 800b0b6:	47b8      	blx	r7
 800b0b8:	3001      	adds	r0, #1
 800b0ba:	d12b      	bne.n	800b114 <_printf_float+0x23c>
 800b0bc:	e767      	b.n	800af8e <_printf_float+0xb6>
 800b0be:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 800b0c2:	f240 80dd 	bls.w	800b280 <_printf_float+0x3a8>
 800b0c6:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 800b0ca:	2200      	movs	r2, #0
 800b0cc:	2300      	movs	r3, #0
 800b0ce:	f7f5 fd1b 	bl	8000b08 <__aeabi_dcmpeq>
 800b0d2:	2800      	cmp	r0, #0
 800b0d4:	d033      	beq.n	800b13e <_printf_float+0x266>
 800b0d6:	4a37      	ldr	r2, [pc, #220]	@ (800b1b4 <_printf_float+0x2dc>)
 800b0d8:	2301      	movs	r3, #1
 800b0da:	4631      	mov	r1, r6
 800b0dc:	4628      	mov	r0, r5
 800b0de:	47b8      	blx	r7
 800b0e0:	3001      	adds	r0, #1
 800b0e2:	f43f af54 	beq.w	800af8e <_printf_float+0xb6>
 800b0e6:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 800b0ea:	4543      	cmp	r3, r8
 800b0ec:	db02      	blt.n	800b0f4 <_printf_float+0x21c>
 800b0ee:	6823      	ldr	r3, [r4, #0]
 800b0f0:	07d8      	lsls	r0, r3, #31
 800b0f2:	d50f      	bpl.n	800b114 <_printf_float+0x23c>
 800b0f4:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800b0f8:	4631      	mov	r1, r6
 800b0fa:	4628      	mov	r0, r5
 800b0fc:	47b8      	blx	r7
 800b0fe:	3001      	adds	r0, #1
 800b100:	f43f af45 	beq.w	800af8e <_printf_float+0xb6>
 800b104:	f04f 0900 	mov.w	r9, #0
 800b108:	f108 38ff 	add.w	r8, r8, #4294967295
 800b10c:	f104 0a1a 	add.w	sl, r4, #26
 800b110:	45c8      	cmp	r8, r9
 800b112:	dc09      	bgt.n	800b128 <_printf_float+0x250>
 800b114:	6823      	ldr	r3, [r4, #0]
 800b116:	079b      	lsls	r3, r3, #30
 800b118:	f100 8103 	bmi.w	800b322 <_printf_float+0x44a>
 800b11c:	68e0      	ldr	r0, [r4, #12]
 800b11e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800b120:	4298      	cmp	r0, r3
 800b122:	bfb8      	it	lt
 800b124:	4618      	movlt	r0, r3
 800b126:	e734      	b.n	800af92 <_printf_float+0xba>
 800b128:	2301      	movs	r3, #1
 800b12a:	4652      	mov	r2, sl
 800b12c:	4631      	mov	r1, r6
 800b12e:	4628      	mov	r0, r5
 800b130:	47b8      	blx	r7
 800b132:	3001      	adds	r0, #1
 800b134:	f43f af2b 	beq.w	800af8e <_printf_float+0xb6>
 800b138:	f109 0901 	add.w	r9, r9, #1
 800b13c:	e7e8      	b.n	800b110 <_printf_float+0x238>
 800b13e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800b140:	2b00      	cmp	r3, #0
 800b142:	dc39      	bgt.n	800b1b8 <_printf_float+0x2e0>
 800b144:	4a1b      	ldr	r2, [pc, #108]	@ (800b1b4 <_printf_float+0x2dc>)
 800b146:	2301      	movs	r3, #1
 800b148:	4631      	mov	r1, r6
 800b14a:	4628      	mov	r0, r5
 800b14c:	47b8      	blx	r7
 800b14e:	3001      	adds	r0, #1
 800b150:	f43f af1d 	beq.w	800af8e <_printf_float+0xb6>
 800b154:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 800b158:	ea59 0303 	orrs.w	r3, r9, r3
 800b15c:	d102      	bne.n	800b164 <_printf_float+0x28c>
 800b15e:	6823      	ldr	r3, [r4, #0]
 800b160:	07d9      	lsls	r1, r3, #31
 800b162:	d5d7      	bpl.n	800b114 <_printf_float+0x23c>
 800b164:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800b168:	4631      	mov	r1, r6
 800b16a:	4628      	mov	r0, r5
 800b16c:	47b8      	blx	r7
 800b16e:	3001      	adds	r0, #1
 800b170:	f43f af0d 	beq.w	800af8e <_printf_float+0xb6>
 800b174:	f04f 0a00 	mov.w	sl, #0
 800b178:	f104 0b1a 	add.w	fp, r4, #26
 800b17c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800b17e:	425b      	negs	r3, r3
 800b180:	4553      	cmp	r3, sl
 800b182:	dc01      	bgt.n	800b188 <_printf_float+0x2b0>
 800b184:	464b      	mov	r3, r9
 800b186:	e793      	b.n	800b0b0 <_printf_float+0x1d8>
 800b188:	2301      	movs	r3, #1
 800b18a:	465a      	mov	r2, fp
 800b18c:	4631      	mov	r1, r6
 800b18e:	4628      	mov	r0, r5
 800b190:	47b8      	blx	r7
 800b192:	3001      	adds	r0, #1
 800b194:	f43f aefb 	beq.w	800af8e <_printf_float+0xb6>
 800b198:	f10a 0a01 	add.w	sl, sl, #1
 800b19c:	e7ee      	b.n	800b17c <_printf_float+0x2a4>
 800b19e:	bf00      	nop
 800b1a0:	7fefffff 	.word	0x7fefffff
 800b1a4:	0800e30d 	.word	0x0800e30d
 800b1a8:	0800e309 	.word	0x0800e309
 800b1ac:	0800e315 	.word	0x0800e315
 800b1b0:	0800e311 	.word	0x0800e311
 800b1b4:	0800e319 	.word	0x0800e319
 800b1b8:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 800b1ba:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 800b1be:	4553      	cmp	r3, sl
 800b1c0:	bfa8      	it	ge
 800b1c2:	4653      	movge	r3, sl
 800b1c4:	2b00      	cmp	r3, #0
 800b1c6:	4699      	mov	r9, r3
 800b1c8:	dc36      	bgt.n	800b238 <_printf_float+0x360>
 800b1ca:	f04f 0b00 	mov.w	fp, #0
 800b1ce:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800b1d2:	f104 021a 	add.w	r2, r4, #26
 800b1d6:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 800b1d8:	9306      	str	r3, [sp, #24]
 800b1da:	eba3 0309 	sub.w	r3, r3, r9
 800b1de:	455b      	cmp	r3, fp
 800b1e0:	dc31      	bgt.n	800b246 <_printf_float+0x36e>
 800b1e2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800b1e4:	459a      	cmp	sl, r3
 800b1e6:	dc3a      	bgt.n	800b25e <_printf_float+0x386>
 800b1e8:	6823      	ldr	r3, [r4, #0]
 800b1ea:	07da      	lsls	r2, r3, #31
 800b1ec:	d437      	bmi.n	800b25e <_printf_float+0x386>
 800b1ee:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800b1f0:	ebaa 0903 	sub.w	r9, sl, r3
 800b1f4:	9b06      	ldr	r3, [sp, #24]
 800b1f6:	ebaa 0303 	sub.w	r3, sl, r3
 800b1fa:	4599      	cmp	r9, r3
 800b1fc:	bfa8      	it	ge
 800b1fe:	4699      	movge	r9, r3
 800b200:	f1b9 0f00 	cmp.w	r9, #0
 800b204:	dc33      	bgt.n	800b26e <_printf_float+0x396>
 800b206:	f04f 0800 	mov.w	r8, #0
 800b20a:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800b20e:	f104 0b1a 	add.w	fp, r4, #26
 800b212:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800b214:	ebaa 0303 	sub.w	r3, sl, r3
 800b218:	eba3 0309 	sub.w	r3, r3, r9
 800b21c:	4543      	cmp	r3, r8
 800b21e:	f77f af79 	ble.w	800b114 <_printf_float+0x23c>
 800b222:	2301      	movs	r3, #1
 800b224:	465a      	mov	r2, fp
 800b226:	4631      	mov	r1, r6
 800b228:	4628      	mov	r0, r5
 800b22a:	47b8      	blx	r7
 800b22c:	3001      	adds	r0, #1
 800b22e:	f43f aeae 	beq.w	800af8e <_printf_float+0xb6>
 800b232:	f108 0801 	add.w	r8, r8, #1
 800b236:	e7ec      	b.n	800b212 <_printf_float+0x33a>
 800b238:	4642      	mov	r2, r8
 800b23a:	4631      	mov	r1, r6
 800b23c:	4628      	mov	r0, r5
 800b23e:	47b8      	blx	r7
 800b240:	3001      	adds	r0, #1
 800b242:	d1c2      	bne.n	800b1ca <_printf_float+0x2f2>
 800b244:	e6a3      	b.n	800af8e <_printf_float+0xb6>
 800b246:	2301      	movs	r3, #1
 800b248:	4631      	mov	r1, r6
 800b24a:	4628      	mov	r0, r5
 800b24c:	9206      	str	r2, [sp, #24]
 800b24e:	47b8      	blx	r7
 800b250:	3001      	adds	r0, #1
 800b252:	f43f ae9c 	beq.w	800af8e <_printf_float+0xb6>
 800b256:	9a06      	ldr	r2, [sp, #24]
 800b258:	f10b 0b01 	add.w	fp, fp, #1
 800b25c:	e7bb      	b.n	800b1d6 <_printf_float+0x2fe>
 800b25e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800b262:	4631      	mov	r1, r6
 800b264:	4628      	mov	r0, r5
 800b266:	47b8      	blx	r7
 800b268:	3001      	adds	r0, #1
 800b26a:	d1c0      	bne.n	800b1ee <_printf_float+0x316>
 800b26c:	e68f      	b.n	800af8e <_printf_float+0xb6>
 800b26e:	9a06      	ldr	r2, [sp, #24]
 800b270:	464b      	mov	r3, r9
 800b272:	4442      	add	r2, r8
 800b274:	4631      	mov	r1, r6
 800b276:	4628      	mov	r0, r5
 800b278:	47b8      	blx	r7
 800b27a:	3001      	adds	r0, #1
 800b27c:	d1c3      	bne.n	800b206 <_printf_float+0x32e>
 800b27e:	e686      	b.n	800af8e <_printf_float+0xb6>
 800b280:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 800b284:	f1ba 0f01 	cmp.w	sl, #1
 800b288:	dc01      	bgt.n	800b28e <_printf_float+0x3b6>
 800b28a:	07db      	lsls	r3, r3, #31
 800b28c:	d536      	bpl.n	800b2fc <_printf_float+0x424>
 800b28e:	2301      	movs	r3, #1
 800b290:	4642      	mov	r2, r8
 800b292:	4631      	mov	r1, r6
 800b294:	4628      	mov	r0, r5
 800b296:	47b8      	blx	r7
 800b298:	3001      	adds	r0, #1
 800b29a:	f43f ae78 	beq.w	800af8e <_printf_float+0xb6>
 800b29e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800b2a2:	4631      	mov	r1, r6
 800b2a4:	4628      	mov	r0, r5
 800b2a6:	47b8      	blx	r7
 800b2a8:	3001      	adds	r0, #1
 800b2aa:	f43f ae70 	beq.w	800af8e <_printf_float+0xb6>
 800b2ae:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 800b2b2:	2200      	movs	r2, #0
 800b2b4:	2300      	movs	r3, #0
 800b2b6:	f10a 3aff 	add.w	sl, sl, #4294967295
 800b2ba:	f7f5 fc25 	bl	8000b08 <__aeabi_dcmpeq>
 800b2be:	b9c0      	cbnz	r0, 800b2f2 <_printf_float+0x41a>
 800b2c0:	4653      	mov	r3, sl
 800b2c2:	f108 0201 	add.w	r2, r8, #1
 800b2c6:	4631      	mov	r1, r6
 800b2c8:	4628      	mov	r0, r5
 800b2ca:	47b8      	blx	r7
 800b2cc:	3001      	adds	r0, #1
 800b2ce:	d10c      	bne.n	800b2ea <_printf_float+0x412>
 800b2d0:	e65d      	b.n	800af8e <_printf_float+0xb6>
 800b2d2:	2301      	movs	r3, #1
 800b2d4:	465a      	mov	r2, fp
 800b2d6:	4631      	mov	r1, r6
 800b2d8:	4628      	mov	r0, r5
 800b2da:	47b8      	blx	r7
 800b2dc:	3001      	adds	r0, #1
 800b2de:	f43f ae56 	beq.w	800af8e <_printf_float+0xb6>
 800b2e2:	f108 0801 	add.w	r8, r8, #1
 800b2e6:	45d0      	cmp	r8, sl
 800b2e8:	dbf3      	blt.n	800b2d2 <_printf_float+0x3fa>
 800b2ea:	464b      	mov	r3, r9
 800b2ec:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 800b2f0:	e6df      	b.n	800b0b2 <_printf_float+0x1da>
 800b2f2:	f04f 0800 	mov.w	r8, #0
 800b2f6:	f104 0b1a 	add.w	fp, r4, #26
 800b2fa:	e7f4      	b.n	800b2e6 <_printf_float+0x40e>
 800b2fc:	2301      	movs	r3, #1
 800b2fe:	4642      	mov	r2, r8
 800b300:	e7e1      	b.n	800b2c6 <_printf_float+0x3ee>
 800b302:	2301      	movs	r3, #1
 800b304:	464a      	mov	r2, r9
 800b306:	4631      	mov	r1, r6
 800b308:	4628      	mov	r0, r5
 800b30a:	47b8      	blx	r7
 800b30c:	3001      	adds	r0, #1
 800b30e:	f43f ae3e 	beq.w	800af8e <_printf_float+0xb6>
 800b312:	f108 0801 	add.w	r8, r8, #1
 800b316:	68e3      	ldr	r3, [r4, #12]
 800b318:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800b31a:	1a5b      	subs	r3, r3, r1
 800b31c:	4543      	cmp	r3, r8
 800b31e:	dcf0      	bgt.n	800b302 <_printf_float+0x42a>
 800b320:	e6fc      	b.n	800b11c <_printf_float+0x244>
 800b322:	f04f 0800 	mov.w	r8, #0
 800b326:	f104 0919 	add.w	r9, r4, #25
 800b32a:	e7f4      	b.n	800b316 <_printf_float+0x43e>

0800b32c <_printf_common>:
 800b32c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b330:	4616      	mov	r6, r2
 800b332:	4698      	mov	r8, r3
 800b334:	688a      	ldr	r2, [r1, #8]
 800b336:	690b      	ldr	r3, [r1, #16]
 800b338:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800b33c:	4293      	cmp	r3, r2
 800b33e:	bfb8      	it	lt
 800b340:	4613      	movlt	r3, r2
 800b342:	6033      	str	r3, [r6, #0]
 800b344:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 800b348:	4607      	mov	r7, r0
 800b34a:	460c      	mov	r4, r1
 800b34c:	b10a      	cbz	r2, 800b352 <_printf_common+0x26>
 800b34e:	3301      	adds	r3, #1
 800b350:	6033      	str	r3, [r6, #0]
 800b352:	6823      	ldr	r3, [r4, #0]
 800b354:	0699      	lsls	r1, r3, #26
 800b356:	bf42      	ittt	mi
 800b358:	6833      	ldrmi	r3, [r6, #0]
 800b35a:	3302      	addmi	r3, #2
 800b35c:	6033      	strmi	r3, [r6, #0]
 800b35e:	6825      	ldr	r5, [r4, #0]
 800b360:	f015 0506 	ands.w	r5, r5, #6
 800b364:	d106      	bne.n	800b374 <_printf_common+0x48>
 800b366:	f104 0a19 	add.w	sl, r4, #25
 800b36a:	68e3      	ldr	r3, [r4, #12]
 800b36c:	6832      	ldr	r2, [r6, #0]
 800b36e:	1a9b      	subs	r3, r3, r2
 800b370:	42ab      	cmp	r3, r5
 800b372:	dc26      	bgt.n	800b3c2 <_printf_common+0x96>
 800b374:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 800b378:	6822      	ldr	r2, [r4, #0]
 800b37a:	3b00      	subs	r3, #0
 800b37c:	bf18      	it	ne
 800b37e:	2301      	movne	r3, #1
 800b380:	0692      	lsls	r2, r2, #26
 800b382:	d42b      	bmi.n	800b3dc <_printf_common+0xb0>
 800b384:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 800b388:	4641      	mov	r1, r8
 800b38a:	4638      	mov	r0, r7
 800b38c:	47c8      	blx	r9
 800b38e:	3001      	adds	r0, #1
 800b390:	d01e      	beq.n	800b3d0 <_printf_common+0xa4>
 800b392:	6823      	ldr	r3, [r4, #0]
 800b394:	6922      	ldr	r2, [r4, #16]
 800b396:	f003 0306 	and.w	r3, r3, #6
 800b39a:	2b04      	cmp	r3, #4
 800b39c:	bf02      	ittt	eq
 800b39e:	68e5      	ldreq	r5, [r4, #12]
 800b3a0:	6833      	ldreq	r3, [r6, #0]
 800b3a2:	1aed      	subeq	r5, r5, r3
 800b3a4:	68a3      	ldr	r3, [r4, #8]
 800b3a6:	bf0c      	ite	eq
 800b3a8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800b3ac:	2500      	movne	r5, #0
 800b3ae:	4293      	cmp	r3, r2
 800b3b0:	bfc4      	itt	gt
 800b3b2:	1a9b      	subgt	r3, r3, r2
 800b3b4:	18ed      	addgt	r5, r5, r3
 800b3b6:	2600      	movs	r6, #0
 800b3b8:	341a      	adds	r4, #26
 800b3ba:	42b5      	cmp	r5, r6
 800b3bc:	d11a      	bne.n	800b3f4 <_printf_common+0xc8>
 800b3be:	2000      	movs	r0, #0
 800b3c0:	e008      	b.n	800b3d4 <_printf_common+0xa8>
 800b3c2:	2301      	movs	r3, #1
 800b3c4:	4652      	mov	r2, sl
 800b3c6:	4641      	mov	r1, r8
 800b3c8:	4638      	mov	r0, r7
 800b3ca:	47c8      	blx	r9
 800b3cc:	3001      	adds	r0, #1
 800b3ce:	d103      	bne.n	800b3d8 <_printf_common+0xac>
 800b3d0:	f04f 30ff 	mov.w	r0, #4294967295
 800b3d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b3d8:	3501      	adds	r5, #1
 800b3da:	e7c6      	b.n	800b36a <_printf_common+0x3e>
 800b3dc:	18e1      	adds	r1, r4, r3
 800b3de:	1c5a      	adds	r2, r3, #1
 800b3e0:	2030      	movs	r0, #48	@ 0x30
 800b3e2:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 800b3e6:	4422      	add	r2, r4
 800b3e8:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 800b3ec:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 800b3f0:	3302      	adds	r3, #2
 800b3f2:	e7c7      	b.n	800b384 <_printf_common+0x58>
 800b3f4:	2301      	movs	r3, #1
 800b3f6:	4622      	mov	r2, r4
 800b3f8:	4641      	mov	r1, r8
 800b3fa:	4638      	mov	r0, r7
 800b3fc:	47c8      	blx	r9
 800b3fe:	3001      	adds	r0, #1
 800b400:	d0e6      	beq.n	800b3d0 <_printf_common+0xa4>
 800b402:	3601      	adds	r6, #1
 800b404:	e7d9      	b.n	800b3ba <_printf_common+0x8e>
	...

0800b408 <_printf_i>:
 800b408:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800b40c:	7e0f      	ldrb	r7, [r1, #24]
 800b40e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 800b410:	2f78      	cmp	r7, #120	@ 0x78
 800b412:	4691      	mov	r9, r2
 800b414:	4680      	mov	r8, r0
 800b416:	460c      	mov	r4, r1
 800b418:	469a      	mov	sl, r3
 800b41a:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 800b41e:	d807      	bhi.n	800b430 <_printf_i+0x28>
 800b420:	2f62      	cmp	r7, #98	@ 0x62
 800b422:	d80a      	bhi.n	800b43a <_printf_i+0x32>
 800b424:	2f00      	cmp	r7, #0
 800b426:	f000 80d1 	beq.w	800b5cc <_printf_i+0x1c4>
 800b42a:	2f58      	cmp	r7, #88	@ 0x58
 800b42c:	f000 80b8 	beq.w	800b5a0 <_printf_i+0x198>
 800b430:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800b434:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 800b438:	e03a      	b.n	800b4b0 <_printf_i+0xa8>
 800b43a:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 800b43e:	2b15      	cmp	r3, #21
 800b440:	d8f6      	bhi.n	800b430 <_printf_i+0x28>
 800b442:	a101      	add	r1, pc, #4	@ (adr r1, 800b448 <_printf_i+0x40>)
 800b444:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800b448:	0800b4a1 	.word	0x0800b4a1
 800b44c:	0800b4b5 	.word	0x0800b4b5
 800b450:	0800b431 	.word	0x0800b431
 800b454:	0800b431 	.word	0x0800b431
 800b458:	0800b431 	.word	0x0800b431
 800b45c:	0800b431 	.word	0x0800b431
 800b460:	0800b4b5 	.word	0x0800b4b5
 800b464:	0800b431 	.word	0x0800b431
 800b468:	0800b431 	.word	0x0800b431
 800b46c:	0800b431 	.word	0x0800b431
 800b470:	0800b431 	.word	0x0800b431
 800b474:	0800b5b3 	.word	0x0800b5b3
 800b478:	0800b4df 	.word	0x0800b4df
 800b47c:	0800b56d 	.word	0x0800b56d
 800b480:	0800b431 	.word	0x0800b431
 800b484:	0800b431 	.word	0x0800b431
 800b488:	0800b5d5 	.word	0x0800b5d5
 800b48c:	0800b431 	.word	0x0800b431
 800b490:	0800b4df 	.word	0x0800b4df
 800b494:	0800b431 	.word	0x0800b431
 800b498:	0800b431 	.word	0x0800b431
 800b49c:	0800b575 	.word	0x0800b575
 800b4a0:	6833      	ldr	r3, [r6, #0]
 800b4a2:	1d1a      	adds	r2, r3, #4
 800b4a4:	681b      	ldr	r3, [r3, #0]
 800b4a6:	6032      	str	r2, [r6, #0]
 800b4a8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800b4ac:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800b4b0:	2301      	movs	r3, #1
 800b4b2:	e09c      	b.n	800b5ee <_printf_i+0x1e6>
 800b4b4:	6833      	ldr	r3, [r6, #0]
 800b4b6:	6820      	ldr	r0, [r4, #0]
 800b4b8:	1d19      	adds	r1, r3, #4
 800b4ba:	6031      	str	r1, [r6, #0]
 800b4bc:	0606      	lsls	r6, r0, #24
 800b4be:	d501      	bpl.n	800b4c4 <_printf_i+0xbc>
 800b4c0:	681d      	ldr	r5, [r3, #0]
 800b4c2:	e003      	b.n	800b4cc <_printf_i+0xc4>
 800b4c4:	0645      	lsls	r5, r0, #25
 800b4c6:	d5fb      	bpl.n	800b4c0 <_printf_i+0xb8>
 800b4c8:	f9b3 5000 	ldrsh.w	r5, [r3]
 800b4cc:	2d00      	cmp	r5, #0
 800b4ce:	da03      	bge.n	800b4d8 <_printf_i+0xd0>
 800b4d0:	232d      	movs	r3, #45	@ 0x2d
 800b4d2:	426d      	negs	r5, r5
 800b4d4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800b4d8:	4858      	ldr	r0, [pc, #352]	@ (800b63c <_printf_i+0x234>)
 800b4da:	230a      	movs	r3, #10
 800b4dc:	e011      	b.n	800b502 <_printf_i+0xfa>
 800b4de:	6821      	ldr	r1, [r4, #0]
 800b4e0:	6833      	ldr	r3, [r6, #0]
 800b4e2:	0608      	lsls	r0, r1, #24
 800b4e4:	f853 5b04 	ldr.w	r5, [r3], #4
 800b4e8:	d402      	bmi.n	800b4f0 <_printf_i+0xe8>
 800b4ea:	0649      	lsls	r1, r1, #25
 800b4ec:	bf48      	it	mi
 800b4ee:	b2ad      	uxthmi	r5, r5
 800b4f0:	2f6f      	cmp	r7, #111	@ 0x6f
 800b4f2:	4852      	ldr	r0, [pc, #328]	@ (800b63c <_printf_i+0x234>)
 800b4f4:	6033      	str	r3, [r6, #0]
 800b4f6:	bf14      	ite	ne
 800b4f8:	230a      	movne	r3, #10
 800b4fa:	2308      	moveq	r3, #8
 800b4fc:	2100      	movs	r1, #0
 800b4fe:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 800b502:	6866      	ldr	r6, [r4, #4]
 800b504:	60a6      	str	r6, [r4, #8]
 800b506:	2e00      	cmp	r6, #0
 800b508:	db05      	blt.n	800b516 <_printf_i+0x10e>
 800b50a:	6821      	ldr	r1, [r4, #0]
 800b50c:	432e      	orrs	r6, r5
 800b50e:	f021 0104 	bic.w	r1, r1, #4
 800b512:	6021      	str	r1, [r4, #0]
 800b514:	d04b      	beq.n	800b5ae <_printf_i+0x1a6>
 800b516:	4616      	mov	r6, r2
 800b518:	fbb5 f1f3 	udiv	r1, r5, r3
 800b51c:	fb03 5711 	mls	r7, r3, r1, r5
 800b520:	5dc7      	ldrb	r7, [r0, r7]
 800b522:	f806 7d01 	strb.w	r7, [r6, #-1]!
 800b526:	462f      	mov	r7, r5
 800b528:	42bb      	cmp	r3, r7
 800b52a:	460d      	mov	r5, r1
 800b52c:	d9f4      	bls.n	800b518 <_printf_i+0x110>
 800b52e:	2b08      	cmp	r3, #8
 800b530:	d10b      	bne.n	800b54a <_printf_i+0x142>
 800b532:	6823      	ldr	r3, [r4, #0]
 800b534:	07df      	lsls	r7, r3, #31
 800b536:	d508      	bpl.n	800b54a <_printf_i+0x142>
 800b538:	6923      	ldr	r3, [r4, #16]
 800b53a:	6861      	ldr	r1, [r4, #4]
 800b53c:	4299      	cmp	r1, r3
 800b53e:	bfde      	ittt	le
 800b540:	2330      	movle	r3, #48	@ 0x30
 800b542:	f806 3c01 	strble.w	r3, [r6, #-1]
 800b546:	f106 36ff 	addle.w	r6, r6, #4294967295
 800b54a:	1b92      	subs	r2, r2, r6
 800b54c:	6122      	str	r2, [r4, #16]
 800b54e:	f8cd a000 	str.w	sl, [sp]
 800b552:	464b      	mov	r3, r9
 800b554:	aa03      	add	r2, sp, #12
 800b556:	4621      	mov	r1, r4
 800b558:	4640      	mov	r0, r8
 800b55a:	f7ff fee7 	bl	800b32c <_printf_common>
 800b55e:	3001      	adds	r0, #1
 800b560:	d14a      	bne.n	800b5f8 <_printf_i+0x1f0>
 800b562:	f04f 30ff 	mov.w	r0, #4294967295
 800b566:	b004      	add	sp, #16
 800b568:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b56c:	6823      	ldr	r3, [r4, #0]
 800b56e:	f043 0320 	orr.w	r3, r3, #32
 800b572:	6023      	str	r3, [r4, #0]
 800b574:	4832      	ldr	r0, [pc, #200]	@ (800b640 <_printf_i+0x238>)
 800b576:	2778      	movs	r7, #120	@ 0x78
 800b578:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800b57c:	6823      	ldr	r3, [r4, #0]
 800b57e:	6831      	ldr	r1, [r6, #0]
 800b580:	061f      	lsls	r7, r3, #24
 800b582:	f851 5b04 	ldr.w	r5, [r1], #4
 800b586:	d402      	bmi.n	800b58e <_printf_i+0x186>
 800b588:	065f      	lsls	r7, r3, #25
 800b58a:	bf48      	it	mi
 800b58c:	b2ad      	uxthmi	r5, r5
 800b58e:	6031      	str	r1, [r6, #0]
 800b590:	07d9      	lsls	r1, r3, #31
 800b592:	bf44      	itt	mi
 800b594:	f043 0320 	orrmi.w	r3, r3, #32
 800b598:	6023      	strmi	r3, [r4, #0]
 800b59a:	b11d      	cbz	r5, 800b5a4 <_printf_i+0x19c>
 800b59c:	2310      	movs	r3, #16
 800b59e:	e7ad      	b.n	800b4fc <_printf_i+0xf4>
 800b5a0:	4826      	ldr	r0, [pc, #152]	@ (800b63c <_printf_i+0x234>)
 800b5a2:	e7e9      	b.n	800b578 <_printf_i+0x170>
 800b5a4:	6823      	ldr	r3, [r4, #0]
 800b5a6:	f023 0320 	bic.w	r3, r3, #32
 800b5aa:	6023      	str	r3, [r4, #0]
 800b5ac:	e7f6      	b.n	800b59c <_printf_i+0x194>
 800b5ae:	4616      	mov	r6, r2
 800b5b0:	e7bd      	b.n	800b52e <_printf_i+0x126>
 800b5b2:	6833      	ldr	r3, [r6, #0]
 800b5b4:	6825      	ldr	r5, [r4, #0]
 800b5b6:	6961      	ldr	r1, [r4, #20]
 800b5b8:	1d18      	adds	r0, r3, #4
 800b5ba:	6030      	str	r0, [r6, #0]
 800b5bc:	062e      	lsls	r6, r5, #24
 800b5be:	681b      	ldr	r3, [r3, #0]
 800b5c0:	d501      	bpl.n	800b5c6 <_printf_i+0x1be>
 800b5c2:	6019      	str	r1, [r3, #0]
 800b5c4:	e002      	b.n	800b5cc <_printf_i+0x1c4>
 800b5c6:	0668      	lsls	r0, r5, #25
 800b5c8:	d5fb      	bpl.n	800b5c2 <_printf_i+0x1ba>
 800b5ca:	8019      	strh	r1, [r3, #0]
 800b5cc:	2300      	movs	r3, #0
 800b5ce:	6123      	str	r3, [r4, #16]
 800b5d0:	4616      	mov	r6, r2
 800b5d2:	e7bc      	b.n	800b54e <_printf_i+0x146>
 800b5d4:	6833      	ldr	r3, [r6, #0]
 800b5d6:	1d1a      	adds	r2, r3, #4
 800b5d8:	6032      	str	r2, [r6, #0]
 800b5da:	681e      	ldr	r6, [r3, #0]
 800b5dc:	6862      	ldr	r2, [r4, #4]
 800b5de:	2100      	movs	r1, #0
 800b5e0:	4630      	mov	r0, r6
 800b5e2:	f7f4 fe15 	bl	8000210 <memchr>
 800b5e6:	b108      	cbz	r0, 800b5ec <_printf_i+0x1e4>
 800b5e8:	1b80      	subs	r0, r0, r6
 800b5ea:	6060      	str	r0, [r4, #4]
 800b5ec:	6863      	ldr	r3, [r4, #4]
 800b5ee:	6123      	str	r3, [r4, #16]
 800b5f0:	2300      	movs	r3, #0
 800b5f2:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800b5f6:	e7aa      	b.n	800b54e <_printf_i+0x146>
 800b5f8:	6923      	ldr	r3, [r4, #16]
 800b5fa:	4632      	mov	r2, r6
 800b5fc:	4649      	mov	r1, r9
 800b5fe:	4640      	mov	r0, r8
 800b600:	47d0      	blx	sl
 800b602:	3001      	adds	r0, #1
 800b604:	d0ad      	beq.n	800b562 <_printf_i+0x15a>
 800b606:	6823      	ldr	r3, [r4, #0]
 800b608:	079b      	lsls	r3, r3, #30
 800b60a:	d413      	bmi.n	800b634 <_printf_i+0x22c>
 800b60c:	68e0      	ldr	r0, [r4, #12]
 800b60e:	9b03      	ldr	r3, [sp, #12]
 800b610:	4298      	cmp	r0, r3
 800b612:	bfb8      	it	lt
 800b614:	4618      	movlt	r0, r3
 800b616:	e7a6      	b.n	800b566 <_printf_i+0x15e>
 800b618:	2301      	movs	r3, #1
 800b61a:	4632      	mov	r2, r6
 800b61c:	4649      	mov	r1, r9
 800b61e:	4640      	mov	r0, r8
 800b620:	47d0      	blx	sl
 800b622:	3001      	adds	r0, #1
 800b624:	d09d      	beq.n	800b562 <_printf_i+0x15a>
 800b626:	3501      	adds	r5, #1
 800b628:	68e3      	ldr	r3, [r4, #12]
 800b62a:	9903      	ldr	r1, [sp, #12]
 800b62c:	1a5b      	subs	r3, r3, r1
 800b62e:	42ab      	cmp	r3, r5
 800b630:	dcf2      	bgt.n	800b618 <_printf_i+0x210>
 800b632:	e7eb      	b.n	800b60c <_printf_i+0x204>
 800b634:	2500      	movs	r5, #0
 800b636:	f104 0619 	add.w	r6, r4, #25
 800b63a:	e7f5      	b.n	800b628 <_printf_i+0x220>
 800b63c:	0800e31b 	.word	0x0800e31b
 800b640:	0800e32c 	.word	0x0800e32c

0800b644 <std>:
 800b644:	2300      	movs	r3, #0
 800b646:	b510      	push	{r4, lr}
 800b648:	4604      	mov	r4, r0
 800b64a:	e9c0 3300 	strd	r3, r3, [r0]
 800b64e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800b652:	6083      	str	r3, [r0, #8]
 800b654:	8181      	strh	r1, [r0, #12]
 800b656:	6643      	str	r3, [r0, #100]	@ 0x64
 800b658:	81c2      	strh	r2, [r0, #14]
 800b65a:	6183      	str	r3, [r0, #24]
 800b65c:	4619      	mov	r1, r3
 800b65e:	2208      	movs	r2, #8
 800b660:	305c      	adds	r0, #92	@ 0x5c
 800b662:	f000 f94c 	bl	800b8fe <memset>
 800b666:	4b0d      	ldr	r3, [pc, #52]	@ (800b69c <std+0x58>)
 800b668:	6263      	str	r3, [r4, #36]	@ 0x24
 800b66a:	4b0d      	ldr	r3, [pc, #52]	@ (800b6a0 <std+0x5c>)
 800b66c:	62a3      	str	r3, [r4, #40]	@ 0x28
 800b66e:	4b0d      	ldr	r3, [pc, #52]	@ (800b6a4 <std+0x60>)
 800b670:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800b672:	4b0d      	ldr	r3, [pc, #52]	@ (800b6a8 <std+0x64>)
 800b674:	6323      	str	r3, [r4, #48]	@ 0x30
 800b676:	4b0d      	ldr	r3, [pc, #52]	@ (800b6ac <std+0x68>)
 800b678:	6224      	str	r4, [r4, #32]
 800b67a:	429c      	cmp	r4, r3
 800b67c:	d006      	beq.n	800b68c <std+0x48>
 800b67e:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 800b682:	4294      	cmp	r4, r2
 800b684:	d002      	beq.n	800b68c <std+0x48>
 800b686:	33d0      	adds	r3, #208	@ 0xd0
 800b688:	429c      	cmp	r4, r3
 800b68a:	d105      	bne.n	800b698 <std+0x54>
 800b68c:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 800b690:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b694:	f000 ba0e 	b.w	800bab4 <__retarget_lock_init_recursive>
 800b698:	bd10      	pop	{r4, pc}
 800b69a:	bf00      	nop
 800b69c:	0800b879 	.word	0x0800b879
 800b6a0:	0800b89b 	.word	0x0800b89b
 800b6a4:	0800b8d3 	.word	0x0800b8d3
 800b6a8:	0800b8f7 	.word	0x0800b8f7
 800b6ac:	20004ec4 	.word	0x20004ec4

0800b6b0 <stdio_exit_handler>:
 800b6b0:	4a02      	ldr	r2, [pc, #8]	@ (800b6bc <stdio_exit_handler+0xc>)
 800b6b2:	4903      	ldr	r1, [pc, #12]	@ (800b6c0 <stdio_exit_handler+0x10>)
 800b6b4:	4803      	ldr	r0, [pc, #12]	@ (800b6c4 <stdio_exit_handler+0x14>)
 800b6b6:	f000 b869 	b.w	800b78c <_fwalk_sglue>
 800b6ba:	bf00      	nop
 800b6bc:	20000014 	.word	0x20000014
 800b6c0:	0800d435 	.word	0x0800d435
 800b6c4:	20000024 	.word	0x20000024

0800b6c8 <cleanup_stdio>:
 800b6c8:	6841      	ldr	r1, [r0, #4]
 800b6ca:	4b0c      	ldr	r3, [pc, #48]	@ (800b6fc <cleanup_stdio+0x34>)
 800b6cc:	4299      	cmp	r1, r3
 800b6ce:	b510      	push	{r4, lr}
 800b6d0:	4604      	mov	r4, r0
 800b6d2:	d001      	beq.n	800b6d8 <cleanup_stdio+0x10>
 800b6d4:	f001 feae 	bl	800d434 <_fflush_r>
 800b6d8:	68a1      	ldr	r1, [r4, #8]
 800b6da:	4b09      	ldr	r3, [pc, #36]	@ (800b700 <cleanup_stdio+0x38>)
 800b6dc:	4299      	cmp	r1, r3
 800b6de:	d002      	beq.n	800b6e6 <cleanup_stdio+0x1e>
 800b6e0:	4620      	mov	r0, r4
 800b6e2:	f001 fea7 	bl	800d434 <_fflush_r>
 800b6e6:	68e1      	ldr	r1, [r4, #12]
 800b6e8:	4b06      	ldr	r3, [pc, #24]	@ (800b704 <cleanup_stdio+0x3c>)
 800b6ea:	4299      	cmp	r1, r3
 800b6ec:	d004      	beq.n	800b6f8 <cleanup_stdio+0x30>
 800b6ee:	4620      	mov	r0, r4
 800b6f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b6f4:	f001 be9e 	b.w	800d434 <_fflush_r>
 800b6f8:	bd10      	pop	{r4, pc}
 800b6fa:	bf00      	nop
 800b6fc:	20004ec4 	.word	0x20004ec4
 800b700:	20004f2c 	.word	0x20004f2c
 800b704:	20004f94 	.word	0x20004f94

0800b708 <global_stdio_init.part.0>:
 800b708:	b510      	push	{r4, lr}
 800b70a:	4b0b      	ldr	r3, [pc, #44]	@ (800b738 <global_stdio_init.part.0+0x30>)
 800b70c:	4c0b      	ldr	r4, [pc, #44]	@ (800b73c <global_stdio_init.part.0+0x34>)
 800b70e:	4a0c      	ldr	r2, [pc, #48]	@ (800b740 <global_stdio_init.part.0+0x38>)
 800b710:	601a      	str	r2, [r3, #0]
 800b712:	4620      	mov	r0, r4
 800b714:	2200      	movs	r2, #0
 800b716:	2104      	movs	r1, #4
 800b718:	f7ff ff94 	bl	800b644 <std>
 800b71c:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 800b720:	2201      	movs	r2, #1
 800b722:	2109      	movs	r1, #9
 800b724:	f7ff ff8e 	bl	800b644 <std>
 800b728:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 800b72c:	2202      	movs	r2, #2
 800b72e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b732:	2112      	movs	r1, #18
 800b734:	f7ff bf86 	b.w	800b644 <std>
 800b738:	20004ffc 	.word	0x20004ffc
 800b73c:	20004ec4 	.word	0x20004ec4
 800b740:	0800b6b1 	.word	0x0800b6b1

0800b744 <__sfp_lock_acquire>:
 800b744:	4801      	ldr	r0, [pc, #4]	@ (800b74c <__sfp_lock_acquire+0x8>)
 800b746:	f000 b9b6 	b.w	800bab6 <__retarget_lock_acquire_recursive>
 800b74a:	bf00      	nop
 800b74c:	20005005 	.word	0x20005005

0800b750 <__sfp_lock_release>:
 800b750:	4801      	ldr	r0, [pc, #4]	@ (800b758 <__sfp_lock_release+0x8>)
 800b752:	f000 b9b1 	b.w	800bab8 <__retarget_lock_release_recursive>
 800b756:	bf00      	nop
 800b758:	20005005 	.word	0x20005005

0800b75c <__sinit>:
 800b75c:	b510      	push	{r4, lr}
 800b75e:	4604      	mov	r4, r0
 800b760:	f7ff fff0 	bl	800b744 <__sfp_lock_acquire>
 800b764:	6a23      	ldr	r3, [r4, #32]
 800b766:	b11b      	cbz	r3, 800b770 <__sinit+0x14>
 800b768:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b76c:	f7ff bff0 	b.w	800b750 <__sfp_lock_release>
 800b770:	4b04      	ldr	r3, [pc, #16]	@ (800b784 <__sinit+0x28>)
 800b772:	6223      	str	r3, [r4, #32]
 800b774:	4b04      	ldr	r3, [pc, #16]	@ (800b788 <__sinit+0x2c>)
 800b776:	681b      	ldr	r3, [r3, #0]
 800b778:	2b00      	cmp	r3, #0
 800b77a:	d1f5      	bne.n	800b768 <__sinit+0xc>
 800b77c:	f7ff ffc4 	bl	800b708 <global_stdio_init.part.0>
 800b780:	e7f2      	b.n	800b768 <__sinit+0xc>
 800b782:	bf00      	nop
 800b784:	0800b6c9 	.word	0x0800b6c9
 800b788:	20004ffc 	.word	0x20004ffc

0800b78c <_fwalk_sglue>:
 800b78c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800b790:	4607      	mov	r7, r0
 800b792:	4688      	mov	r8, r1
 800b794:	4614      	mov	r4, r2
 800b796:	2600      	movs	r6, #0
 800b798:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800b79c:	f1b9 0901 	subs.w	r9, r9, #1
 800b7a0:	d505      	bpl.n	800b7ae <_fwalk_sglue+0x22>
 800b7a2:	6824      	ldr	r4, [r4, #0]
 800b7a4:	2c00      	cmp	r4, #0
 800b7a6:	d1f7      	bne.n	800b798 <_fwalk_sglue+0xc>
 800b7a8:	4630      	mov	r0, r6
 800b7aa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800b7ae:	89ab      	ldrh	r3, [r5, #12]
 800b7b0:	2b01      	cmp	r3, #1
 800b7b2:	d907      	bls.n	800b7c4 <_fwalk_sglue+0x38>
 800b7b4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800b7b8:	3301      	adds	r3, #1
 800b7ba:	d003      	beq.n	800b7c4 <_fwalk_sglue+0x38>
 800b7bc:	4629      	mov	r1, r5
 800b7be:	4638      	mov	r0, r7
 800b7c0:	47c0      	blx	r8
 800b7c2:	4306      	orrs	r6, r0
 800b7c4:	3568      	adds	r5, #104	@ 0x68
 800b7c6:	e7e9      	b.n	800b79c <_fwalk_sglue+0x10>

0800b7c8 <sniprintf>:
 800b7c8:	b40c      	push	{r2, r3}
 800b7ca:	b530      	push	{r4, r5, lr}
 800b7cc:	4b18      	ldr	r3, [pc, #96]	@ (800b830 <sniprintf+0x68>)
 800b7ce:	1e0c      	subs	r4, r1, #0
 800b7d0:	681d      	ldr	r5, [r3, #0]
 800b7d2:	b09d      	sub	sp, #116	@ 0x74
 800b7d4:	da08      	bge.n	800b7e8 <sniprintf+0x20>
 800b7d6:	238b      	movs	r3, #139	@ 0x8b
 800b7d8:	602b      	str	r3, [r5, #0]
 800b7da:	f04f 30ff 	mov.w	r0, #4294967295
 800b7de:	b01d      	add	sp, #116	@ 0x74
 800b7e0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800b7e4:	b002      	add	sp, #8
 800b7e6:	4770      	bx	lr
 800b7e8:	f44f 7302 	mov.w	r3, #520	@ 0x208
 800b7ec:	f8ad 3014 	strh.w	r3, [sp, #20]
 800b7f0:	f04f 0300 	mov.w	r3, #0
 800b7f4:	931b      	str	r3, [sp, #108]	@ 0x6c
 800b7f6:	bf14      	ite	ne
 800b7f8:	f104 33ff 	addne.w	r3, r4, #4294967295
 800b7fc:	4623      	moveq	r3, r4
 800b7fe:	9304      	str	r3, [sp, #16]
 800b800:	9307      	str	r3, [sp, #28]
 800b802:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800b806:	9002      	str	r0, [sp, #8]
 800b808:	9006      	str	r0, [sp, #24]
 800b80a:	f8ad 3016 	strh.w	r3, [sp, #22]
 800b80e:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800b810:	ab21      	add	r3, sp, #132	@ 0x84
 800b812:	a902      	add	r1, sp, #8
 800b814:	4628      	mov	r0, r5
 800b816:	9301      	str	r3, [sp, #4]
 800b818:	f001 fc8c 	bl	800d134 <_svfiprintf_r>
 800b81c:	1c43      	adds	r3, r0, #1
 800b81e:	bfbc      	itt	lt
 800b820:	238b      	movlt	r3, #139	@ 0x8b
 800b822:	602b      	strlt	r3, [r5, #0]
 800b824:	2c00      	cmp	r4, #0
 800b826:	d0da      	beq.n	800b7de <sniprintf+0x16>
 800b828:	9b02      	ldr	r3, [sp, #8]
 800b82a:	2200      	movs	r2, #0
 800b82c:	701a      	strb	r2, [r3, #0]
 800b82e:	e7d6      	b.n	800b7de <sniprintf+0x16>
 800b830:	20000020 	.word	0x20000020

0800b834 <siprintf>:
 800b834:	b40e      	push	{r1, r2, r3}
 800b836:	b510      	push	{r4, lr}
 800b838:	b09d      	sub	sp, #116	@ 0x74
 800b83a:	ab1f      	add	r3, sp, #124	@ 0x7c
 800b83c:	9002      	str	r0, [sp, #8]
 800b83e:	9006      	str	r0, [sp, #24]
 800b840:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 800b844:	480a      	ldr	r0, [pc, #40]	@ (800b870 <siprintf+0x3c>)
 800b846:	9107      	str	r1, [sp, #28]
 800b848:	9104      	str	r1, [sp, #16]
 800b84a:	490a      	ldr	r1, [pc, #40]	@ (800b874 <siprintf+0x40>)
 800b84c:	f853 2b04 	ldr.w	r2, [r3], #4
 800b850:	9105      	str	r1, [sp, #20]
 800b852:	2400      	movs	r4, #0
 800b854:	a902      	add	r1, sp, #8
 800b856:	6800      	ldr	r0, [r0, #0]
 800b858:	9301      	str	r3, [sp, #4]
 800b85a:	941b      	str	r4, [sp, #108]	@ 0x6c
 800b85c:	f001 fc6a 	bl	800d134 <_svfiprintf_r>
 800b860:	9b02      	ldr	r3, [sp, #8]
 800b862:	701c      	strb	r4, [r3, #0]
 800b864:	b01d      	add	sp, #116	@ 0x74
 800b866:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b86a:	b003      	add	sp, #12
 800b86c:	4770      	bx	lr
 800b86e:	bf00      	nop
 800b870:	20000020 	.word	0x20000020
 800b874:	ffff0208 	.word	0xffff0208

0800b878 <__sread>:
 800b878:	b510      	push	{r4, lr}
 800b87a:	460c      	mov	r4, r1
 800b87c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800b880:	f000 f8ca 	bl	800ba18 <_read_r>
 800b884:	2800      	cmp	r0, #0
 800b886:	bfab      	itete	ge
 800b888:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 800b88a:	89a3      	ldrhlt	r3, [r4, #12]
 800b88c:	181b      	addge	r3, r3, r0
 800b88e:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 800b892:	bfac      	ite	ge
 800b894:	6563      	strge	r3, [r4, #84]	@ 0x54
 800b896:	81a3      	strhlt	r3, [r4, #12]
 800b898:	bd10      	pop	{r4, pc}

0800b89a <__swrite>:
 800b89a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b89e:	461f      	mov	r7, r3
 800b8a0:	898b      	ldrh	r3, [r1, #12]
 800b8a2:	05db      	lsls	r3, r3, #23
 800b8a4:	4605      	mov	r5, r0
 800b8a6:	460c      	mov	r4, r1
 800b8a8:	4616      	mov	r6, r2
 800b8aa:	d505      	bpl.n	800b8b8 <__swrite+0x1e>
 800b8ac:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800b8b0:	2302      	movs	r3, #2
 800b8b2:	2200      	movs	r2, #0
 800b8b4:	f000 f89e 	bl	800b9f4 <_lseek_r>
 800b8b8:	89a3      	ldrh	r3, [r4, #12]
 800b8ba:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800b8be:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800b8c2:	81a3      	strh	r3, [r4, #12]
 800b8c4:	4632      	mov	r2, r6
 800b8c6:	463b      	mov	r3, r7
 800b8c8:	4628      	mov	r0, r5
 800b8ca:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800b8ce:	f000 b8b5 	b.w	800ba3c <_write_r>

0800b8d2 <__sseek>:
 800b8d2:	b510      	push	{r4, lr}
 800b8d4:	460c      	mov	r4, r1
 800b8d6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800b8da:	f000 f88b 	bl	800b9f4 <_lseek_r>
 800b8de:	1c43      	adds	r3, r0, #1
 800b8e0:	89a3      	ldrh	r3, [r4, #12]
 800b8e2:	bf15      	itete	ne
 800b8e4:	6560      	strne	r0, [r4, #84]	@ 0x54
 800b8e6:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800b8ea:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 800b8ee:	81a3      	strheq	r3, [r4, #12]
 800b8f0:	bf18      	it	ne
 800b8f2:	81a3      	strhne	r3, [r4, #12]
 800b8f4:	bd10      	pop	{r4, pc}

0800b8f6 <__sclose>:
 800b8f6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800b8fa:	f000 b80d 	b.w	800b918 <_close_r>

0800b8fe <memset>:
 800b8fe:	4402      	add	r2, r0
 800b900:	4603      	mov	r3, r0
 800b902:	4293      	cmp	r3, r2
 800b904:	d100      	bne.n	800b908 <memset+0xa>
 800b906:	4770      	bx	lr
 800b908:	f803 1b01 	strb.w	r1, [r3], #1
 800b90c:	e7f9      	b.n	800b902 <memset+0x4>
	...

0800b910 <_localeconv_r>:
 800b910:	4800      	ldr	r0, [pc, #0]	@ (800b914 <_localeconv_r+0x4>)
 800b912:	4770      	bx	lr
 800b914:	20000160 	.word	0x20000160

0800b918 <_close_r>:
 800b918:	b538      	push	{r3, r4, r5, lr}
 800b91a:	4d06      	ldr	r5, [pc, #24]	@ (800b934 <_close_r+0x1c>)
 800b91c:	2300      	movs	r3, #0
 800b91e:	4604      	mov	r4, r0
 800b920:	4608      	mov	r0, r1
 800b922:	602b      	str	r3, [r5, #0]
 800b924:	f7f6 fe48 	bl	80025b8 <_close>
 800b928:	1c43      	adds	r3, r0, #1
 800b92a:	d102      	bne.n	800b932 <_close_r+0x1a>
 800b92c:	682b      	ldr	r3, [r5, #0]
 800b92e:	b103      	cbz	r3, 800b932 <_close_r+0x1a>
 800b930:	6023      	str	r3, [r4, #0]
 800b932:	bd38      	pop	{r3, r4, r5, pc}
 800b934:	20005000 	.word	0x20005000

0800b938 <_reclaim_reent>:
 800b938:	4b2d      	ldr	r3, [pc, #180]	@ (800b9f0 <_reclaim_reent+0xb8>)
 800b93a:	681b      	ldr	r3, [r3, #0]
 800b93c:	4283      	cmp	r3, r0
 800b93e:	b570      	push	{r4, r5, r6, lr}
 800b940:	4604      	mov	r4, r0
 800b942:	d053      	beq.n	800b9ec <_reclaim_reent+0xb4>
 800b944:	69c3      	ldr	r3, [r0, #28]
 800b946:	b31b      	cbz	r3, 800b990 <_reclaim_reent+0x58>
 800b948:	68db      	ldr	r3, [r3, #12]
 800b94a:	b163      	cbz	r3, 800b966 <_reclaim_reent+0x2e>
 800b94c:	2500      	movs	r5, #0
 800b94e:	69e3      	ldr	r3, [r4, #28]
 800b950:	68db      	ldr	r3, [r3, #12]
 800b952:	5959      	ldr	r1, [r3, r5]
 800b954:	b9b1      	cbnz	r1, 800b984 <_reclaim_reent+0x4c>
 800b956:	3504      	adds	r5, #4
 800b958:	2d80      	cmp	r5, #128	@ 0x80
 800b95a:	d1f8      	bne.n	800b94e <_reclaim_reent+0x16>
 800b95c:	69e3      	ldr	r3, [r4, #28]
 800b95e:	4620      	mov	r0, r4
 800b960:	68d9      	ldr	r1, [r3, #12]
 800b962:	f000 ff11 	bl	800c788 <_free_r>
 800b966:	69e3      	ldr	r3, [r4, #28]
 800b968:	6819      	ldr	r1, [r3, #0]
 800b96a:	b111      	cbz	r1, 800b972 <_reclaim_reent+0x3a>
 800b96c:	4620      	mov	r0, r4
 800b96e:	f000 ff0b 	bl	800c788 <_free_r>
 800b972:	69e3      	ldr	r3, [r4, #28]
 800b974:	689d      	ldr	r5, [r3, #8]
 800b976:	b15d      	cbz	r5, 800b990 <_reclaim_reent+0x58>
 800b978:	4629      	mov	r1, r5
 800b97a:	4620      	mov	r0, r4
 800b97c:	682d      	ldr	r5, [r5, #0]
 800b97e:	f000 ff03 	bl	800c788 <_free_r>
 800b982:	e7f8      	b.n	800b976 <_reclaim_reent+0x3e>
 800b984:	680e      	ldr	r6, [r1, #0]
 800b986:	4620      	mov	r0, r4
 800b988:	f000 fefe 	bl	800c788 <_free_r>
 800b98c:	4631      	mov	r1, r6
 800b98e:	e7e1      	b.n	800b954 <_reclaim_reent+0x1c>
 800b990:	6961      	ldr	r1, [r4, #20]
 800b992:	b111      	cbz	r1, 800b99a <_reclaim_reent+0x62>
 800b994:	4620      	mov	r0, r4
 800b996:	f000 fef7 	bl	800c788 <_free_r>
 800b99a:	69e1      	ldr	r1, [r4, #28]
 800b99c:	b111      	cbz	r1, 800b9a4 <_reclaim_reent+0x6c>
 800b99e:	4620      	mov	r0, r4
 800b9a0:	f000 fef2 	bl	800c788 <_free_r>
 800b9a4:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800b9a6:	b111      	cbz	r1, 800b9ae <_reclaim_reent+0x76>
 800b9a8:	4620      	mov	r0, r4
 800b9aa:	f000 feed 	bl	800c788 <_free_r>
 800b9ae:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800b9b0:	b111      	cbz	r1, 800b9b8 <_reclaim_reent+0x80>
 800b9b2:	4620      	mov	r0, r4
 800b9b4:	f000 fee8 	bl	800c788 <_free_r>
 800b9b8:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 800b9ba:	b111      	cbz	r1, 800b9c2 <_reclaim_reent+0x8a>
 800b9bc:	4620      	mov	r0, r4
 800b9be:	f000 fee3 	bl	800c788 <_free_r>
 800b9c2:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
 800b9c4:	b111      	cbz	r1, 800b9cc <_reclaim_reent+0x94>
 800b9c6:	4620      	mov	r0, r4
 800b9c8:	f000 fede 	bl	800c788 <_free_r>
 800b9cc:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 800b9ce:	b111      	cbz	r1, 800b9d6 <_reclaim_reent+0x9e>
 800b9d0:	4620      	mov	r0, r4
 800b9d2:	f000 fed9 	bl	800c788 <_free_r>
 800b9d6:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 800b9d8:	b111      	cbz	r1, 800b9e0 <_reclaim_reent+0xa8>
 800b9da:	4620      	mov	r0, r4
 800b9dc:	f000 fed4 	bl	800c788 <_free_r>
 800b9e0:	6a23      	ldr	r3, [r4, #32]
 800b9e2:	b11b      	cbz	r3, 800b9ec <_reclaim_reent+0xb4>
 800b9e4:	4620      	mov	r0, r4
 800b9e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b9ea:	4718      	bx	r3
 800b9ec:	bd70      	pop	{r4, r5, r6, pc}
 800b9ee:	bf00      	nop
 800b9f0:	20000020 	.word	0x20000020

0800b9f4 <_lseek_r>:
 800b9f4:	b538      	push	{r3, r4, r5, lr}
 800b9f6:	4d07      	ldr	r5, [pc, #28]	@ (800ba14 <_lseek_r+0x20>)
 800b9f8:	4604      	mov	r4, r0
 800b9fa:	4608      	mov	r0, r1
 800b9fc:	4611      	mov	r1, r2
 800b9fe:	2200      	movs	r2, #0
 800ba00:	602a      	str	r2, [r5, #0]
 800ba02:	461a      	mov	r2, r3
 800ba04:	f7f6 fdff 	bl	8002606 <_lseek>
 800ba08:	1c43      	adds	r3, r0, #1
 800ba0a:	d102      	bne.n	800ba12 <_lseek_r+0x1e>
 800ba0c:	682b      	ldr	r3, [r5, #0]
 800ba0e:	b103      	cbz	r3, 800ba12 <_lseek_r+0x1e>
 800ba10:	6023      	str	r3, [r4, #0]
 800ba12:	bd38      	pop	{r3, r4, r5, pc}
 800ba14:	20005000 	.word	0x20005000

0800ba18 <_read_r>:
 800ba18:	b538      	push	{r3, r4, r5, lr}
 800ba1a:	4d07      	ldr	r5, [pc, #28]	@ (800ba38 <_read_r+0x20>)
 800ba1c:	4604      	mov	r4, r0
 800ba1e:	4608      	mov	r0, r1
 800ba20:	4611      	mov	r1, r2
 800ba22:	2200      	movs	r2, #0
 800ba24:	602a      	str	r2, [r5, #0]
 800ba26:	461a      	mov	r2, r3
 800ba28:	f7f6 fd8d 	bl	8002546 <_read>
 800ba2c:	1c43      	adds	r3, r0, #1
 800ba2e:	d102      	bne.n	800ba36 <_read_r+0x1e>
 800ba30:	682b      	ldr	r3, [r5, #0]
 800ba32:	b103      	cbz	r3, 800ba36 <_read_r+0x1e>
 800ba34:	6023      	str	r3, [r4, #0]
 800ba36:	bd38      	pop	{r3, r4, r5, pc}
 800ba38:	20005000 	.word	0x20005000

0800ba3c <_write_r>:
 800ba3c:	b538      	push	{r3, r4, r5, lr}
 800ba3e:	4d07      	ldr	r5, [pc, #28]	@ (800ba5c <_write_r+0x20>)
 800ba40:	4604      	mov	r4, r0
 800ba42:	4608      	mov	r0, r1
 800ba44:	4611      	mov	r1, r2
 800ba46:	2200      	movs	r2, #0
 800ba48:	602a      	str	r2, [r5, #0]
 800ba4a:	461a      	mov	r2, r3
 800ba4c:	f7f6 fd98 	bl	8002580 <_write>
 800ba50:	1c43      	adds	r3, r0, #1
 800ba52:	d102      	bne.n	800ba5a <_write_r+0x1e>
 800ba54:	682b      	ldr	r3, [r5, #0]
 800ba56:	b103      	cbz	r3, 800ba5a <_write_r+0x1e>
 800ba58:	6023      	str	r3, [r4, #0]
 800ba5a:	bd38      	pop	{r3, r4, r5, pc}
 800ba5c:	20005000 	.word	0x20005000

0800ba60 <__errno>:
 800ba60:	4b01      	ldr	r3, [pc, #4]	@ (800ba68 <__errno+0x8>)
 800ba62:	6818      	ldr	r0, [r3, #0]
 800ba64:	4770      	bx	lr
 800ba66:	bf00      	nop
 800ba68:	20000020 	.word	0x20000020

0800ba6c <__libc_init_array>:
 800ba6c:	b570      	push	{r4, r5, r6, lr}
 800ba6e:	4d0d      	ldr	r5, [pc, #52]	@ (800baa4 <__libc_init_array+0x38>)
 800ba70:	4c0d      	ldr	r4, [pc, #52]	@ (800baa8 <__libc_init_array+0x3c>)
 800ba72:	1b64      	subs	r4, r4, r5
 800ba74:	10a4      	asrs	r4, r4, #2
 800ba76:	2600      	movs	r6, #0
 800ba78:	42a6      	cmp	r6, r4
 800ba7a:	d109      	bne.n	800ba90 <__libc_init_array+0x24>
 800ba7c:	4d0b      	ldr	r5, [pc, #44]	@ (800baac <__libc_init_array+0x40>)
 800ba7e:	4c0c      	ldr	r4, [pc, #48]	@ (800bab0 <__libc_init_array+0x44>)
 800ba80:	f002 fa08 	bl	800de94 <_init>
 800ba84:	1b64      	subs	r4, r4, r5
 800ba86:	10a4      	asrs	r4, r4, #2
 800ba88:	2600      	movs	r6, #0
 800ba8a:	42a6      	cmp	r6, r4
 800ba8c:	d105      	bne.n	800ba9a <__libc_init_array+0x2e>
 800ba8e:	bd70      	pop	{r4, r5, r6, pc}
 800ba90:	f855 3b04 	ldr.w	r3, [r5], #4
 800ba94:	4798      	blx	r3
 800ba96:	3601      	adds	r6, #1
 800ba98:	e7ee      	b.n	800ba78 <__libc_init_array+0xc>
 800ba9a:	f855 3b04 	ldr.w	r3, [r5], #4
 800ba9e:	4798      	blx	r3
 800baa0:	3601      	adds	r6, #1
 800baa2:	e7f2      	b.n	800ba8a <__libc_init_array+0x1e>
 800baa4:	0800e5b8 	.word	0x0800e5b8
 800baa8:	0800e5b8 	.word	0x0800e5b8
 800baac:	0800e5b8 	.word	0x0800e5b8
 800bab0:	0800e5bc 	.word	0x0800e5bc

0800bab4 <__retarget_lock_init_recursive>:
 800bab4:	4770      	bx	lr

0800bab6 <__retarget_lock_acquire_recursive>:
 800bab6:	4770      	bx	lr

0800bab8 <__retarget_lock_release_recursive>:
 800bab8:	4770      	bx	lr

0800baba <memcpy>:
 800baba:	440a      	add	r2, r1
 800babc:	4291      	cmp	r1, r2
 800babe:	f100 33ff 	add.w	r3, r0, #4294967295
 800bac2:	d100      	bne.n	800bac6 <memcpy+0xc>
 800bac4:	4770      	bx	lr
 800bac6:	b510      	push	{r4, lr}
 800bac8:	f811 4b01 	ldrb.w	r4, [r1], #1
 800bacc:	f803 4f01 	strb.w	r4, [r3, #1]!
 800bad0:	4291      	cmp	r1, r2
 800bad2:	d1f9      	bne.n	800bac8 <memcpy+0xe>
 800bad4:	bd10      	pop	{r4, pc}

0800bad6 <quorem>:
 800bad6:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bada:	6903      	ldr	r3, [r0, #16]
 800badc:	690c      	ldr	r4, [r1, #16]
 800bade:	42a3      	cmp	r3, r4
 800bae0:	4607      	mov	r7, r0
 800bae2:	db7e      	blt.n	800bbe2 <quorem+0x10c>
 800bae4:	3c01      	subs	r4, #1
 800bae6:	f101 0814 	add.w	r8, r1, #20
 800baea:	00a3      	lsls	r3, r4, #2
 800baec:	f100 0514 	add.w	r5, r0, #20
 800baf0:	9300      	str	r3, [sp, #0]
 800baf2:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800baf6:	9301      	str	r3, [sp, #4]
 800baf8:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800bafc:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800bb00:	3301      	adds	r3, #1
 800bb02:	429a      	cmp	r2, r3
 800bb04:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800bb08:	fbb2 f6f3 	udiv	r6, r2, r3
 800bb0c:	d32e      	bcc.n	800bb6c <quorem+0x96>
 800bb0e:	f04f 0a00 	mov.w	sl, #0
 800bb12:	46c4      	mov	ip, r8
 800bb14:	46ae      	mov	lr, r5
 800bb16:	46d3      	mov	fp, sl
 800bb18:	f85c 3b04 	ldr.w	r3, [ip], #4
 800bb1c:	b298      	uxth	r0, r3
 800bb1e:	fb06 a000 	mla	r0, r6, r0, sl
 800bb22:	0c02      	lsrs	r2, r0, #16
 800bb24:	0c1b      	lsrs	r3, r3, #16
 800bb26:	fb06 2303 	mla	r3, r6, r3, r2
 800bb2a:	f8de 2000 	ldr.w	r2, [lr]
 800bb2e:	b280      	uxth	r0, r0
 800bb30:	b292      	uxth	r2, r2
 800bb32:	1a12      	subs	r2, r2, r0
 800bb34:	445a      	add	r2, fp
 800bb36:	f8de 0000 	ldr.w	r0, [lr]
 800bb3a:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800bb3e:	b29b      	uxth	r3, r3
 800bb40:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 800bb44:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 800bb48:	b292      	uxth	r2, r2
 800bb4a:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 800bb4e:	45e1      	cmp	r9, ip
 800bb50:	f84e 2b04 	str.w	r2, [lr], #4
 800bb54:	ea4f 4b23 	mov.w	fp, r3, asr #16
 800bb58:	d2de      	bcs.n	800bb18 <quorem+0x42>
 800bb5a:	9b00      	ldr	r3, [sp, #0]
 800bb5c:	58eb      	ldr	r3, [r5, r3]
 800bb5e:	b92b      	cbnz	r3, 800bb6c <quorem+0x96>
 800bb60:	9b01      	ldr	r3, [sp, #4]
 800bb62:	3b04      	subs	r3, #4
 800bb64:	429d      	cmp	r5, r3
 800bb66:	461a      	mov	r2, r3
 800bb68:	d32f      	bcc.n	800bbca <quorem+0xf4>
 800bb6a:	613c      	str	r4, [r7, #16]
 800bb6c:	4638      	mov	r0, r7
 800bb6e:	f001 f97d 	bl	800ce6c <__mcmp>
 800bb72:	2800      	cmp	r0, #0
 800bb74:	db25      	blt.n	800bbc2 <quorem+0xec>
 800bb76:	4629      	mov	r1, r5
 800bb78:	2000      	movs	r0, #0
 800bb7a:	f858 2b04 	ldr.w	r2, [r8], #4
 800bb7e:	f8d1 c000 	ldr.w	ip, [r1]
 800bb82:	fa1f fe82 	uxth.w	lr, r2
 800bb86:	fa1f f38c 	uxth.w	r3, ip
 800bb8a:	eba3 030e 	sub.w	r3, r3, lr
 800bb8e:	4403      	add	r3, r0
 800bb90:	0c12      	lsrs	r2, r2, #16
 800bb92:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 800bb96:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 800bb9a:	b29b      	uxth	r3, r3
 800bb9c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800bba0:	45c1      	cmp	r9, r8
 800bba2:	f841 3b04 	str.w	r3, [r1], #4
 800bba6:	ea4f 4022 	mov.w	r0, r2, asr #16
 800bbaa:	d2e6      	bcs.n	800bb7a <quorem+0xa4>
 800bbac:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800bbb0:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800bbb4:	b922      	cbnz	r2, 800bbc0 <quorem+0xea>
 800bbb6:	3b04      	subs	r3, #4
 800bbb8:	429d      	cmp	r5, r3
 800bbba:	461a      	mov	r2, r3
 800bbbc:	d30b      	bcc.n	800bbd6 <quorem+0x100>
 800bbbe:	613c      	str	r4, [r7, #16]
 800bbc0:	3601      	adds	r6, #1
 800bbc2:	4630      	mov	r0, r6
 800bbc4:	b003      	add	sp, #12
 800bbc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bbca:	6812      	ldr	r2, [r2, #0]
 800bbcc:	3b04      	subs	r3, #4
 800bbce:	2a00      	cmp	r2, #0
 800bbd0:	d1cb      	bne.n	800bb6a <quorem+0x94>
 800bbd2:	3c01      	subs	r4, #1
 800bbd4:	e7c6      	b.n	800bb64 <quorem+0x8e>
 800bbd6:	6812      	ldr	r2, [r2, #0]
 800bbd8:	3b04      	subs	r3, #4
 800bbda:	2a00      	cmp	r2, #0
 800bbdc:	d1ef      	bne.n	800bbbe <quorem+0xe8>
 800bbde:	3c01      	subs	r4, #1
 800bbe0:	e7ea      	b.n	800bbb8 <quorem+0xe2>
 800bbe2:	2000      	movs	r0, #0
 800bbe4:	e7ee      	b.n	800bbc4 <quorem+0xee>
	...

0800bbe8 <_dtoa_r>:
 800bbe8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bbec:	69c7      	ldr	r7, [r0, #28]
 800bbee:	b097      	sub	sp, #92	@ 0x5c
 800bbf0:	ed8d 0b04 	vstr	d0, [sp, #16]
 800bbf4:	ec55 4b10 	vmov	r4, r5, d0
 800bbf8:	9e20      	ldr	r6, [sp, #128]	@ 0x80
 800bbfa:	9107      	str	r1, [sp, #28]
 800bbfc:	4681      	mov	r9, r0
 800bbfe:	920c      	str	r2, [sp, #48]	@ 0x30
 800bc00:	9311      	str	r3, [sp, #68]	@ 0x44
 800bc02:	b97f      	cbnz	r7, 800bc24 <_dtoa_r+0x3c>
 800bc04:	2010      	movs	r0, #16
 800bc06:	f000 fe09 	bl	800c81c <malloc>
 800bc0a:	4602      	mov	r2, r0
 800bc0c:	f8c9 001c 	str.w	r0, [r9, #28]
 800bc10:	b920      	cbnz	r0, 800bc1c <_dtoa_r+0x34>
 800bc12:	4ba9      	ldr	r3, [pc, #676]	@ (800beb8 <_dtoa_r+0x2d0>)
 800bc14:	21ef      	movs	r1, #239	@ 0xef
 800bc16:	48a9      	ldr	r0, [pc, #676]	@ (800bebc <_dtoa_r+0x2d4>)
 800bc18:	f001 fc5e 	bl	800d4d8 <__assert_func>
 800bc1c:	e9c0 7701 	strd	r7, r7, [r0, #4]
 800bc20:	6007      	str	r7, [r0, #0]
 800bc22:	60c7      	str	r7, [r0, #12]
 800bc24:	f8d9 301c 	ldr.w	r3, [r9, #28]
 800bc28:	6819      	ldr	r1, [r3, #0]
 800bc2a:	b159      	cbz	r1, 800bc44 <_dtoa_r+0x5c>
 800bc2c:	685a      	ldr	r2, [r3, #4]
 800bc2e:	604a      	str	r2, [r1, #4]
 800bc30:	2301      	movs	r3, #1
 800bc32:	4093      	lsls	r3, r2
 800bc34:	608b      	str	r3, [r1, #8]
 800bc36:	4648      	mov	r0, r9
 800bc38:	f000 fee6 	bl	800ca08 <_Bfree>
 800bc3c:	f8d9 301c 	ldr.w	r3, [r9, #28]
 800bc40:	2200      	movs	r2, #0
 800bc42:	601a      	str	r2, [r3, #0]
 800bc44:	1e2b      	subs	r3, r5, #0
 800bc46:	bfb9      	ittee	lt
 800bc48:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 800bc4c:	9305      	strlt	r3, [sp, #20]
 800bc4e:	2300      	movge	r3, #0
 800bc50:	6033      	strge	r3, [r6, #0]
 800bc52:	9f05      	ldr	r7, [sp, #20]
 800bc54:	4b9a      	ldr	r3, [pc, #616]	@ (800bec0 <_dtoa_r+0x2d8>)
 800bc56:	bfbc      	itt	lt
 800bc58:	2201      	movlt	r2, #1
 800bc5a:	6032      	strlt	r2, [r6, #0]
 800bc5c:	43bb      	bics	r3, r7
 800bc5e:	d112      	bne.n	800bc86 <_dtoa_r+0x9e>
 800bc60:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 800bc62:	f242 730f 	movw	r3, #9999	@ 0x270f
 800bc66:	6013      	str	r3, [r2, #0]
 800bc68:	f3c7 0313 	ubfx	r3, r7, #0, #20
 800bc6c:	4323      	orrs	r3, r4
 800bc6e:	f000 855a 	beq.w	800c726 <_dtoa_r+0xb3e>
 800bc72:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 800bc74:	f8df a25c 	ldr.w	sl, [pc, #604]	@ 800bed4 <_dtoa_r+0x2ec>
 800bc78:	2b00      	cmp	r3, #0
 800bc7a:	f000 855c 	beq.w	800c736 <_dtoa_r+0xb4e>
 800bc7e:	f10a 0303 	add.w	r3, sl, #3
 800bc82:	f000 bd56 	b.w	800c732 <_dtoa_r+0xb4a>
 800bc86:	ed9d 7b04 	vldr	d7, [sp, #16]
 800bc8a:	2200      	movs	r2, #0
 800bc8c:	ec51 0b17 	vmov	r0, r1, d7
 800bc90:	2300      	movs	r3, #0
 800bc92:	ed8d 7b0a 	vstr	d7, [sp, #40]	@ 0x28
 800bc96:	f7f4 ff37 	bl	8000b08 <__aeabi_dcmpeq>
 800bc9a:	4680      	mov	r8, r0
 800bc9c:	b158      	cbz	r0, 800bcb6 <_dtoa_r+0xce>
 800bc9e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 800bca0:	2301      	movs	r3, #1
 800bca2:	6013      	str	r3, [r2, #0]
 800bca4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 800bca6:	b113      	cbz	r3, 800bcae <_dtoa_r+0xc6>
 800bca8:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800bcaa:	4b86      	ldr	r3, [pc, #536]	@ (800bec4 <_dtoa_r+0x2dc>)
 800bcac:	6013      	str	r3, [r2, #0]
 800bcae:	f8df a228 	ldr.w	sl, [pc, #552]	@ 800bed8 <_dtoa_r+0x2f0>
 800bcb2:	f000 bd40 	b.w	800c736 <_dtoa_r+0xb4e>
 800bcb6:	ed9d 0b0a 	vldr	d0, [sp, #40]	@ 0x28
 800bcba:	aa14      	add	r2, sp, #80	@ 0x50
 800bcbc:	a915      	add	r1, sp, #84	@ 0x54
 800bcbe:	4648      	mov	r0, r9
 800bcc0:	f001 f984 	bl	800cfcc <__d2b>
 800bcc4:	f3c7 560a 	ubfx	r6, r7, #20, #11
 800bcc8:	9002      	str	r0, [sp, #8]
 800bcca:	2e00      	cmp	r6, #0
 800bccc:	d078      	beq.n	800bdc0 <_dtoa_r+0x1d8>
 800bcce:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800bcd0:	f8cd 8048 	str.w	r8, [sp, #72]	@ 0x48
 800bcd4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800bcd8:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 800bcdc:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 800bce0:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 800bce4:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 800bce8:	4619      	mov	r1, r3
 800bcea:	2200      	movs	r2, #0
 800bcec:	4b76      	ldr	r3, [pc, #472]	@ (800bec8 <_dtoa_r+0x2e0>)
 800bcee:	f7f4 faeb 	bl	80002c8 <__aeabi_dsub>
 800bcf2:	a36b      	add	r3, pc, #428	@ (adr r3, 800bea0 <_dtoa_r+0x2b8>)
 800bcf4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800bcf8:	f7f4 fc9e 	bl	8000638 <__aeabi_dmul>
 800bcfc:	a36a      	add	r3, pc, #424	@ (adr r3, 800bea8 <_dtoa_r+0x2c0>)
 800bcfe:	e9d3 2300 	ldrd	r2, r3, [r3]
 800bd02:	f7f4 fae3 	bl	80002cc <__adddf3>
 800bd06:	4604      	mov	r4, r0
 800bd08:	4630      	mov	r0, r6
 800bd0a:	460d      	mov	r5, r1
 800bd0c:	f7f4 fc2a 	bl	8000564 <__aeabi_i2d>
 800bd10:	a367      	add	r3, pc, #412	@ (adr r3, 800beb0 <_dtoa_r+0x2c8>)
 800bd12:	e9d3 2300 	ldrd	r2, r3, [r3]
 800bd16:	f7f4 fc8f 	bl	8000638 <__aeabi_dmul>
 800bd1a:	4602      	mov	r2, r0
 800bd1c:	460b      	mov	r3, r1
 800bd1e:	4620      	mov	r0, r4
 800bd20:	4629      	mov	r1, r5
 800bd22:	f7f4 fad3 	bl	80002cc <__adddf3>
 800bd26:	4604      	mov	r4, r0
 800bd28:	460d      	mov	r5, r1
 800bd2a:	f7f4 ff35 	bl	8000b98 <__aeabi_d2iz>
 800bd2e:	2200      	movs	r2, #0
 800bd30:	4607      	mov	r7, r0
 800bd32:	2300      	movs	r3, #0
 800bd34:	4620      	mov	r0, r4
 800bd36:	4629      	mov	r1, r5
 800bd38:	f7f4 fef0 	bl	8000b1c <__aeabi_dcmplt>
 800bd3c:	b140      	cbz	r0, 800bd50 <_dtoa_r+0x168>
 800bd3e:	4638      	mov	r0, r7
 800bd40:	f7f4 fc10 	bl	8000564 <__aeabi_i2d>
 800bd44:	4622      	mov	r2, r4
 800bd46:	462b      	mov	r3, r5
 800bd48:	f7f4 fede 	bl	8000b08 <__aeabi_dcmpeq>
 800bd4c:	b900      	cbnz	r0, 800bd50 <_dtoa_r+0x168>
 800bd4e:	3f01      	subs	r7, #1
 800bd50:	2f16      	cmp	r7, #22
 800bd52:	d852      	bhi.n	800bdfa <_dtoa_r+0x212>
 800bd54:	4b5d      	ldr	r3, [pc, #372]	@ (800becc <_dtoa_r+0x2e4>)
 800bd56:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 800bd5a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800bd5e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 800bd62:	f7f4 fedb 	bl	8000b1c <__aeabi_dcmplt>
 800bd66:	2800      	cmp	r0, #0
 800bd68:	d049      	beq.n	800bdfe <_dtoa_r+0x216>
 800bd6a:	3f01      	subs	r7, #1
 800bd6c:	2300      	movs	r3, #0
 800bd6e:	9310      	str	r3, [sp, #64]	@ 0x40
 800bd70:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 800bd72:	1b9b      	subs	r3, r3, r6
 800bd74:	1e5a      	subs	r2, r3, #1
 800bd76:	bf45      	ittet	mi
 800bd78:	f1c3 0301 	rsbmi	r3, r3, #1
 800bd7c:	9300      	strmi	r3, [sp, #0]
 800bd7e:	2300      	movpl	r3, #0
 800bd80:	2300      	movmi	r3, #0
 800bd82:	9206      	str	r2, [sp, #24]
 800bd84:	bf54      	ite	pl
 800bd86:	9300      	strpl	r3, [sp, #0]
 800bd88:	9306      	strmi	r3, [sp, #24]
 800bd8a:	2f00      	cmp	r7, #0
 800bd8c:	db39      	blt.n	800be02 <_dtoa_r+0x21a>
 800bd8e:	9b06      	ldr	r3, [sp, #24]
 800bd90:	970d      	str	r7, [sp, #52]	@ 0x34
 800bd92:	443b      	add	r3, r7
 800bd94:	9306      	str	r3, [sp, #24]
 800bd96:	2300      	movs	r3, #0
 800bd98:	9308      	str	r3, [sp, #32]
 800bd9a:	9b07      	ldr	r3, [sp, #28]
 800bd9c:	2b09      	cmp	r3, #9
 800bd9e:	d863      	bhi.n	800be68 <_dtoa_r+0x280>
 800bda0:	2b05      	cmp	r3, #5
 800bda2:	bfc4      	itt	gt
 800bda4:	3b04      	subgt	r3, #4
 800bda6:	9307      	strgt	r3, [sp, #28]
 800bda8:	9b07      	ldr	r3, [sp, #28]
 800bdaa:	f1a3 0302 	sub.w	r3, r3, #2
 800bdae:	bfcc      	ite	gt
 800bdb0:	2400      	movgt	r4, #0
 800bdb2:	2401      	movle	r4, #1
 800bdb4:	2b03      	cmp	r3, #3
 800bdb6:	d863      	bhi.n	800be80 <_dtoa_r+0x298>
 800bdb8:	e8df f003 	tbb	[pc, r3]
 800bdbc:	2b375452 	.word	0x2b375452
 800bdc0:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 800bdc4:	441e      	add	r6, r3
 800bdc6:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 800bdca:	2b20      	cmp	r3, #32
 800bdcc:	bfc1      	itttt	gt
 800bdce:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 800bdd2:	409f      	lslgt	r7, r3
 800bdd4:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 800bdd8:	fa24 f303 	lsrgt.w	r3, r4, r3
 800bddc:	bfd6      	itet	le
 800bdde:	f1c3 0320 	rsble	r3, r3, #32
 800bde2:	ea47 0003 	orrgt.w	r0, r7, r3
 800bde6:	fa04 f003 	lslle.w	r0, r4, r3
 800bdea:	f7f4 fbab 	bl	8000544 <__aeabi_ui2d>
 800bdee:	2201      	movs	r2, #1
 800bdf0:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 800bdf4:	3e01      	subs	r6, #1
 800bdf6:	9212      	str	r2, [sp, #72]	@ 0x48
 800bdf8:	e776      	b.n	800bce8 <_dtoa_r+0x100>
 800bdfa:	2301      	movs	r3, #1
 800bdfc:	e7b7      	b.n	800bd6e <_dtoa_r+0x186>
 800bdfe:	9010      	str	r0, [sp, #64]	@ 0x40
 800be00:	e7b6      	b.n	800bd70 <_dtoa_r+0x188>
 800be02:	9b00      	ldr	r3, [sp, #0]
 800be04:	1bdb      	subs	r3, r3, r7
 800be06:	9300      	str	r3, [sp, #0]
 800be08:	427b      	negs	r3, r7
 800be0a:	9308      	str	r3, [sp, #32]
 800be0c:	2300      	movs	r3, #0
 800be0e:	930d      	str	r3, [sp, #52]	@ 0x34
 800be10:	e7c3      	b.n	800bd9a <_dtoa_r+0x1b2>
 800be12:	2301      	movs	r3, #1
 800be14:	9309      	str	r3, [sp, #36]	@ 0x24
 800be16:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800be18:	eb07 0b03 	add.w	fp, r7, r3
 800be1c:	f10b 0301 	add.w	r3, fp, #1
 800be20:	2b01      	cmp	r3, #1
 800be22:	9303      	str	r3, [sp, #12]
 800be24:	bfb8      	it	lt
 800be26:	2301      	movlt	r3, #1
 800be28:	e006      	b.n	800be38 <_dtoa_r+0x250>
 800be2a:	2301      	movs	r3, #1
 800be2c:	9309      	str	r3, [sp, #36]	@ 0x24
 800be2e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800be30:	2b00      	cmp	r3, #0
 800be32:	dd28      	ble.n	800be86 <_dtoa_r+0x29e>
 800be34:	469b      	mov	fp, r3
 800be36:	9303      	str	r3, [sp, #12]
 800be38:	f8d9 001c 	ldr.w	r0, [r9, #28]
 800be3c:	2100      	movs	r1, #0
 800be3e:	2204      	movs	r2, #4
 800be40:	f102 0514 	add.w	r5, r2, #20
 800be44:	429d      	cmp	r5, r3
 800be46:	d926      	bls.n	800be96 <_dtoa_r+0x2ae>
 800be48:	6041      	str	r1, [r0, #4]
 800be4a:	4648      	mov	r0, r9
 800be4c:	f000 fd9c 	bl	800c988 <_Balloc>
 800be50:	4682      	mov	sl, r0
 800be52:	2800      	cmp	r0, #0
 800be54:	d142      	bne.n	800bedc <_dtoa_r+0x2f4>
 800be56:	4b1e      	ldr	r3, [pc, #120]	@ (800bed0 <_dtoa_r+0x2e8>)
 800be58:	4602      	mov	r2, r0
 800be5a:	f240 11af 	movw	r1, #431	@ 0x1af
 800be5e:	e6da      	b.n	800bc16 <_dtoa_r+0x2e>
 800be60:	2300      	movs	r3, #0
 800be62:	e7e3      	b.n	800be2c <_dtoa_r+0x244>
 800be64:	2300      	movs	r3, #0
 800be66:	e7d5      	b.n	800be14 <_dtoa_r+0x22c>
 800be68:	2401      	movs	r4, #1
 800be6a:	2300      	movs	r3, #0
 800be6c:	9307      	str	r3, [sp, #28]
 800be6e:	9409      	str	r4, [sp, #36]	@ 0x24
 800be70:	f04f 3bff 	mov.w	fp, #4294967295
 800be74:	2200      	movs	r2, #0
 800be76:	f8cd b00c 	str.w	fp, [sp, #12]
 800be7a:	2312      	movs	r3, #18
 800be7c:	920c      	str	r2, [sp, #48]	@ 0x30
 800be7e:	e7db      	b.n	800be38 <_dtoa_r+0x250>
 800be80:	2301      	movs	r3, #1
 800be82:	9309      	str	r3, [sp, #36]	@ 0x24
 800be84:	e7f4      	b.n	800be70 <_dtoa_r+0x288>
 800be86:	f04f 0b01 	mov.w	fp, #1
 800be8a:	f8cd b00c 	str.w	fp, [sp, #12]
 800be8e:	465b      	mov	r3, fp
 800be90:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
 800be94:	e7d0      	b.n	800be38 <_dtoa_r+0x250>
 800be96:	3101      	adds	r1, #1
 800be98:	0052      	lsls	r2, r2, #1
 800be9a:	e7d1      	b.n	800be40 <_dtoa_r+0x258>
 800be9c:	f3af 8000 	nop.w
 800bea0:	636f4361 	.word	0x636f4361
 800bea4:	3fd287a7 	.word	0x3fd287a7
 800bea8:	8b60c8b3 	.word	0x8b60c8b3
 800beac:	3fc68a28 	.word	0x3fc68a28
 800beb0:	509f79fb 	.word	0x509f79fb
 800beb4:	3fd34413 	.word	0x3fd34413
 800beb8:	0800e34a 	.word	0x0800e34a
 800bebc:	0800e361 	.word	0x0800e361
 800bec0:	7ff00000 	.word	0x7ff00000
 800bec4:	0800e31a 	.word	0x0800e31a
 800bec8:	3ff80000 	.word	0x3ff80000
 800becc:	0800e4b0 	.word	0x0800e4b0
 800bed0:	0800e3b9 	.word	0x0800e3b9
 800bed4:	0800e346 	.word	0x0800e346
 800bed8:	0800e319 	.word	0x0800e319
 800bedc:	f8d9 301c 	ldr.w	r3, [r9, #28]
 800bee0:	6018      	str	r0, [r3, #0]
 800bee2:	9b03      	ldr	r3, [sp, #12]
 800bee4:	2b0e      	cmp	r3, #14
 800bee6:	f200 80a1 	bhi.w	800c02c <_dtoa_r+0x444>
 800beea:	2c00      	cmp	r4, #0
 800beec:	f000 809e 	beq.w	800c02c <_dtoa_r+0x444>
 800bef0:	2f00      	cmp	r7, #0
 800bef2:	dd33      	ble.n	800bf5c <_dtoa_r+0x374>
 800bef4:	4b9c      	ldr	r3, [pc, #624]	@ (800c168 <_dtoa_r+0x580>)
 800bef6:	f007 020f 	and.w	r2, r7, #15
 800befa:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800befe:	ed93 7b00 	vldr	d7, [r3]
 800bf02:	05f8      	lsls	r0, r7, #23
 800bf04:	ed8d 7b0e 	vstr	d7, [sp, #56]	@ 0x38
 800bf08:	ea4f 1427 	mov.w	r4, r7, asr #4
 800bf0c:	d516      	bpl.n	800bf3c <_dtoa_r+0x354>
 800bf0e:	4b97      	ldr	r3, [pc, #604]	@ (800c16c <_dtoa_r+0x584>)
 800bf10:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 800bf14:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800bf18:	f7f4 fcb8 	bl	800088c <__aeabi_ddiv>
 800bf1c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800bf20:	f004 040f 	and.w	r4, r4, #15
 800bf24:	2603      	movs	r6, #3
 800bf26:	4d91      	ldr	r5, [pc, #580]	@ (800c16c <_dtoa_r+0x584>)
 800bf28:	b954      	cbnz	r4, 800bf40 <_dtoa_r+0x358>
 800bf2a:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 800bf2e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800bf32:	f7f4 fcab 	bl	800088c <__aeabi_ddiv>
 800bf36:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800bf3a:	e028      	b.n	800bf8e <_dtoa_r+0x3a6>
 800bf3c:	2602      	movs	r6, #2
 800bf3e:	e7f2      	b.n	800bf26 <_dtoa_r+0x33e>
 800bf40:	07e1      	lsls	r1, r4, #31
 800bf42:	d508      	bpl.n	800bf56 <_dtoa_r+0x36e>
 800bf44:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 800bf48:	e9d5 2300 	ldrd	r2, r3, [r5]
 800bf4c:	f7f4 fb74 	bl	8000638 <__aeabi_dmul>
 800bf50:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 800bf54:	3601      	adds	r6, #1
 800bf56:	1064      	asrs	r4, r4, #1
 800bf58:	3508      	adds	r5, #8
 800bf5a:	e7e5      	b.n	800bf28 <_dtoa_r+0x340>
 800bf5c:	f000 80af 	beq.w	800c0be <_dtoa_r+0x4d6>
 800bf60:	427c      	negs	r4, r7
 800bf62:	4b81      	ldr	r3, [pc, #516]	@ (800c168 <_dtoa_r+0x580>)
 800bf64:	4d81      	ldr	r5, [pc, #516]	@ (800c16c <_dtoa_r+0x584>)
 800bf66:	f004 020f 	and.w	r2, r4, #15
 800bf6a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800bf6e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800bf72:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 800bf76:	f7f4 fb5f 	bl	8000638 <__aeabi_dmul>
 800bf7a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800bf7e:	1124      	asrs	r4, r4, #4
 800bf80:	2300      	movs	r3, #0
 800bf82:	2602      	movs	r6, #2
 800bf84:	2c00      	cmp	r4, #0
 800bf86:	f040 808f 	bne.w	800c0a8 <_dtoa_r+0x4c0>
 800bf8a:	2b00      	cmp	r3, #0
 800bf8c:	d1d3      	bne.n	800bf36 <_dtoa_r+0x34e>
 800bf8e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800bf90:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 800bf94:	2b00      	cmp	r3, #0
 800bf96:	f000 8094 	beq.w	800c0c2 <_dtoa_r+0x4da>
 800bf9a:	4b75      	ldr	r3, [pc, #468]	@ (800c170 <_dtoa_r+0x588>)
 800bf9c:	2200      	movs	r2, #0
 800bf9e:	4620      	mov	r0, r4
 800bfa0:	4629      	mov	r1, r5
 800bfa2:	f7f4 fdbb 	bl	8000b1c <__aeabi_dcmplt>
 800bfa6:	2800      	cmp	r0, #0
 800bfa8:	f000 808b 	beq.w	800c0c2 <_dtoa_r+0x4da>
 800bfac:	9b03      	ldr	r3, [sp, #12]
 800bfae:	2b00      	cmp	r3, #0
 800bfb0:	f000 8087 	beq.w	800c0c2 <_dtoa_r+0x4da>
 800bfb4:	f1bb 0f00 	cmp.w	fp, #0
 800bfb8:	dd34      	ble.n	800c024 <_dtoa_r+0x43c>
 800bfba:	4620      	mov	r0, r4
 800bfbc:	4b6d      	ldr	r3, [pc, #436]	@ (800c174 <_dtoa_r+0x58c>)
 800bfbe:	2200      	movs	r2, #0
 800bfc0:	4629      	mov	r1, r5
 800bfc2:	f7f4 fb39 	bl	8000638 <__aeabi_dmul>
 800bfc6:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800bfca:	f107 38ff 	add.w	r8, r7, #4294967295
 800bfce:	3601      	adds	r6, #1
 800bfd0:	465c      	mov	r4, fp
 800bfd2:	4630      	mov	r0, r6
 800bfd4:	f7f4 fac6 	bl	8000564 <__aeabi_i2d>
 800bfd8:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800bfdc:	f7f4 fb2c 	bl	8000638 <__aeabi_dmul>
 800bfe0:	4b65      	ldr	r3, [pc, #404]	@ (800c178 <_dtoa_r+0x590>)
 800bfe2:	2200      	movs	r2, #0
 800bfe4:	f7f4 f972 	bl	80002cc <__adddf3>
 800bfe8:	4605      	mov	r5, r0
 800bfea:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 800bfee:	2c00      	cmp	r4, #0
 800bff0:	d16a      	bne.n	800c0c8 <_dtoa_r+0x4e0>
 800bff2:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800bff6:	4b61      	ldr	r3, [pc, #388]	@ (800c17c <_dtoa_r+0x594>)
 800bff8:	2200      	movs	r2, #0
 800bffa:	f7f4 f965 	bl	80002c8 <__aeabi_dsub>
 800bffe:	4602      	mov	r2, r0
 800c000:	460b      	mov	r3, r1
 800c002:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800c006:	462a      	mov	r2, r5
 800c008:	4633      	mov	r3, r6
 800c00a:	f7f4 fda5 	bl	8000b58 <__aeabi_dcmpgt>
 800c00e:	2800      	cmp	r0, #0
 800c010:	f040 8298 	bne.w	800c544 <_dtoa_r+0x95c>
 800c014:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800c018:	462a      	mov	r2, r5
 800c01a:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 800c01e:	f7f4 fd7d 	bl	8000b1c <__aeabi_dcmplt>
 800c022:	bb38      	cbnz	r0, 800c074 <_dtoa_r+0x48c>
 800c024:	e9dd 340a 	ldrd	r3, r4, [sp, #40]	@ 0x28
 800c028:	e9cd 3404 	strd	r3, r4, [sp, #16]
 800c02c:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 800c02e:	2b00      	cmp	r3, #0
 800c030:	f2c0 8157 	blt.w	800c2e2 <_dtoa_r+0x6fa>
 800c034:	2f0e      	cmp	r7, #14
 800c036:	f300 8154 	bgt.w	800c2e2 <_dtoa_r+0x6fa>
 800c03a:	4b4b      	ldr	r3, [pc, #300]	@ (800c168 <_dtoa_r+0x580>)
 800c03c:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 800c040:	ed93 7b00 	vldr	d7, [r3]
 800c044:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800c046:	2b00      	cmp	r3, #0
 800c048:	ed8d 7b00 	vstr	d7, [sp]
 800c04c:	f280 80e5 	bge.w	800c21a <_dtoa_r+0x632>
 800c050:	9b03      	ldr	r3, [sp, #12]
 800c052:	2b00      	cmp	r3, #0
 800c054:	f300 80e1 	bgt.w	800c21a <_dtoa_r+0x632>
 800c058:	d10c      	bne.n	800c074 <_dtoa_r+0x48c>
 800c05a:	4b48      	ldr	r3, [pc, #288]	@ (800c17c <_dtoa_r+0x594>)
 800c05c:	2200      	movs	r2, #0
 800c05e:	ec51 0b17 	vmov	r0, r1, d7
 800c062:	f7f4 fae9 	bl	8000638 <__aeabi_dmul>
 800c066:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800c06a:	f7f4 fd6b 	bl	8000b44 <__aeabi_dcmpge>
 800c06e:	2800      	cmp	r0, #0
 800c070:	f000 8266 	beq.w	800c540 <_dtoa_r+0x958>
 800c074:	2400      	movs	r4, #0
 800c076:	4625      	mov	r5, r4
 800c078:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800c07a:	4656      	mov	r6, sl
 800c07c:	ea6f 0803 	mvn.w	r8, r3
 800c080:	2700      	movs	r7, #0
 800c082:	4621      	mov	r1, r4
 800c084:	4648      	mov	r0, r9
 800c086:	f000 fcbf 	bl	800ca08 <_Bfree>
 800c08a:	2d00      	cmp	r5, #0
 800c08c:	f000 80bd 	beq.w	800c20a <_dtoa_r+0x622>
 800c090:	b12f      	cbz	r7, 800c09e <_dtoa_r+0x4b6>
 800c092:	42af      	cmp	r7, r5
 800c094:	d003      	beq.n	800c09e <_dtoa_r+0x4b6>
 800c096:	4639      	mov	r1, r7
 800c098:	4648      	mov	r0, r9
 800c09a:	f000 fcb5 	bl	800ca08 <_Bfree>
 800c09e:	4629      	mov	r1, r5
 800c0a0:	4648      	mov	r0, r9
 800c0a2:	f000 fcb1 	bl	800ca08 <_Bfree>
 800c0a6:	e0b0      	b.n	800c20a <_dtoa_r+0x622>
 800c0a8:	07e2      	lsls	r2, r4, #31
 800c0aa:	d505      	bpl.n	800c0b8 <_dtoa_r+0x4d0>
 800c0ac:	e9d5 2300 	ldrd	r2, r3, [r5]
 800c0b0:	f7f4 fac2 	bl	8000638 <__aeabi_dmul>
 800c0b4:	3601      	adds	r6, #1
 800c0b6:	2301      	movs	r3, #1
 800c0b8:	1064      	asrs	r4, r4, #1
 800c0ba:	3508      	adds	r5, #8
 800c0bc:	e762      	b.n	800bf84 <_dtoa_r+0x39c>
 800c0be:	2602      	movs	r6, #2
 800c0c0:	e765      	b.n	800bf8e <_dtoa_r+0x3a6>
 800c0c2:	9c03      	ldr	r4, [sp, #12]
 800c0c4:	46b8      	mov	r8, r7
 800c0c6:	e784      	b.n	800bfd2 <_dtoa_r+0x3ea>
 800c0c8:	4b27      	ldr	r3, [pc, #156]	@ (800c168 <_dtoa_r+0x580>)
 800c0ca:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800c0cc:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800c0d0:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 800c0d4:	4454      	add	r4, sl
 800c0d6:	2900      	cmp	r1, #0
 800c0d8:	d054      	beq.n	800c184 <_dtoa_r+0x59c>
 800c0da:	4929      	ldr	r1, [pc, #164]	@ (800c180 <_dtoa_r+0x598>)
 800c0dc:	2000      	movs	r0, #0
 800c0de:	f7f4 fbd5 	bl	800088c <__aeabi_ddiv>
 800c0e2:	4633      	mov	r3, r6
 800c0e4:	462a      	mov	r2, r5
 800c0e6:	f7f4 f8ef 	bl	80002c8 <__aeabi_dsub>
 800c0ea:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 800c0ee:	4656      	mov	r6, sl
 800c0f0:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800c0f4:	f7f4 fd50 	bl	8000b98 <__aeabi_d2iz>
 800c0f8:	4605      	mov	r5, r0
 800c0fa:	f7f4 fa33 	bl	8000564 <__aeabi_i2d>
 800c0fe:	4602      	mov	r2, r0
 800c100:	460b      	mov	r3, r1
 800c102:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800c106:	f7f4 f8df 	bl	80002c8 <__aeabi_dsub>
 800c10a:	3530      	adds	r5, #48	@ 0x30
 800c10c:	4602      	mov	r2, r0
 800c10e:	460b      	mov	r3, r1
 800c110:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800c114:	f806 5b01 	strb.w	r5, [r6], #1
 800c118:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 800c11c:	f7f4 fcfe 	bl	8000b1c <__aeabi_dcmplt>
 800c120:	2800      	cmp	r0, #0
 800c122:	d172      	bne.n	800c20a <_dtoa_r+0x622>
 800c124:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800c128:	4911      	ldr	r1, [pc, #68]	@ (800c170 <_dtoa_r+0x588>)
 800c12a:	2000      	movs	r0, #0
 800c12c:	f7f4 f8cc 	bl	80002c8 <__aeabi_dsub>
 800c130:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 800c134:	f7f4 fcf2 	bl	8000b1c <__aeabi_dcmplt>
 800c138:	2800      	cmp	r0, #0
 800c13a:	f040 80b4 	bne.w	800c2a6 <_dtoa_r+0x6be>
 800c13e:	42a6      	cmp	r6, r4
 800c140:	f43f af70 	beq.w	800c024 <_dtoa_r+0x43c>
 800c144:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 800c148:	4b0a      	ldr	r3, [pc, #40]	@ (800c174 <_dtoa_r+0x58c>)
 800c14a:	2200      	movs	r2, #0
 800c14c:	f7f4 fa74 	bl	8000638 <__aeabi_dmul>
 800c150:	4b08      	ldr	r3, [pc, #32]	@ (800c174 <_dtoa_r+0x58c>)
 800c152:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 800c156:	2200      	movs	r2, #0
 800c158:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800c15c:	f7f4 fa6c 	bl	8000638 <__aeabi_dmul>
 800c160:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800c164:	e7c4      	b.n	800c0f0 <_dtoa_r+0x508>
 800c166:	bf00      	nop
 800c168:	0800e4b0 	.word	0x0800e4b0
 800c16c:	0800e488 	.word	0x0800e488
 800c170:	3ff00000 	.word	0x3ff00000
 800c174:	40240000 	.word	0x40240000
 800c178:	401c0000 	.word	0x401c0000
 800c17c:	40140000 	.word	0x40140000
 800c180:	3fe00000 	.word	0x3fe00000
 800c184:	4631      	mov	r1, r6
 800c186:	4628      	mov	r0, r5
 800c188:	f7f4 fa56 	bl	8000638 <__aeabi_dmul>
 800c18c:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 800c190:	9413      	str	r4, [sp, #76]	@ 0x4c
 800c192:	4656      	mov	r6, sl
 800c194:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800c198:	f7f4 fcfe 	bl	8000b98 <__aeabi_d2iz>
 800c19c:	4605      	mov	r5, r0
 800c19e:	f7f4 f9e1 	bl	8000564 <__aeabi_i2d>
 800c1a2:	4602      	mov	r2, r0
 800c1a4:	460b      	mov	r3, r1
 800c1a6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800c1aa:	f7f4 f88d 	bl	80002c8 <__aeabi_dsub>
 800c1ae:	3530      	adds	r5, #48	@ 0x30
 800c1b0:	f806 5b01 	strb.w	r5, [r6], #1
 800c1b4:	4602      	mov	r2, r0
 800c1b6:	460b      	mov	r3, r1
 800c1b8:	42a6      	cmp	r6, r4
 800c1ba:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800c1be:	f04f 0200 	mov.w	r2, #0
 800c1c2:	d124      	bne.n	800c20e <_dtoa_r+0x626>
 800c1c4:	4baf      	ldr	r3, [pc, #700]	@ (800c484 <_dtoa_r+0x89c>)
 800c1c6:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 800c1ca:	f7f4 f87f 	bl	80002cc <__adddf3>
 800c1ce:	4602      	mov	r2, r0
 800c1d0:	460b      	mov	r3, r1
 800c1d2:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800c1d6:	f7f4 fcbf 	bl	8000b58 <__aeabi_dcmpgt>
 800c1da:	2800      	cmp	r0, #0
 800c1dc:	d163      	bne.n	800c2a6 <_dtoa_r+0x6be>
 800c1de:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 800c1e2:	49a8      	ldr	r1, [pc, #672]	@ (800c484 <_dtoa_r+0x89c>)
 800c1e4:	2000      	movs	r0, #0
 800c1e6:	f7f4 f86f 	bl	80002c8 <__aeabi_dsub>
 800c1ea:	4602      	mov	r2, r0
 800c1ec:	460b      	mov	r3, r1
 800c1ee:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800c1f2:	f7f4 fc93 	bl	8000b1c <__aeabi_dcmplt>
 800c1f6:	2800      	cmp	r0, #0
 800c1f8:	f43f af14 	beq.w	800c024 <_dtoa_r+0x43c>
 800c1fc:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 800c1fe:	1e73      	subs	r3, r6, #1
 800c200:	9313      	str	r3, [sp, #76]	@ 0x4c
 800c202:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 800c206:	2b30      	cmp	r3, #48	@ 0x30
 800c208:	d0f8      	beq.n	800c1fc <_dtoa_r+0x614>
 800c20a:	4647      	mov	r7, r8
 800c20c:	e03b      	b.n	800c286 <_dtoa_r+0x69e>
 800c20e:	4b9e      	ldr	r3, [pc, #632]	@ (800c488 <_dtoa_r+0x8a0>)
 800c210:	f7f4 fa12 	bl	8000638 <__aeabi_dmul>
 800c214:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800c218:	e7bc      	b.n	800c194 <_dtoa_r+0x5ac>
 800c21a:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 800c21e:	4656      	mov	r6, sl
 800c220:	e9dd 2300 	ldrd	r2, r3, [sp]
 800c224:	4620      	mov	r0, r4
 800c226:	4629      	mov	r1, r5
 800c228:	f7f4 fb30 	bl	800088c <__aeabi_ddiv>
 800c22c:	f7f4 fcb4 	bl	8000b98 <__aeabi_d2iz>
 800c230:	4680      	mov	r8, r0
 800c232:	f7f4 f997 	bl	8000564 <__aeabi_i2d>
 800c236:	e9dd 2300 	ldrd	r2, r3, [sp]
 800c23a:	f7f4 f9fd 	bl	8000638 <__aeabi_dmul>
 800c23e:	4602      	mov	r2, r0
 800c240:	460b      	mov	r3, r1
 800c242:	4620      	mov	r0, r4
 800c244:	4629      	mov	r1, r5
 800c246:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 800c24a:	f7f4 f83d 	bl	80002c8 <__aeabi_dsub>
 800c24e:	f806 4b01 	strb.w	r4, [r6], #1
 800c252:	9d03      	ldr	r5, [sp, #12]
 800c254:	eba6 040a 	sub.w	r4, r6, sl
 800c258:	42a5      	cmp	r5, r4
 800c25a:	4602      	mov	r2, r0
 800c25c:	460b      	mov	r3, r1
 800c25e:	d133      	bne.n	800c2c8 <_dtoa_r+0x6e0>
 800c260:	f7f4 f834 	bl	80002cc <__adddf3>
 800c264:	e9dd 2300 	ldrd	r2, r3, [sp]
 800c268:	4604      	mov	r4, r0
 800c26a:	460d      	mov	r5, r1
 800c26c:	f7f4 fc74 	bl	8000b58 <__aeabi_dcmpgt>
 800c270:	b9c0      	cbnz	r0, 800c2a4 <_dtoa_r+0x6bc>
 800c272:	e9dd 2300 	ldrd	r2, r3, [sp]
 800c276:	4620      	mov	r0, r4
 800c278:	4629      	mov	r1, r5
 800c27a:	f7f4 fc45 	bl	8000b08 <__aeabi_dcmpeq>
 800c27e:	b110      	cbz	r0, 800c286 <_dtoa_r+0x69e>
 800c280:	f018 0f01 	tst.w	r8, #1
 800c284:	d10e      	bne.n	800c2a4 <_dtoa_r+0x6bc>
 800c286:	9902      	ldr	r1, [sp, #8]
 800c288:	4648      	mov	r0, r9
 800c28a:	f000 fbbd 	bl	800ca08 <_Bfree>
 800c28e:	2300      	movs	r3, #0
 800c290:	7033      	strb	r3, [r6, #0]
 800c292:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 800c294:	3701      	adds	r7, #1
 800c296:	601f      	str	r7, [r3, #0]
 800c298:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 800c29a:	2b00      	cmp	r3, #0
 800c29c:	f000 824b 	beq.w	800c736 <_dtoa_r+0xb4e>
 800c2a0:	601e      	str	r6, [r3, #0]
 800c2a2:	e248      	b.n	800c736 <_dtoa_r+0xb4e>
 800c2a4:	46b8      	mov	r8, r7
 800c2a6:	4633      	mov	r3, r6
 800c2a8:	461e      	mov	r6, r3
 800c2aa:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800c2ae:	2a39      	cmp	r2, #57	@ 0x39
 800c2b0:	d106      	bne.n	800c2c0 <_dtoa_r+0x6d8>
 800c2b2:	459a      	cmp	sl, r3
 800c2b4:	d1f8      	bne.n	800c2a8 <_dtoa_r+0x6c0>
 800c2b6:	2230      	movs	r2, #48	@ 0x30
 800c2b8:	f108 0801 	add.w	r8, r8, #1
 800c2bc:	f88a 2000 	strb.w	r2, [sl]
 800c2c0:	781a      	ldrb	r2, [r3, #0]
 800c2c2:	3201      	adds	r2, #1
 800c2c4:	701a      	strb	r2, [r3, #0]
 800c2c6:	e7a0      	b.n	800c20a <_dtoa_r+0x622>
 800c2c8:	4b6f      	ldr	r3, [pc, #444]	@ (800c488 <_dtoa_r+0x8a0>)
 800c2ca:	2200      	movs	r2, #0
 800c2cc:	f7f4 f9b4 	bl	8000638 <__aeabi_dmul>
 800c2d0:	2200      	movs	r2, #0
 800c2d2:	2300      	movs	r3, #0
 800c2d4:	4604      	mov	r4, r0
 800c2d6:	460d      	mov	r5, r1
 800c2d8:	f7f4 fc16 	bl	8000b08 <__aeabi_dcmpeq>
 800c2dc:	2800      	cmp	r0, #0
 800c2de:	d09f      	beq.n	800c220 <_dtoa_r+0x638>
 800c2e0:	e7d1      	b.n	800c286 <_dtoa_r+0x69e>
 800c2e2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800c2e4:	2a00      	cmp	r2, #0
 800c2e6:	f000 80ea 	beq.w	800c4be <_dtoa_r+0x8d6>
 800c2ea:	9a07      	ldr	r2, [sp, #28]
 800c2ec:	2a01      	cmp	r2, #1
 800c2ee:	f300 80cd 	bgt.w	800c48c <_dtoa_r+0x8a4>
 800c2f2:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 800c2f4:	2a00      	cmp	r2, #0
 800c2f6:	f000 80c1 	beq.w	800c47c <_dtoa_r+0x894>
 800c2fa:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 800c2fe:	9c08      	ldr	r4, [sp, #32]
 800c300:	9e00      	ldr	r6, [sp, #0]
 800c302:	9a00      	ldr	r2, [sp, #0]
 800c304:	441a      	add	r2, r3
 800c306:	9200      	str	r2, [sp, #0]
 800c308:	9a06      	ldr	r2, [sp, #24]
 800c30a:	2101      	movs	r1, #1
 800c30c:	441a      	add	r2, r3
 800c30e:	4648      	mov	r0, r9
 800c310:	9206      	str	r2, [sp, #24]
 800c312:	f000 fc2d 	bl	800cb70 <__i2b>
 800c316:	4605      	mov	r5, r0
 800c318:	b166      	cbz	r6, 800c334 <_dtoa_r+0x74c>
 800c31a:	9b06      	ldr	r3, [sp, #24]
 800c31c:	2b00      	cmp	r3, #0
 800c31e:	dd09      	ble.n	800c334 <_dtoa_r+0x74c>
 800c320:	42b3      	cmp	r3, r6
 800c322:	9a00      	ldr	r2, [sp, #0]
 800c324:	bfa8      	it	ge
 800c326:	4633      	movge	r3, r6
 800c328:	1ad2      	subs	r2, r2, r3
 800c32a:	9200      	str	r2, [sp, #0]
 800c32c:	9a06      	ldr	r2, [sp, #24]
 800c32e:	1af6      	subs	r6, r6, r3
 800c330:	1ad3      	subs	r3, r2, r3
 800c332:	9306      	str	r3, [sp, #24]
 800c334:	9b08      	ldr	r3, [sp, #32]
 800c336:	b30b      	cbz	r3, 800c37c <_dtoa_r+0x794>
 800c338:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c33a:	2b00      	cmp	r3, #0
 800c33c:	f000 80c6 	beq.w	800c4cc <_dtoa_r+0x8e4>
 800c340:	2c00      	cmp	r4, #0
 800c342:	f000 80c0 	beq.w	800c4c6 <_dtoa_r+0x8de>
 800c346:	4629      	mov	r1, r5
 800c348:	4622      	mov	r2, r4
 800c34a:	4648      	mov	r0, r9
 800c34c:	f000 fcc8 	bl	800cce0 <__pow5mult>
 800c350:	9a02      	ldr	r2, [sp, #8]
 800c352:	4601      	mov	r1, r0
 800c354:	4605      	mov	r5, r0
 800c356:	4648      	mov	r0, r9
 800c358:	f000 fc20 	bl	800cb9c <__multiply>
 800c35c:	9902      	ldr	r1, [sp, #8]
 800c35e:	4680      	mov	r8, r0
 800c360:	4648      	mov	r0, r9
 800c362:	f000 fb51 	bl	800ca08 <_Bfree>
 800c366:	9b08      	ldr	r3, [sp, #32]
 800c368:	1b1b      	subs	r3, r3, r4
 800c36a:	9308      	str	r3, [sp, #32]
 800c36c:	f000 80b1 	beq.w	800c4d2 <_dtoa_r+0x8ea>
 800c370:	9a08      	ldr	r2, [sp, #32]
 800c372:	4641      	mov	r1, r8
 800c374:	4648      	mov	r0, r9
 800c376:	f000 fcb3 	bl	800cce0 <__pow5mult>
 800c37a:	9002      	str	r0, [sp, #8]
 800c37c:	2101      	movs	r1, #1
 800c37e:	4648      	mov	r0, r9
 800c380:	f000 fbf6 	bl	800cb70 <__i2b>
 800c384:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800c386:	4604      	mov	r4, r0
 800c388:	2b00      	cmp	r3, #0
 800c38a:	f000 81d8 	beq.w	800c73e <_dtoa_r+0xb56>
 800c38e:	461a      	mov	r2, r3
 800c390:	4601      	mov	r1, r0
 800c392:	4648      	mov	r0, r9
 800c394:	f000 fca4 	bl	800cce0 <__pow5mult>
 800c398:	9b07      	ldr	r3, [sp, #28]
 800c39a:	2b01      	cmp	r3, #1
 800c39c:	4604      	mov	r4, r0
 800c39e:	f300 809f 	bgt.w	800c4e0 <_dtoa_r+0x8f8>
 800c3a2:	9b04      	ldr	r3, [sp, #16]
 800c3a4:	2b00      	cmp	r3, #0
 800c3a6:	f040 8097 	bne.w	800c4d8 <_dtoa_r+0x8f0>
 800c3aa:	9b05      	ldr	r3, [sp, #20]
 800c3ac:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800c3b0:	2b00      	cmp	r3, #0
 800c3b2:	f040 8093 	bne.w	800c4dc <_dtoa_r+0x8f4>
 800c3b6:	9b05      	ldr	r3, [sp, #20]
 800c3b8:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 800c3bc:	0d1b      	lsrs	r3, r3, #20
 800c3be:	051b      	lsls	r3, r3, #20
 800c3c0:	b133      	cbz	r3, 800c3d0 <_dtoa_r+0x7e8>
 800c3c2:	9b00      	ldr	r3, [sp, #0]
 800c3c4:	3301      	adds	r3, #1
 800c3c6:	9300      	str	r3, [sp, #0]
 800c3c8:	9b06      	ldr	r3, [sp, #24]
 800c3ca:	3301      	adds	r3, #1
 800c3cc:	9306      	str	r3, [sp, #24]
 800c3ce:	2301      	movs	r3, #1
 800c3d0:	9308      	str	r3, [sp, #32]
 800c3d2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800c3d4:	2b00      	cmp	r3, #0
 800c3d6:	f000 81b8 	beq.w	800c74a <_dtoa_r+0xb62>
 800c3da:	6923      	ldr	r3, [r4, #16]
 800c3dc:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800c3e0:	6918      	ldr	r0, [r3, #16]
 800c3e2:	f000 fb79 	bl	800cad8 <__hi0bits>
 800c3e6:	f1c0 0020 	rsb	r0, r0, #32
 800c3ea:	9b06      	ldr	r3, [sp, #24]
 800c3ec:	4418      	add	r0, r3
 800c3ee:	f010 001f 	ands.w	r0, r0, #31
 800c3f2:	f000 8082 	beq.w	800c4fa <_dtoa_r+0x912>
 800c3f6:	f1c0 0320 	rsb	r3, r0, #32
 800c3fa:	2b04      	cmp	r3, #4
 800c3fc:	dd73      	ble.n	800c4e6 <_dtoa_r+0x8fe>
 800c3fe:	9b00      	ldr	r3, [sp, #0]
 800c400:	f1c0 001c 	rsb	r0, r0, #28
 800c404:	4403      	add	r3, r0
 800c406:	9300      	str	r3, [sp, #0]
 800c408:	9b06      	ldr	r3, [sp, #24]
 800c40a:	4403      	add	r3, r0
 800c40c:	4406      	add	r6, r0
 800c40e:	9306      	str	r3, [sp, #24]
 800c410:	9b00      	ldr	r3, [sp, #0]
 800c412:	2b00      	cmp	r3, #0
 800c414:	dd05      	ble.n	800c422 <_dtoa_r+0x83a>
 800c416:	9902      	ldr	r1, [sp, #8]
 800c418:	461a      	mov	r2, r3
 800c41a:	4648      	mov	r0, r9
 800c41c:	f000 fcba 	bl	800cd94 <__lshift>
 800c420:	9002      	str	r0, [sp, #8]
 800c422:	9b06      	ldr	r3, [sp, #24]
 800c424:	2b00      	cmp	r3, #0
 800c426:	dd05      	ble.n	800c434 <_dtoa_r+0x84c>
 800c428:	4621      	mov	r1, r4
 800c42a:	461a      	mov	r2, r3
 800c42c:	4648      	mov	r0, r9
 800c42e:	f000 fcb1 	bl	800cd94 <__lshift>
 800c432:	4604      	mov	r4, r0
 800c434:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800c436:	2b00      	cmp	r3, #0
 800c438:	d061      	beq.n	800c4fe <_dtoa_r+0x916>
 800c43a:	9802      	ldr	r0, [sp, #8]
 800c43c:	4621      	mov	r1, r4
 800c43e:	f000 fd15 	bl	800ce6c <__mcmp>
 800c442:	2800      	cmp	r0, #0
 800c444:	da5b      	bge.n	800c4fe <_dtoa_r+0x916>
 800c446:	2300      	movs	r3, #0
 800c448:	9902      	ldr	r1, [sp, #8]
 800c44a:	220a      	movs	r2, #10
 800c44c:	4648      	mov	r0, r9
 800c44e:	f000 fafd 	bl	800ca4c <__multadd>
 800c452:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c454:	9002      	str	r0, [sp, #8]
 800c456:	f107 38ff 	add.w	r8, r7, #4294967295
 800c45a:	2b00      	cmp	r3, #0
 800c45c:	f000 8177 	beq.w	800c74e <_dtoa_r+0xb66>
 800c460:	4629      	mov	r1, r5
 800c462:	2300      	movs	r3, #0
 800c464:	220a      	movs	r2, #10
 800c466:	4648      	mov	r0, r9
 800c468:	f000 faf0 	bl	800ca4c <__multadd>
 800c46c:	f1bb 0f00 	cmp.w	fp, #0
 800c470:	4605      	mov	r5, r0
 800c472:	dc6f      	bgt.n	800c554 <_dtoa_r+0x96c>
 800c474:	9b07      	ldr	r3, [sp, #28]
 800c476:	2b02      	cmp	r3, #2
 800c478:	dc49      	bgt.n	800c50e <_dtoa_r+0x926>
 800c47a:	e06b      	b.n	800c554 <_dtoa_r+0x96c>
 800c47c:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 800c47e:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 800c482:	e73c      	b.n	800c2fe <_dtoa_r+0x716>
 800c484:	3fe00000 	.word	0x3fe00000
 800c488:	40240000 	.word	0x40240000
 800c48c:	9b03      	ldr	r3, [sp, #12]
 800c48e:	1e5c      	subs	r4, r3, #1
 800c490:	9b08      	ldr	r3, [sp, #32]
 800c492:	42a3      	cmp	r3, r4
 800c494:	db09      	blt.n	800c4aa <_dtoa_r+0x8c2>
 800c496:	1b1c      	subs	r4, r3, r4
 800c498:	9b03      	ldr	r3, [sp, #12]
 800c49a:	2b00      	cmp	r3, #0
 800c49c:	f6bf af30 	bge.w	800c300 <_dtoa_r+0x718>
 800c4a0:	9b00      	ldr	r3, [sp, #0]
 800c4a2:	9a03      	ldr	r2, [sp, #12]
 800c4a4:	1a9e      	subs	r6, r3, r2
 800c4a6:	2300      	movs	r3, #0
 800c4a8:	e72b      	b.n	800c302 <_dtoa_r+0x71a>
 800c4aa:	9b08      	ldr	r3, [sp, #32]
 800c4ac:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800c4ae:	9408      	str	r4, [sp, #32]
 800c4b0:	1ae3      	subs	r3, r4, r3
 800c4b2:	441a      	add	r2, r3
 800c4b4:	9e00      	ldr	r6, [sp, #0]
 800c4b6:	9b03      	ldr	r3, [sp, #12]
 800c4b8:	920d      	str	r2, [sp, #52]	@ 0x34
 800c4ba:	2400      	movs	r4, #0
 800c4bc:	e721      	b.n	800c302 <_dtoa_r+0x71a>
 800c4be:	9c08      	ldr	r4, [sp, #32]
 800c4c0:	9e00      	ldr	r6, [sp, #0]
 800c4c2:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 800c4c4:	e728      	b.n	800c318 <_dtoa_r+0x730>
 800c4c6:	f8dd 8008 	ldr.w	r8, [sp, #8]
 800c4ca:	e751      	b.n	800c370 <_dtoa_r+0x788>
 800c4cc:	9a08      	ldr	r2, [sp, #32]
 800c4ce:	9902      	ldr	r1, [sp, #8]
 800c4d0:	e750      	b.n	800c374 <_dtoa_r+0x78c>
 800c4d2:	f8cd 8008 	str.w	r8, [sp, #8]
 800c4d6:	e751      	b.n	800c37c <_dtoa_r+0x794>
 800c4d8:	2300      	movs	r3, #0
 800c4da:	e779      	b.n	800c3d0 <_dtoa_r+0x7e8>
 800c4dc:	9b04      	ldr	r3, [sp, #16]
 800c4de:	e777      	b.n	800c3d0 <_dtoa_r+0x7e8>
 800c4e0:	2300      	movs	r3, #0
 800c4e2:	9308      	str	r3, [sp, #32]
 800c4e4:	e779      	b.n	800c3da <_dtoa_r+0x7f2>
 800c4e6:	d093      	beq.n	800c410 <_dtoa_r+0x828>
 800c4e8:	9a00      	ldr	r2, [sp, #0]
 800c4ea:	331c      	adds	r3, #28
 800c4ec:	441a      	add	r2, r3
 800c4ee:	9200      	str	r2, [sp, #0]
 800c4f0:	9a06      	ldr	r2, [sp, #24]
 800c4f2:	441a      	add	r2, r3
 800c4f4:	441e      	add	r6, r3
 800c4f6:	9206      	str	r2, [sp, #24]
 800c4f8:	e78a      	b.n	800c410 <_dtoa_r+0x828>
 800c4fa:	4603      	mov	r3, r0
 800c4fc:	e7f4      	b.n	800c4e8 <_dtoa_r+0x900>
 800c4fe:	9b03      	ldr	r3, [sp, #12]
 800c500:	2b00      	cmp	r3, #0
 800c502:	46b8      	mov	r8, r7
 800c504:	dc20      	bgt.n	800c548 <_dtoa_r+0x960>
 800c506:	469b      	mov	fp, r3
 800c508:	9b07      	ldr	r3, [sp, #28]
 800c50a:	2b02      	cmp	r3, #2
 800c50c:	dd1e      	ble.n	800c54c <_dtoa_r+0x964>
 800c50e:	f1bb 0f00 	cmp.w	fp, #0
 800c512:	f47f adb1 	bne.w	800c078 <_dtoa_r+0x490>
 800c516:	4621      	mov	r1, r4
 800c518:	465b      	mov	r3, fp
 800c51a:	2205      	movs	r2, #5
 800c51c:	4648      	mov	r0, r9
 800c51e:	f000 fa95 	bl	800ca4c <__multadd>
 800c522:	4601      	mov	r1, r0
 800c524:	4604      	mov	r4, r0
 800c526:	9802      	ldr	r0, [sp, #8]
 800c528:	f000 fca0 	bl	800ce6c <__mcmp>
 800c52c:	2800      	cmp	r0, #0
 800c52e:	f77f ada3 	ble.w	800c078 <_dtoa_r+0x490>
 800c532:	4656      	mov	r6, sl
 800c534:	2331      	movs	r3, #49	@ 0x31
 800c536:	f806 3b01 	strb.w	r3, [r6], #1
 800c53a:	f108 0801 	add.w	r8, r8, #1
 800c53e:	e59f      	b.n	800c080 <_dtoa_r+0x498>
 800c540:	9c03      	ldr	r4, [sp, #12]
 800c542:	46b8      	mov	r8, r7
 800c544:	4625      	mov	r5, r4
 800c546:	e7f4      	b.n	800c532 <_dtoa_r+0x94a>
 800c548:	f8dd b00c 	ldr.w	fp, [sp, #12]
 800c54c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c54e:	2b00      	cmp	r3, #0
 800c550:	f000 8101 	beq.w	800c756 <_dtoa_r+0xb6e>
 800c554:	2e00      	cmp	r6, #0
 800c556:	dd05      	ble.n	800c564 <_dtoa_r+0x97c>
 800c558:	4629      	mov	r1, r5
 800c55a:	4632      	mov	r2, r6
 800c55c:	4648      	mov	r0, r9
 800c55e:	f000 fc19 	bl	800cd94 <__lshift>
 800c562:	4605      	mov	r5, r0
 800c564:	9b08      	ldr	r3, [sp, #32]
 800c566:	2b00      	cmp	r3, #0
 800c568:	d05c      	beq.n	800c624 <_dtoa_r+0xa3c>
 800c56a:	6869      	ldr	r1, [r5, #4]
 800c56c:	4648      	mov	r0, r9
 800c56e:	f000 fa0b 	bl	800c988 <_Balloc>
 800c572:	4606      	mov	r6, r0
 800c574:	b928      	cbnz	r0, 800c582 <_dtoa_r+0x99a>
 800c576:	4b82      	ldr	r3, [pc, #520]	@ (800c780 <_dtoa_r+0xb98>)
 800c578:	4602      	mov	r2, r0
 800c57a:	f240 21ef 	movw	r1, #751	@ 0x2ef
 800c57e:	f7ff bb4a 	b.w	800bc16 <_dtoa_r+0x2e>
 800c582:	692a      	ldr	r2, [r5, #16]
 800c584:	3202      	adds	r2, #2
 800c586:	0092      	lsls	r2, r2, #2
 800c588:	f105 010c 	add.w	r1, r5, #12
 800c58c:	300c      	adds	r0, #12
 800c58e:	f7ff fa94 	bl	800baba <memcpy>
 800c592:	2201      	movs	r2, #1
 800c594:	4631      	mov	r1, r6
 800c596:	4648      	mov	r0, r9
 800c598:	f000 fbfc 	bl	800cd94 <__lshift>
 800c59c:	f10a 0301 	add.w	r3, sl, #1
 800c5a0:	9300      	str	r3, [sp, #0]
 800c5a2:	eb0a 030b 	add.w	r3, sl, fp
 800c5a6:	9308      	str	r3, [sp, #32]
 800c5a8:	9b04      	ldr	r3, [sp, #16]
 800c5aa:	f003 0301 	and.w	r3, r3, #1
 800c5ae:	462f      	mov	r7, r5
 800c5b0:	9306      	str	r3, [sp, #24]
 800c5b2:	4605      	mov	r5, r0
 800c5b4:	9b00      	ldr	r3, [sp, #0]
 800c5b6:	9802      	ldr	r0, [sp, #8]
 800c5b8:	4621      	mov	r1, r4
 800c5ba:	f103 3bff 	add.w	fp, r3, #4294967295
 800c5be:	f7ff fa8a 	bl	800bad6 <quorem>
 800c5c2:	4603      	mov	r3, r0
 800c5c4:	3330      	adds	r3, #48	@ 0x30
 800c5c6:	9003      	str	r0, [sp, #12]
 800c5c8:	4639      	mov	r1, r7
 800c5ca:	9802      	ldr	r0, [sp, #8]
 800c5cc:	9309      	str	r3, [sp, #36]	@ 0x24
 800c5ce:	f000 fc4d 	bl	800ce6c <__mcmp>
 800c5d2:	462a      	mov	r2, r5
 800c5d4:	9004      	str	r0, [sp, #16]
 800c5d6:	4621      	mov	r1, r4
 800c5d8:	4648      	mov	r0, r9
 800c5da:	f000 fc63 	bl	800cea4 <__mdiff>
 800c5de:	68c2      	ldr	r2, [r0, #12]
 800c5e0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c5e2:	4606      	mov	r6, r0
 800c5e4:	bb02      	cbnz	r2, 800c628 <_dtoa_r+0xa40>
 800c5e6:	4601      	mov	r1, r0
 800c5e8:	9802      	ldr	r0, [sp, #8]
 800c5ea:	f000 fc3f 	bl	800ce6c <__mcmp>
 800c5ee:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c5f0:	4602      	mov	r2, r0
 800c5f2:	4631      	mov	r1, r6
 800c5f4:	4648      	mov	r0, r9
 800c5f6:	920c      	str	r2, [sp, #48]	@ 0x30
 800c5f8:	9309      	str	r3, [sp, #36]	@ 0x24
 800c5fa:	f000 fa05 	bl	800ca08 <_Bfree>
 800c5fe:	9b07      	ldr	r3, [sp, #28]
 800c600:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 800c602:	9e00      	ldr	r6, [sp, #0]
 800c604:	ea42 0103 	orr.w	r1, r2, r3
 800c608:	9b06      	ldr	r3, [sp, #24]
 800c60a:	4319      	orrs	r1, r3
 800c60c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c60e:	d10d      	bne.n	800c62c <_dtoa_r+0xa44>
 800c610:	2b39      	cmp	r3, #57	@ 0x39
 800c612:	d027      	beq.n	800c664 <_dtoa_r+0xa7c>
 800c614:	9a04      	ldr	r2, [sp, #16]
 800c616:	2a00      	cmp	r2, #0
 800c618:	dd01      	ble.n	800c61e <_dtoa_r+0xa36>
 800c61a:	9b03      	ldr	r3, [sp, #12]
 800c61c:	3331      	adds	r3, #49	@ 0x31
 800c61e:	f88b 3000 	strb.w	r3, [fp]
 800c622:	e52e      	b.n	800c082 <_dtoa_r+0x49a>
 800c624:	4628      	mov	r0, r5
 800c626:	e7b9      	b.n	800c59c <_dtoa_r+0x9b4>
 800c628:	2201      	movs	r2, #1
 800c62a:	e7e2      	b.n	800c5f2 <_dtoa_r+0xa0a>
 800c62c:	9904      	ldr	r1, [sp, #16]
 800c62e:	2900      	cmp	r1, #0
 800c630:	db04      	blt.n	800c63c <_dtoa_r+0xa54>
 800c632:	9807      	ldr	r0, [sp, #28]
 800c634:	4301      	orrs	r1, r0
 800c636:	9806      	ldr	r0, [sp, #24]
 800c638:	4301      	orrs	r1, r0
 800c63a:	d120      	bne.n	800c67e <_dtoa_r+0xa96>
 800c63c:	2a00      	cmp	r2, #0
 800c63e:	ddee      	ble.n	800c61e <_dtoa_r+0xa36>
 800c640:	9902      	ldr	r1, [sp, #8]
 800c642:	9300      	str	r3, [sp, #0]
 800c644:	2201      	movs	r2, #1
 800c646:	4648      	mov	r0, r9
 800c648:	f000 fba4 	bl	800cd94 <__lshift>
 800c64c:	4621      	mov	r1, r4
 800c64e:	9002      	str	r0, [sp, #8]
 800c650:	f000 fc0c 	bl	800ce6c <__mcmp>
 800c654:	2800      	cmp	r0, #0
 800c656:	9b00      	ldr	r3, [sp, #0]
 800c658:	dc02      	bgt.n	800c660 <_dtoa_r+0xa78>
 800c65a:	d1e0      	bne.n	800c61e <_dtoa_r+0xa36>
 800c65c:	07da      	lsls	r2, r3, #31
 800c65e:	d5de      	bpl.n	800c61e <_dtoa_r+0xa36>
 800c660:	2b39      	cmp	r3, #57	@ 0x39
 800c662:	d1da      	bne.n	800c61a <_dtoa_r+0xa32>
 800c664:	2339      	movs	r3, #57	@ 0x39
 800c666:	f88b 3000 	strb.w	r3, [fp]
 800c66a:	4633      	mov	r3, r6
 800c66c:	461e      	mov	r6, r3
 800c66e:	3b01      	subs	r3, #1
 800c670:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 800c674:	2a39      	cmp	r2, #57	@ 0x39
 800c676:	d04e      	beq.n	800c716 <_dtoa_r+0xb2e>
 800c678:	3201      	adds	r2, #1
 800c67a:	701a      	strb	r2, [r3, #0]
 800c67c:	e501      	b.n	800c082 <_dtoa_r+0x49a>
 800c67e:	2a00      	cmp	r2, #0
 800c680:	dd03      	ble.n	800c68a <_dtoa_r+0xaa2>
 800c682:	2b39      	cmp	r3, #57	@ 0x39
 800c684:	d0ee      	beq.n	800c664 <_dtoa_r+0xa7c>
 800c686:	3301      	adds	r3, #1
 800c688:	e7c9      	b.n	800c61e <_dtoa_r+0xa36>
 800c68a:	9a00      	ldr	r2, [sp, #0]
 800c68c:	9908      	ldr	r1, [sp, #32]
 800c68e:	f802 3c01 	strb.w	r3, [r2, #-1]
 800c692:	428a      	cmp	r2, r1
 800c694:	d028      	beq.n	800c6e8 <_dtoa_r+0xb00>
 800c696:	9902      	ldr	r1, [sp, #8]
 800c698:	2300      	movs	r3, #0
 800c69a:	220a      	movs	r2, #10
 800c69c:	4648      	mov	r0, r9
 800c69e:	f000 f9d5 	bl	800ca4c <__multadd>
 800c6a2:	42af      	cmp	r7, r5
 800c6a4:	9002      	str	r0, [sp, #8]
 800c6a6:	f04f 0300 	mov.w	r3, #0
 800c6aa:	f04f 020a 	mov.w	r2, #10
 800c6ae:	4639      	mov	r1, r7
 800c6b0:	4648      	mov	r0, r9
 800c6b2:	d107      	bne.n	800c6c4 <_dtoa_r+0xadc>
 800c6b4:	f000 f9ca 	bl	800ca4c <__multadd>
 800c6b8:	4607      	mov	r7, r0
 800c6ba:	4605      	mov	r5, r0
 800c6bc:	9b00      	ldr	r3, [sp, #0]
 800c6be:	3301      	adds	r3, #1
 800c6c0:	9300      	str	r3, [sp, #0]
 800c6c2:	e777      	b.n	800c5b4 <_dtoa_r+0x9cc>
 800c6c4:	f000 f9c2 	bl	800ca4c <__multadd>
 800c6c8:	4629      	mov	r1, r5
 800c6ca:	4607      	mov	r7, r0
 800c6cc:	2300      	movs	r3, #0
 800c6ce:	220a      	movs	r2, #10
 800c6d0:	4648      	mov	r0, r9
 800c6d2:	f000 f9bb 	bl	800ca4c <__multadd>
 800c6d6:	4605      	mov	r5, r0
 800c6d8:	e7f0      	b.n	800c6bc <_dtoa_r+0xad4>
 800c6da:	f1bb 0f00 	cmp.w	fp, #0
 800c6de:	bfcc      	ite	gt
 800c6e0:	465e      	movgt	r6, fp
 800c6e2:	2601      	movle	r6, #1
 800c6e4:	4456      	add	r6, sl
 800c6e6:	2700      	movs	r7, #0
 800c6e8:	9902      	ldr	r1, [sp, #8]
 800c6ea:	9300      	str	r3, [sp, #0]
 800c6ec:	2201      	movs	r2, #1
 800c6ee:	4648      	mov	r0, r9
 800c6f0:	f000 fb50 	bl	800cd94 <__lshift>
 800c6f4:	4621      	mov	r1, r4
 800c6f6:	9002      	str	r0, [sp, #8]
 800c6f8:	f000 fbb8 	bl	800ce6c <__mcmp>
 800c6fc:	2800      	cmp	r0, #0
 800c6fe:	dcb4      	bgt.n	800c66a <_dtoa_r+0xa82>
 800c700:	d102      	bne.n	800c708 <_dtoa_r+0xb20>
 800c702:	9b00      	ldr	r3, [sp, #0]
 800c704:	07db      	lsls	r3, r3, #31
 800c706:	d4b0      	bmi.n	800c66a <_dtoa_r+0xa82>
 800c708:	4633      	mov	r3, r6
 800c70a:	461e      	mov	r6, r3
 800c70c:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800c710:	2a30      	cmp	r2, #48	@ 0x30
 800c712:	d0fa      	beq.n	800c70a <_dtoa_r+0xb22>
 800c714:	e4b5      	b.n	800c082 <_dtoa_r+0x49a>
 800c716:	459a      	cmp	sl, r3
 800c718:	d1a8      	bne.n	800c66c <_dtoa_r+0xa84>
 800c71a:	2331      	movs	r3, #49	@ 0x31
 800c71c:	f108 0801 	add.w	r8, r8, #1
 800c720:	f88a 3000 	strb.w	r3, [sl]
 800c724:	e4ad      	b.n	800c082 <_dtoa_r+0x49a>
 800c726:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 800c728:	f8df a058 	ldr.w	sl, [pc, #88]	@ 800c784 <_dtoa_r+0xb9c>
 800c72c:	b11b      	cbz	r3, 800c736 <_dtoa_r+0xb4e>
 800c72e:	f10a 0308 	add.w	r3, sl, #8
 800c732:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800c734:	6013      	str	r3, [r2, #0]
 800c736:	4650      	mov	r0, sl
 800c738:	b017      	add	sp, #92	@ 0x5c
 800c73a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c73e:	9b07      	ldr	r3, [sp, #28]
 800c740:	2b01      	cmp	r3, #1
 800c742:	f77f ae2e 	ble.w	800c3a2 <_dtoa_r+0x7ba>
 800c746:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800c748:	9308      	str	r3, [sp, #32]
 800c74a:	2001      	movs	r0, #1
 800c74c:	e64d      	b.n	800c3ea <_dtoa_r+0x802>
 800c74e:	f1bb 0f00 	cmp.w	fp, #0
 800c752:	f77f aed9 	ble.w	800c508 <_dtoa_r+0x920>
 800c756:	4656      	mov	r6, sl
 800c758:	9802      	ldr	r0, [sp, #8]
 800c75a:	4621      	mov	r1, r4
 800c75c:	f7ff f9bb 	bl	800bad6 <quorem>
 800c760:	f100 0330 	add.w	r3, r0, #48	@ 0x30
 800c764:	f806 3b01 	strb.w	r3, [r6], #1
 800c768:	eba6 020a 	sub.w	r2, r6, sl
 800c76c:	4593      	cmp	fp, r2
 800c76e:	ddb4      	ble.n	800c6da <_dtoa_r+0xaf2>
 800c770:	9902      	ldr	r1, [sp, #8]
 800c772:	2300      	movs	r3, #0
 800c774:	220a      	movs	r2, #10
 800c776:	4648      	mov	r0, r9
 800c778:	f000 f968 	bl	800ca4c <__multadd>
 800c77c:	9002      	str	r0, [sp, #8]
 800c77e:	e7eb      	b.n	800c758 <_dtoa_r+0xb70>
 800c780:	0800e3b9 	.word	0x0800e3b9
 800c784:	0800e33d 	.word	0x0800e33d

0800c788 <_free_r>:
 800c788:	b538      	push	{r3, r4, r5, lr}
 800c78a:	4605      	mov	r5, r0
 800c78c:	2900      	cmp	r1, #0
 800c78e:	d041      	beq.n	800c814 <_free_r+0x8c>
 800c790:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800c794:	1f0c      	subs	r4, r1, #4
 800c796:	2b00      	cmp	r3, #0
 800c798:	bfb8      	it	lt
 800c79a:	18e4      	addlt	r4, r4, r3
 800c79c:	f000 f8e8 	bl	800c970 <__malloc_lock>
 800c7a0:	4a1d      	ldr	r2, [pc, #116]	@ (800c818 <_free_r+0x90>)
 800c7a2:	6813      	ldr	r3, [r2, #0]
 800c7a4:	b933      	cbnz	r3, 800c7b4 <_free_r+0x2c>
 800c7a6:	6063      	str	r3, [r4, #4]
 800c7a8:	6014      	str	r4, [r2, #0]
 800c7aa:	4628      	mov	r0, r5
 800c7ac:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c7b0:	f000 b8e4 	b.w	800c97c <__malloc_unlock>
 800c7b4:	42a3      	cmp	r3, r4
 800c7b6:	d908      	bls.n	800c7ca <_free_r+0x42>
 800c7b8:	6820      	ldr	r0, [r4, #0]
 800c7ba:	1821      	adds	r1, r4, r0
 800c7bc:	428b      	cmp	r3, r1
 800c7be:	bf01      	itttt	eq
 800c7c0:	6819      	ldreq	r1, [r3, #0]
 800c7c2:	685b      	ldreq	r3, [r3, #4]
 800c7c4:	1809      	addeq	r1, r1, r0
 800c7c6:	6021      	streq	r1, [r4, #0]
 800c7c8:	e7ed      	b.n	800c7a6 <_free_r+0x1e>
 800c7ca:	461a      	mov	r2, r3
 800c7cc:	685b      	ldr	r3, [r3, #4]
 800c7ce:	b10b      	cbz	r3, 800c7d4 <_free_r+0x4c>
 800c7d0:	42a3      	cmp	r3, r4
 800c7d2:	d9fa      	bls.n	800c7ca <_free_r+0x42>
 800c7d4:	6811      	ldr	r1, [r2, #0]
 800c7d6:	1850      	adds	r0, r2, r1
 800c7d8:	42a0      	cmp	r0, r4
 800c7da:	d10b      	bne.n	800c7f4 <_free_r+0x6c>
 800c7dc:	6820      	ldr	r0, [r4, #0]
 800c7de:	4401      	add	r1, r0
 800c7e0:	1850      	adds	r0, r2, r1
 800c7e2:	4283      	cmp	r3, r0
 800c7e4:	6011      	str	r1, [r2, #0]
 800c7e6:	d1e0      	bne.n	800c7aa <_free_r+0x22>
 800c7e8:	6818      	ldr	r0, [r3, #0]
 800c7ea:	685b      	ldr	r3, [r3, #4]
 800c7ec:	6053      	str	r3, [r2, #4]
 800c7ee:	4408      	add	r0, r1
 800c7f0:	6010      	str	r0, [r2, #0]
 800c7f2:	e7da      	b.n	800c7aa <_free_r+0x22>
 800c7f4:	d902      	bls.n	800c7fc <_free_r+0x74>
 800c7f6:	230c      	movs	r3, #12
 800c7f8:	602b      	str	r3, [r5, #0]
 800c7fa:	e7d6      	b.n	800c7aa <_free_r+0x22>
 800c7fc:	6820      	ldr	r0, [r4, #0]
 800c7fe:	1821      	adds	r1, r4, r0
 800c800:	428b      	cmp	r3, r1
 800c802:	bf04      	itt	eq
 800c804:	6819      	ldreq	r1, [r3, #0]
 800c806:	685b      	ldreq	r3, [r3, #4]
 800c808:	6063      	str	r3, [r4, #4]
 800c80a:	bf04      	itt	eq
 800c80c:	1809      	addeq	r1, r1, r0
 800c80e:	6021      	streq	r1, [r4, #0]
 800c810:	6054      	str	r4, [r2, #4]
 800c812:	e7ca      	b.n	800c7aa <_free_r+0x22>
 800c814:	bd38      	pop	{r3, r4, r5, pc}
 800c816:	bf00      	nop
 800c818:	2000500c 	.word	0x2000500c

0800c81c <malloc>:
 800c81c:	4b02      	ldr	r3, [pc, #8]	@ (800c828 <malloc+0xc>)
 800c81e:	4601      	mov	r1, r0
 800c820:	6818      	ldr	r0, [r3, #0]
 800c822:	f000 b825 	b.w	800c870 <_malloc_r>
 800c826:	bf00      	nop
 800c828:	20000020 	.word	0x20000020

0800c82c <sbrk_aligned>:
 800c82c:	b570      	push	{r4, r5, r6, lr}
 800c82e:	4e0f      	ldr	r6, [pc, #60]	@ (800c86c <sbrk_aligned+0x40>)
 800c830:	460c      	mov	r4, r1
 800c832:	6831      	ldr	r1, [r6, #0]
 800c834:	4605      	mov	r5, r0
 800c836:	b911      	cbnz	r1, 800c83e <sbrk_aligned+0x12>
 800c838:	f000 fe3e 	bl	800d4b8 <_sbrk_r>
 800c83c:	6030      	str	r0, [r6, #0]
 800c83e:	4621      	mov	r1, r4
 800c840:	4628      	mov	r0, r5
 800c842:	f000 fe39 	bl	800d4b8 <_sbrk_r>
 800c846:	1c43      	adds	r3, r0, #1
 800c848:	d103      	bne.n	800c852 <sbrk_aligned+0x26>
 800c84a:	f04f 34ff 	mov.w	r4, #4294967295
 800c84e:	4620      	mov	r0, r4
 800c850:	bd70      	pop	{r4, r5, r6, pc}
 800c852:	1cc4      	adds	r4, r0, #3
 800c854:	f024 0403 	bic.w	r4, r4, #3
 800c858:	42a0      	cmp	r0, r4
 800c85a:	d0f8      	beq.n	800c84e <sbrk_aligned+0x22>
 800c85c:	1a21      	subs	r1, r4, r0
 800c85e:	4628      	mov	r0, r5
 800c860:	f000 fe2a 	bl	800d4b8 <_sbrk_r>
 800c864:	3001      	adds	r0, #1
 800c866:	d1f2      	bne.n	800c84e <sbrk_aligned+0x22>
 800c868:	e7ef      	b.n	800c84a <sbrk_aligned+0x1e>
 800c86a:	bf00      	nop
 800c86c:	20005008 	.word	0x20005008

0800c870 <_malloc_r>:
 800c870:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c874:	1ccd      	adds	r5, r1, #3
 800c876:	f025 0503 	bic.w	r5, r5, #3
 800c87a:	3508      	adds	r5, #8
 800c87c:	2d0c      	cmp	r5, #12
 800c87e:	bf38      	it	cc
 800c880:	250c      	movcc	r5, #12
 800c882:	2d00      	cmp	r5, #0
 800c884:	4606      	mov	r6, r0
 800c886:	db01      	blt.n	800c88c <_malloc_r+0x1c>
 800c888:	42a9      	cmp	r1, r5
 800c88a:	d904      	bls.n	800c896 <_malloc_r+0x26>
 800c88c:	230c      	movs	r3, #12
 800c88e:	6033      	str	r3, [r6, #0]
 800c890:	2000      	movs	r0, #0
 800c892:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800c896:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 800c96c <_malloc_r+0xfc>
 800c89a:	f000 f869 	bl	800c970 <__malloc_lock>
 800c89e:	f8d8 3000 	ldr.w	r3, [r8]
 800c8a2:	461c      	mov	r4, r3
 800c8a4:	bb44      	cbnz	r4, 800c8f8 <_malloc_r+0x88>
 800c8a6:	4629      	mov	r1, r5
 800c8a8:	4630      	mov	r0, r6
 800c8aa:	f7ff ffbf 	bl	800c82c <sbrk_aligned>
 800c8ae:	1c43      	adds	r3, r0, #1
 800c8b0:	4604      	mov	r4, r0
 800c8b2:	d158      	bne.n	800c966 <_malloc_r+0xf6>
 800c8b4:	f8d8 4000 	ldr.w	r4, [r8]
 800c8b8:	4627      	mov	r7, r4
 800c8ba:	2f00      	cmp	r7, #0
 800c8bc:	d143      	bne.n	800c946 <_malloc_r+0xd6>
 800c8be:	2c00      	cmp	r4, #0
 800c8c0:	d04b      	beq.n	800c95a <_malloc_r+0xea>
 800c8c2:	6823      	ldr	r3, [r4, #0]
 800c8c4:	4639      	mov	r1, r7
 800c8c6:	4630      	mov	r0, r6
 800c8c8:	eb04 0903 	add.w	r9, r4, r3
 800c8cc:	f000 fdf4 	bl	800d4b8 <_sbrk_r>
 800c8d0:	4581      	cmp	r9, r0
 800c8d2:	d142      	bne.n	800c95a <_malloc_r+0xea>
 800c8d4:	6821      	ldr	r1, [r4, #0]
 800c8d6:	1a6d      	subs	r5, r5, r1
 800c8d8:	4629      	mov	r1, r5
 800c8da:	4630      	mov	r0, r6
 800c8dc:	f7ff ffa6 	bl	800c82c <sbrk_aligned>
 800c8e0:	3001      	adds	r0, #1
 800c8e2:	d03a      	beq.n	800c95a <_malloc_r+0xea>
 800c8e4:	6823      	ldr	r3, [r4, #0]
 800c8e6:	442b      	add	r3, r5
 800c8e8:	6023      	str	r3, [r4, #0]
 800c8ea:	f8d8 3000 	ldr.w	r3, [r8]
 800c8ee:	685a      	ldr	r2, [r3, #4]
 800c8f0:	bb62      	cbnz	r2, 800c94c <_malloc_r+0xdc>
 800c8f2:	f8c8 7000 	str.w	r7, [r8]
 800c8f6:	e00f      	b.n	800c918 <_malloc_r+0xa8>
 800c8f8:	6822      	ldr	r2, [r4, #0]
 800c8fa:	1b52      	subs	r2, r2, r5
 800c8fc:	d420      	bmi.n	800c940 <_malloc_r+0xd0>
 800c8fe:	2a0b      	cmp	r2, #11
 800c900:	d917      	bls.n	800c932 <_malloc_r+0xc2>
 800c902:	1961      	adds	r1, r4, r5
 800c904:	42a3      	cmp	r3, r4
 800c906:	6025      	str	r5, [r4, #0]
 800c908:	bf18      	it	ne
 800c90a:	6059      	strne	r1, [r3, #4]
 800c90c:	6863      	ldr	r3, [r4, #4]
 800c90e:	bf08      	it	eq
 800c910:	f8c8 1000 	streq.w	r1, [r8]
 800c914:	5162      	str	r2, [r4, r5]
 800c916:	604b      	str	r3, [r1, #4]
 800c918:	4630      	mov	r0, r6
 800c91a:	f000 f82f 	bl	800c97c <__malloc_unlock>
 800c91e:	f104 000b 	add.w	r0, r4, #11
 800c922:	1d23      	adds	r3, r4, #4
 800c924:	f020 0007 	bic.w	r0, r0, #7
 800c928:	1ac2      	subs	r2, r0, r3
 800c92a:	bf1c      	itt	ne
 800c92c:	1a1b      	subne	r3, r3, r0
 800c92e:	50a3      	strne	r3, [r4, r2]
 800c930:	e7af      	b.n	800c892 <_malloc_r+0x22>
 800c932:	6862      	ldr	r2, [r4, #4]
 800c934:	42a3      	cmp	r3, r4
 800c936:	bf0c      	ite	eq
 800c938:	f8c8 2000 	streq.w	r2, [r8]
 800c93c:	605a      	strne	r2, [r3, #4]
 800c93e:	e7eb      	b.n	800c918 <_malloc_r+0xa8>
 800c940:	4623      	mov	r3, r4
 800c942:	6864      	ldr	r4, [r4, #4]
 800c944:	e7ae      	b.n	800c8a4 <_malloc_r+0x34>
 800c946:	463c      	mov	r4, r7
 800c948:	687f      	ldr	r7, [r7, #4]
 800c94a:	e7b6      	b.n	800c8ba <_malloc_r+0x4a>
 800c94c:	461a      	mov	r2, r3
 800c94e:	685b      	ldr	r3, [r3, #4]
 800c950:	42a3      	cmp	r3, r4
 800c952:	d1fb      	bne.n	800c94c <_malloc_r+0xdc>
 800c954:	2300      	movs	r3, #0
 800c956:	6053      	str	r3, [r2, #4]
 800c958:	e7de      	b.n	800c918 <_malloc_r+0xa8>
 800c95a:	230c      	movs	r3, #12
 800c95c:	6033      	str	r3, [r6, #0]
 800c95e:	4630      	mov	r0, r6
 800c960:	f000 f80c 	bl	800c97c <__malloc_unlock>
 800c964:	e794      	b.n	800c890 <_malloc_r+0x20>
 800c966:	6005      	str	r5, [r0, #0]
 800c968:	e7d6      	b.n	800c918 <_malloc_r+0xa8>
 800c96a:	bf00      	nop
 800c96c:	2000500c 	.word	0x2000500c

0800c970 <__malloc_lock>:
 800c970:	4801      	ldr	r0, [pc, #4]	@ (800c978 <__malloc_lock+0x8>)
 800c972:	f7ff b8a0 	b.w	800bab6 <__retarget_lock_acquire_recursive>
 800c976:	bf00      	nop
 800c978:	20005004 	.word	0x20005004

0800c97c <__malloc_unlock>:
 800c97c:	4801      	ldr	r0, [pc, #4]	@ (800c984 <__malloc_unlock+0x8>)
 800c97e:	f7ff b89b 	b.w	800bab8 <__retarget_lock_release_recursive>
 800c982:	bf00      	nop
 800c984:	20005004 	.word	0x20005004

0800c988 <_Balloc>:
 800c988:	b570      	push	{r4, r5, r6, lr}
 800c98a:	69c6      	ldr	r6, [r0, #28]
 800c98c:	4604      	mov	r4, r0
 800c98e:	460d      	mov	r5, r1
 800c990:	b976      	cbnz	r6, 800c9b0 <_Balloc+0x28>
 800c992:	2010      	movs	r0, #16
 800c994:	f7ff ff42 	bl	800c81c <malloc>
 800c998:	4602      	mov	r2, r0
 800c99a:	61e0      	str	r0, [r4, #28]
 800c99c:	b920      	cbnz	r0, 800c9a8 <_Balloc+0x20>
 800c99e:	4b18      	ldr	r3, [pc, #96]	@ (800ca00 <_Balloc+0x78>)
 800c9a0:	4818      	ldr	r0, [pc, #96]	@ (800ca04 <_Balloc+0x7c>)
 800c9a2:	216b      	movs	r1, #107	@ 0x6b
 800c9a4:	f000 fd98 	bl	800d4d8 <__assert_func>
 800c9a8:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800c9ac:	6006      	str	r6, [r0, #0]
 800c9ae:	60c6      	str	r6, [r0, #12]
 800c9b0:	69e6      	ldr	r6, [r4, #28]
 800c9b2:	68f3      	ldr	r3, [r6, #12]
 800c9b4:	b183      	cbz	r3, 800c9d8 <_Balloc+0x50>
 800c9b6:	69e3      	ldr	r3, [r4, #28]
 800c9b8:	68db      	ldr	r3, [r3, #12]
 800c9ba:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800c9be:	b9b8      	cbnz	r0, 800c9f0 <_Balloc+0x68>
 800c9c0:	2101      	movs	r1, #1
 800c9c2:	fa01 f605 	lsl.w	r6, r1, r5
 800c9c6:	1d72      	adds	r2, r6, #5
 800c9c8:	0092      	lsls	r2, r2, #2
 800c9ca:	4620      	mov	r0, r4
 800c9cc:	f000 fda2 	bl	800d514 <_calloc_r>
 800c9d0:	b160      	cbz	r0, 800c9ec <_Balloc+0x64>
 800c9d2:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800c9d6:	e00e      	b.n	800c9f6 <_Balloc+0x6e>
 800c9d8:	2221      	movs	r2, #33	@ 0x21
 800c9da:	2104      	movs	r1, #4
 800c9dc:	4620      	mov	r0, r4
 800c9de:	f000 fd99 	bl	800d514 <_calloc_r>
 800c9e2:	69e3      	ldr	r3, [r4, #28]
 800c9e4:	60f0      	str	r0, [r6, #12]
 800c9e6:	68db      	ldr	r3, [r3, #12]
 800c9e8:	2b00      	cmp	r3, #0
 800c9ea:	d1e4      	bne.n	800c9b6 <_Balloc+0x2e>
 800c9ec:	2000      	movs	r0, #0
 800c9ee:	bd70      	pop	{r4, r5, r6, pc}
 800c9f0:	6802      	ldr	r2, [r0, #0]
 800c9f2:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800c9f6:	2300      	movs	r3, #0
 800c9f8:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800c9fc:	e7f7      	b.n	800c9ee <_Balloc+0x66>
 800c9fe:	bf00      	nop
 800ca00:	0800e34a 	.word	0x0800e34a
 800ca04:	0800e3ca 	.word	0x0800e3ca

0800ca08 <_Bfree>:
 800ca08:	b570      	push	{r4, r5, r6, lr}
 800ca0a:	69c6      	ldr	r6, [r0, #28]
 800ca0c:	4605      	mov	r5, r0
 800ca0e:	460c      	mov	r4, r1
 800ca10:	b976      	cbnz	r6, 800ca30 <_Bfree+0x28>
 800ca12:	2010      	movs	r0, #16
 800ca14:	f7ff ff02 	bl	800c81c <malloc>
 800ca18:	4602      	mov	r2, r0
 800ca1a:	61e8      	str	r0, [r5, #28]
 800ca1c:	b920      	cbnz	r0, 800ca28 <_Bfree+0x20>
 800ca1e:	4b09      	ldr	r3, [pc, #36]	@ (800ca44 <_Bfree+0x3c>)
 800ca20:	4809      	ldr	r0, [pc, #36]	@ (800ca48 <_Bfree+0x40>)
 800ca22:	218f      	movs	r1, #143	@ 0x8f
 800ca24:	f000 fd58 	bl	800d4d8 <__assert_func>
 800ca28:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800ca2c:	6006      	str	r6, [r0, #0]
 800ca2e:	60c6      	str	r6, [r0, #12]
 800ca30:	b13c      	cbz	r4, 800ca42 <_Bfree+0x3a>
 800ca32:	69eb      	ldr	r3, [r5, #28]
 800ca34:	6862      	ldr	r2, [r4, #4]
 800ca36:	68db      	ldr	r3, [r3, #12]
 800ca38:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800ca3c:	6021      	str	r1, [r4, #0]
 800ca3e:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800ca42:	bd70      	pop	{r4, r5, r6, pc}
 800ca44:	0800e34a 	.word	0x0800e34a
 800ca48:	0800e3ca 	.word	0x0800e3ca

0800ca4c <__multadd>:
 800ca4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ca50:	690d      	ldr	r5, [r1, #16]
 800ca52:	4607      	mov	r7, r0
 800ca54:	460c      	mov	r4, r1
 800ca56:	461e      	mov	r6, r3
 800ca58:	f101 0c14 	add.w	ip, r1, #20
 800ca5c:	2000      	movs	r0, #0
 800ca5e:	f8dc 3000 	ldr.w	r3, [ip]
 800ca62:	b299      	uxth	r1, r3
 800ca64:	fb02 6101 	mla	r1, r2, r1, r6
 800ca68:	0c1e      	lsrs	r6, r3, #16
 800ca6a:	0c0b      	lsrs	r3, r1, #16
 800ca6c:	fb02 3306 	mla	r3, r2, r6, r3
 800ca70:	b289      	uxth	r1, r1
 800ca72:	3001      	adds	r0, #1
 800ca74:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 800ca78:	4285      	cmp	r5, r0
 800ca7a:	f84c 1b04 	str.w	r1, [ip], #4
 800ca7e:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800ca82:	dcec      	bgt.n	800ca5e <__multadd+0x12>
 800ca84:	b30e      	cbz	r6, 800caca <__multadd+0x7e>
 800ca86:	68a3      	ldr	r3, [r4, #8]
 800ca88:	42ab      	cmp	r3, r5
 800ca8a:	dc19      	bgt.n	800cac0 <__multadd+0x74>
 800ca8c:	6861      	ldr	r1, [r4, #4]
 800ca8e:	4638      	mov	r0, r7
 800ca90:	3101      	adds	r1, #1
 800ca92:	f7ff ff79 	bl	800c988 <_Balloc>
 800ca96:	4680      	mov	r8, r0
 800ca98:	b928      	cbnz	r0, 800caa6 <__multadd+0x5a>
 800ca9a:	4602      	mov	r2, r0
 800ca9c:	4b0c      	ldr	r3, [pc, #48]	@ (800cad0 <__multadd+0x84>)
 800ca9e:	480d      	ldr	r0, [pc, #52]	@ (800cad4 <__multadd+0x88>)
 800caa0:	21ba      	movs	r1, #186	@ 0xba
 800caa2:	f000 fd19 	bl	800d4d8 <__assert_func>
 800caa6:	6922      	ldr	r2, [r4, #16]
 800caa8:	3202      	adds	r2, #2
 800caaa:	f104 010c 	add.w	r1, r4, #12
 800caae:	0092      	lsls	r2, r2, #2
 800cab0:	300c      	adds	r0, #12
 800cab2:	f7ff f802 	bl	800baba <memcpy>
 800cab6:	4621      	mov	r1, r4
 800cab8:	4638      	mov	r0, r7
 800caba:	f7ff ffa5 	bl	800ca08 <_Bfree>
 800cabe:	4644      	mov	r4, r8
 800cac0:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800cac4:	3501      	adds	r5, #1
 800cac6:	615e      	str	r6, [r3, #20]
 800cac8:	6125      	str	r5, [r4, #16]
 800caca:	4620      	mov	r0, r4
 800cacc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cad0:	0800e3b9 	.word	0x0800e3b9
 800cad4:	0800e3ca 	.word	0x0800e3ca

0800cad8 <__hi0bits>:
 800cad8:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 800cadc:	4603      	mov	r3, r0
 800cade:	bf36      	itet	cc
 800cae0:	0403      	lslcc	r3, r0, #16
 800cae2:	2000      	movcs	r0, #0
 800cae4:	2010      	movcc	r0, #16
 800cae6:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800caea:	bf3c      	itt	cc
 800caec:	021b      	lslcc	r3, r3, #8
 800caee:	3008      	addcc	r0, #8
 800caf0:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800caf4:	bf3c      	itt	cc
 800caf6:	011b      	lslcc	r3, r3, #4
 800caf8:	3004      	addcc	r0, #4
 800cafa:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800cafe:	bf3c      	itt	cc
 800cb00:	009b      	lslcc	r3, r3, #2
 800cb02:	3002      	addcc	r0, #2
 800cb04:	2b00      	cmp	r3, #0
 800cb06:	db05      	blt.n	800cb14 <__hi0bits+0x3c>
 800cb08:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 800cb0c:	f100 0001 	add.w	r0, r0, #1
 800cb10:	bf08      	it	eq
 800cb12:	2020      	moveq	r0, #32
 800cb14:	4770      	bx	lr

0800cb16 <__lo0bits>:
 800cb16:	6803      	ldr	r3, [r0, #0]
 800cb18:	4602      	mov	r2, r0
 800cb1a:	f013 0007 	ands.w	r0, r3, #7
 800cb1e:	d00b      	beq.n	800cb38 <__lo0bits+0x22>
 800cb20:	07d9      	lsls	r1, r3, #31
 800cb22:	d421      	bmi.n	800cb68 <__lo0bits+0x52>
 800cb24:	0798      	lsls	r0, r3, #30
 800cb26:	bf49      	itett	mi
 800cb28:	085b      	lsrmi	r3, r3, #1
 800cb2a:	089b      	lsrpl	r3, r3, #2
 800cb2c:	2001      	movmi	r0, #1
 800cb2e:	6013      	strmi	r3, [r2, #0]
 800cb30:	bf5c      	itt	pl
 800cb32:	6013      	strpl	r3, [r2, #0]
 800cb34:	2002      	movpl	r0, #2
 800cb36:	4770      	bx	lr
 800cb38:	b299      	uxth	r1, r3
 800cb3a:	b909      	cbnz	r1, 800cb40 <__lo0bits+0x2a>
 800cb3c:	0c1b      	lsrs	r3, r3, #16
 800cb3e:	2010      	movs	r0, #16
 800cb40:	b2d9      	uxtb	r1, r3
 800cb42:	b909      	cbnz	r1, 800cb48 <__lo0bits+0x32>
 800cb44:	3008      	adds	r0, #8
 800cb46:	0a1b      	lsrs	r3, r3, #8
 800cb48:	0719      	lsls	r1, r3, #28
 800cb4a:	bf04      	itt	eq
 800cb4c:	091b      	lsreq	r3, r3, #4
 800cb4e:	3004      	addeq	r0, #4
 800cb50:	0799      	lsls	r1, r3, #30
 800cb52:	bf04      	itt	eq
 800cb54:	089b      	lsreq	r3, r3, #2
 800cb56:	3002      	addeq	r0, #2
 800cb58:	07d9      	lsls	r1, r3, #31
 800cb5a:	d403      	bmi.n	800cb64 <__lo0bits+0x4e>
 800cb5c:	085b      	lsrs	r3, r3, #1
 800cb5e:	f100 0001 	add.w	r0, r0, #1
 800cb62:	d003      	beq.n	800cb6c <__lo0bits+0x56>
 800cb64:	6013      	str	r3, [r2, #0]
 800cb66:	4770      	bx	lr
 800cb68:	2000      	movs	r0, #0
 800cb6a:	4770      	bx	lr
 800cb6c:	2020      	movs	r0, #32
 800cb6e:	4770      	bx	lr

0800cb70 <__i2b>:
 800cb70:	b510      	push	{r4, lr}
 800cb72:	460c      	mov	r4, r1
 800cb74:	2101      	movs	r1, #1
 800cb76:	f7ff ff07 	bl	800c988 <_Balloc>
 800cb7a:	4602      	mov	r2, r0
 800cb7c:	b928      	cbnz	r0, 800cb8a <__i2b+0x1a>
 800cb7e:	4b05      	ldr	r3, [pc, #20]	@ (800cb94 <__i2b+0x24>)
 800cb80:	4805      	ldr	r0, [pc, #20]	@ (800cb98 <__i2b+0x28>)
 800cb82:	f240 1145 	movw	r1, #325	@ 0x145
 800cb86:	f000 fca7 	bl	800d4d8 <__assert_func>
 800cb8a:	2301      	movs	r3, #1
 800cb8c:	6144      	str	r4, [r0, #20]
 800cb8e:	6103      	str	r3, [r0, #16]
 800cb90:	bd10      	pop	{r4, pc}
 800cb92:	bf00      	nop
 800cb94:	0800e3b9 	.word	0x0800e3b9
 800cb98:	0800e3ca 	.word	0x0800e3ca

0800cb9c <__multiply>:
 800cb9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cba0:	4617      	mov	r7, r2
 800cba2:	690a      	ldr	r2, [r1, #16]
 800cba4:	693b      	ldr	r3, [r7, #16]
 800cba6:	429a      	cmp	r2, r3
 800cba8:	bfa8      	it	ge
 800cbaa:	463b      	movge	r3, r7
 800cbac:	4689      	mov	r9, r1
 800cbae:	bfa4      	itt	ge
 800cbb0:	460f      	movge	r7, r1
 800cbb2:	4699      	movge	r9, r3
 800cbb4:	693d      	ldr	r5, [r7, #16]
 800cbb6:	f8d9 a010 	ldr.w	sl, [r9, #16]
 800cbba:	68bb      	ldr	r3, [r7, #8]
 800cbbc:	6879      	ldr	r1, [r7, #4]
 800cbbe:	eb05 060a 	add.w	r6, r5, sl
 800cbc2:	42b3      	cmp	r3, r6
 800cbc4:	b085      	sub	sp, #20
 800cbc6:	bfb8      	it	lt
 800cbc8:	3101      	addlt	r1, #1
 800cbca:	f7ff fedd 	bl	800c988 <_Balloc>
 800cbce:	b930      	cbnz	r0, 800cbde <__multiply+0x42>
 800cbd0:	4602      	mov	r2, r0
 800cbd2:	4b41      	ldr	r3, [pc, #260]	@ (800ccd8 <__multiply+0x13c>)
 800cbd4:	4841      	ldr	r0, [pc, #260]	@ (800ccdc <__multiply+0x140>)
 800cbd6:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 800cbda:	f000 fc7d 	bl	800d4d8 <__assert_func>
 800cbde:	f100 0414 	add.w	r4, r0, #20
 800cbe2:	eb04 0e86 	add.w	lr, r4, r6, lsl #2
 800cbe6:	4623      	mov	r3, r4
 800cbe8:	2200      	movs	r2, #0
 800cbea:	4573      	cmp	r3, lr
 800cbec:	d320      	bcc.n	800cc30 <__multiply+0x94>
 800cbee:	f107 0814 	add.w	r8, r7, #20
 800cbf2:	f109 0114 	add.w	r1, r9, #20
 800cbf6:	eb08 0585 	add.w	r5, r8, r5, lsl #2
 800cbfa:	eb01 038a 	add.w	r3, r1, sl, lsl #2
 800cbfe:	9302      	str	r3, [sp, #8]
 800cc00:	1beb      	subs	r3, r5, r7
 800cc02:	3b15      	subs	r3, #21
 800cc04:	f023 0303 	bic.w	r3, r3, #3
 800cc08:	3304      	adds	r3, #4
 800cc0a:	3715      	adds	r7, #21
 800cc0c:	42bd      	cmp	r5, r7
 800cc0e:	bf38      	it	cc
 800cc10:	2304      	movcc	r3, #4
 800cc12:	9301      	str	r3, [sp, #4]
 800cc14:	9b02      	ldr	r3, [sp, #8]
 800cc16:	9103      	str	r1, [sp, #12]
 800cc18:	428b      	cmp	r3, r1
 800cc1a:	d80c      	bhi.n	800cc36 <__multiply+0x9a>
 800cc1c:	2e00      	cmp	r6, #0
 800cc1e:	dd03      	ble.n	800cc28 <__multiply+0x8c>
 800cc20:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 800cc24:	2b00      	cmp	r3, #0
 800cc26:	d055      	beq.n	800ccd4 <__multiply+0x138>
 800cc28:	6106      	str	r6, [r0, #16]
 800cc2a:	b005      	add	sp, #20
 800cc2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cc30:	f843 2b04 	str.w	r2, [r3], #4
 800cc34:	e7d9      	b.n	800cbea <__multiply+0x4e>
 800cc36:	f8b1 a000 	ldrh.w	sl, [r1]
 800cc3a:	f1ba 0f00 	cmp.w	sl, #0
 800cc3e:	d01f      	beq.n	800cc80 <__multiply+0xe4>
 800cc40:	46c4      	mov	ip, r8
 800cc42:	46a1      	mov	r9, r4
 800cc44:	2700      	movs	r7, #0
 800cc46:	f85c 2b04 	ldr.w	r2, [ip], #4
 800cc4a:	f8d9 3000 	ldr.w	r3, [r9]
 800cc4e:	fa1f fb82 	uxth.w	fp, r2
 800cc52:	b29b      	uxth	r3, r3
 800cc54:	fb0a 330b 	mla	r3, sl, fp, r3
 800cc58:	443b      	add	r3, r7
 800cc5a:	f8d9 7000 	ldr.w	r7, [r9]
 800cc5e:	0c12      	lsrs	r2, r2, #16
 800cc60:	0c3f      	lsrs	r7, r7, #16
 800cc62:	fb0a 7202 	mla	r2, sl, r2, r7
 800cc66:	eb02 4213 	add.w	r2, r2, r3, lsr #16
 800cc6a:	b29b      	uxth	r3, r3
 800cc6c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800cc70:	4565      	cmp	r5, ip
 800cc72:	f849 3b04 	str.w	r3, [r9], #4
 800cc76:	ea4f 4712 	mov.w	r7, r2, lsr #16
 800cc7a:	d8e4      	bhi.n	800cc46 <__multiply+0xaa>
 800cc7c:	9b01      	ldr	r3, [sp, #4]
 800cc7e:	50e7      	str	r7, [r4, r3]
 800cc80:	9b03      	ldr	r3, [sp, #12]
 800cc82:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 800cc86:	3104      	adds	r1, #4
 800cc88:	f1b9 0f00 	cmp.w	r9, #0
 800cc8c:	d020      	beq.n	800ccd0 <__multiply+0x134>
 800cc8e:	6823      	ldr	r3, [r4, #0]
 800cc90:	4647      	mov	r7, r8
 800cc92:	46a4      	mov	ip, r4
 800cc94:	f04f 0a00 	mov.w	sl, #0
 800cc98:	f8b7 b000 	ldrh.w	fp, [r7]
 800cc9c:	f8bc 2002 	ldrh.w	r2, [ip, #2]
 800cca0:	fb09 220b 	mla	r2, r9, fp, r2
 800cca4:	4452      	add	r2, sl
 800cca6:	b29b      	uxth	r3, r3
 800cca8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800ccac:	f84c 3b04 	str.w	r3, [ip], #4
 800ccb0:	f857 3b04 	ldr.w	r3, [r7], #4
 800ccb4:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800ccb8:	f8bc 3000 	ldrh.w	r3, [ip]
 800ccbc:	fb09 330a 	mla	r3, r9, sl, r3
 800ccc0:	eb03 4312 	add.w	r3, r3, r2, lsr #16
 800ccc4:	42bd      	cmp	r5, r7
 800ccc6:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800ccca:	d8e5      	bhi.n	800cc98 <__multiply+0xfc>
 800cccc:	9a01      	ldr	r2, [sp, #4]
 800ccce:	50a3      	str	r3, [r4, r2]
 800ccd0:	3404      	adds	r4, #4
 800ccd2:	e79f      	b.n	800cc14 <__multiply+0x78>
 800ccd4:	3e01      	subs	r6, #1
 800ccd6:	e7a1      	b.n	800cc1c <__multiply+0x80>
 800ccd8:	0800e3b9 	.word	0x0800e3b9
 800ccdc:	0800e3ca 	.word	0x0800e3ca

0800cce0 <__pow5mult>:
 800cce0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800cce4:	4615      	mov	r5, r2
 800cce6:	f012 0203 	ands.w	r2, r2, #3
 800ccea:	4607      	mov	r7, r0
 800ccec:	460e      	mov	r6, r1
 800ccee:	d007      	beq.n	800cd00 <__pow5mult+0x20>
 800ccf0:	4c25      	ldr	r4, [pc, #148]	@ (800cd88 <__pow5mult+0xa8>)
 800ccf2:	3a01      	subs	r2, #1
 800ccf4:	2300      	movs	r3, #0
 800ccf6:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800ccfa:	f7ff fea7 	bl	800ca4c <__multadd>
 800ccfe:	4606      	mov	r6, r0
 800cd00:	10ad      	asrs	r5, r5, #2
 800cd02:	d03d      	beq.n	800cd80 <__pow5mult+0xa0>
 800cd04:	69fc      	ldr	r4, [r7, #28]
 800cd06:	b97c      	cbnz	r4, 800cd28 <__pow5mult+0x48>
 800cd08:	2010      	movs	r0, #16
 800cd0a:	f7ff fd87 	bl	800c81c <malloc>
 800cd0e:	4602      	mov	r2, r0
 800cd10:	61f8      	str	r0, [r7, #28]
 800cd12:	b928      	cbnz	r0, 800cd20 <__pow5mult+0x40>
 800cd14:	4b1d      	ldr	r3, [pc, #116]	@ (800cd8c <__pow5mult+0xac>)
 800cd16:	481e      	ldr	r0, [pc, #120]	@ (800cd90 <__pow5mult+0xb0>)
 800cd18:	f240 11b3 	movw	r1, #435	@ 0x1b3
 800cd1c:	f000 fbdc 	bl	800d4d8 <__assert_func>
 800cd20:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800cd24:	6004      	str	r4, [r0, #0]
 800cd26:	60c4      	str	r4, [r0, #12]
 800cd28:	f8d7 801c 	ldr.w	r8, [r7, #28]
 800cd2c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800cd30:	b94c      	cbnz	r4, 800cd46 <__pow5mult+0x66>
 800cd32:	f240 2171 	movw	r1, #625	@ 0x271
 800cd36:	4638      	mov	r0, r7
 800cd38:	f7ff ff1a 	bl	800cb70 <__i2b>
 800cd3c:	2300      	movs	r3, #0
 800cd3e:	f8c8 0008 	str.w	r0, [r8, #8]
 800cd42:	4604      	mov	r4, r0
 800cd44:	6003      	str	r3, [r0, #0]
 800cd46:	f04f 0900 	mov.w	r9, #0
 800cd4a:	07eb      	lsls	r3, r5, #31
 800cd4c:	d50a      	bpl.n	800cd64 <__pow5mult+0x84>
 800cd4e:	4631      	mov	r1, r6
 800cd50:	4622      	mov	r2, r4
 800cd52:	4638      	mov	r0, r7
 800cd54:	f7ff ff22 	bl	800cb9c <__multiply>
 800cd58:	4631      	mov	r1, r6
 800cd5a:	4680      	mov	r8, r0
 800cd5c:	4638      	mov	r0, r7
 800cd5e:	f7ff fe53 	bl	800ca08 <_Bfree>
 800cd62:	4646      	mov	r6, r8
 800cd64:	106d      	asrs	r5, r5, #1
 800cd66:	d00b      	beq.n	800cd80 <__pow5mult+0xa0>
 800cd68:	6820      	ldr	r0, [r4, #0]
 800cd6a:	b938      	cbnz	r0, 800cd7c <__pow5mult+0x9c>
 800cd6c:	4622      	mov	r2, r4
 800cd6e:	4621      	mov	r1, r4
 800cd70:	4638      	mov	r0, r7
 800cd72:	f7ff ff13 	bl	800cb9c <__multiply>
 800cd76:	6020      	str	r0, [r4, #0]
 800cd78:	f8c0 9000 	str.w	r9, [r0]
 800cd7c:	4604      	mov	r4, r0
 800cd7e:	e7e4      	b.n	800cd4a <__pow5mult+0x6a>
 800cd80:	4630      	mov	r0, r6
 800cd82:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800cd86:	bf00      	nop
 800cd88:	0800e47c 	.word	0x0800e47c
 800cd8c:	0800e34a 	.word	0x0800e34a
 800cd90:	0800e3ca 	.word	0x0800e3ca

0800cd94 <__lshift>:
 800cd94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800cd98:	460c      	mov	r4, r1
 800cd9a:	6849      	ldr	r1, [r1, #4]
 800cd9c:	6923      	ldr	r3, [r4, #16]
 800cd9e:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800cda2:	68a3      	ldr	r3, [r4, #8]
 800cda4:	4607      	mov	r7, r0
 800cda6:	4691      	mov	r9, r2
 800cda8:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800cdac:	f108 0601 	add.w	r6, r8, #1
 800cdb0:	42b3      	cmp	r3, r6
 800cdb2:	db0b      	blt.n	800cdcc <__lshift+0x38>
 800cdb4:	4638      	mov	r0, r7
 800cdb6:	f7ff fde7 	bl	800c988 <_Balloc>
 800cdba:	4605      	mov	r5, r0
 800cdbc:	b948      	cbnz	r0, 800cdd2 <__lshift+0x3e>
 800cdbe:	4602      	mov	r2, r0
 800cdc0:	4b28      	ldr	r3, [pc, #160]	@ (800ce64 <__lshift+0xd0>)
 800cdc2:	4829      	ldr	r0, [pc, #164]	@ (800ce68 <__lshift+0xd4>)
 800cdc4:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 800cdc8:	f000 fb86 	bl	800d4d8 <__assert_func>
 800cdcc:	3101      	adds	r1, #1
 800cdce:	005b      	lsls	r3, r3, #1
 800cdd0:	e7ee      	b.n	800cdb0 <__lshift+0x1c>
 800cdd2:	2300      	movs	r3, #0
 800cdd4:	f100 0114 	add.w	r1, r0, #20
 800cdd8:	f100 0210 	add.w	r2, r0, #16
 800cddc:	4618      	mov	r0, r3
 800cdde:	4553      	cmp	r3, sl
 800cde0:	db33      	blt.n	800ce4a <__lshift+0xb6>
 800cde2:	6920      	ldr	r0, [r4, #16]
 800cde4:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800cde8:	f104 0314 	add.w	r3, r4, #20
 800cdec:	f019 091f 	ands.w	r9, r9, #31
 800cdf0:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800cdf4:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 800cdf8:	d02b      	beq.n	800ce52 <__lshift+0xbe>
 800cdfa:	f1c9 0e20 	rsb	lr, r9, #32
 800cdfe:	468a      	mov	sl, r1
 800ce00:	2200      	movs	r2, #0
 800ce02:	6818      	ldr	r0, [r3, #0]
 800ce04:	fa00 f009 	lsl.w	r0, r0, r9
 800ce08:	4310      	orrs	r0, r2
 800ce0a:	f84a 0b04 	str.w	r0, [sl], #4
 800ce0e:	f853 2b04 	ldr.w	r2, [r3], #4
 800ce12:	459c      	cmp	ip, r3
 800ce14:	fa22 f20e 	lsr.w	r2, r2, lr
 800ce18:	d8f3      	bhi.n	800ce02 <__lshift+0x6e>
 800ce1a:	ebac 0304 	sub.w	r3, ip, r4
 800ce1e:	3b15      	subs	r3, #21
 800ce20:	f023 0303 	bic.w	r3, r3, #3
 800ce24:	3304      	adds	r3, #4
 800ce26:	f104 0015 	add.w	r0, r4, #21
 800ce2a:	4560      	cmp	r0, ip
 800ce2c:	bf88      	it	hi
 800ce2e:	2304      	movhi	r3, #4
 800ce30:	50ca      	str	r2, [r1, r3]
 800ce32:	b10a      	cbz	r2, 800ce38 <__lshift+0xa4>
 800ce34:	f108 0602 	add.w	r6, r8, #2
 800ce38:	3e01      	subs	r6, #1
 800ce3a:	4638      	mov	r0, r7
 800ce3c:	612e      	str	r6, [r5, #16]
 800ce3e:	4621      	mov	r1, r4
 800ce40:	f7ff fde2 	bl	800ca08 <_Bfree>
 800ce44:	4628      	mov	r0, r5
 800ce46:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ce4a:	f842 0f04 	str.w	r0, [r2, #4]!
 800ce4e:	3301      	adds	r3, #1
 800ce50:	e7c5      	b.n	800cdde <__lshift+0x4a>
 800ce52:	3904      	subs	r1, #4
 800ce54:	f853 2b04 	ldr.w	r2, [r3], #4
 800ce58:	f841 2f04 	str.w	r2, [r1, #4]!
 800ce5c:	459c      	cmp	ip, r3
 800ce5e:	d8f9      	bhi.n	800ce54 <__lshift+0xc0>
 800ce60:	e7ea      	b.n	800ce38 <__lshift+0xa4>
 800ce62:	bf00      	nop
 800ce64:	0800e3b9 	.word	0x0800e3b9
 800ce68:	0800e3ca 	.word	0x0800e3ca

0800ce6c <__mcmp>:
 800ce6c:	690a      	ldr	r2, [r1, #16]
 800ce6e:	4603      	mov	r3, r0
 800ce70:	6900      	ldr	r0, [r0, #16]
 800ce72:	1a80      	subs	r0, r0, r2
 800ce74:	b530      	push	{r4, r5, lr}
 800ce76:	d10e      	bne.n	800ce96 <__mcmp+0x2a>
 800ce78:	3314      	adds	r3, #20
 800ce7a:	3114      	adds	r1, #20
 800ce7c:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 800ce80:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 800ce84:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 800ce88:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 800ce8c:	4295      	cmp	r5, r2
 800ce8e:	d003      	beq.n	800ce98 <__mcmp+0x2c>
 800ce90:	d205      	bcs.n	800ce9e <__mcmp+0x32>
 800ce92:	f04f 30ff 	mov.w	r0, #4294967295
 800ce96:	bd30      	pop	{r4, r5, pc}
 800ce98:	42a3      	cmp	r3, r4
 800ce9a:	d3f3      	bcc.n	800ce84 <__mcmp+0x18>
 800ce9c:	e7fb      	b.n	800ce96 <__mcmp+0x2a>
 800ce9e:	2001      	movs	r0, #1
 800cea0:	e7f9      	b.n	800ce96 <__mcmp+0x2a>
	...

0800cea4 <__mdiff>:
 800cea4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cea8:	4689      	mov	r9, r1
 800ceaa:	4606      	mov	r6, r0
 800ceac:	4611      	mov	r1, r2
 800ceae:	4648      	mov	r0, r9
 800ceb0:	4614      	mov	r4, r2
 800ceb2:	f7ff ffdb 	bl	800ce6c <__mcmp>
 800ceb6:	1e05      	subs	r5, r0, #0
 800ceb8:	d112      	bne.n	800cee0 <__mdiff+0x3c>
 800ceba:	4629      	mov	r1, r5
 800cebc:	4630      	mov	r0, r6
 800cebe:	f7ff fd63 	bl	800c988 <_Balloc>
 800cec2:	4602      	mov	r2, r0
 800cec4:	b928      	cbnz	r0, 800ced2 <__mdiff+0x2e>
 800cec6:	4b3f      	ldr	r3, [pc, #252]	@ (800cfc4 <__mdiff+0x120>)
 800cec8:	f240 2137 	movw	r1, #567	@ 0x237
 800cecc:	483e      	ldr	r0, [pc, #248]	@ (800cfc8 <__mdiff+0x124>)
 800cece:	f000 fb03 	bl	800d4d8 <__assert_func>
 800ced2:	2301      	movs	r3, #1
 800ced4:	e9c0 3504 	strd	r3, r5, [r0, #16]
 800ced8:	4610      	mov	r0, r2
 800ceda:	b003      	add	sp, #12
 800cedc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cee0:	bfbc      	itt	lt
 800cee2:	464b      	movlt	r3, r9
 800cee4:	46a1      	movlt	r9, r4
 800cee6:	4630      	mov	r0, r6
 800cee8:	f8d9 1004 	ldr.w	r1, [r9, #4]
 800ceec:	bfba      	itte	lt
 800ceee:	461c      	movlt	r4, r3
 800cef0:	2501      	movlt	r5, #1
 800cef2:	2500      	movge	r5, #0
 800cef4:	f7ff fd48 	bl	800c988 <_Balloc>
 800cef8:	4602      	mov	r2, r0
 800cefa:	b918      	cbnz	r0, 800cf04 <__mdiff+0x60>
 800cefc:	4b31      	ldr	r3, [pc, #196]	@ (800cfc4 <__mdiff+0x120>)
 800cefe:	f240 2145 	movw	r1, #581	@ 0x245
 800cf02:	e7e3      	b.n	800cecc <__mdiff+0x28>
 800cf04:	f8d9 7010 	ldr.w	r7, [r9, #16]
 800cf08:	6926      	ldr	r6, [r4, #16]
 800cf0a:	60c5      	str	r5, [r0, #12]
 800cf0c:	f109 0310 	add.w	r3, r9, #16
 800cf10:	f109 0514 	add.w	r5, r9, #20
 800cf14:	f104 0e14 	add.w	lr, r4, #20
 800cf18:	f100 0b14 	add.w	fp, r0, #20
 800cf1c:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 800cf20:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 800cf24:	9301      	str	r3, [sp, #4]
 800cf26:	46d9      	mov	r9, fp
 800cf28:	f04f 0c00 	mov.w	ip, #0
 800cf2c:	9b01      	ldr	r3, [sp, #4]
 800cf2e:	f85e 0b04 	ldr.w	r0, [lr], #4
 800cf32:	f853 af04 	ldr.w	sl, [r3, #4]!
 800cf36:	9301      	str	r3, [sp, #4]
 800cf38:	fa1f f38a 	uxth.w	r3, sl
 800cf3c:	4619      	mov	r1, r3
 800cf3e:	b283      	uxth	r3, r0
 800cf40:	1acb      	subs	r3, r1, r3
 800cf42:	0c00      	lsrs	r0, r0, #16
 800cf44:	4463      	add	r3, ip
 800cf46:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 800cf4a:	eb00 4023 	add.w	r0, r0, r3, asr #16
 800cf4e:	b29b      	uxth	r3, r3
 800cf50:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800cf54:	4576      	cmp	r6, lr
 800cf56:	f849 3b04 	str.w	r3, [r9], #4
 800cf5a:	ea4f 4c20 	mov.w	ip, r0, asr #16
 800cf5e:	d8e5      	bhi.n	800cf2c <__mdiff+0x88>
 800cf60:	1b33      	subs	r3, r6, r4
 800cf62:	3b15      	subs	r3, #21
 800cf64:	f023 0303 	bic.w	r3, r3, #3
 800cf68:	3415      	adds	r4, #21
 800cf6a:	3304      	adds	r3, #4
 800cf6c:	42a6      	cmp	r6, r4
 800cf6e:	bf38      	it	cc
 800cf70:	2304      	movcc	r3, #4
 800cf72:	441d      	add	r5, r3
 800cf74:	445b      	add	r3, fp
 800cf76:	461e      	mov	r6, r3
 800cf78:	462c      	mov	r4, r5
 800cf7a:	4544      	cmp	r4, r8
 800cf7c:	d30e      	bcc.n	800cf9c <__mdiff+0xf8>
 800cf7e:	f108 0103 	add.w	r1, r8, #3
 800cf82:	1b49      	subs	r1, r1, r5
 800cf84:	f021 0103 	bic.w	r1, r1, #3
 800cf88:	3d03      	subs	r5, #3
 800cf8a:	45a8      	cmp	r8, r5
 800cf8c:	bf38      	it	cc
 800cf8e:	2100      	movcc	r1, #0
 800cf90:	440b      	add	r3, r1
 800cf92:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800cf96:	b191      	cbz	r1, 800cfbe <__mdiff+0x11a>
 800cf98:	6117      	str	r7, [r2, #16]
 800cf9a:	e79d      	b.n	800ced8 <__mdiff+0x34>
 800cf9c:	f854 1b04 	ldr.w	r1, [r4], #4
 800cfa0:	46e6      	mov	lr, ip
 800cfa2:	0c08      	lsrs	r0, r1, #16
 800cfa4:	fa1c fc81 	uxtah	ip, ip, r1
 800cfa8:	4471      	add	r1, lr
 800cfaa:	eb00 402c 	add.w	r0, r0, ip, asr #16
 800cfae:	b289      	uxth	r1, r1
 800cfb0:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800cfb4:	f846 1b04 	str.w	r1, [r6], #4
 800cfb8:	ea4f 4c20 	mov.w	ip, r0, asr #16
 800cfbc:	e7dd      	b.n	800cf7a <__mdiff+0xd6>
 800cfbe:	3f01      	subs	r7, #1
 800cfc0:	e7e7      	b.n	800cf92 <__mdiff+0xee>
 800cfc2:	bf00      	nop
 800cfc4:	0800e3b9 	.word	0x0800e3b9
 800cfc8:	0800e3ca 	.word	0x0800e3ca

0800cfcc <__d2b>:
 800cfcc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800cfd0:	460f      	mov	r7, r1
 800cfd2:	2101      	movs	r1, #1
 800cfd4:	ec59 8b10 	vmov	r8, r9, d0
 800cfd8:	4616      	mov	r6, r2
 800cfda:	f7ff fcd5 	bl	800c988 <_Balloc>
 800cfde:	4604      	mov	r4, r0
 800cfe0:	b930      	cbnz	r0, 800cff0 <__d2b+0x24>
 800cfe2:	4602      	mov	r2, r0
 800cfe4:	4b23      	ldr	r3, [pc, #140]	@ (800d074 <__d2b+0xa8>)
 800cfe6:	4824      	ldr	r0, [pc, #144]	@ (800d078 <__d2b+0xac>)
 800cfe8:	f240 310f 	movw	r1, #783	@ 0x30f
 800cfec:	f000 fa74 	bl	800d4d8 <__assert_func>
 800cff0:	f3c9 550a 	ubfx	r5, r9, #20, #11
 800cff4:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800cff8:	b10d      	cbz	r5, 800cffe <__d2b+0x32>
 800cffa:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800cffe:	9301      	str	r3, [sp, #4]
 800d000:	f1b8 0300 	subs.w	r3, r8, #0
 800d004:	d023      	beq.n	800d04e <__d2b+0x82>
 800d006:	4668      	mov	r0, sp
 800d008:	9300      	str	r3, [sp, #0]
 800d00a:	f7ff fd84 	bl	800cb16 <__lo0bits>
 800d00e:	e9dd 1200 	ldrd	r1, r2, [sp]
 800d012:	b1d0      	cbz	r0, 800d04a <__d2b+0x7e>
 800d014:	f1c0 0320 	rsb	r3, r0, #32
 800d018:	fa02 f303 	lsl.w	r3, r2, r3
 800d01c:	430b      	orrs	r3, r1
 800d01e:	40c2      	lsrs	r2, r0
 800d020:	6163      	str	r3, [r4, #20]
 800d022:	9201      	str	r2, [sp, #4]
 800d024:	9b01      	ldr	r3, [sp, #4]
 800d026:	61a3      	str	r3, [r4, #24]
 800d028:	2b00      	cmp	r3, #0
 800d02a:	bf0c      	ite	eq
 800d02c:	2201      	moveq	r2, #1
 800d02e:	2202      	movne	r2, #2
 800d030:	6122      	str	r2, [r4, #16]
 800d032:	b1a5      	cbz	r5, 800d05e <__d2b+0x92>
 800d034:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 800d038:	4405      	add	r5, r0
 800d03a:	603d      	str	r5, [r7, #0]
 800d03c:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 800d040:	6030      	str	r0, [r6, #0]
 800d042:	4620      	mov	r0, r4
 800d044:	b003      	add	sp, #12
 800d046:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d04a:	6161      	str	r1, [r4, #20]
 800d04c:	e7ea      	b.n	800d024 <__d2b+0x58>
 800d04e:	a801      	add	r0, sp, #4
 800d050:	f7ff fd61 	bl	800cb16 <__lo0bits>
 800d054:	9b01      	ldr	r3, [sp, #4]
 800d056:	6163      	str	r3, [r4, #20]
 800d058:	3020      	adds	r0, #32
 800d05a:	2201      	movs	r2, #1
 800d05c:	e7e8      	b.n	800d030 <__d2b+0x64>
 800d05e:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800d062:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 800d066:	6038      	str	r0, [r7, #0]
 800d068:	6918      	ldr	r0, [r3, #16]
 800d06a:	f7ff fd35 	bl	800cad8 <__hi0bits>
 800d06e:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 800d072:	e7e5      	b.n	800d040 <__d2b+0x74>
 800d074:	0800e3b9 	.word	0x0800e3b9
 800d078:	0800e3ca 	.word	0x0800e3ca

0800d07c <__ssputs_r>:
 800d07c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d080:	688e      	ldr	r6, [r1, #8]
 800d082:	461f      	mov	r7, r3
 800d084:	42be      	cmp	r6, r7
 800d086:	680b      	ldr	r3, [r1, #0]
 800d088:	4682      	mov	sl, r0
 800d08a:	460c      	mov	r4, r1
 800d08c:	4690      	mov	r8, r2
 800d08e:	d82d      	bhi.n	800d0ec <__ssputs_r+0x70>
 800d090:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800d094:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 800d098:	d026      	beq.n	800d0e8 <__ssputs_r+0x6c>
 800d09a:	6965      	ldr	r5, [r4, #20]
 800d09c:	6909      	ldr	r1, [r1, #16]
 800d09e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800d0a2:	eba3 0901 	sub.w	r9, r3, r1
 800d0a6:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800d0aa:	1c7b      	adds	r3, r7, #1
 800d0ac:	444b      	add	r3, r9
 800d0ae:	106d      	asrs	r5, r5, #1
 800d0b0:	429d      	cmp	r5, r3
 800d0b2:	bf38      	it	cc
 800d0b4:	461d      	movcc	r5, r3
 800d0b6:	0553      	lsls	r3, r2, #21
 800d0b8:	d527      	bpl.n	800d10a <__ssputs_r+0x8e>
 800d0ba:	4629      	mov	r1, r5
 800d0bc:	f7ff fbd8 	bl	800c870 <_malloc_r>
 800d0c0:	4606      	mov	r6, r0
 800d0c2:	b360      	cbz	r0, 800d11e <__ssputs_r+0xa2>
 800d0c4:	6921      	ldr	r1, [r4, #16]
 800d0c6:	464a      	mov	r2, r9
 800d0c8:	f7fe fcf7 	bl	800baba <memcpy>
 800d0cc:	89a3      	ldrh	r3, [r4, #12]
 800d0ce:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 800d0d2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800d0d6:	81a3      	strh	r3, [r4, #12]
 800d0d8:	6126      	str	r6, [r4, #16]
 800d0da:	6165      	str	r5, [r4, #20]
 800d0dc:	444e      	add	r6, r9
 800d0de:	eba5 0509 	sub.w	r5, r5, r9
 800d0e2:	6026      	str	r6, [r4, #0]
 800d0e4:	60a5      	str	r5, [r4, #8]
 800d0e6:	463e      	mov	r6, r7
 800d0e8:	42be      	cmp	r6, r7
 800d0ea:	d900      	bls.n	800d0ee <__ssputs_r+0x72>
 800d0ec:	463e      	mov	r6, r7
 800d0ee:	6820      	ldr	r0, [r4, #0]
 800d0f0:	4632      	mov	r2, r6
 800d0f2:	4641      	mov	r1, r8
 800d0f4:	f000 f9c6 	bl	800d484 <memmove>
 800d0f8:	68a3      	ldr	r3, [r4, #8]
 800d0fa:	1b9b      	subs	r3, r3, r6
 800d0fc:	60a3      	str	r3, [r4, #8]
 800d0fe:	6823      	ldr	r3, [r4, #0]
 800d100:	4433      	add	r3, r6
 800d102:	6023      	str	r3, [r4, #0]
 800d104:	2000      	movs	r0, #0
 800d106:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d10a:	462a      	mov	r2, r5
 800d10c:	f000 fa28 	bl	800d560 <_realloc_r>
 800d110:	4606      	mov	r6, r0
 800d112:	2800      	cmp	r0, #0
 800d114:	d1e0      	bne.n	800d0d8 <__ssputs_r+0x5c>
 800d116:	6921      	ldr	r1, [r4, #16]
 800d118:	4650      	mov	r0, sl
 800d11a:	f7ff fb35 	bl	800c788 <_free_r>
 800d11e:	230c      	movs	r3, #12
 800d120:	f8ca 3000 	str.w	r3, [sl]
 800d124:	89a3      	ldrh	r3, [r4, #12]
 800d126:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800d12a:	81a3      	strh	r3, [r4, #12]
 800d12c:	f04f 30ff 	mov.w	r0, #4294967295
 800d130:	e7e9      	b.n	800d106 <__ssputs_r+0x8a>
	...

0800d134 <_svfiprintf_r>:
 800d134:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d138:	4698      	mov	r8, r3
 800d13a:	898b      	ldrh	r3, [r1, #12]
 800d13c:	061b      	lsls	r3, r3, #24
 800d13e:	b09d      	sub	sp, #116	@ 0x74
 800d140:	4607      	mov	r7, r0
 800d142:	460d      	mov	r5, r1
 800d144:	4614      	mov	r4, r2
 800d146:	d510      	bpl.n	800d16a <_svfiprintf_r+0x36>
 800d148:	690b      	ldr	r3, [r1, #16]
 800d14a:	b973      	cbnz	r3, 800d16a <_svfiprintf_r+0x36>
 800d14c:	2140      	movs	r1, #64	@ 0x40
 800d14e:	f7ff fb8f 	bl	800c870 <_malloc_r>
 800d152:	6028      	str	r0, [r5, #0]
 800d154:	6128      	str	r0, [r5, #16]
 800d156:	b930      	cbnz	r0, 800d166 <_svfiprintf_r+0x32>
 800d158:	230c      	movs	r3, #12
 800d15a:	603b      	str	r3, [r7, #0]
 800d15c:	f04f 30ff 	mov.w	r0, #4294967295
 800d160:	b01d      	add	sp, #116	@ 0x74
 800d162:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d166:	2340      	movs	r3, #64	@ 0x40
 800d168:	616b      	str	r3, [r5, #20]
 800d16a:	2300      	movs	r3, #0
 800d16c:	9309      	str	r3, [sp, #36]	@ 0x24
 800d16e:	2320      	movs	r3, #32
 800d170:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800d174:	f8cd 800c 	str.w	r8, [sp, #12]
 800d178:	2330      	movs	r3, #48	@ 0x30
 800d17a:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 800d318 <_svfiprintf_r+0x1e4>
 800d17e:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800d182:	f04f 0901 	mov.w	r9, #1
 800d186:	4623      	mov	r3, r4
 800d188:	469a      	mov	sl, r3
 800d18a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800d18e:	b10a      	cbz	r2, 800d194 <_svfiprintf_r+0x60>
 800d190:	2a25      	cmp	r2, #37	@ 0x25
 800d192:	d1f9      	bne.n	800d188 <_svfiprintf_r+0x54>
 800d194:	ebba 0b04 	subs.w	fp, sl, r4
 800d198:	d00b      	beq.n	800d1b2 <_svfiprintf_r+0x7e>
 800d19a:	465b      	mov	r3, fp
 800d19c:	4622      	mov	r2, r4
 800d19e:	4629      	mov	r1, r5
 800d1a0:	4638      	mov	r0, r7
 800d1a2:	f7ff ff6b 	bl	800d07c <__ssputs_r>
 800d1a6:	3001      	adds	r0, #1
 800d1a8:	f000 80a7 	beq.w	800d2fa <_svfiprintf_r+0x1c6>
 800d1ac:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800d1ae:	445a      	add	r2, fp
 800d1b0:	9209      	str	r2, [sp, #36]	@ 0x24
 800d1b2:	f89a 3000 	ldrb.w	r3, [sl]
 800d1b6:	2b00      	cmp	r3, #0
 800d1b8:	f000 809f 	beq.w	800d2fa <_svfiprintf_r+0x1c6>
 800d1bc:	2300      	movs	r3, #0
 800d1be:	f04f 32ff 	mov.w	r2, #4294967295
 800d1c2:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800d1c6:	f10a 0a01 	add.w	sl, sl, #1
 800d1ca:	9304      	str	r3, [sp, #16]
 800d1cc:	9307      	str	r3, [sp, #28]
 800d1ce:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800d1d2:	931a      	str	r3, [sp, #104]	@ 0x68
 800d1d4:	4654      	mov	r4, sl
 800d1d6:	2205      	movs	r2, #5
 800d1d8:	f814 1b01 	ldrb.w	r1, [r4], #1
 800d1dc:	484e      	ldr	r0, [pc, #312]	@ (800d318 <_svfiprintf_r+0x1e4>)
 800d1de:	f7f3 f817 	bl	8000210 <memchr>
 800d1e2:	9a04      	ldr	r2, [sp, #16]
 800d1e4:	b9d8      	cbnz	r0, 800d21e <_svfiprintf_r+0xea>
 800d1e6:	06d0      	lsls	r0, r2, #27
 800d1e8:	bf44      	itt	mi
 800d1ea:	2320      	movmi	r3, #32
 800d1ec:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800d1f0:	0711      	lsls	r1, r2, #28
 800d1f2:	bf44      	itt	mi
 800d1f4:	232b      	movmi	r3, #43	@ 0x2b
 800d1f6:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800d1fa:	f89a 3000 	ldrb.w	r3, [sl]
 800d1fe:	2b2a      	cmp	r3, #42	@ 0x2a
 800d200:	d015      	beq.n	800d22e <_svfiprintf_r+0xfa>
 800d202:	9a07      	ldr	r2, [sp, #28]
 800d204:	4654      	mov	r4, sl
 800d206:	2000      	movs	r0, #0
 800d208:	f04f 0c0a 	mov.w	ip, #10
 800d20c:	4621      	mov	r1, r4
 800d20e:	f811 3b01 	ldrb.w	r3, [r1], #1
 800d212:	3b30      	subs	r3, #48	@ 0x30
 800d214:	2b09      	cmp	r3, #9
 800d216:	d94b      	bls.n	800d2b0 <_svfiprintf_r+0x17c>
 800d218:	b1b0      	cbz	r0, 800d248 <_svfiprintf_r+0x114>
 800d21a:	9207      	str	r2, [sp, #28]
 800d21c:	e014      	b.n	800d248 <_svfiprintf_r+0x114>
 800d21e:	eba0 0308 	sub.w	r3, r0, r8
 800d222:	fa09 f303 	lsl.w	r3, r9, r3
 800d226:	4313      	orrs	r3, r2
 800d228:	9304      	str	r3, [sp, #16]
 800d22a:	46a2      	mov	sl, r4
 800d22c:	e7d2      	b.n	800d1d4 <_svfiprintf_r+0xa0>
 800d22e:	9b03      	ldr	r3, [sp, #12]
 800d230:	1d19      	adds	r1, r3, #4
 800d232:	681b      	ldr	r3, [r3, #0]
 800d234:	9103      	str	r1, [sp, #12]
 800d236:	2b00      	cmp	r3, #0
 800d238:	bfbb      	ittet	lt
 800d23a:	425b      	neglt	r3, r3
 800d23c:	f042 0202 	orrlt.w	r2, r2, #2
 800d240:	9307      	strge	r3, [sp, #28]
 800d242:	9307      	strlt	r3, [sp, #28]
 800d244:	bfb8      	it	lt
 800d246:	9204      	strlt	r2, [sp, #16]
 800d248:	7823      	ldrb	r3, [r4, #0]
 800d24a:	2b2e      	cmp	r3, #46	@ 0x2e
 800d24c:	d10a      	bne.n	800d264 <_svfiprintf_r+0x130>
 800d24e:	7863      	ldrb	r3, [r4, #1]
 800d250:	2b2a      	cmp	r3, #42	@ 0x2a
 800d252:	d132      	bne.n	800d2ba <_svfiprintf_r+0x186>
 800d254:	9b03      	ldr	r3, [sp, #12]
 800d256:	1d1a      	adds	r2, r3, #4
 800d258:	681b      	ldr	r3, [r3, #0]
 800d25a:	9203      	str	r2, [sp, #12]
 800d25c:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 800d260:	3402      	adds	r4, #2
 800d262:	9305      	str	r3, [sp, #20]
 800d264:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 800d328 <_svfiprintf_r+0x1f4>
 800d268:	7821      	ldrb	r1, [r4, #0]
 800d26a:	2203      	movs	r2, #3
 800d26c:	4650      	mov	r0, sl
 800d26e:	f7f2 ffcf 	bl	8000210 <memchr>
 800d272:	b138      	cbz	r0, 800d284 <_svfiprintf_r+0x150>
 800d274:	9b04      	ldr	r3, [sp, #16]
 800d276:	eba0 000a 	sub.w	r0, r0, sl
 800d27a:	2240      	movs	r2, #64	@ 0x40
 800d27c:	4082      	lsls	r2, r0
 800d27e:	4313      	orrs	r3, r2
 800d280:	3401      	adds	r4, #1
 800d282:	9304      	str	r3, [sp, #16]
 800d284:	f814 1b01 	ldrb.w	r1, [r4], #1
 800d288:	4824      	ldr	r0, [pc, #144]	@ (800d31c <_svfiprintf_r+0x1e8>)
 800d28a:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 800d28e:	2206      	movs	r2, #6
 800d290:	f7f2 ffbe 	bl	8000210 <memchr>
 800d294:	2800      	cmp	r0, #0
 800d296:	d036      	beq.n	800d306 <_svfiprintf_r+0x1d2>
 800d298:	4b21      	ldr	r3, [pc, #132]	@ (800d320 <_svfiprintf_r+0x1ec>)
 800d29a:	bb1b      	cbnz	r3, 800d2e4 <_svfiprintf_r+0x1b0>
 800d29c:	9b03      	ldr	r3, [sp, #12]
 800d29e:	3307      	adds	r3, #7
 800d2a0:	f023 0307 	bic.w	r3, r3, #7
 800d2a4:	3308      	adds	r3, #8
 800d2a6:	9303      	str	r3, [sp, #12]
 800d2a8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800d2aa:	4433      	add	r3, r6
 800d2ac:	9309      	str	r3, [sp, #36]	@ 0x24
 800d2ae:	e76a      	b.n	800d186 <_svfiprintf_r+0x52>
 800d2b0:	fb0c 3202 	mla	r2, ip, r2, r3
 800d2b4:	460c      	mov	r4, r1
 800d2b6:	2001      	movs	r0, #1
 800d2b8:	e7a8      	b.n	800d20c <_svfiprintf_r+0xd8>
 800d2ba:	2300      	movs	r3, #0
 800d2bc:	3401      	adds	r4, #1
 800d2be:	9305      	str	r3, [sp, #20]
 800d2c0:	4619      	mov	r1, r3
 800d2c2:	f04f 0c0a 	mov.w	ip, #10
 800d2c6:	4620      	mov	r0, r4
 800d2c8:	f810 2b01 	ldrb.w	r2, [r0], #1
 800d2cc:	3a30      	subs	r2, #48	@ 0x30
 800d2ce:	2a09      	cmp	r2, #9
 800d2d0:	d903      	bls.n	800d2da <_svfiprintf_r+0x1a6>
 800d2d2:	2b00      	cmp	r3, #0
 800d2d4:	d0c6      	beq.n	800d264 <_svfiprintf_r+0x130>
 800d2d6:	9105      	str	r1, [sp, #20]
 800d2d8:	e7c4      	b.n	800d264 <_svfiprintf_r+0x130>
 800d2da:	fb0c 2101 	mla	r1, ip, r1, r2
 800d2de:	4604      	mov	r4, r0
 800d2e0:	2301      	movs	r3, #1
 800d2e2:	e7f0      	b.n	800d2c6 <_svfiprintf_r+0x192>
 800d2e4:	ab03      	add	r3, sp, #12
 800d2e6:	9300      	str	r3, [sp, #0]
 800d2e8:	462a      	mov	r2, r5
 800d2ea:	4b0e      	ldr	r3, [pc, #56]	@ (800d324 <_svfiprintf_r+0x1f0>)
 800d2ec:	a904      	add	r1, sp, #16
 800d2ee:	4638      	mov	r0, r7
 800d2f0:	f7fd fdf2 	bl	800aed8 <_printf_float>
 800d2f4:	1c42      	adds	r2, r0, #1
 800d2f6:	4606      	mov	r6, r0
 800d2f8:	d1d6      	bne.n	800d2a8 <_svfiprintf_r+0x174>
 800d2fa:	89ab      	ldrh	r3, [r5, #12]
 800d2fc:	065b      	lsls	r3, r3, #25
 800d2fe:	f53f af2d 	bmi.w	800d15c <_svfiprintf_r+0x28>
 800d302:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800d304:	e72c      	b.n	800d160 <_svfiprintf_r+0x2c>
 800d306:	ab03      	add	r3, sp, #12
 800d308:	9300      	str	r3, [sp, #0]
 800d30a:	462a      	mov	r2, r5
 800d30c:	4b05      	ldr	r3, [pc, #20]	@ (800d324 <_svfiprintf_r+0x1f0>)
 800d30e:	a904      	add	r1, sp, #16
 800d310:	4638      	mov	r0, r7
 800d312:	f7fe f879 	bl	800b408 <_printf_i>
 800d316:	e7ed      	b.n	800d2f4 <_svfiprintf_r+0x1c0>
 800d318:	0800e423 	.word	0x0800e423
 800d31c:	0800e42d 	.word	0x0800e42d
 800d320:	0800aed9 	.word	0x0800aed9
 800d324:	0800d07d 	.word	0x0800d07d
 800d328:	0800e429 	.word	0x0800e429

0800d32c <__sflush_r>:
 800d32c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800d330:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d334:	0716      	lsls	r6, r2, #28
 800d336:	4605      	mov	r5, r0
 800d338:	460c      	mov	r4, r1
 800d33a:	d454      	bmi.n	800d3e6 <__sflush_r+0xba>
 800d33c:	684b      	ldr	r3, [r1, #4]
 800d33e:	2b00      	cmp	r3, #0
 800d340:	dc02      	bgt.n	800d348 <__sflush_r+0x1c>
 800d342:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 800d344:	2b00      	cmp	r3, #0
 800d346:	dd48      	ble.n	800d3da <__sflush_r+0xae>
 800d348:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800d34a:	2e00      	cmp	r6, #0
 800d34c:	d045      	beq.n	800d3da <__sflush_r+0xae>
 800d34e:	2300      	movs	r3, #0
 800d350:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 800d354:	682f      	ldr	r7, [r5, #0]
 800d356:	6a21      	ldr	r1, [r4, #32]
 800d358:	602b      	str	r3, [r5, #0]
 800d35a:	d030      	beq.n	800d3be <__sflush_r+0x92>
 800d35c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 800d35e:	89a3      	ldrh	r3, [r4, #12]
 800d360:	0759      	lsls	r1, r3, #29
 800d362:	d505      	bpl.n	800d370 <__sflush_r+0x44>
 800d364:	6863      	ldr	r3, [r4, #4]
 800d366:	1ad2      	subs	r2, r2, r3
 800d368:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800d36a:	b10b      	cbz	r3, 800d370 <__sflush_r+0x44>
 800d36c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800d36e:	1ad2      	subs	r2, r2, r3
 800d370:	2300      	movs	r3, #0
 800d372:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800d374:	6a21      	ldr	r1, [r4, #32]
 800d376:	4628      	mov	r0, r5
 800d378:	47b0      	blx	r6
 800d37a:	1c43      	adds	r3, r0, #1
 800d37c:	89a3      	ldrh	r3, [r4, #12]
 800d37e:	d106      	bne.n	800d38e <__sflush_r+0x62>
 800d380:	6829      	ldr	r1, [r5, #0]
 800d382:	291d      	cmp	r1, #29
 800d384:	d82b      	bhi.n	800d3de <__sflush_r+0xb2>
 800d386:	4a2a      	ldr	r2, [pc, #168]	@ (800d430 <__sflush_r+0x104>)
 800d388:	40ca      	lsrs	r2, r1
 800d38a:	07d6      	lsls	r6, r2, #31
 800d38c:	d527      	bpl.n	800d3de <__sflush_r+0xb2>
 800d38e:	2200      	movs	r2, #0
 800d390:	6062      	str	r2, [r4, #4]
 800d392:	04d9      	lsls	r1, r3, #19
 800d394:	6922      	ldr	r2, [r4, #16]
 800d396:	6022      	str	r2, [r4, #0]
 800d398:	d504      	bpl.n	800d3a4 <__sflush_r+0x78>
 800d39a:	1c42      	adds	r2, r0, #1
 800d39c:	d101      	bne.n	800d3a2 <__sflush_r+0x76>
 800d39e:	682b      	ldr	r3, [r5, #0]
 800d3a0:	b903      	cbnz	r3, 800d3a4 <__sflush_r+0x78>
 800d3a2:	6560      	str	r0, [r4, #84]	@ 0x54
 800d3a4:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800d3a6:	602f      	str	r7, [r5, #0]
 800d3a8:	b1b9      	cbz	r1, 800d3da <__sflush_r+0xae>
 800d3aa:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800d3ae:	4299      	cmp	r1, r3
 800d3b0:	d002      	beq.n	800d3b8 <__sflush_r+0x8c>
 800d3b2:	4628      	mov	r0, r5
 800d3b4:	f7ff f9e8 	bl	800c788 <_free_r>
 800d3b8:	2300      	movs	r3, #0
 800d3ba:	6363      	str	r3, [r4, #52]	@ 0x34
 800d3bc:	e00d      	b.n	800d3da <__sflush_r+0xae>
 800d3be:	2301      	movs	r3, #1
 800d3c0:	4628      	mov	r0, r5
 800d3c2:	47b0      	blx	r6
 800d3c4:	4602      	mov	r2, r0
 800d3c6:	1c50      	adds	r0, r2, #1
 800d3c8:	d1c9      	bne.n	800d35e <__sflush_r+0x32>
 800d3ca:	682b      	ldr	r3, [r5, #0]
 800d3cc:	2b00      	cmp	r3, #0
 800d3ce:	d0c6      	beq.n	800d35e <__sflush_r+0x32>
 800d3d0:	2b1d      	cmp	r3, #29
 800d3d2:	d001      	beq.n	800d3d8 <__sflush_r+0xac>
 800d3d4:	2b16      	cmp	r3, #22
 800d3d6:	d11e      	bne.n	800d416 <__sflush_r+0xea>
 800d3d8:	602f      	str	r7, [r5, #0]
 800d3da:	2000      	movs	r0, #0
 800d3dc:	e022      	b.n	800d424 <__sflush_r+0xf8>
 800d3de:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800d3e2:	b21b      	sxth	r3, r3
 800d3e4:	e01b      	b.n	800d41e <__sflush_r+0xf2>
 800d3e6:	690f      	ldr	r7, [r1, #16]
 800d3e8:	2f00      	cmp	r7, #0
 800d3ea:	d0f6      	beq.n	800d3da <__sflush_r+0xae>
 800d3ec:	0793      	lsls	r3, r2, #30
 800d3ee:	680e      	ldr	r6, [r1, #0]
 800d3f0:	bf08      	it	eq
 800d3f2:	694b      	ldreq	r3, [r1, #20]
 800d3f4:	600f      	str	r7, [r1, #0]
 800d3f6:	bf18      	it	ne
 800d3f8:	2300      	movne	r3, #0
 800d3fa:	eba6 0807 	sub.w	r8, r6, r7
 800d3fe:	608b      	str	r3, [r1, #8]
 800d400:	f1b8 0f00 	cmp.w	r8, #0
 800d404:	dde9      	ble.n	800d3da <__sflush_r+0xae>
 800d406:	6a21      	ldr	r1, [r4, #32]
 800d408:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 800d40a:	4643      	mov	r3, r8
 800d40c:	463a      	mov	r2, r7
 800d40e:	4628      	mov	r0, r5
 800d410:	47b0      	blx	r6
 800d412:	2800      	cmp	r0, #0
 800d414:	dc08      	bgt.n	800d428 <__sflush_r+0xfc>
 800d416:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800d41a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800d41e:	81a3      	strh	r3, [r4, #12]
 800d420:	f04f 30ff 	mov.w	r0, #4294967295
 800d424:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d428:	4407      	add	r7, r0
 800d42a:	eba8 0800 	sub.w	r8, r8, r0
 800d42e:	e7e7      	b.n	800d400 <__sflush_r+0xd4>
 800d430:	20400001 	.word	0x20400001

0800d434 <_fflush_r>:
 800d434:	b538      	push	{r3, r4, r5, lr}
 800d436:	690b      	ldr	r3, [r1, #16]
 800d438:	4605      	mov	r5, r0
 800d43a:	460c      	mov	r4, r1
 800d43c:	b913      	cbnz	r3, 800d444 <_fflush_r+0x10>
 800d43e:	2500      	movs	r5, #0
 800d440:	4628      	mov	r0, r5
 800d442:	bd38      	pop	{r3, r4, r5, pc}
 800d444:	b118      	cbz	r0, 800d44e <_fflush_r+0x1a>
 800d446:	6a03      	ldr	r3, [r0, #32]
 800d448:	b90b      	cbnz	r3, 800d44e <_fflush_r+0x1a>
 800d44a:	f7fe f987 	bl	800b75c <__sinit>
 800d44e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800d452:	2b00      	cmp	r3, #0
 800d454:	d0f3      	beq.n	800d43e <_fflush_r+0xa>
 800d456:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 800d458:	07d0      	lsls	r0, r2, #31
 800d45a:	d404      	bmi.n	800d466 <_fflush_r+0x32>
 800d45c:	0599      	lsls	r1, r3, #22
 800d45e:	d402      	bmi.n	800d466 <_fflush_r+0x32>
 800d460:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800d462:	f7fe fb28 	bl	800bab6 <__retarget_lock_acquire_recursive>
 800d466:	4628      	mov	r0, r5
 800d468:	4621      	mov	r1, r4
 800d46a:	f7ff ff5f 	bl	800d32c <__sflush_r>
 800d46e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800d470:	07da      	lsls	r2, r3, #31
 800d472:	4605      	mov	r5, r0
 800d474:	d4e4      	bmi.n	800d440 <_fflush_r+0xc>
 800d476:	89a3      	ldrh	r3, [r4, #12]
 800d478:	059b      	lsls	r3, r3, #22
 800d47a:	d4e1      	bmi.n	800d440 <_fflush_r+0xc>
 800d47c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800d47e:	f7fe fb1b 	bl	800bab8 <__retarget_lock_release_recursive>
 800d482:	e7dd      	b.n	800d440 <_fflush_r+0xc>

0800d484 <memmove>:
 800d484:	4288      	cmp	r0, r1
 800d486:	b510      	push	{r4, lr}
 800d488:	eb01 0402 	add.w	r4, r1, r2
 800d48c:	d902      	bls.n	800d494 <memmove+0x10>
 800d48e:	4284      	cmp	r4, r0
 800d490:	4623      	mov	r3, r4
 800d492:	d807      	bhi.n	800d4a4 <memmove+0x20>
 800d494:	1e43      	subs	r3, r0, #1
 800d496:	42a1      	cmp	r1, r4
 800d498:	d008      	beq.n	800d4ac <memmove+0x28>
 800d49a:	f811 2b01 	ldrb.w	r2, [r1], #1
 800d49e:	f803 2f01 	strb.w	r2, [r3, #1]!
 800d4a2:	e7f8      	b.n	800d496 <memmove+0x12>
 800d4a4:	4402      	add	r2, r0
 800d4a6:	4601      	mov	r1, r0
 800d4a8:	428a      	cmp	r2, r1
 800d4aa:	d100      	bne.n	800d4ae <memmove+0x2a>
 800d4ac:	bd10      	pop	{r4, pc}
 800d4ae:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800d4b2:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800d4b6:	e7f7      	b.n	800d4a8 <memmove+0x24>

0800d4b8 <_sbrk_r>:
 800d4b8:	b538      	push	{r3, r4, r5, lr}
 800d4ba:	4d06      	ldr	r5, [pc, #24]	@ (800d4d4 <_sbrk_r+0x1c>)
 800d4bc:	2300      	movs	r3, #0
 800d4be:	4604      	mov	r4, r0
 800d4c0:	4608      	mov	r0, r1
 800d4c2:	602b      	str	r3, [r5, #0]
 800d4c4:	f7f5 f8ac 	bl	8002620 <_sbrk>
 800d4c8:	1c43      	adds	r3, r0, #1
 800d4ca:	d102      	bne.n	800d4d2 <_sbrk_r+0x1a>
 800d4cc:	682b      	ldr	r3, [r5, #0]
 800d4ce:	b103      	cbz	r3, 800d4d2 <_sbrk_r+0x1a>
 800d4d0:	6023      	str	r3, [r4, #0]
 800d4d2:	bd38      	pop	{r3, r4, r5, pc}
 800d4d4:	20005000 	.word	0x20005000

0800d4d8 <__assert_func>:
 800d4d8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800d4da:	4614      	mov	r4, r2
 800d4dc:	461a      	mov	r2, r3
 800d4de:	4b09      	ldr	r3, [pc, #36]	@ (800d504 <__assert_func+0x2c>)
 800d4e0:	681b      	ldr	r3, [r3, #0]
 800d4e2:	4605      	mov	r5, r0
 800d4e4:	68d8      	ldr	r0, [r3, #12]
 800d4e6:	b14c      	cbz	r4, 800d4fc <__assert_func+0x24>
 800d4e8:	4b07      	ldr	r3, [pc, #28]	@ (800d508 <__assert_func+0x30>)
 800d4ea:	9100      	str	r1, [sp, #0]
 800d4ec:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800d4f0:	4906      	ldr	r1, [pc, #24]	@ (800d50c <__assert_func+0x34>)
 800d4f2:	462b      	mov	r3, r5
 800d4f4:	f000 f870 	bl	800d5d8 <fiprintf>
 800d4f8:	f000 f880 	bl	800d5fc <abort>
 800d4fc:	4b04      	ldr	r3, [pc, #16]	@ (800d510 <__assert_func+0x38>)
 800d4fe:	461c      	mov	r4, r3
 800d500:	e7f3      	b.n	800d4ea <__assert_func+0x12>
 800d502:	bf00      	nop
 800d504:	20000020 	.word	0x20000020
 800d508:	0800e43e 	.word	0x0800e43e
 800d50c:	0800e44b 	.word	0x0800e44b
 800d510:	0800e479 	.word	0x0800e479

0800d514 <_calloc_r>:
 800d514:	b570      	push	{r4, r5, r6, lr}
 800d516:	fba1 5402 	umull	r5, r4, r1, r2
 800d51a:	b934      	cbnz	r4, 800d52a <_calloc_r+0x16>
 800d51c:	4629      	mov	r1, r5
 800d51e:	f7ff f9a7 	bl	800c870 <_malloc_r>
 800d522:	4606      	mov	r6, r0
 800d524:	b928      	cbnz	r0, 800d532 <_calloc_r+0x1e>
 800d526:	4630      	mov	r0, r6
 800d528:	bd70      	pop	{r4, r5, r6, pc}
 800d52a:	220c      	movs	r2, #12
 800d52c:	6002      	str	r2, [r0, #0]
 800d52e:	2600      	movs	r6, #0
 800d530:	e7f9      	b.n	800d526 <_calloc_r+0x12>
 800d532:	462a      	mov	r2, r5
 800d534:	4621      	mov	r1, r4
 800d536:	f7fe f9e2 	bl	800b8fe <memset>
 800d53a:	e7f4      	b.n	800d526 <_calloc_r+0x12>

0800d53c <__ascii_mbtowc>:
 800d53c:	b082      	sub	sp, #8
 800d53e:	b901      	cbnz	r1, 800d542 <__ascii_mbtowc+0x6>
 800d540:	a901      	add	r1, sp, #4
 800d542:	b142      	cbz	r2, 800d556 <__ascii_mbtowc+0x1a>
 800d544:	b14b      	cbz	r3, 800d55a <__ascii_mbtowc+0x1e>
 800d546:	7813      	ldrb	r3, [r2, #0]
 800d548:	600b      	str	r3, [r1, #0]
 800d54a:	7812      	ldrb	r2, [r2, #0]
 800d54c:	1e10      	subs	r0, r2, #0
 800d54e:	bf18      	it	ne
 800d550:	2001      	movne	r0, #1
 800d552:	b002      	add	sp, #8
 800d554:	4770      	bx	lr
 800d556:	4610      	mov	r0, r2
 800d558:	e7fb      	b.n	800d552 <__ascii_mbtowc+0x16>
 800d55a:	f06f 0001 	mvn.w	r0, #1
 800d55e:	e7f8      	b.n	800d552 <__ascii_mbtowc+0x16>

0800d560 <_realloc_r>:
 800d560:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d564:	4607      	mov	r7, r0
 800d566:	4614      	mov	r4, r2
 800d568:	460d      	mov	r5, r1
 800d56a:	b921      	cbnz	r1, 800d576 <_realloc_r+0x16>
 800d56c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800d570:	4611      	mov	r1, r2
 800d572:	f7ff b97d 	b.w	800c870 <_malloc_r>
 800d576:	b92a      	cbnz	r2, 800d584 <_realloc_r+0x24>
 800d578:	f7ff f906 	bl	800c788 <_free_r>
 800d57c:	4625      	mov	r5, r4
 800d57e:	4628      	mov	r0, r5
 800d580:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d584:	f000 f841 	bl	800d60a <_malloc_usable_size_r>
 800d588:	4284      	cmp	r4, r0
 800d58a:	4606      	mov	r6, r0
 800d58c:	d802      	bhi.n	800d594 <_realloc_r+0x34>
 800d58e:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 800d592:	d8f4      	bhi.n	800d57e <_realloc_r+0x1e>
 800d594:	4621      	mov	r1, r4
 800d596:	4638      	mov	r0, r7
 800d598:	f7ff f96a 	bl	800c870 <_malloc_r>
 800d59c:	4680      	mov	r8, r0
 800d59e:	b908      	cbnz	r0, 800d5a4 <_realloc_r+0x44>
 800d5a0:	4645      	mov	r5, r8
 800d5a2:	e7ec      	b.n	800d57e <_realloc_r+0x1e>
 800d5a4:	42b4      	cmp	r4, r6
 800d5a6:	4622      	mov	r2, r4
 800d5a8:	4629      	mov	r1, r5
 800d5aa:	bf28      	it	cs
 800d5ac:	4632      	movcs	r2, r6
 800d5ae:	f7fe fa84 	bl	800baba <memcpy>
 800d5b2:	4629      	mov	r1, r5
 800d5b4:	4638      	mov	r0, r7
 800d5b6:	f7ff f8e7 	bl	800c788 <_free_r>
 800d5ba:	e7f1      	b.n	800d5a0 <_realloc_r+0x40>

0800d5bc <__ascii_wctomb>:
 800d5bc:	4603      	mov	r3, r0
 800d5be:	4608      	mov	r0, r1
 800d5c0:	b141      	cbz	r1, 800d5d4 <__ascii_wctomb+0x18>
 800d5c2:	2aff      	cmp	r2, #255	@ 0xff
 800d5c4:	d904      	bls.n	800d5d0 <__ascii_wctomb+0x14>
 800d5c6:	228a      	movs	r2, #138	@ 0x8a
 800d5c8:	601a      	str	r2, [r3, #0]
 800d5ca:	f04f 30ff 	mov.w	r0, #4294967295
 800d5ce:	4770      	bx	lr
 800d5d0:	700a      	strb	r2, [r1, #0]
 800d5d2:	2001      	movs	r0, #1
 800d5d4:	4770      	bx	lr
	...

0800d5d8 <fiprintf>:
 800d5d8:	b40e      	push	{r1, r2, r3}
 800d5da:	b503      	push	{r0, r1, lr}
 800d5dc:	4601      	mov	r1, r0
 800d5de:	ab03      	add	r3, sp, #12
 800d5e0:	4805      	ldr	r0, [pc, #20]	@ (800d5f8 <fiprintf+0x20>)
 800d5e2:	f853 2b04 	ldr.w	r2, [r3], #4
 800d5e6:	6800      	ldr	r0, [r0, #0]
 800d5e8:	9301      	str	r3, [sp, #4]
 800d5ea:	f000 f83f 	bl	800d66c <_vfiprintf_r>
 800d5ee:	b002      	add	sp, #8
 800d5f0:	f85d eb04 	ldr.w	lr, [sp], #4
 800d5f4:	b003      	add	sp, #12
 800d5f6:	4770      	bx	lr
 800d5f8:	20000020 	.word	0x20000020

0800d5fc <abort>:
 800d5fc:	b508      	push	{r3, lr}
 800d5fe:	2006      	movs	r0, #6
 800d600:	f000 fa08 	bl	800da14 <raise>
 800d604:	2001      	movs	r0, #1
 800d606:	f7f4 ff93 	bl	8002530 <_exit>

0800d60a <_malloc_usable_size_r>:
 800d60a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800d60e:	1f18      	subs	r0, r3, #4
 800d610:	2b00      	cmp	r3, #0
 800d612:	bfbc      	itt	lt
 800d614:	580b      	ldrlt	r3, [r1, r0]
 800d616:	18c0      	addlt	r0, r0, r3
 800d618:	4770      	bx	lr

0800d61a <__sfputc_r>:
 800d61a:	6893      	ldr	r3, [r2, #8]
 800d61c:	3b01      	subs	r3, #1
 800d61e:	2b00      	cmp	r3, #0
 800d620:	b410      	push	{r4}
 800d622:	6093      	str	r3, [r2, #8]
 800d624:	da08      	bge.n	800d638 <__sfputc_r+0x1e>
 800d626:	6994      	ldr	r4, [r2, #24]
 800d628:	42a3      	cmp	r3, r4
 800d62a:	db01      	blt.n	800d630 <__sfputc_r+0x16>
 800d62c:	290a      	cmp	r1, #10
 800d62e:	d103      	bne.n	800d638 <__sfputc_r+0x1e>
 800d630:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d634:	f000 b932 	b.w	800d89c <__swbuf_r>
 800d638:	6813      	ldr	r3, [r2, #0]
 800d63a:	1c58      	adds	r0, r3, #1
 800d63c:	6010      	str	r0, [r2, #0]
 800d63e:	7019      	strb	r1, [r3, #0]
 800d640:	4608      	mov	r0, r1
 800d642:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d646:	4770      	bx	lr

0800d648 <__sfputs_r>:
 800d648:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d64a:	4606      	mov	r6, r0
 800d64c:	460f      	mov	r7, r1
 800d64e:	4614      	mov	r4, r2
 800d650:	18d5      	adds	r5, r2, r3
 800d652:	42ac      	cmp	r4, r5
 800d654:	d101      	bne.n	800d65a <__sfputs_r+0x12>
 800d656:	2000      	movs	r0, #0
 800d658:	e007      	b.n	800d66a <__sfputs_r+0x22>
 800d65a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800d65e:	463a      	mov	r2, r7
 800d660:	4630      	mov	r0, r6
 800d662:	f7ff ffda 	bl	800d61a <__sfputc_r>
 800d666:	1c43      	adds	r3, r0, #1
 800d668:	d1f3      	bne.n	800d652 <__sfputs_r+0xa>
 800d66a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800d66c <_vfiprintf_r>:
 800d66c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d670:	460d      	mov	r5, r1
 800d672:	b09d      	sub	sp, #116	@ 0x74
 800d674:	4614      	mov	r4, r2
 800d676:	4698      	mov	r8, r3
 800d678:	4606      	mov	r6, r0
 800d67a:	b118      	cbz	r0, 800d684 <_vfiprintf_r+0x18>
 800d67c:	6a03      	ldr	r3, [r0, #32]
 800d67e:	b90b      	cbnz	r3, 800d684 <_vfiprintf_r+0x18>
 800d680:	f7fe f86c 	bl	800b75c <__sinit>
 800d684:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800d686:	07d9      	lsls	r1, r3, #31
 800d688:	d405      	bmi.n	800d696 <_vfiprintf_r+0x2a>
 800d68a:	89ab      	ldrh	r3, [r5, #12]
 800d68c:	059a      	lsls	r2, r3, #22
 800d68e:	d402      	bmi.n	800d696 <_vfiprintf_r+0x2a>
 800d690:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800d692:	f7fe fa10 	bl	800bab6 <__retarget_lock_acquire_recursive>
 800d696:	89ab      	ldrh	r3, [r5, #12]
 800d698:	071b      	lsls	r3, r3, #28
 800d69a:	d501      	bpl.n	800d6a0 <_vfiprintf_r+0x34>
 800d69c:	692b      	ldr	r3, [r5, #16]
 800d69e:	b99b      	cbnz	r3, 800d6c8 <_vfiprintf_r+0x5c>
 800d6a0:	4629      	mov	r1, r5
 800d6a2:	4630      	mov	r0, r6
 800d6a4:	f000 f938 	bl	800d918 <__swsetup_r>
 800d6a8:	b170      	cbz	r0, 800d6c8 <_vfiprintf_r+0x5c>
 800d6aa:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800d6ac:	07dc      	lsls	r4, r3, #31
 800d6ae:	d504      	bpl.n	800d6ba <_vfiprintf_r+0x4e>
 800d6b0:	f04f 30ff 	mov.w	r0, #4294967295
 800d6b4:	b01d      	add	sp, #116	@ 0x74
 800d6b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d6ba:	89ab      	ldrh	r3, [r5, #12]
 800d6bc:	0598      	lsls	r0, r3, #22
 800d6be:	d4f7      	bmi.n	800d6b0 <_vfiprintf_r+0x44>
 800d6c0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800d6c2:	f7fe f9f9 	bl	800bab8 <__retarget_lock_release_recursive>
 800d6c6:	e7f3      	b.n	800d6b0 <_vfiprintf_r+0x44>
 800d6c8:	2300      	movs	r3, #0
 800d6ca:	9309      	str	r3, [sp, #36]	@ 0x24
 800d6cc:	2320      	movs	r3, #32
 800d6ce:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800d6d2:	f8cd 800c 	str.w	r8, [sp, #12]
 800d6d6:	2330      	movs	r3, #48	@ 0x30
 800d6d8:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 800d888 <_vfiprintf_r+0x21c>
 800d6dc:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800d6e0:	f04f 0901 	mov.w	r9, #1
 800d6e4:	4623      	mov	r3, r4
 800d6e6:	469a      	mov	sl, r3
 800d6e8:	f813 2b01 	ldrb.w	r2, [r3], #1
 800d6ec:	b10a      	cbz	r2, 800d6f2 <_vfiprintf_r+0x86>
 800d6ee:	2a25      	cmp	r2, #37	@ 0x25
 800d6f0:	d1f9      	bne.n	800d6e6 <_vfiprintf_r+0x7a>
 800d6f2:	ebba 0b04 	subs.w	fp, sl, r4
 800d6f6:	d00b      	beq.n	800d710 <_vfiprintf_r+0xa4>
 800d6f8:	465b      	mov	r3, fp
 800d6fa:	4622      	mov	r2, r4
 800d6fc:	4629      	mov	r1, r5
 800d6fe:	4630      	mov	r0, r6
 800d700:	f7ff ffa2 	bl	800d648 <__sfputs_r>
 800d704:	3001      	adds	r0, #1
 800d706:	f000 80a7 	beq.w	800d858 <_vfiprintf_r+0x1ec>
 800d70a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800d70c:	445a      	add	r2, fp
 800d70e:	9209      	str	r2, [sp, #36]	@ 0x24
 800d710:	f89a 3000 	ldrb.w	r3, [sl]
 800d714:	2b00      	cmp	r3, #0
 800d716:	f000 809f 	beq.w	800d858 <_vfiprintf_r+0x1ec>
 800d71a:	2300      	movs	r3, #0
 800d71c:	f04f 32ff 	mov.w	r2, #4294967295
 800d720:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800d724:	f10a 0a01 	add.w	sl, sl, #1
 800d728:	9304      	str	r3, [sp, #16]
 800d72a:	9307      	str	r3, [sp, #28]
 800d72c:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800d730:	931a      	str	r3, [sp, #104]	@ 0x68
 800d732:	4654      	mov	r4, sl
 800d734:	2205      	movs	r2, #5
 800d736:	f814 1b01 	ldrb.w	r1, [r4], #1
 800d73a:	4853      	ldr	r0, [pc, #332]	@ (800d888 <_vfiprintf_r+0x21c>)
 800d73c:	f7f2 fd68 	bl	8000210 <memchr>
 800d740:	9a04      	ldr	r2, [sp, #16]
 800d742:	b9d8      	cbnz	r0, 800d77c <_vfiprintf_r+0x110>
 800d744:	06d1      	lsls	r1, r2, #27
 800d746:	bf44      	itt	mi
 800d748:	2320      	movmi	r3, #32
 800d74a:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800d74e:	0713      	lsls	r3, r2, #28
 800d750:	bf44      	itt	mi
 800d752:	232b      	movmi	r3, #43	@ 0x2b
 800d754:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800d758:	f89a 3000 	ldrb.w	r3, [sl]
 800d75c:	2b2a      	cmp	r3, #42	@ 0x2a
 800d75e:	d015      	beq.n	800d78c <_vfiprintf_r+0x120>
 800d760:	9a07      	ldr	r2, [sp, #28]
 800d762:	4654      	mov	r4, sl
 800d764:	2000      	movs	r0, #0
 800d766:	f04f 0c0a 	mov.w	ip, #10
 800d76a:	4621      	mov	r1, r4
 800d76c:	f811 3b01 	ldrb.w	r3, [r1], #1
 800d770:	3b30      	subs	r3, #48	@ 0x30
 800d772:	2b09      	cmp	r3, #9
 800d774:	d94b      	bls.n	800d80e <_vfiprintf_r+0x1a2>
 800d776:	b1b0      	cbz	r0, 800d7a6 <_vfiprintf_r+0x13a>
 800d778:	9207      	str	r2, [sp, #28]
 800d77a:	e014      	b.n	800d7a6 <_vfiprintf_r+0x13a>
 800d77c:	eba0 0308 	sub.w	r3, r0, r8
 800d780:	fa09 f303 	lsl.w	r3, r9, r3
 800d784:	4313      	orrs	r3, r2
 800d786:	9304      	str	r3, [sp, #16]
 800d788:	46a2      	mov	sl, r4
 800d78a:	e7d2      	b.n	800d732 <_vfiprintf_r+0xc6>
 800d78c:	9b03      	ldr	r3, [sp, #12]
 800d78e:	1d19      	adds	r1, r3, #4
 800d790:	681b      	ldr	r3, [r3, #0]
 800d792:	9103      	str	r1, [sp, #12]
 800d794:	2b00      	cmp	r3, #0
 800d796:	bfbb      	ittet	lt
 800d798:	425b      	neglt	r3, r3
 800d79a:	f042 0202 	orrlt.w	r2, r2, #2
 800d79e:	9307      	strge	r3, [sp, #28]
 800d7a0:	9307      	strlt	r3, [sp, #28]
 800d7a2:	bfb8      	it	lt
 800d7a4:	9204      	strlt	r2, [sp, #16]
 800d7a6:	7823      	ldrb	r3, [r4, #0]
 800d7a8:	2b2e      	cmp	r3, #46	@ 0x2e
 800d7aa:	d10a      	bne.n	800d7c2 <_vfiprintf_r+0x156>
 800d7ac:	7863      	ldrb	r3, [r4, #1]
 800d7ae:	2b2a      	cmp	r3, #42	@ 0x2a
 800d7b0:	d132      	bne.n	800d818 <_vfiprintf_r+0x1ac>
 800d7b2:	9b03      	ldr	r3, [sp, #12]
 800d7b4:	1d1a      	adds	r2, r3, #4
 800d7b6:	681b      	ldr	r3, [r3, #0]
 800d7b8:	9203      	str	r2, [sp, #12]
 800d7ba:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 800d7be:	3402      	adds	r4, #2
 800d7c0:	9305      	str	r3, [sp, #20]
 800d7c2:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 800d898 <_vfiprintf_r+0x22c>
 800d7c6:	7821      	ldrb	r1, [r4, #0]
 800d7c8:	2203      	movs	r2, #3
 800d7ca:	4650      	mov	r0, sl
 800d7cc:	f7f2 fd20 	bl	8000210 <memchr>
 800d7d0:	b138      	cbz	r0, 800d7e2 <_vfiprintf_r+0x176>
 800d7d2:	9b04      	ldr	r3, [sp, #16]
 800d7d4:	eba0 000a 	sub.w	r0, r0, sl
 800d7d8:	2240      	movs	r2, #64	@ 0x40
 800d7da:	4082      	lsls	r2, r0
 800d7dc:	4313      	orrs	r3, r2
 800d7de:	3401      	adds	r4, #1
 800d7e0:	9304      	str	r3, [sp, #16]
 800d7e2:	f814 1b01 	ldrb.w	r1, [r4], #1
 800d7e6:	4829      	ldr	r0, [pc, #164]	@ (800d88c <_vfiprintf_r+0x220>)
 800d7e8:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 800d7ec:	2206      	movs	r2, #6
 800d7ee:	f7f2 fd0f 	bl	8000210 <memchr>
 800d7f2:	2800      	cmp	r0, #0
 800d7f4:	d03f      	beq.n	800d876 <_vfiprintf_r+0x20a>
 800d7f6:	4b26      	ldr	r3, [pc, #152]	@ (800d890 <_vfiprintf_r+0x224>)
 800d7f8:	bb1b      	cbnz	r3, 800d842 <_vfiprintf_r+0x1d6>
 800d7fa:	9b03      	ldr	r3, [sp, #12]
 800d7fc:	3307      	adds	r3, #7
 800d7fe:	f023 0307 	bic.w	r3, r3, #7
 800d802:	3308      	adds	r3, #8
 800d804:	9303      	str	r3, [sp, #12]
 800d806:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800d808:	443b      	add	r3, r7
 800d80a:	9309      	str	r3, [sp, #36]	@ 0x24
 800d80c:	e76a      	b.n	800d6e4 <_vfiprintf_r+0x78>
 800d80e:	fb0c 3202 	mla	r2, ip, r2, r3
 800d812:	460c      	mov	r4, r1
 800d814:	2001      	movs	r0, #1
 800d816:	e7a8      	b.n	800d76a <_vfiprintf_r+0xfe>
 800d818:	2300      	movs	r3, #0
 800d81a:	3401      	adds	r4, #1
 800d81c:	9305      	str	r3, [sp, #20]
 800d81e:	4619      	mov	r1, r3
 800d820:	f04f 0c0a 	mov.w	ip, #10
 800d824:	4620      	mov	r0, r4
 800d826:	f810 2b01 	ldrb.w	r2, [r0], #1
 800d82a:	3a30      	subs	r2, #48	@ 0x30
 800d82c:	2a09      	cmp	r2, #9
 800d82e:	d903      	bls.n	800d838 <_vfiprintf_r+0x1cc>
 800d830:	2b00      	cmp	r3, #0
 800d832:	d0c6      	beq.n	800d7c2 <_vfiprintf_r+0x156>
 800d834:	9105      	str	r1, [sp, #20]
 800d836:	e7c4      	b.n	800d7c2 <_vfiprintf_r+0x156>
 800d838:	fb0c 2101 	mla	r1, ip, r1, r2
 800d83c:	4604      	mov	r4, r0
 800d83e:	2301      	movs	r3, #1
 800d840:	e7f0      	b.n	800d824 <_vfiprintf_r+0x1b8>
 800d842:	ab03      	add	r3, sp, #12
 800d844:	9300      	str	r3, [sp, #0]
 800d846:	462a      	mov	r2, r5
 800d848:	4b12      	ldr	r3, [pc, #72]	@ (800d894 <_vfiprintf_r+0x228>)
 800d84a:	a904      	add	r1, sp, #16
 800d84c:	4630      	mov	r0, r6
 800d84e:	f7fd fb43 	bl	800aed8 <_printf_float>
 800d852:	4607      	mov	r7, r0
 800d854:	1c78      	adds	r0, r7, #1
 800d856:	d1d6      	bne.n	800d806 <_vfiprintf_r+0x19a>
 800d858:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800d85a:	07d9      	lsls	r1, r3, #31
 800d85c:	d405      	bmi.n	800d86a <_vfiprintf_r+0x1fe>
 800d85e:	89ab      	ldrh	r3, [r5, #12]
 800d860:	059a      	lsls	r2, r3, #22
 800d862:	d402      	bmi.n	800d86a <_vfiprintf_r+0x1fe>
 800d864:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800d866:	f7fe f927 	bl	800bab8 <__retarget_lock_release_recursive>
 800d86a:	89ab      	ldrh	r3, [r5, #12]
 800d86c:	065b      	lsls	r3, r3, #25
 800d86e:	f53f af1f 	bmi.w	800d6b0 <_vfiprintf_r+0x44>
 800d872:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800d874:	e71e      	b.n	800d6b4 <_vfiprintf_r+0x48>
 800d876:	ab03      	add	r3, sp, #12
 800d878:	9300      	str	r3, [sp, #0]
 800d87a:	462a      	mov	r2, r5
 800d87c:	4b05      	ldr	r3, [pc, #20]	@ (800d894 <_vfiprintf_r+0x228>)
 800d87e:	a904      	add	r1, sp, #16
 800d880:	4630      	mov	r0, r6
 800d882:	f7fd fdc1 	bl	800b408 <_printf_i>
 800d886:	e7e4      	b.n	800d852 <_vfiprintf_r+0x1e6>
 800d888:	0800e423 	.word	0x0800e423
 800d88c:	0800e42d 	.word	0x0800e42d
 800d890:	0800aed9 	.word	0x0800aed9
 800d894:	0800d649 	.word	0x0800d649
 800d898:	0800e429 	.word	0x0800e429

0800d89c <__swbuf_r>:
 800d89c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d89e:	460e      	mov	r6, r1
 800d8a0:	4614      	mov	r4, r2
 800d8a2:	4605      	mov	r5, r0
 800d8a4:	b118      	cbz	r0, 800d8ae <__swbuf_r+0x12>
 800d8a6:	6a03      	ldr	r3, [r0, #32]
 800d8a8:	b90b      	cbnz	r3, 800d8ae <__swbuf_r+0x12>
 800d8aa:	f7fd ff57 	bl	800b75c <__sinit>
 800d8ae:	69a3      	ldr	r3, [r4, #24]
 800d8b0:	60a3      	str	r3, [r4, #8]
 800d8b2:	89a3      	ldrh	r3, [r4, #12]
 800d8b4:	071a      	lsls	r2, r3, #28
 800d8b6:	d501      	bpl.n	800d8bc <__swbuf_r+0x20>
 800d8b8:	6923      	ldr	r3, [r4, #16]
 800d8ba:	b943      	cbnz	r3, 800d8ce <__swbuf_r+0x32>
 800d8bc:	4621      	mov	r1, r4
 800d8be:	4628      	mov	r0, r5
 800d8c0:	f000 f82a 	bl	800d918 <__swsetup_r>
 800d8c4:	b118      	cbz	r0, 800d8ce <__swbuf_r+0x32>
 800d8c6:	f04f 37ff 	mov.w	r7, #4294967295
 800d8ca:	4638      	mov	r0, r7
 800d8cc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d8ce:	6823      	ldr	r3, [r4, #0]
 800d8d0:	6922      	ldr	r2, [r4, #16]
 800d8d2:	1a98      	subs	r0, r3, r2
 800d8d4:	6963      	ldr	r3, [r4, #20]
 800d8d6:	b2f6      	uxtb	r6, r6
 800d8d8:	4283      	cmp	r3, r0
 800d8da:	4637      	mov	r7, r6
 800d8dc:	dc05      	bgt.n	800d8ea <__swbuf_r+0x4e>
 800d8de:	4621      	mov	r1, r4
 800d8e0:	4628      	mov	r0, r5
 800d8e2:	f7ff fda7 	bl	800d434 <_fflush_r>
 800d8e6:	2800      	cmp	r0, #0
 800d8e8:	d1ed      	bne.n	800d8c6 <__swbuf_r+0x2a>
 800d8ea:	68a3      	ldr	r3, [r4, #8]
 800d8ec:	3b01      	subs	r3, #1
 800d8ee:	60a3      	str	r3, [r4, #8]
 800d8f0:	6823      	ldr	r3, [r4, #0]
 800d8f2:	1c5a      	adds	r2, r3, #1
 800d8f4:	6022      	str	r2, [r4, #0]
 800d8f6:	701e      	strb	r6, [r3, #0]
 800d8f8:	6962      	ldr	r2, [r4, #20]
 800d8fa:	1c43      	adds	r3, r0, #1
 800d8fc:	429a      	cmp	r2, r3
 800d8fe:	d004      	beq.n	800d90a <__swbuf_r+0x6e>
 800d900:	89a3      	ldrh	r3, [r4, #12]
 800d902:	07db      	lsls	r3, r3, #31
 800d904:	d5e1      	bpl.n	800d8ca <__swbuf_r+0x2e>
 800d906:	2e0a      	cmp	r6, #10
 800d908:	d1df      	bne.n	800d8ca <__swbuf_r+0x2e>
 800d90a:	4621      	mov	r1, r4
 800d90c:	4628      	mov	r0, r5
 800d90e:	f7ff fd91 	bl	800d434 <_fflush_r>
 800d912:	2800      	cmp	r0, #0
 800d914:	d0d9      	beq.n	800d8ca <__swbuf_r+0x2e>
 800d916:	e7d6      	b.n	800d8c6 <__swbuf_r+0x2a>

0800d918 <__swsetup_r>:
 800d918:	b538      	push	{r3, r4, r5, lr}
 800d91a:	4b29      	ldr	r3, [pc, #164]	@ (800d9c0 <__swsetup_r+0xa8>)
 800d91c:	4605      	mov	r5, r0
 800d91e:	6818      	ldr	r0, [r3, #0]
 800d920:	460c      	mov	r4, r1
 800d922:	b118      	cbz	r0, 800d92c <__swsetup_r+0x14>
 800d924:	6a03      	ldr	r3, [r0, #32]
 800d926:	b90b      	cbnz	r3, 800d92c <__swsetup_r+0x14>
 800d928:	f7fd ff18 	bl	800b75c <__sinit>
 800d92c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800d930:	0719      	lsls	r1, r3, #28
 800d932:	d422      	bmi.n	800d97a <__swsetup_r+0x62>
 800d934:	06da      	lsls	r2, r3, #27
 800d936:	d407      	bmi.n	800d948 <__swsetup_r+0x30>
 800d938:	2209      	movs	r2, #9
 800d93a:	602a      	str	r2, [r5, #0]
 800d93c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800d940:	81a3      	strh	r3, [r4, #12]
 800d942:	f04f 30ff 	mov.w	r0, #4294967295
 800d946:	e033      	b.n	800d9b0 <__swsetup_r+0x98>
 800d948:	0758      	lsls	r0, r3, #29
 800d94a:	d512      	bpl.n	800d972 <__swsetup_r+0x5a>
 800d94c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800d94e:	b141      	cbz	r1, 800d962 <__swsetup_r+0x4a>
 800d950:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800d954:	4299      	cmp	r1, r3
 800d956:	d002      	beq.n	800d95e <__swsetup_r+0x46>
 800d958:	4628      	mov	r0, r5
 800d95a:	f7fe ff15 	bl	800c788 <_free_r>
 800d95e:	2300      	movs	r3, #0
 800d960:	6363      	str	r3, [r4, #52]	@ 0x34
 800d962:	89a3      	ldrh	r3, [r4, #12]
 800d964:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 800d968:	81a3      	strh	r3, [r4, #12]
 800d96a:	2300      	movs	r3, #0
 800d96c:	6063      	str	r3, [r4, #4]
 800d96e:	6923      	ldr	r3, [r4, #16]
 800d970:	6023      	str	r3, [r4, #0]
 800d972:	89a3      	ldrh	r3, [r4, #12]
 800d974:	f043 0308 	orr.w	r3, r3, #8
 800d978:	81a3      	strh	r3, [r4, #12]
 800d97a:	6923      	ldr	r3, [r4, #16]
 800d97c:	b94b      	cbnz	r3, 800d992 <__swsetup_r+0x7a>
 800d97e:	89a3      	ldrh	r3, [r4, #12]
 800d980:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 800d984:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800d988:	d003      	beq.n	800d992 <__swsetup_r+0x7a>
 800d98a:	4621      	mov	r1, r4
 800d98c:	4628      	mov	r0, r5
 800d98e:	f000 f883 	bl	800da98 <__smakebuf_r>
 800d992:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800d996:	f013 0201 	ands.w	r2, r3, #1
 800d99a:	d00a      	beq.n	800d9b2 <__swsetup_r+0x9a>
 800d99c:	2200      	movs	r2, #0
 800d99e:	60a2      	str	r2, [r4, #8]
 800d9a0:	6962      	ldr	r2, [r4, #20]
 800d9a2:	4252      	negs	r2, r2
 800d9a4:	61a2      	str	r2, [r4, #24]
 800d9a6:	6922      	ldr	r2, [r4, #16]
 800d9a8:	b942      	cbnz	r2, 800d9bc <__swsetup_r+0xa4>
 800d9aa:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 800d9ae:	d1c5      	bne.n	800d93c <__swsetup_r+0x24>
 800d9b0:	bd38      	pop	{r3, r4, r5, pc}
 800d9b2:	0799      	lsls	r1, r3, #30
 800d9b4:	bf58      	it	pl
 800d9b6:	6962      	ldrpl	r2, [r4, #20]
 800d9b8:	60a2      	str	r2, [r4, #8]
 800d9ba:	e7f4      	b.n	800d9a6 <__swsetup_r+0x8e>
 800d9bc:	2000      	movs	r0, #0
 800d9be:	e7f7      	b.n	800d9b0 <__swsetup_r+0x98>
 800d9c0:	20000020 	.word	0x20000020

0800d9c4 <_raise_r>:
 800d9c4:	291f      	cmp	r1, #31
 800d9c6:	b538      	push	{r3, r4, r5, lr}
 800d9c8:	4605      	mov	r5, r0
 800d9ca:	460c      	mov	r4, r1
 800d9cc:	d904      	bls.n	800d9d8 <_raise_r+0x14>
 800d9ce:	2316      	movs	r3, #22
 800d9d0:	6003      	str	r3, [r0, #0]
 800d9d2:	f04f 30ff 	mov.w	r0, #4294967295
 800d9d6:	bd38      	pop	{r3, r4, r5, pc}
 800d9d8:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 800d9da:	b112      	cbz	r2, 800d9e2 <_raise_r+0x1e>
 800d9dc:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800d9e0:	b94b      	cbnz	r3, 800d9f6 <_raise_r+0x32>
 800d9e2:	4628      	mov	r0, r5
 800d9e4:	f000 f830 	bl	800da48 <_getpid_r>
 800d9e8:	4622      	mov	r2, r4
 800d9ea:	4601      	mov	r1, r0
 800d9ec:	4628      	mov	r0, r5
 800d9ee:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d9f2:	f000 b817 	b.w	800da24 <_kill_r>
 800d9f6:	2b01      	cmp	r3, #1
 800d9f8:	d00a      	beq.n	800da10 <_raise_r+0x4c>
 800d9fa:	1c59      	adds	r1, r3, #1
 800d9fc:	d103      	bne.n	800da06 <_raise_r+0x42>
 800d9fe:	2316      	movs	r3, #22
 800da00:	6003      	str	r3, [r0, #0]
 800da02:	2001      	movs	r0, #1
 800da04:	e7e7      	b.n	800d9d6 <_raise_r+0x12>
 800da06:	2100      	movs	r1, #0
 800da08:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 800da0c:	4620      	mov	r0, r4
 800da0e:	4798      	blx	r3
 800da10:	2000      	movs	r0, #0
 800da12:	e7e0      	b.n	800d9d6 <_raise_r+0x12>

0800da14 <raise>:
 800da14:	4b02      	ldr	r3, [pc, #8]	@ (800da20 <raise+0xc>)
 800da16:	4601      	mov	r1, r0
 800da18:	6818      	ldr	r0, [r3, #0]
 800da1a:	f7ff bfd3 	b.w	800d9c4 <_raise_r>
 800da1e:	bf00      	nop
 800da20:	20000020 	.word	0x20000020

0800da24 <_kill_r>:
 800da24:	b538      	push	{r3, r4, r5, lr}
 800da26:	4d07      	ldr	r5, [pc, #28]	@ (800da44 <_kill_r+0x20>)
 800da28:	2300      	movs	r3, #0
 800da2a:	4604      	mov	r4, r0
 800da2c:	4608      	mov	r0, r1
 800da2e:	4611      	mov	r1, r2
 800da30:	602b      	str	r3, [r5, #0]
 800da32:	f7f4 fd6d 	bl	8002510 <_kill>
 800da36:	1c43      	adds	r3, r0, #1
 800da38:	d102      	bne.n	800da40 <_kill_r+0x1c>
 800da3a:	682b      	ldr	r3, [r5, #0]
 800da3c:	b103      	cbz	r3, 800da40 <_kill_r+0x1c>
 800da3e:	6023      	str	r3, [r4, #0]
 800da40:	bd38      	pop	{r3, r4, r5, pc}
 800da42:	bf00      	nop
 800da44:	20005000 	.word	0x20005000

0800da48 <_getpid_r>:
 800da48:	f7f4 bd5a 	b.w	8002500 <_getpid>

0800da4c <__swhatbuf_r>:
 800da4c:	b570      	push	{r4, r5, r6, lr}
 800da4e:	460c      	mov	r4, r1
 800da50:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800da54:	2900      	cmp	r1, #0
 800da56:	b096      	sub	sp, #88	@ 0x58
 800da58:	4615      	mov	r5, r2
 800da5a:	461e      	mov	r6, r3
 800da5c:	da0d      	bge.n	800da7a <__swhatbuf_r+0x2e>
 800da5e:	89a3      	ldrh	r3, [r4, #12]
 800da60:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800da64:	f04f 0100 	mov.w	r1, #0
 800da68:	bf14      	ite	ne
 800da6a:	2340      	movne	r3, #64	@ 0x40
 800da6c:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 800da70:	2000      	movs	r0, #0
 800da72:	6031      	str	r1, [r6, #0]
 800da74:	602b      	str	r3, [r5, #0]
 800da76:	b016      	add	sp, #88	@ 0x58
 800da78:	bd70      	pop	{r4, r5, r6, pc}
 800da7a:	466a      	mov	r2, sp
 800da7c:	f000 f848 	bl	800db10 <_fstat_r>
 800da80:	2800      	cmp	r0, #0
 800da82:	dbec      	blt.n	800da5e <__swhatbuf_r+0x12>
 800da84:	9901      	ldr	r1, [sp, #4]
 800da86:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 800da8a:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 800da8e:	4259      	negs	r1, r3
 800da90:	4159      	adcs	r1, r3
 800da92:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800da96:	e7eb      	b.n	800da70 <__swhatbuf_r+0x24>

0800da98 <__smakebuf_r>:
 800da98:	898b      	ldrh	r3, [r1, #12]
 800da9a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800da9c:	079d      	lsls	r5, r3, #30
 800da9e:	4606      	mov	r6, r0
 800daa0:	460c      	mov	r4, r1
 800daa2:	d507      	bpl.n	800dab4 <__smakebuf_r+0x1c>
 800daa4:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 800daa8:	6023      	str	r3, [r4, #0]
 800daaa:	6123      	str	r3, [r4, #16]
 800daac:	2301      	movs	r3, #1
 800daae:	6163      	str	r3, [r4, #20]
 800dab0:	b003      	add	sp, #12
 800dab2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800dab4:	ab01      	add	r3, sp, #4
 800dab6:	466a      	mov	r2, sp
 800dab8:	f7ff ffc8 	bl	800da4c <__swhatbuf_r>
 800dabc:	9f00      	ldr	r7, [sp, #0]
 800dabe:	4605      	mov	r5, r0
 800dac0:	4639      	mov	r1, r7
 800dac2:	4630      	mov	r0, r6
 800dac4:	f7fe fed4 	bl	800c870 <_malloc_r>
 800dac8:	b948      	cbnz	r0, 800dade <__smakebuf_r+0x46>
 800daca:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800dace:	059a      	lsls	r2, r3, #22
 800dad0:	d4ee      	bmi.n	800dab0 <__smakebuf_r+0x18>
 800dad2:	f023 0303 	bic.w	r3, r3, #3
 800dad6:	f043 0302 	orr.w	r3, r3, #2
 800dada:	81a3      	strh	r3, [r4, #12]
 800dadc:	e7e2      	b.n	800daa4 <__smakebuf_r+0xc>
 800dade:	89a3      	ldrh	r3, [r4, #12]
 800dae0:	6020      	str	r0, [r4, #0]
 800dae2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800dae6:	81a3      	strh	r3, [r4, #12]
 800dae8:	9b01      	ldr	r3, [sp, #4]
 800daea:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800daee:	b15b      	cbz	r3, 800db08 <__smakebuf_r+0x70>
 800daf0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800daf4:	4630      	mov	r0, r6
 800daf6:	f000 f81d 	bl	800db34 <_isatty_r>
 800dafa:	b128      	cbz	r0, 800db08 <__smakebuf_r+0x70>
 800dafc:	89a3      	ldrh	r3, [r4, #12]
 800dafe:	f023 0303 	bic.w	r3, r3, #3
 800db02:	f043 0301 	orr.w	r3, r3, #1
 800db06:	81a3      	strh	r3, [r4, #12]
 800db08:	89a3      	ldrh	r3, [r4, #12]
 800db0a:	431d      	orrs	r5, r3
 800db0c:	81a5      	strh	r5, [r4, #12]
 800db0e:	e7cf      	b.n	800dab0 <__smakebuf_r+0x18>

0800db10 <_fstat_r>:
 800db10:	b538      	push	{r3, r4, r5, lr}
 800db12:	4d07      	ldr	r5, [pc, #28]	@ (800db30 <_fstat_r+0x20>)
 800db14:	2300      	movs	r3, #0
 800db16:	4604      	mov	r4, r0
 800db18:	4608      	mov	r0, r1
 800db1a:	4611      	mov	r1, r2
 800db1c:	602b      	str	r3, [r5, #0]
 800db1e:	f7f4 fd57 	bl	80025d0 <_fstat>
 800db22:	1c43      	adds	r3, r0, #1
 800db24:	d102      	bne.n	800db2c <_fstat_r+0x1c>
 800db26:	682b      	ldr	r3, [r5, #0]
 800db28:	b103      	cbz	r3, 800db2c <_fstat_r+0x1c>
 800db2a:	6023      	str	r3, [r4, #0]
 800db2c:	bd38      	pop	{r3, r4, r5, pc}
 800db2e:	bf00      	nop
 800db30:	20005000 	.word	0x20005000

0800db34 <_isatty_r>:
 800db34:	b538      	push	{r3, r4, r5, lr}
 800db36:	4d06      	ldr	r5, [pc, #24]	@ (800db50 <_isatty_r+0x1c>)
 800db38:	2300      	movs	r3, #0
 800db3a:	4604      	mov	r4, r0
 800db3c:	4608      	mov	r0, r1
 800db3e:	602b      	str	r3, [r5, #0]
 800db40:	f7f4 fd56 	bl	80025f0 <_isatty>
 800db44:	1c43      	adds	r3, r0, #1
 800db46:	d102      	bne.n	800db4e <_isatty_r+0x1a>
 800db48:	682b      	ldr	r3, [r5, #0]
 800db4a:	b103      	cbz	r3, 800db4e <_isatty_r+0x1a>
 800db4c:	6023      	str	r3, [r4, #0]
 800db4e:	bd38      	pop	{r3, r4, r5, pc}
 800db50:	20005000 	.word	0x20005000

0800db54 <atan2f>:
 800db54:	f000 b822 	b.w	800db9c <__ieee754_atan2f>

0800db58 <sqrtf>:
 800db58:	b508      	push	{r3, lr}
 800db5a:	ed2d 8b02 	vpush	{d8}
 800db5e:	eeb0 8a40 	vmov.f32	s16, s0
 800db62:	f000 f817 	bl	800db94 <__ieee754_sqrtf>
 800db66:	eeb4 8a48 	vcmp.f32	s16, s16
 800db6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800db6e:	d60c      	bvs.n	800db8a <sqrtf+0x32>
 800db70:	eddf 8a07 	vldr	s17, [pc, #28]	@ 800db90 <sqrtf+0x38>
 800db74:	eeb4 8ae8 	vcmpe.f32	s16, s17
 800db78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800db7c:	d505      	bpl.n	800db8a <sqrtf+0x32>
 800db7e:	f7fd ff6f 	bl	800ba60 <__errno>
 800db82:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 800db86:	2321      	movs	r3, #33	@ 0x21
 800db88:	6003      	str	r3, [r0, #0]
 800db8a:	ecbd 8b02 	vpop	{d8}
 800db8e:	bd08      	pop	{r3, pc}
 800db90:	00000000 	.word	0x00000000

0800db94 <__ieee754_sqrtf>:
 800db94:	eeb1 0ac0 	vsqrt.f32	s0, s0
 800db98:	4770      	bx	lr
	...

0800db9c <__ieee754_atan2f>:
 800db9c:	ee10 2a90 	vmov	r2, s1
 800dba0:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
 800dba4:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 800dba8:	b510      	push	{r4, lr}
 800dbaa:	eef0 7a40 	vmov.f32	s15, s0
 800dbae:	d806      	bhi.n	800dbbe <__ieee754_atan2f+0x22>
 800dbb0:	ee10 0a10 	vmov	r0, s0
 800dbb4:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
 800dbb8:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 800dbbc:	d904      	bls.n	800dbc8 <__ieee754_atan2f+0x2c>
 800dbbe:	ee77 7aa0 	vadd.f32	s15, s15, s1
 800dbc2:	eeb0 0a67 	vmov.f32	s0, s15
 800dbc6:	bd10      	pop	{r4, pc}
 800dbc8:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
 800dbcc:	d103      	bne.n	800dbd6 <__ieee754_atan2f+0x3a>
 800dbce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800dbd2:	f000 b883 	b.w	800dcdc <atanf>
 800dbd6:	1794      	asrs	r4, r2, #30
 800dbd8:	f004 0402 	and.w	r4, r4, #2
 800dbdc:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
 800dbe0:	b943      	cbnz	r3, 800dbf4 <__ieee754_atan2f+0x58>
 800dbe2:	2c02      	cmp	r4, #2
 800dbe4:	d05e      	beq.n	800dca4 <__ieee754_atan2f+0x108>
 800dbe6:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 800dcb8 <__ieee754_atan2f+0x11c>
 800dbea:	2c03      	cmp	r4, #3
 800dbec:	bf08      	it	eq
 800dbee:	eef0 7a47 	vmoveq.f32	s15, s14
 800dbf2:	e7e6      	b.n	800dbc2 <__ieee754_atan2f+0x26>
 800dbf4:	b941      	cbnz	r1, 800dc08 <__ieee754_atan2f+0x6c>
 800dbf6:	eddf 7a31 	vldr	s15, [pc, #196]	@ 800dcbc <__ieee754_atan2f+0x120>
 800dbfa:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 800dcc0 <__ieee754_atan2f+0x124>
 800dbfe:	2800      	cmp	r0, #0
 800dc00:	bfa8      	it	ge
 800dc02:	eef0 7a47 	vmovge.f32	s15, s14
 800dc06:	e7dc      	b.n	800dbc2 <__ieee754_atan2f+0x26>
 800dc08:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 800dc0c:	d110      	bne.n	800dc30 <__ieee754_atan2f+0x94>
 800dc0e:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 800dc12:	f104 34ff 	add.w	r4, r4, #4294967295
 800dc16:	d107      	bne.n	800dc28 <__ieee754_atan2f+0x8c>
 800dc18:	2c02      	cmp	r4, #2
 800dc1a:	d846      	bhi.n	800dcaa <__ieee754_atan2f+0x10e>
 800dc1c:	4b29      	ldr	r3, [pc, #164]	@ (800dcc4 <__ieee754_atan2f+0x128>)
 800dc1e:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 800dc22:	edd3 7a00 	vldr	s15, [r3]
 800dc26:	e7cc      	b.n	800dbc2 <__ieee754_atan2f+0x26>
 800dc28:	2c02      	cmp	r4, #2
 800dc2a:	d841      	bhi.n	800dcb0 <__ieee754_atan2f+0x114>
 800dc2c:	4b26      	ldr	r3, [pc, #152]	@ (800dcc8 <__ieee754_atan2f+0x12c>)
 800dc2e:	e7f6      	b.n	800dc1e <__ieee754_atan2f+0x82>
 800dc30:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 800dc34:	d0df      	beq.n	800dbf6 <__ieee754_atan2f+0x5a>
 800dc36:	1a5b      	subs	r3, r3, r1
 800dc38:	f1b3 5ff4 	cmp.w	r3, #511705088	@ 0x1e800000
 800dc3c:	ea4f 51e3 	mov.w	r1, r3, asr #23
 800dc40:	da1a      	bge.n	800dc78 <__ieee754_atan2f+0xdc>
 800dc42:	2a00      	cmp	r2, #0
 800dc44:	da01      	bge.n	800dc4a <__ieee754_atan2f+0xae>
 800dc46:	313c      	adds	r1, #60	@ 0x3c
 800dc48:	db19      	blt.n	800dc7e <__ieee754_atan2f+0xe2>
 800dc4a:	ee87 0aa0 	vdiv.f32	s0, s15, s1
 800dc4e:	f000 f919 	bl	800de84 <fabsf>
 800dc52:	f000 f843 	bl	800dcdc <atanf>
 800dc56:	eef0 7a40 	vmov.f32	s15, s0
 800dc5a:	2c01      	cmp	r4, #1
 800dc5c:	d012      	beq.n	800dc84 <__ieee754_atan2f+0xe8>
 800dc5e:	2c02      	cmp	r4, #2
 800dc60:	d017      	beq.n	800dc92 <__ieee754_atan2f+0xf6>
 800dc62:	2c00      	cmp	r4, #0
 800dc64:	d0ad      	beq.n	800dbc2 <__ieee754_atan2f+0x26>
 800dc66:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 800dccc <__ieee754_atan2f+0x130>
 800dc6a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800dc6e:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 800dcd0 <__ieee754_atan2f+0x134>
 800dc72:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800dc76:	e7a4      	b.n	800dbc2 <__ieee754_atan2f+0x26>
 800dc78:	eddf 7a11 	vldr	s15, [pc, #68]	@ 800dcc0 <__ieee754_atan2f+0x124>
 800dc7c:	e7ed      	b.n	800dc5a <__ieee754_atan2f+0xbe>
 800dc7e:	eddf 7a15 	vldr	s15, [pc, #84]	@ 800dcd4 <__ieee754_atan2f+0x138>
 800dc82:	e7ea      	b.n	800dc5a <__ieee754_atan2f+0xbe>
 800dc84:	ee17 3a90 	vmov	r3, s15
 800dc88:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 800dc8c:	ee07 3a90 	vmov	s15, r3
 800dc90:	e797      	b.n	800dbc2 <__ieee754_atan2f+0x26>
 800dc92:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 800dccc <__ieee754_atan2f+0x130>
 800dc96:	ee77 7a87 	vadd.f32	s15, s15, s14
 800dc9a:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 800dcd0 <__ieee754_atan2f+0x134>
 800dc9e:	ee77 7a67 	vsub.f32	s15, s14, s15
 800dca2:	e78e      	b.n	800dbc2 <__ieee754_atan2f+0x26>
 800dca4:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 800dcd0 <__ieee754_atan2f+0x134>
 800dca8:	e78b      	b.n	800dbc2 <__ieee754_atan2f+0x26>
 800dcaa:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 800dcd8 <__ieee754_atan2f+0x13c>
 800dcae:	e788      	b.n	800dbc2 <__ieee754_atan2f+0x26>
 800dcb0:	eddf 7a08 	vldr	s15, [pc, #32]	@ 800dcd4 <__ieee754_atan2f+0x138>
 800dcb4:	e785      	b.n	800dbc2 <__ieee754_atan2f+0x26>
 800dcb6:	bf00      	nop
 800dcb8:	c0490fdb 	.word	0xc0490fdb
 800dcbc:	bfc90fdb 	.word	0xbfc90fdb
 800dcc0:	3fc90fdb 	.word	0x3fc90fdb
 800dcc4:	0800e584 	.word	0x0800e584
 800dcc8:	0800e578 	.word	0x0800e578
 800dccc:	33bbbd2e 	.word	0x33bbbd2e
 800dcd0:	40490fdb 	.word	0x40490fdb
 800dcd4:	00000000 	.word	0x00000000
 800dcd8:	3f490fdb 	.word	0x3f490fdb

0800dcdc <atanf>:
 800dcdc:	b538      	push	{r3, r4, r5, lr}
 800dcde:	ee10 5a10 	vmov	r5, s0
 800dce2:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
 800dce6:	f1b4 4fa1 	cmp.w	r4, #1350565888	@ 0x50800000
 800dcea:	eef0 7a40 	vmov.f32	s15, s0
 800dcee:	d310      	bcc.n	800dd12 <atanf+0x36>
 800dcf0:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
 800dcf4:	d904      	bls.n	800dd00 <atanf+0x24>
 800dcf6:	ee70 7a00 	vadd.f32	s15, s0, s0
 800dcfa:	eeb0 0a67 	vmov.f32	s0, s15
 800dcfe:	bd38      	pop	{r3, r4, r5, pc}
 800dd00:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 800de38 <atanf+0x15c>
 800dd04:	ed9f 7a4d 	vldr	s14, [pc, #308]	@ 800de3c <atanf+0x160>
 800dd08:	2d00      	cmp	r5, #0
 800dd0a:	bfc8      	it	gt
 800dd0c:	eef0 7a47 	vmovgt.f32	s15, s14
 800dd10:	e7f3      	b.n	800dcfa <atanf+0x1e>
 800dd12:	4b4b      	ldr	r3, [pc, #300]	@ (800de40 <atanf+0x164>)
 800dd14:	429c      	cmp	r4, r3
 800dd16:	d810      	bhi.n	800dd3a <atanf+0x5e>
 800dd18:	f1b4 5f44 	cmp.w	r4, #822083584	@ 0x31000000
 800dd1c:	d20a      	bcs.n	800dd34 <atanf+0x58>
 800dd1e:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 800de44 <atanf+0x168>
 800dd22:	ee30 7a07 	vadd.f32	s14, s0, s14
 800dd26:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800dd2a:	eeb4 7ae6 	vcmpe.f32	s14, s13
 800dd2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800dd32:	dce2      	bgt.n	800dcfa <atanf+0x1e>
 800dd34:	f04f 33ff 	mov.w	r3, #4294967295
 800dd38:	e013      	b.n	800dd62 <atanf+0x86>
 800dd3a:	f000 f8a3 	bl	800de84 <fabsf>
 800dd3e:	4b42      	ldr	r3, [pc, #264]	@ (800de48 <atanf+0x16c>)
 800dd40:	429c      	cmp	r4, r3
 800dd42:	d84f      	bhi.n	800dde4 <atanf+0x108>
 800dd44:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
 800dd48:	429c      	cmp	r4, r3
 800dd4a:	d841      	bhi.n	800ddd0 <atanf+0xf4>
 800dd4c:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
 800dd50:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 800dd54:	eea0 7a27 	vfma.f32	s14, s0, s15
 800dd58:	2300      	movs	r3, #0
 800dd5a:	ee30 0a27 	vadd.f32	s0, s0, s15
 800dd5e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800dd62:	1c5a      	adds	r2, r3, #1
 800dd64:	ee27 6aa7 	vmul.f32	s12, s15, s15
 800dd68:	ed9f 7a38 	vldr	s14, [pc, #224]	@ 800de4c <atanf+0x170>
 800dd6c:	eddf 5a38 	vldr	s11, [pc, #224]	@ 800de50 <atanf+0x174>
 800dd70:	ed9f 5a38 	vldr	s10, [pc, #224]	@ 800de54 <atanf+0x178>
 800dd74:	ee66 6a06 	vmul.f32	s13, s12, s12
 800dd78:	eee6 5a87 	vfma.f32	s11, s13, s14
 800dd7c:	ed9f 7a36 	vldr	s14, [pc, #216]	@ 800de58 <atanf+0x17c>
 800dd80:	eea5 7aa6 	vfma.f32	s14, s11, s13
 800dd84:	eddf 5a35 	vldr	s11, [pc, #212]	@ 800de5c <atanf+0x180>
 800dd88:	eee7 5a26 	vfma.f32	s11, s14, s13
 800dd8c:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 800de60 <atanf+0x184>
 800dd90:	eea5 7aa6 	vfma.f32	s14, s11, s13
 800dd94:	eddf 5a33 	vldr	s11, [pc, #204]	@ 800de64 <atanf+0x188>
 800dd98:	eee7 5a26 	vfma.f32	s11, s14, s13
 800dd9c:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 800de68 <atanf+0x18c>
 800dda0:	eea6 5a87 	vfma.f32	s10, s13, s14
 800dda4:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 800de6c <atanf+0x190>
 800dda8:	eea5 7a26 	vfma.f32	s14, s10, s13
 800ddac:	ed9f 5a30 	vldr	s10, [pc, #192]	@ 800de70 <atanf+0x194>
 800ddb0:	eea7 5a26 	vfma.f32	s10, s14, s13
 800ddb4:	ed9f 7a2f 	vldr	s14, [pc, #188]	@ 800de74 <atanf+0x198>
 800ddb8:	eea5 7a26 	vfma.f32	s14, s10, s13
 800ddbc:	ee27 7a26 	vmul.f32	s14, s14, s13
 800ddc0:	eea5 7a86 	vfma.f32	s14, s11, s12
 800ddc4:	ee27 7a87 	vmul.f32	s14, s15, s14
 800ddc8:	d121      	bne.n	800de0e <atanf+0x132>
 800ddca:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800ddce:	e794      	b.n	800dcfa <atanf+0x1e>
 800ddd0:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800ddd4:	ee30 7a67 	vsub.f32	s14, s0, s15
 800ddd8:	ee30 0a27 	vadd.f32	s0, s0, s15
 800dddc:	2301      	movs	r3, #1
 800ddde:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800dde2:	e7be      	b.n	800dd62 <atanf+0x86>
 800dde4:	4b24      	ldr	r3, [pc, #144]	@ (800de78 <atanf+0x19c>)
 800dde6:	429c      	cmp	r4, r3
 800dde8:	d80b      	bhi.n	800de02 <atanf+0x126>
 800ddea:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
 800ddee:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800ddf2:	eea0 7a27 	vfma.f32	s14, s0, s15
 800ddf6:	2302      	movs	r3, #2
 800ddf8:	ee70 6a67 	vsub.f32	s13, s0, s15
 800ddfc:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800de00:	e7af      	b.n	800dd62 <atanf+0x86>
 800de02:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 800de06:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800de0a:	2303      	movs	r3, #3
 800de0c:	e7a9      	b.n	800dd62 <atanf+0x86>
 800de0e:	4a1b      	ldr	r2, [pc, #108]	@ (800de7c <atanf+0x1a0>)
 800de10:	491b      	ldr	r1, [pc, #108]	@ (800de80 <atanf+0x1a4>)
 800de12:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 800de16:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 800de1a:	edd3 6a00 	vldr	s13, [r3]
 800de1e:	ee37 7a66 	vsub.f32	s14, s14, s13
 800de22:	2d00      	cmp	r5, #0
 800de24:	ee37 7a67 	vsub.f32	s14, s14, s15
 800de28:	edd2 7a00 	vldr	s15, [r2]
 800de2c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800de30:	bfb8      	it	lt
 800de32:	eef1 7a67 	vneglt.f32	s15, s15
 800de36:	e760      	b.n	800dcfa <atanf+0x1e>
 800de38:	bfc90fdb 	.word	0xbfc90fdb
 800de3c:	3fc90fdb 	.word	0x3fc90fdb
 800de40:	3edfffff 	.word	0x3edfffff
 800de44:	7149f2ca 	.word	0x7149f2ca
 800de48:	3f97ffff 	.word	0x3f97ffff
 800de4c:	3c8569d7 	.word	0x3c8569d7
 800de50:	3d4bda59 	.word	0x3d4bda59
 800de54:	bd6ef16b 	.word	0xbd6ef16b
 800de58:	3d886b35 	.word	0x3d886b35
 800de5c:	3dba2e6e 	.word	0x3dba2e6e
 800de60:	3e124925 	.word	0x3e124925
 800de64:	3eaaaaab 	.word	0x3eaaaaab
 800de68:	bd15a221 	.word	0xbd15a221
 800de6c:	bd9d8795 	.word	0xbd9d8795
 800de70:	bde38e38 	.word	0xbde38e38
 800de74:	be4ccccd 	.word	0xbe4ccccd
 800de78:	401bffff 	.word	0x401bffff
 800de7c:	0800e5a0 	.word	0x0800e5a0
 800de80:	0800e590 	.word	0x0800e590

0800de84 <fabsf>:
 800de84:	ee10 3a10 	vmov	r3, s0
 800de88:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 800de8c:	ee00 3a10 	vmov	s0, r3
 800de90:	4770      	bx	lr
	...

0800de94 <_init>:
 800de94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800de96:	bf00      	nop
 800de98:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800de9a:	bc08      	pop	{r3}
 800de9c:	469e      	mov	lr, r3
 800de9e:	4770      	bx	lr

0800dea0 <_fini>:
 800dea0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800dea2:	bf00      	nop
 800dea4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800dea6:	bc08      	pop	{r3}
 800dea8:	469e      	mov	lr, r3
 800deaa:	4770      	bx	lr
